AST dump for ChapelUtil after pass inlineFunctions.
Module use list: ChapelStandard CTypes Regex 

{
  function chpl__init_ChapelUtil[468591]() : void[4] "insert line file info" "module init" "resolved"
  {
    (631514 return _void[46])
  }
  function safeAdd[1495597](const in arg a[1495599]:int(64)[10], const in arg b[1495604]:int(64)[10]) : bool[19] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1495606]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1495614]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1495620]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1495627]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1495634]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1495647]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[7319117]:int(64)[10] "temp"
    (7319120 'move' inlineImm[7319117] 0)
    const-val tmp[7319123]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319125 'move' tmp[7319123](7319127 '<' a[1495599] inlineImm[7319117]))
    (1495649 'move' call_tmp[1495647] tmp[7319123])
    const-val call_tmp[1495655]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1495657 'move' call_tmp[1495655] call_tmp[1495647])
    if call_tmp[1495655]
    {
      const-val call_tmp[1495664]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7641504]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7641506 'move' call_tmp[7641504](7641508 '>=' b[1495604] 0))
      (1495666 'move' call_tmp[1495664] call_tmp[7641504])
      const-val call_tmp[1495672]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1495674 'move' call_tmp[1495672] call_tmp[1495664])
      if call_tmp[1495672]
      {
        (1495681 'move' ret[1495606] 1)
        gotoReturn _end_safeAdd[1495820] _end_safeAdd[1495820]
      }
      {
        val call_tmp[1495688]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1495694]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[1495701]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[7641724]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7641726 'move' call_tmp[7641724](7641728 '-' -9223372036854775808 a[1495599]))
        (1495703 'move' call_tmp[1495701] call_tmp[7641724])
        const-val call_tmp[1495709]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[7319133]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7319135 'move' tmp[7319133](7319137 '<' b[1495604] call_tmp[1495701]))
        (1495711 'move' call_tmp[1495709] tmp[7319133])
        const-val call_tmp[1495717]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (1495719 'move' call_tmp[1495717] call_tmp[1495709])
        if call_tmp[1495717]
        {
          (1495726 'move' ret[1495606] 0)
          gotoReturn _end_safeAdd[1495820] _end_safeAdd[1495820]
        }
        {
          (1495733 'move' ret[1495606] 1)
          gotoReturn _end_safeAdd[1495820] _end_safeAdd[1495820]
        }
      }
    }
    {
      const-val call_tmp[1495742]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[7497631]:int(64)[10] "temp"
      (7497634 'move' inlineImm[7497631] 0)
      const-val call_tmp[7497637]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7497639 'move' call_tmp[7497637](7497641 '<=' b[1495604] inlineImm[7497631]))
      (1495744 'move' call_tmp[1495742] call_tmp[7497637])
      const-val call_tmp[1495750]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1495752 'move' call_tmp[1495750] call_tmp[1495742])
      if call_tmp[1495750]
      {
        (1495759 'move' ret[1495606] 1)
        gotoReturn _end_safeAdd[1495820] _end_safeAdd[1495820]
      }
      {
        val call_tmp[1495766]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1495772]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[1495779]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[7641754]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7641756 'move' call_tmp[7641754](7641758 '-' 9223372036854775807 a[1495599]))
        (1495781 'move' call_tmp[1495779] call_tmp[7641754])
        const-val call_tmp[1495787]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[7314998]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7315000 'move' call_tmp[7314998](7315002 '>' b[1495604] call_tmp[1495779]))
        (1495789 'move' call_tmp[1495787] call_tmp[7314998])
        const-val call_tmp[1495795]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (1495797 'move' call_tmp[1495795] call_tmp[1495787])
        if call_tmp[1495795]
        {
          (1495804 'move' ret[1495606] 0)
          gotoReturn _end_safeAdd[1495820] _end_safeAdd[1495820]
        }
        {
          (1495811 'move' ret[1495606] 1)
          gotoReturn _end_safeAdd[1495820] _end_safeAdd[1495820]
        }
      }
    }
    label _end_safeAdd[1495820]
    (1495822 return ret[1495606])
  }
  function safeMul[4372316](const in arg a[4372318]:uint(64)[86], const in arg b[4372323]:uint(64)[86]) : bool[19] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[4372325]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[4372333]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4372339]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4372346]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4372353]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[4372366]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[7521666]:int(64)[10] "temp"
    (7521669 'move' inlineImm[7521666] 0)
    const-val tmp[7521672]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7521674 'move' tmp[7521672](7521676 '<' inlineImm[7521666] 0))
    val tmp[7521679]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7521672]
    {
      (7521683 'move' tmp[7521679] 1)
    }
    {
      const-val call_tmp[7521687]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521689 'move' call_tmp[7521687](7521691 'cast' uint(64)[86] inlineImm[7521666]))
      const-val call_tmp[7521694]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521696 'move' call_tmp[7521694](7521698 '>' a[4372318] call_tmp[7521687]))
      (7521701 'move' tmp[7521679] call_tmp[7521694])
    }
    (4372368 'move' call_tmp[4372366] tmp[7521679])
    const-val call_tmp[4372374]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4372376 'move' call_tmp[4372374] call_tmp[4372366])
    if call_tmp[4372374]
    {
      const-val call_tmp[4372383]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[7521707]:int(64)[10] "temp"
      (7521710 'move' inlineImm[7521707] 0)
      const-val tmp[7521713]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7521715 'move' tmp[7521713](7521717 '<' inlineImm[7521707] 0))
      val tmp[7521720]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[7521713]
      {
        (7521724 'move' tmp[7521720] 1)
      }
      {
        const-val call_tmp[7521728]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521730 'move' call_tmp[7521728](7521732 'cast' uint(64)[86] inlineImm[7521707]))
        const-val call_tmp[7521735]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521737 'move' call_tmp[7521735](7521739 '>' b[4372323] call_tmp[7521728]))
        (7521742 'move' tmp[7521720] call_tmp[7521735])
      }
      (4372385 'move' call_tmp[4372383] tmp[7521720])
      const-val call_tmp[4372391]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4372393 'move' call_tmp[4372391] call_tmp[4372383])
      if call_tmp[4372391]
      {
        val call_tmp[4372400]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4372406]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[4372413]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        val inlineImm[8631160]:int(64)[10] "temp"
        (8631162 'move' inlineImm[8631160] 0)
        const-val tmp[8631165]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (8631167 'move' tmp[8631165](8631169 '<' 0 0))
        const-val call_tmp[8631172]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8631174 'move' call_tmp[8631172](8631176 'u!' tmp[8631165]))
        val tmp[8631178]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[8631172]
        {
          const-val call_tmp[8631182]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631184 'move' call_tmp[8631182](8631186 'cast' uint(64)[86] inlineImm[8631160]))
          const-val call_tmp[8631189]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631191 'move' call_tmp[8631189](8631193 '==' b[4372323] call_tmp[8631182]))
          (8631196 'move' tmp[8631178] call_tmp[8631189])
        }
        {
          (8631200 'move' tmp[8631178] 0)
        }
        if tmp[8631178]
        {
          (8631207 call halt[88131] "Attempt to divide by zero")
        }
        const-val call_tmp[8631210]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (8631212 'move' call_tmp[8631210](8631214 '/' 18446744073709551615 b[4372323]))
        (4372415 'move' call_tmp[4372413] call_tmp[8631210])
        const-val call_tmp[4372421]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[7498447]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7498449 'move' call_tmp[7498447](7498451 '>' a[4372318] call_tmp[4372413]))
        (4372423 'move' call_tmp[4372421] call_tmp[7498447])
        const-val call_tmp[4372429]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4372431 'move' call_tmp[4372429] call_tmp[4372421])
        if call_tmp[4372429]
        {
          (4372438 'move' ret[4372325] 0)
          gotoReturn _end_safeMul[4372665] _end_safeMul[4372665]
        }
      }
      {
        val call_tmp[4372446]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4372452]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[4372459]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        val inlineImm[8631280]:int(64)[10] "temp"
        (8631282 'move' inlineImm[8631280] 0)
        const-val tmp[8631285]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (8631287 'move' tmp[8631285](8631289 '<' 0 0))
        const-val call_tmp[8631292]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8631294 'move' call_tmp[8631292](8631296 'u!' tmp[8631285]))
        val tmp[8631298]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[8631292]
        {
          const-val call_tmp[8631302]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631304 'move' call_tmp[8631302](8631306 'cast' uint(64)[86] inlineImm[8631280]))
          const-val call_tmp[8631309]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631311 'move' call_tmp[8631309](8631313 '==' a[4372318] call_tmp[8631302]))
          (8631316 'move' tmp[8631298] call_tmp[8631309])
        }
        {
          (8631320 'move' tmp[8631298] 0)
        }
        if tmp[8631298]
        {
          (8631327 call halt[88131] "Attempt to divide by zero")
        }
        const-val call_tmp[8631330]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (8631332 'move' call_tmp[8631330](8631334 '/' 0 a[4372318]))
        (4372461 'move' call_tmp[4372459] call_tmp[8631330])
        const-val call_tmp[4372467]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[7566088]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7566090 'move' tmp[7566088](7566092 '<' b[4372323] call_tmp[4372459]))
        (4372469 'move' call_tmp[4372467] tmp[7566088])
        const-val call_tmp[4372475]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4372477 'move' call_tmp[4372475] call_tmp[4372467])
        if call_tmp[4372475]
        {
          (4372484 'move' ret[4372325] 0)
          gotoReturn _end_safeMul[4372665] _end_safeMul[4372665]
        }
      }
    }
    {
      const-val call_tmp[4372493]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[7521748]:int(64)[10] "temp"
      (7521751 'move' inlineImm[7521748] 0)
      const-val tmp[7521754]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7521756 'move' tmp[7521754](7521758 '<' inlineImm[7521748] 0))
      val tmp[7521761]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[7521754]
      {
        (7521765 'move' tmp[7521761] 1)
      }
      {
        const-val call_tmp[7521769]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521771 'move' call_tmp[7521769](7521773 'cast' uint(64)[86] inlineImm[7521748]))
        const-val call_tmp[7521776]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521778 'move' call_tmp[7521776](7521780 '>' b[4372323] call_tmp[7521769]))
        (7521783 'move' tmp[7521761] call_tmp[7521776])
      }
      (4372495 'move' call_tmp[4372493] tmp[7521761])
      const-val call_tmp[4372501]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4372503 'move' call_tmp[4372501] call_tmp[4372493])
      if call_tmp[4372501]
      {
        val call_tmp[4372510]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4372516]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[4372523]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        val inlineImm[8631340]:int(64)[10] "temp"
        (8631342 'move' inlineImm[8631340] 0)
        const-val tmp[8631345]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (8631347 'move' tmp[8631345](8631349 '<' 0 0))
        const-val call_tmp[8631352]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8631354 'move' call_tmp[8631352](8631356 'u!' tmp[8631345]))
        val tmp[8631358]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[8631352]
        {
          const-val call_tmp[8631362]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631364 'move' call_tmp[8631362](8631366 'cast' uint(64)[86] inlineImm[8631340]))
          const-val call_tmp[8631369]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631371 'move' call_tmp[8631369](8631373 '==' b[4372323] call_tmp[8631362]))
          (8631376 'move' tmp[8631358] call_tmp[8631369])
        }
        {
          (8631380 'move' tmp[8631358] 0)
        }
        if tmp[8631358]
        {
          (8631387 call halt[88131] "Attempt to divide by zero")
        }
        const-val call_tmp[8631390]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (8631392 'move' call_tmp[8631390](8631394 '/' 0 b[4372323]))
        (4372525 'move' call_tmp[4372523] call_tmp[8631390])
        const-val call_tmp[4372531]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[7566098]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7566100 'move' tmp[7566098](7566102 '<' a[4372318] call_tmp[4372523]))
        (4372533 'move' call_tmp[4372531] tmp[7566098])
        const-val call_tmp[4372539]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4372541 'move' call_tmp[4372539] call_tmp[4372531])
        if call_tmp[4372539]
        {
          (4372548 'move' ret[4372325] 0)
          gotoReturn _end_safeMul[4372665] _end_safeMul[4372665]
        }
      }
      {
        const-val tmp[4372556]:bool[19] "dead after last mention" "maybe param" "temp"
        val inlineImm[7521548]:int(64)[10] "temp"
        (7521551 'move' inlineImm[7521548] 0)
        const-val tmp[7521554]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7521556 'move' tmp[7521554](7521558 '<' inlineImm[7521548] 0))
        val tmp[7521561]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[7521554]
        {
          (7521565 'move' tmp[7521561] 1)
        }
        {
          const-val call_tmp[7521569]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7521571 'move' call_tmp[7521569](7521573 'cast' uint(64)[86] inlineImm[7521548]))
          const-val call_tmp[7521576]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7521578 'move' call_tmp[7521576](7521580 '!=' a[4372318] call_tmp[7521569]))
          (7521583 'move' tmp[7521561] call_tmp[7521576])
        }
        (4372558 'move' tmp[4372556] tmp[7521561])
        val call_tmp[4372564]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[4372577]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[4372579]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[4372581]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4372583 'move' call_tmp[4372581] tmp[4372556])
        (4372588 'move' tmp[4372579] call_tmp[4372581])
        if tmp[4372579]
        {
          const-val tmp[4372595]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          val call_tmp[4372597]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[4372603]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[4372610]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[8631220]:int(64)[10] "temp"
          (8631222 'move' inlineImm[8631220] 0)
          const-val tmp[8631225]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (8631227 'move' tmp[8631225](8631229 '<' 0 0))
          const-val call_tmp[8631232]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631234 'move' call_tmp[8631232](8631236 'u!' tmp[8631225]))
          val tmp[8631238]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[8631232]
          {
            const-val call_tmp[8631242]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
            (8631244 'move' call_tmp[8631242](8631246 'cast' uint(64)[86] inlineImm[8631220]))
            const-val call_tmp[8631249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (8631251 'move' call_tmp[8631249](8631253 '==' a[4372318] call_tmp[8631242]))
            (8631256 'move' tmp[8631238] call_tmp[8631249])
          }
          {
            (8631260 'move' tmp[8631238] 0)
          }
          if tmp[8631238]
          {
            (8631267 call halt[88131] "Attempt to divide by zero")
          }
          const-val call_tmp[8631270]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (8631272 'move' call_tmp[8631270](8631274 '/' 18446744073709551615 a[4372318]))
          (4372612 'move' call_tmp[4372610] call_tmp[8631270])
          const-val call_tmp[4372618]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[7566108]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7566110 'move' tmp[7566108](7566112 '<' b[4372323] call_tmp[4372610]))
          (4372620 'move' call_tmp[4372618] tmp[7566108])
          (4372626 'move' tmp[4372595] call_tmp[4372618])
          (4372631 'move' tmp[4372577] tmp[4372595])
        }
        {
          (4372637 'move' tmp[4372577] 0)
        }
        const-val call_tmp[4372643]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4372645 'move' call_tmp[4372643] tmp[4372577])
        if call_tmp[4372643]
        {
          (4372652 'move' ret[4372325] 0)
          gotoReturn _end_safeMul[4372665] _end_safeMul[4372665]
        }
      }
    }
    (4372661 'move' ret[4372325] 1)
    label _end_safeMul[4372665]
    (4372667 return ret[4372325])
  }
  function _command_line_cast[1597989](const in arg x[1597997]:c_ptrConst(int(8))[1466333]) : real(64)[13] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478182]:real(64)[13] "temp"
    val ret[1597999]:real(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1598009]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1598016]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1598029]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1598036]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5499247]:Error[85511] "error variable" "temp"
    (5499270 'move' error[5499247] nil[32])
    const-val call_tmp[1598050]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1598291]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621183]:Error[85511] "temp"
    (7621187 'move' i_error_out[7621183](7621185 'set reference' error[5499247]))
    val ret[7621190]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621192]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621194 'move' call_tmp[7621192](7621196 'string_length_bytes' x[1597997]))
    const-val call_tmp[7621198]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621200]:owned IllegalArgumentError?[1471812] "temp"
    (7621203 call chpl_checkValue[1511482] call_tmp[7621192] ret_tmp[7621200])
    (7621206 'move' call_tmp[7621198] ret_tmp[7621200])
    val ifvar_borrow[7621209]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621211]:owned IllegalArgumentError?[1471812] "temp"
    (7621213 'move' i_arg[7621211](7621215 'set reference' call_tmp[7621198]))
    val call_tmp[7621217]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621219 'move' call_tmp[7621217](7621222 call borrow[1479886] i_arg[7621211]))
    (7621224 'move' ifvar_borrow[7621209] call_tmp[7621217])
    val coerce_tmp[7621227]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621229 'move' coerce_tmp[7621227](7621231 'cast' RootClass[236] call_tmp[7621217]))
    const-val call_tmp[7621234]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621236 'move' call_tmp[7621234](7621238 '!=' coerce_tmp[7621227] nil[32]))
    if call_tmp[7621234]
    {
      const-val call_tmp[7621243]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621245]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621247 'move' coerce_tmp[7621245](7621249 'cast' Error[85511] ifvar_borrow[7621209]))
      val _virtual_method_tmp_[7621252]:int(32)[66] "temp"
      (7621254 'move' _virtual_method_tmp_[7621252](7621256 'getcid' coerce_tmp[7621245]))
      val ret_tmp[7621258]:string[244] "temp"
      (7621260 'virtual method call' message[85497] _virtual_method_tmp_[7621252] coerce_tmp[7621245] ret_tmp[7621258])
      (7621265 'move' call_tmp[7621243] ret_tmp[7621258])
      (7621269 call safeCastCheckHalt[440] call_tmp[7621243])
      ref i_x[7621271]:string[244] "temp"
      (7621273 'move' i_x[7621271](7621275 'set reference' call_tmp[7621243]))
      (7621278 call deinit[21354] i_x[7621271])
    }
    (7621282 call chpl__autoDestroy[3929258] call_tmp[7621198])
    const-val call_tmp[7621284]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621286 'move' call_tmp[7621284] call_tmp[7621192])
    (7621289 'move' ret[7621190] call_tmp[7621284])
    (1598298 'move' default_arg_length[1598291] ret[7621190])
    val errorExists[7297768]:bool[19] "temp"
    (7297773 'move' errorExists[7297768](7297770 '!=' error[5499247] nil[32]))
    if errorExists[7297768]
    {
      gotoErrorHandling handler[5499248] handler[5499248]
    }
    val default_arg_policy[1598324]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547505]:string[244] "temp"
    ref i_error_out[7624631]:Error[85511] "temp"
    (7624635 'move' i_error_out[7624631](7624633 'set reference' error[5499247]))
    ref i__retArg[7624637]:string[244] "temp"
    (7624641 'move' i__retArg[7624637](7624639 'set reference' ret_tmp[5547505]))
    const-val ret[7624644]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624646]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624648 'move' call_tmp[7624646](7624650 'cast' c_ptr(uint(8))[1466369] x[1597997]))
    const-val call_tmp[7624653]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624655 'move' call_tmp[7624653](7624657 '+' default_arg_length[1598291] 1))
    const-val call_tmp[7624660]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624662]:Error[85511] "error variable" "temp"
    (7624664 'move' error[7624662] nil[32])
    const-val ret_tmp[7624667]:string[244] "temp"
    (7624670 call createCopyingBuffer[1513110] call_tmp[7624646] default_arg_length[1598291] call_tmp[7624653] strict[37976] error[7624662] ret_tmp[7624667])
    (7624677 'move' call_tmp[7624660] ret_tmp[7624667])
    val errorExists[7624680]:bool[19] "temp"
    (7624682 'move' errorExists[7624680](7624684 '!=' error[7624662] nil[32]))
    if errorExists[7624680]
    {
      (7624689 '=' i_error_out[7624631] error[7624662])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624698] _endcreateCopyingBuffer[7624698]
    }
    (7624695 '=' ret[7624644] call_tmp[7624660])
    label _endcreateCopyingBuffer[7624698]
    (7624700 '=' i__retArg[7624637] ret[7624644])
    (5547508 'move' call_tmp[1598050] ret_tmp[5547505])
    val errorExists[7297776]:bool[19] "temp"
    (7297781 'move' errorExists[7297776](7297778 '!=' error[5499247] nil[32]))
    if errorExists[7297776]
    {
      gotoErrorHandling handler[5499248] handler[5499248]
    }
    const-val str[1598060]:string[244] "dead at end of block" "insert auto destroy"
    (1598062 'move' str[1598060] call_tmp[1598050])
    val call_tmp[1598066]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1598074]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1598095]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1598097]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1598110]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1598123]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1598125]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1598127]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1598147]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1598149]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1598156]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1598175]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1598200]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1598202 'move' call_tmp[1598200](1598205 call :[1598415] str[1598060] error[5499247]))
    val errorExists[7297784]:bool[19] "temp"
    (7297789 'move' errorExists[7297784](7297786 '!=' error[5499247] nil[32]))
    if errorExists[7297784]
    {
      ref i_x[7336258]:string[244] "temp"
      (7336262 'move' i_x[7336258](7336260 'set reference' str[1598060]))
      (7336266 call deinit[21354] i_x[7336258])
      gotoErrorHandling handler[5499248] handler[5499248]
    }
    (1598208 'move' ret[1597999] call_tmp[1598200])
    ref i_x[7336270]:string[244] "temp"
    (7336274 'move' i_x[7336270](7336272 'set reference' str[1598060]))
    (7336278 call deinit[21354] i_x[7336270])
    gotoReturn _end__command_line_cast[1598219] _end__command_line_cast[1598219]
    ref i_x[7336282]:string[244] "temp"
    (7336286 'move' i_x[7336282](7336284 'set reference' str[1598060]))
    (7336290 call deinit[21354] i_x[7336282])
    label handler[5499248]
    const-val shouldHandleError[5499279]:bool[19] "temp"
    val errorExists[7297792]:bool[19] "temp"
    (7297797 'move' errorExists[7297792](7297794 '!=' error[5499247] nil[32]))
    (5499283 'move' shouldHandleError[5499279] errorExists[7297792])
    if shouldHandleError[5499279]
    {
      (5499276 call chpl_uncaught_error[87456] error[5499247])
    }
    label _end__command_line_cast[1598219]
    (1598221 return ret[1597999])
  }
  function _command_line_cast[1751636](const in arg x[1751644]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478270]:int(64)[10] "temp"
    val ret[1751646]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1751656]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1751663]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1751676]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1751683]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5499651]:Error[85511] "error variable" "temp"
    (5499674 'move' error[5499651] nil[32])
    const-val call_tmp[1751697]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1751912]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621296]:Error[85511] "temp"
    (7621300 'move' i_error_out[7621296](7621298 'set reference' error[5499651]))
    val ret[7621303]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621305]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621307 'move' call_tmp[7621305](7621309 'string_length_bytes' x[1751644]))
    const-val call_tmp[7621311]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621313]:owned IllegalArgumentError?[1471812] "temp"
    (7621316 call chpl_checkValue[1511482] call_tmp[7621305] ret_tmp[7621313])
    (7621319 'move' call_tmp[7621311] ret_tmp[7621313])
    val ifvar_borrow[7621322]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621324]:owned IllegalArgumentError?[1471812] "temp"
    (7621326 'move' i_arg[7621324](7621328 'set reference' call_tmp[7621311]))
    val call_tmp[7621330]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621332 'move' call_tmp[7621330](7621335 call borrow[1479886] i_arg[7621324]))
    (7621337 'move' ifvar_borrow[7621322] call_tmp[7621330])
    val coerce_tmp[7621340]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621342 'move' coerce_tmp[7621340](7621344 'cast' RootClass[236] call_tmp[7621330]))
    const-val call_tmp[7621347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621349 'move' call_tmp[7621347](7621351 '!=' coerce_tmp[7621340] nil[32]))
    if call_tmp[7621347]
    {
      const-val call_tmp[7621356]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621358]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621360 'move' coerce_tmp[7621358](7621362 'cast' Error[85511] ifvar_borrow[7621322]))
      val _virtual_method_tmp_[7621365]:int(32)[66] "temp"
      (7621367 'move' _virtual_method_tmp_[7621365](7621369 'getcid' coerce_tmp[7621358]))
      val ret_tmp[7621371]:string[244] "temp"
      (7621373 'virtual method call' message[85497] _virtual_method_tmp_[7621365] coerce_tmp[7621358] ret_tmp[7621371])
      (7621378 'move' call_tmp[7621356] ret_tmp[7621371])
      (7621382 call safeCastCheckHalt[440] call_tmp[7621356])
      ref i_x[7621384]:string[244] "temp"
      (7621386 'move' i_x[7621384](7621388 'set reference' call_tmp[7621356]))
      (7621391 call deinit[21354] i_x[7621384])
    }
    (7621395 call chpl__autoDestroy[3929258] call_tmp[7621311])
    const-val call_tmp[7621397]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621399 'move' call_tmp[7621397] call_tmp[7621305])
    (7621402 'move' ret[7621303] call_tmp[7621397])
    (1751919 'move' default_arg_length[1751912] ret[7621303])
    val errorExists[7297928]:bool[19] "temp"
    (7297933 'move' errorExists[7297928](7297930 '!=' error[5499651] nil[32]))
    if errorExists[7297928]
    {
      gotoErrorHandling handler[5499652] handler[5499652]
    }
    val default_arg_policy[1751923]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547511]:string[244] "temp"
    ref i_error_out[7624705]:Error[85511] "temp"
    (7624709 'move' i_error_out[7624705](7624707 'set reference' error[5499651]))
    ref i__retArg[7624711]:string[244] "temp"
    (7624715 'move' i__retArg[7624711](7624713 'set reference' ret_tmp[5547511]))
    const-val ret[7624718]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624720]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624722 'move' call_tmp[7624720](7624724 'cast' c_ptr(uint(8))[1466369] x[1751644]))
    const-val call_tmp[7624727]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624729 'move' call_tmp[7624727](7624731 '+' default_arg_length[1751912] 1))
    const-val call_tmp[7624734]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624736]:Error[85511] "error variable" "temp"
    (7624738 'move' error[7624736] nil[32])
    const-val ret_tmp[7624741]:string[244] "temp"
    (7624744 call createCopyingBuffer[1513110] call_tmp[7624720] default_arg_length[1751912] call_tmp[7624727] strict[37976] error[7624736] ret_tmp[7624741])
    (7624751 'move' call_tmp[7624734] ret_tmp[7624741])
    val errorExists[7624754]:bool[19] "temp"
    (7624756 'move' errorExists[7624754](7624758 '!=' error[7624736] nil[32]))
    if errorExists[7624754]
    {
      (7624763 '=' i_error_out[7624705] error[7624736])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624772] _endcreateCopyingBuffer[7624772]
    }
    (7624769 '=' ret[7624718] call_tmp[7624734])
    label _endcreateCopyingBuffer[7624772]
    (7624774 '=' i__retArg[7624711] ret[7624718])
    (5547514 'move' call_tmp[1751697] ret_tmp[5547511])
    val errorExists[7297936]:bool[19] "temp"
    (7297941 'move' errorExists[7297936](7297938 '!=' error[5499651] nil[32]))
    if errorExists[7297936]
    {
      gotoErrorHandling handler[5499652] handler[5499652]
    }
    const-val str[1751707]:string[244] "dead at end of block" "insert auto destroy"
    (1751709 'move' str[1751707] call_tmp[1751697])
    val call_tmp[1751713]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1751721]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1751742]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1751744]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1751757]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1751770]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1751772]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1751774]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1751794]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1751796]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1751803]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1751822]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1751847]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1751849 'move' call_tmp[1751847](1751852 call :[1751964] str[1751707] error[5499651]))
    val errorExists[7297944]:bool[19] "temp"
    (7297949 'move' errorExists[7297944](7297946 '!=' error[5499651] nil[32]))
    if errorExists[7297944]
    {
      ref i_x[7337770]:string[244] "temp"
      (7337774 'move' i_x[7337770](7337772 'set reference' str[1751707]))
      (7337778 call deinit[21354] i_x[7337770])
      gotoErrorHandling handler[5499652] handler[5499652]
    }
    (1751855 'move' ret[1751646] call_tmp[1751847])
    ref i_x[7337782]:string[244] "temp"
    (7337786 'move' i_x[7337782](7337784 'set reference' str[1751707]))
    (7337790 call deinit[21354] i_x[7337782])
    gotoReturn _end__command_line_cast[1751866] _end__command_line_cast[1751866]
    ref i_x[7337794]:string[244] "temp"
    (7337798 'move' i_x[7337794](7337796 'set reference' str[1751707]))
    (7337802 call deinit[21354] i_x[7337794])
    label handler[5499652]
    const-val shouldHandleError[5499683]:bool[19] "temp"
    val errorExists[7297952]:bool[19] "temp"
    (7297957 'move' errorExists[7297952](7297954 '!=' error[5499651] nil[32]))
    (5499687 'move' shouldHandleError[5499683] errorExists[7297952])
    if shouldHandleError[5499683]
    {
      (5499680 call chpl_uncaught_error[87456] error[5499651])
    }
    label _end__command_line_cast[1751866]
    (1751868 return ret[1751646])
  }
  function _command_line_cast[1754254](const in arg x[1754262]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478274]:bool[19] "temp"
    val ret[1754264]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1754274]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1754281]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1754294]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1754301]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5499732]:Error[85511] "error variable" "temp"
    (5499755 'move' error[5499732] nil[32])
    const-val call_tmp[1754315]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1754556]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621409]:Error[85511] "temp"
    (7621413 'move' i_error_out[7621409](7621411 'set reference' error[5499732]))
    val ret[7621416]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621418]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621420 'move' call_tmp[7621418](7621422 'string_length_bytes' x[1754262]))
    const-val call_tmp[7621424]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621426]:owned IllegalArgumentError?[1471812] "temp"
    (7621429 call chpl_checkValue[1511482] call_tmp[7621418] ret_tmp[7621426])
    (7621432 'move' call_tmp[7621424] ret_tmp[7621426])
    val ifvar_borrow[7621435]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621437]:owned IllegalArgumentError?[1471812] "temp"
    (7621439 'move' i_arg[7621437](7621441 'set reference' call_tmp[7621424]))
    val call_tmp[7621443]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621445 'move' call_tmp[7621443](7621448 call borrow[1479886] i_arg[7621437]))
    (7621450 'move' ifvar_borrow[7621435] call_tmp[7621443])
    val coerce_tmp[7621453]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621455 'move' coerce_tmp[7621453](7621457 'cast' RootClass[236] call_tmp[7621443]))
    const-val call_tmp[7621460]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621462 'move' call_tmp[7621460](7621464 '!=' coerce_tmp[7621453] nil[32]))
    if call_tmp[7621460]
    {
      const-val call_tmp[7621469]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621471]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621473 'move' coerce_tmp[7621471](7621475 'cast' Error[85511] ifvar_borrow[7621435]))
      val _virtual_method_tmp_[7621478]:int(32)[66] "temp"
      (7621480 'move' _virtual_method_tmp_[7621478](7621482 'getcid' coerce_tmp[7621471]))
      val ret_tmp[7621484]:string[244] "temp"
      (7621486 'virtual method call' message[85497] _virtual_method_tmp_[7621478] coerce_tmp[7621471] ret_tmp[7621484])
      (7621491 'move' call_tmp[7621469] ret_tmp[7621484])
      (7621495 call safeCastCheckHalt[440] call_tmp[7621469])
      ref i_x[7621497]:string[244] "temp"
      (7621499 'move' i_x[7621497](7621501 'set reference' call_tmp[7621469]))
      (7621504 call deinit[21354] i_x[7621497])
    }
    (7621508 call chpl__autoDestroy[3929258] call_tmp[7621424])
    const-val call_tmp[7621510]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621512 'move' call_tmp[7621510] call_tmp[7621418])
    (7621515 'move' ret[7621416] call_tmp[7621510])
    (1754563 'move' default_arg_length[1754556] ret[7621416])
    val errorExists[7297960]:bool[19] "temp"
    (7297965 'move' errorExists[7297960](7297962 '!=' error[5499732] nil[32]))
    if errorExists[7297960]
    {
      gotoErrorHandling handler[5499733] handler[5499733]
    }
    val default_arg_policy[1754567]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547517]:string[244] "temp"
    ref i_error_out[7624779]:Error[85511] "temp"
    (7624783 'move' i_error_out[7624779](7624781 'set reference' error[5499732]))
    ref i__retArg[7624785]:string[244] "temp"
    (7624789 'move' i__retArg[7624785](7624787 'set reference' ret_tmp[5547517]))
    const-val ret[7624792]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624794]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624796 'move' call_tmp[7624794](7624798 'cast' c_ptr(uint(8))[1466369] x[1754262]))
    const-val call_tmp[7624801]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624803 'move' call_tmp[7624801](7624805 '+' default_arg_length[1754556] 1))
    const-val call_tmp[7624808]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624810]:Error[85511] "error variable" "temp"
    (7624812 'move' error[7624810] nil[32])
    const-val ret_tmp[7624815]:string[244] "temp"
    (7624818 call createCopyingBuffer[1513110] call_tmp[7624794] default_arg_length[1754556] call_tmp[7624801] strict[37976] error[7624810] ret_tmp[7624815])
    (7624825 'move' call_tmp[7624808] ret_tmp[7624815])
    val errorExists[7624828]:bool[19] "temp"
    (7624830 'move' errorExists[7624828](7624832 '!=' error[7624810] nil[32]))
    if errorExists[7624828]
    {
      (7624837 '=' i_error_out[7624779] error[7624810])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624846] _endcreateCopyingBuffer[7624846]
    }
    (7624843 '=' ret[7624792] call_tmp[7624808])
    label _endcreateCopyingBuffer[7624846]
    (7624848 '=' i__retArg[7624785] ret[7624792])
    (5547520 'move' call_tmp[1754315] ret_tmp[5547517])
    val errorExists[7297968]:bool[19] "temp"
    (7297973 'move' errorExists[7297968](7297970 '!=' error[5499732] nil[32]))
    if errorExists[7297968]
    {
      gotoErrorHandling handler[5499733] handler[5499733]
    }
    const-val str[1754325]:string[244] "dead at end of block" "insert auto destroy"
    (1754327 'move' str[1754325] call_tmp[1754315])
    val call_tmp[1754331]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1754339]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1754360]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1754362]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1754375]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1754388]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1754390]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1754392]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1754412]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1754414]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1754421]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1754440]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1754465]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1754467 'move' call_tmp[1754465](1754470 call :[16582] str[1754325] error[5499732]))
    val errorExists[7297976]:bool[19] "temp"
    (7297981 'move' errorExists[7297976](7297978 '!=' error[5499732] nil[32]))
    if errorExists[7297976]
    {
      ref i_x[7337998]:string[244] "temp"
      (7338002 'move' i_x[7337998](7338000 'set reference' str[1754325]))
      (7338006 call deinit[21354] i_x[7337998])
      gotoErrorHandling handler[5499733] handler[5499733]
    }
    (1754473 'move' ret[1754264] call_tmp[1754465])
    ref i_x[7338010]:string[244] "temp"
    (7338014 'move' i_x[7338010](7338012 'set reference' str[1754325]))
    (7338018 call deinit[21354] i_x[7338010])
    gotoReturn _end__command_line_cast[1754484] _end__command_line_cast[1754484]
    ref i_x[7338022]:string[244] "temp"
    (7338026 'move' i_x[7338022](7338024 'set reference' str[1754325]))
    (7338030 call deinit[21354] i_x[7338022])
    label handler[5499733]
    const-val shouldHandleError[5499764]:bool[19] "temp"
    val errorExists[7297984]:bool[19] "temp"
    (7297989 'move' errorExists[7297984](7297986 '!=' error[5499732] nil[32]))
    (5499768 'move' shouldHandleError[5499764] errorExists[7297984])
    if shouldHandleError[5499764]
    {
      (5499761 call chpl_uncaught_error[87456] error[5499732])
    }
    label _end__command_line_cast[1754484]
    (1754486 return ret[1754264])
  }
  function _command_line_cast[1757115](const in arg x[1757123]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478280]:int(64)[10] "temp"
    val ret[1757125]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1757135]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1757142]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1757155]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1757162]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5499772]:Error[85511] "error variable" "temp"
    (5499795 'move' error[5499772] nil[32])
    const-val call_tmp[1757176]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1757364]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621522]:Error[85511] "temp"
    (7621526 'move' i_error_out[7621522](7621524 'set reference' error[5499772]))
    val ret[7621529]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621531]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621533 'move' call_tmp[7621531](7621535 'string_length_bytes' x[1757123]))
    const-val call_tmp[7621537]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621539]:owned IllegalArgumentError?[1471812] "temp"
    (7621542 call chpl_checkValue[1511482] call_tmp[7621531] ret_tmp[7621539])
    (7621545 'move' call_tmp[7621537] ret_tmp[7621539])
    val ifvar_borrow[7621548]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621550]:owned IllegalArgumentError?[1471812] "temp"
    (7621552 'move' i_arg[7621550](7621554 'set reference' call_tmp[7621537]))
    val call_tmp[7621556]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621558 'move' call_tmp[7621556](7621561 call borrow[1479886] i_arg[7621550]))
    (7621563 'move' ifvar_borrow[7621548] call_tmp[7621556])
    val coerce_tmp[7621566]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621568 'move' coerce_tmp[7621566](7621570 'cast' RootClass[236] call_tmp[7621556]))
    const-val call_tmp[7621573]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621575 'move' call_tmp[7621573](7621577 '!=' coerce_tmp[7621566] nil[32]))
    if call_tmp[7621573]
    {
      const-val call_tmp[7621582]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621584]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621586 'move' coerce_tmp[7621584](7621588 'cast' Error[85511] ifvar_borrow[7621548]))
      val _virtual_method_tmp_[7621591]:int(32)[66] "temp"
      (7621593 'move' _virtual_method_tmp_[7621591](7621595 'getcid' coerce_tmp[7621584]))
      val ret_tmp[7621597]:string[244] "temp"
      (7621599 'virtual method call' message[85497] _virtual_method_tmp_[7621591] coerce_tmp[7621584] ret_tmp[7621597])
      (7621604 'move' call_tmp[7621582] ret_tmp[7621597])
      (7621608 call safeCastCheckHalt[440] call_tmp[7621582])
      ref i_x[7621610]:string[244] "temp"
      (7621612 'move' i_x[7621610](7621614 'set reference' call_tmp[7621582]))
      (7621617 call deinit[21354] i_x[7621610])
    }
    (7621621 call chpl__autoDestroy[3929258] call_tmp[7621537])
    const-val call_tmp[7621623]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621625 'move' call_tmp[7621623] call_tmp[7621531])
    (7621628 'move' ret[7621529] call_tmp[7621623])
    (1757371 'move' default_arg_length[1757364] ret[7621529])
    val errorExists[7297992]:bool[19] "temp"
    (7297997 'move' errorExists[7297992](7297994 '!=' error[5499772] nil[32]))
    if errorExists[7297992]
    {
      gotoErrorHandling handler[5499773] handler[5499773]
    }
    val default_arg_policy[1757375]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547523]:string[244] "temp"
    ref i_error_out[7624853]:Error[85511] "temp"
    (7624857 'move' i_error_out[7624853](7624855 'set reference' error[5499772]))
    ref i__retArg[7624859]:string[244] "temp"
    (7624863 'move' i__retArg[7624859](7624861 'set reference' ret_tmp[5547523]))
    const-val ret[7624866]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624868]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624870 'move' call_tmp[7624868](7624872 'cast' c_ptr(uint(8))[1466369] x[1757123]))
    const-val call_tmp[7624875]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624877 'move' call_tmp[7624875](7624879 '+' default_arg_length[1757364] 1))
    const-val call_tmp[7624882]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624884]:Error[85511] "error variable" "temp"
    (7624886 'move' error[7624884] nil[32])
    const-val ret_tmp[7624889]:string[244] "temp"
    (7624892 call createCopyingBuffer[1513110] call_tmp[7624868] default_arg_length[1757364] call_tmp[7624875] strict[37976] error[7624884] ret_tmp[7624889])
    (7624899 'move' call_tmp[7624882] ret_tmp[7624889])
    val errorExists[7624902]:bool[19] "temp"
    (7624904 'move' errorExists[7624902](7624906 '!=' error[7624884] nil[32]))
    if errorExists[7624902]
    {
      (7624911 '=' i_error_out[7624853] error[7624884])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624920] _endcreateCopyingBuffer[7624920]
    }
    (7624917 '=' ret[7624866] call_tmp[7624882])
    label _endcreateCopyingBuffer[7624920]
    (7624922 '=' i__retArg[7624859] ret[7624866])
    (5547526 'move' call_tmp[1757176] ret_tmp[5547523])
    val errorExists[7298000]:bool[19] "temp"
    (7298005 'move' errorExists[7298000](7298002 '!=' error[5499772] nil[32]))
    if errorExists[7298000]
    {
      gotoErrorHandling handler[5499773] handler[5499773]
    }
    const-val str[1757186]:string[244] "dead at end of block" "insert auto destroy"
    (1757188 'move' str[1757186] call_tmp[1757176])
    val call_tmp[1757192]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1757200]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1757221]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1757223]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1757236]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1757249]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1757251]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1757253]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1757273]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1757275]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1757282]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1757301]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1757326]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1757328 'move' call_tmp[1757326](1757331 call :[1751964] str[1757186] error[5499772]))
    val errorExists[7298008]:bool[19] "temp"
    (7298013 'move' errorExists[7298008](7298010 '!=' error[5499772] nil[32]))
    if errorExists[7298008]
    {
      ref i_x[7338046]:string[244] "temp"
      (7338050 'move' i_x[7338046](7338048 'set reference' str[1757186]))
      (7338054 call deinit[21354] i_x[7338046])
      gotoErrorHandling handler[5499773] handler[5499773]
    }
    (1757334 'move' ret[1757125] call_tmp[1757326])
    ref i_x[7338058]:string[244] "temp"
    (7338062 'move' i_x[7338058](7338060 'set reference' str[1757186]))
    (7338066 call deinit[21354] i_x[7338058])
    gotoReturn _end__command_line_cast[1757345] _end__command_line_cast[1757345]
    ref i_x[7338070]:string[244] "temp"
    (7338074 'move' i_x[7338070](7338072 'set reference' str[1757186]))
    (7338078 call deinit[21354] i_x[7338070])
    label handler[5499773]
    const-val shouldHandleError[5499804]:bool[19] "temp"
    val errorExists[7298016]:bool[19] "temp"
    (7298021 'move' errorExists[7298016](7298018 '!=' error[5499772] nil[32]))
    (5499808 'move' shouldHandleError[5499804] errorExists[7298016])
    if shouldHandleError[5499804]
    {
      (5499801 call chpl_uncaught_error[87456] error[5499772])
    }
    label _end__command_line_cast[1757345]
    (1757347 return ret[1757125])
  }
  function _command_line_cast[1759018](const in arg x[1759026]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478284]:int(64)[10] "temp"
    val ret[1759028]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1759038]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1759045]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1759058]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1759065]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5499812]:Error[85511] "error variable" "temp"
    (5499835 'move' error[5499812] nil[32])
    const-val call_tmp[1759079]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1759267]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621635]:Error[85511] "temp"
    (7621639 'move' i_error_out[7621635](7621637 'set reference' error[5499812]))
    val ret[7621642]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621644]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621646 'move' call_tmp[7621644](7621648 'string_length_bytes' x[1759026]))
    const-val call_tmp[7621650]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621652]:owned IllegalArgumentError?[1471812] "temp"
    (7621655 call chpl_checkValue[1511482] call_tmp[7621644] ret_tmp[7621652])
    (7621658 'move' call_tmp[7621650] ret_tmp[7621652])
    val ifvar_borrow[7621661]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621663]:owned IllegalArgumentError?[1471812] "temp"
    (7621665 'move' i_arg[7621663](7621667 'set reference' call_tmp[7621650]))
    val call_tmp[7621669]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621671 'move' call_tmp[7621669](7621674 call borrow[1479886] i_arg[7621663]))
    (7621676 'move' ifvar_borrow[7621661] call_tmp[7621669])
    val coerce_tmp[7621679]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621681 'move' coerce_tmp[7621679](7621683 'cast' RootClass[236] call_tmp[7621669]))
    const-val call_tmp[7621686]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621688 'move' call_tmp[7621686](7621690 '!=' coerce_tmp[7621679] nil[32]))
    if call_tmp[7621686]
    {
      const-val call_tmp[7621695]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621697]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621699 'move' coerce_tmp[7621697](7621701 'cast' Error[85511] ifvar_borrow[7621661]))
      val _virtual_method_tmp_[7621704]:int(32)[66] "temp"
      (7621706 'move' _virtual_method_tmp_[7621704](7621708 'getcid' coerce_tmp[7621697]))
      val ret_tmp[7621710]:string[244] "temp"
      (7621712 'virtual method call' message[85497] _virtual_method_tmp_[7621704] coerce_tmp[7621697] ret_tmp[7621710])
      (7621717 'move' call_tmp[7621695] ret_tmp[7621710])
      (7621721 call safeCastCheckHalt[440] call_tmp[7621695])
      ref i_x[7621723]:string[244] "temp"
      (7621725 'move' i_x[7621723](7621727 'set reference' call_tmp[7621695]))
      (7621730 call deinit[21354] i_x[7621723])
    }
    (7621734 call chpl__autoDestroy[3929258] call_tmp[7621650])
    const-val call_tmp[7621736]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621738 'move' call_tmp[7621736] call_tmp[7621644])
    (7621741 'move' ret[7621642] call_tmp[7621736])
    (1759274 'move' default_arg_length[1759267] ret[7621642])
    val errorExists[7298024]:bool[19] "temp"
    (7298029 'move' errorExists[7298024](7298026 '!=' error[5499812] nil[32]))
    if errorExists[7298024]
    {
      gotoErrorHandling handler[5499813] handler[5499813]
    }
    val default_arg_policy[1759278]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547529]:string[244] "temp"
    ref i_error_out[7624927]:Error[85511] "temp"
    (7624931 'move' i_error_out[7624927](7624929 'set reference' error[5499812]))
    ref i__retArg[7624933]:string[244] "temp"
    (7624937 'move' i__retArg[7624933](7624935 'set reference' ret_tmp[5547529]))
    const-val ret[7624940]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624942]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624944 'move' call_tmp[7624942](7624946 'cast' c_ptr(uint(8))[1466369] x[1759026]))
    const-val call_tmp[7624949]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624951 'move' call_tmp[7624949](7624953 '+' default_arg_length[1759267] 1))
    const-val call_tmp[7624956]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624958]:Error[85511] "error variable" "temp"
    (7624960 'move' error[7624958] nil[32])
    const-val ret_tmp[7624963]:string[244] "temp"
    (7624966 call createCopyingBuffer[1513110] call_tmp[7624942] default_arg_length[1759267] call_tmp[7624949] strict[37976] error[7624958] ret_tmp[7624963])
    (7624973 'move' call_tmp[7624956] ret_tmp[7624963])
    val errorExists[7624976]:bool[19] "temp"
    (7624978 'move' errorExists[7624976](7624980 '!=' error[7624958] nil[32]))
    if errorExists[7624976]
    {
      (7624985 '=' i_error_out[7624927] error[7624958])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624994] _endcreateCopyingBuffer[7624994]
    }
    (7624991 '=' ret[7624940] call_tmp[7624956])
    label _endcreateCopyingBuffer[7624994]
    (7624996 '=' i__retArg[7624933] ret[7624940])
    (5547532 'move' call_tmp[1759079] ret_tmp[5547529])
    val errorExists[7298032]:bool[19] "temp"
    (7298037 'move' errorExists[7298032](7298034 '!=' error[5499812] nil[32]))
    if errorExists[7298032]
    {
      gotoErrorHandling handler[5499813] handler[5499813]
    }
    const-val str[1759089]:string[244] "dead at end of block" "insert auto destroy"
    (1759091 'move' str[1759089] call_tmp[1759079])
    val call_tmp[1759095]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1759103]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1759124]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1759126]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1759139]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1759152]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1759154]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1759156]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1759176]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1759178]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1759185]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1759204]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1759229]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1759231 'move' call_tmp[1759229](1759234 call :[1751964] str[1759089] error[5499812]))
    val errorExists[7298040]:bool[19] "temp"
    (7298045 'move' errorExists[7298040](7298042 '!=' error[5499812] nil[32]))
    if errorExists[7298040]
    {
      ref i_x[7338082]:string[244] "temp"
      (7338086 'move' i_x[7338082](7338084 'set reference' str[1759089]))
      (7338090 call deinit[21354] i_x[7338082])
      gotoErrorHandling handler[5499813] handler[5499813]
    }
    (1759237 'move' ret[1759028] call_tmp[1759229])
    ref i_x[7338094]:string[244] "temp"
    (7338098 'move' i_x[7338094](7338096 'set reference' str[1759089]))
    (7338102 call deinit[21354] i_x[7338094])
    gotoReturn _end__command_line_cast[1759248] _end__command_line_cast[1759248]
    ref i_x[7338106]:string[244] "temp"
    (7338110 'move' i_x[7338106](7338108 'set reference' str[1759089]))
    (7338114 call deinit[21354] i_x[7338106])
    label handler[5499813]
    const-val shouldHandleError[5499844]:bool[19] "temp"
    val errorExists[7298048]:bool[19] "temp"
    (7298053 'move' errorExists[7298048](7298050 '!=' error[5499812] nil[32]))
    (5499848 'move' shouldHandleError[5499844] errorExists[7298048])
    if shouldHandleError[5499844]
    {
      (5499841 call chpl_uncaught_error[87456] error[5499812])
    }
    label _end__command_line_cast[1759248]
    (1759250 return ret[1759028])
  }
  function _command_line_cast[1916561](const in arg x[1916569]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478453]:bool[19] "temp"
    val ret[1916571]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1916581]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916588]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916601]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916608]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501139]:Error[85511] "error variable" "temp"
    (5501162 'move' error[5501139] nil[32])
    const-val call_tmp[1916622]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1916810]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621748]:Error[85511] "temp"
    (7621752 'move' i_error_out[7621748](7621750 'set reference' error[5501139]))
    val ret[7621755]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621757]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621759 'move' call_tmp[7621757](7621761 'string_length_bytes' x[1916569]))
    const-val call_tmp[7621763]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621765]:owned IllegalArgumentError?[1471812] "temp"
    (7621768 call chpl_checkValue[1511482] call_tmp[7621757] ret_tmp[7621765])
    (7621771 'move' call_tmp[7621763] ret_tmp[7621765])
    val ifvar_borrow[7621774]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621776]:owned IllegalArgumentError?[1471812] "temp"
    (7621778 'move' i_arg[7621776](7621780 'set reference' call_tmp[7621763]))
    val call_tmp[7621782]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621784 'move' call_tmp[7621782](7621787 call borrow[1479886] i_arg[7621776]))
    (7621789 'move' ifvar_borrow[7621774] call_tmp[7621782])
    val coerce_tmp[7621792]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621794 'move' coerce_tmp[7621792](7621796 'cast' RootClass[236] call_tmp[7621782]))
    const-val call_tmp[7621799]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621801 'move' call_tmp[7621799](7621803 '!=' coerce_tmp[7621792] nil[32]))
    if call_tmp[7621799]
    {
      const-val call_tmp[7621808]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621810]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621812 'move' coerce_tmp[7621810](7621814 'cast' Error[85511] ifvar_borrow[7621774]))
      val _virtual_method_tmp_[7621817]:int(32)[66] "temp"
      (7621819 'move' _virtual_method_tmp_[7621817](7621821 'getcid' coerce_tmp[7621810]))
      val ret_tmp[7621823]:string[244] "temp"
      (7621825 'virtual method call' message[85497] _virtual_method_tmp_[7621817] coerce_tmp[7621810] ret_tmp[7621823])
      (7621830 'move' call_tmp[7621808] ret_tmp[7621823])
      (7621834 call safeCastCheckHalt[440] call_tmp[7621808])
      ref i_x[7621836]:string[244] "temp"
      (7621838 'move' i_x[7621836](7621840 'set reference' call_tmp[7621808]))
      (7621843 call deinit[21354] i_x[7621836])
    }
    (7621847 call chpl__autoDestroy[3929258] call_tmp[7621763])
    const-val call_tmp[7621849]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621851 'move' call_tmp[7621849] call_tmp[7621757])
    (7621854 'move' ret[7621755] call_tmp[7621849])
    (1916817 'move' default_arg_length[1916810] ret[7621755])
    val errorExists[7298608]:bool[19] "temp"
    (7298613 'move' errorExists[7298608](7298610 '!=' error[5501139] nil[32]))
    if errorExists[7298608]
    {
      gotoErrorHandling handler[5501140] handler[5501140]
    }
    val default_arg_policy[1916821]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547547]:string[244] "temp"
    ref i_error_out[7625149]:Error[85511] "temp"
    (7625153 'move' i_error_out[7625149](7625151 'set reference' error[5501139]))
    ref i__retArg[7625155]:string[244] "temp"
    (7625159 'move' i__retArg[7625155](7625157 'set reference' ret_tmp[5547547]))
    const-val ret[7625162]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625164]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625166 'move' call_tmp[7625164](7625168 'cast' c_ptr(uint(8))[1466369] x[1916569]))
    const-val call_tmp[7625171]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625173 'move' call_tmp[7625171](7625175 '+' default_arg_length[1916810] 1))
    const-val call_tmp[7625178]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625180]:Error[85511] "error variable" "temp"
    (7625182 'move' error[7625180] nil[32])
    const-val ret_tmp[7625185]:string[244] "temp"
    (7625188 call createCopyingBuffer[1513110] call_tmp[7625164] default_arg_length[1916810] call_tmp[7625171] strict[37976] error[7625180] ret_tmp[7625185])
    (7625195 'move' call_tmp[7625178] ret_tmp[7625185])
    val errorExists[7625198]:bool[19] "temp"
    (7625200 'move' errorExists[7625198](7625202 '!=' error[7625180] nil[32]))
    if errorExists[7625198]
    {
      (7625207 '=' i_error_out[7625149] error[7625180])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625216] _endcreateCopyingBuffer[7625216]
    }
    (7625213 '=' ret[7625162] call_tmp[7625178])
    label _endcreateCopyingBuffer[7625216]
    (7625218 '=' i__retArg[7625155] ret[7625162])
    (5547550 'move' call_tmp[1916622] ret_tmp[5547547])
    val errorExists[7298616]:bool[19] "temp"
    (7298621 'move' errorExists[7298616](7298618 '!=' error[5501139] nil[32]))
    if errorExists[7298616]
    {
      gotoErrorHandling handler[5501140] handler[5501140]
    }
    const-val str[1916632]:string[244] "dead at end of block" "insert auto destroy"
    (1916634 'move' str[1916632] call_tmp[1916622])
    val call_tmp[1916638]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916646]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1916667]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1916669]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1916682]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1916695]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1916697]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1916699]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1916719]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1916721]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1916728]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916747]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1916772]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1916774 'move' call_tmp[1916772](1916777 call :[16582] str[1916632] error[5501139]))
    val errorExists[7298624]:bool[19] "temp"
    (7298629 'move' errorExists[7298624](7298626 '!=' error[5501139] nil[32]))
    if errorExists[7298624]
    {
      ref i_x[7338826]:string[244] "temp"
      (7338830 'move' i_x[7338826](7338828 'set reference' str[1916632]))
      (7338834 call deinit[21354] i_x[7338826])
      gotoErrorHandling handler[5501140] handler[5501140]
    }
    (1916780 'move' ret[1916571] call_tmp[1916772])
    ref i_x[7338838]:string[244] "temp"
    (7338842 'move' i_x[7338838](7338840 'set reference' str[1916632]))
    (7338846 call deinit[21354] i_x[7338838])
    gotoReturn _end__command_line_cast[1916791] _end__command_line_cast[1916791]
    ref i_x[7338850]:string[244] "temp"
    (7338854 'move' i_x[7338850](7338852 'set reference' str[1916632]))
    (7338858 call deinit[21354] i_x[7338850])
    label handler[5501140]
    const-val shouldHandleError[5501171]:bool[19] "temp"
    val errorExists[7298632]:bool[19] "temp"
    (7298637 'move' errorExists[7298632](7298634 '!=' error[5501139] nil[32]))
    (5501175 'move' shouldHandleError[5501171] errorExists[7298632])
    if shouldHandleError[5501171]
    {
      (5501168 call chpl_uncaught_error[87456] error[5501139])
    }
    label _end__command_line_cast[1916791]
    (1916793 return ret[1916571])
  }
  function _command_line_cast[1916898](const in arg x[1916906]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478455]:bool[19] "temp"
    val ret[1916908]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1916918]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916925]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916938]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916945]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501179]:Error[85511] "error variable" "temp"
    (5501202 'move' error[5501179] nil[32])
    const-val call_tmp[1916959]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1917147]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621861]:Error[85511] "temp"
    (7621865 'move' i_error_out[7621861](7621863 'set reference' error[5501179]))
    val ret[7621868]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621870]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621872 'move' call_tmp[7621870](7621874 'string_length_bytes' x[1916906]))
    const-val call_tmp[7621876]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621878]:owned IllegalArgumentError?[1471812] "temp"
    (7621881 call chpl_checkValue[1511482] call_tmp[7621870] ret_tmp[7621878])
    (7621884 'move' call_tmp[7621876] ret_tmp[7621878])
    val ifvar_borrow[7621887]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7621889]:owned IllegalArgumentError?[1471812] "temp"
    (7621891 'move' i_arg[7621889](7621893 'set reference' call_tmp[7621876]))
    val call_tmp[7621895]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621897 'move' call_tmp[7621895](7621900 call borrow[1479886] i_arg[7621889]))
    (7621902 'move' ifvar_borrow[7621887] call_tmp[7621895])
    val coerce_tmp[7621905]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7621907 'move' coerce_tmp[7621905](7621909 'cast' RootClass[236] call_tmp[7621895]))
    const-val call_tmp[7621912]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621914 'move' call_tmp[7621912](7621916 '!=' coerce_tmp[7621905] nil[32]))
    if call_tmp[7621912]
    {
      const-val call_tmp[7621921]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7621923]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7621925 'move' coerce_tmp[7621923](7621927 'cast' Error[85511] ifvar_borrow[7621887]))
      val _virtual_method_tmp_[7621930]:int(32)[66] "temp"
      (7621932 'move' _virtual_method_tmp_[7621930](7621934 'getcid' coerce_tmp[7621923]))
      val ret_tmp[7621936]:string[244] "temp"
      (7621938 'virtual method call' message[85497] _virtual_method_tmp_[7621930] coerce_tmp[7621923] ret_tmp[7621936])
      (7621943 'move' call_tmp[7621921] ret_tmp[7621936])
      (7621947 call safeCastCheckHalt[440] call_tmp[7621921])
      ref i_x[7621949]:string[244] "temp"
      (7621951 'move' i_x[7621949](7621953 'set reference' call_tmp[7621921]))
      (7621956 call deinit[21354] i_x[7621949])
    }
    (7621960 call chpl__autoDestroy[3929258] call_tmp[7621876])
    const-val call_tmp[7621962]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621964 'move' call_tmp[7621962] call_tmp[7621870])
    (7621967 'move' ret[7621868] call_tmp[7621962])
    (1917154 'move' default_arg_length[1917147] ret[7621868])
    val errorExists[7298640]:bool[19] "temp"
    (7298645 'move' errorExists[7298640](7298642 '!=' error[5501179] nil[32]))
    if errorExists[7298640]
    {
      gotoErrorHandling handler[5501180] handler[5501180]
    }
    val default_arg_policy[1917158]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547553]:string[244] "temp"
    ref i_error_out[7625223]:Error[85511] "temp"
    (7625227 'move' i_error_out[7625223](7625225 'set reference' error[5501179]))
    ref i__retArg[7625229]:string[244] "temp"
    (7625233 'move' i__retArg[7625229](7625231 'set reference' ret_tmp[5547553]))
    const-val ret[7625236]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625238]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625240 'move' call_tmp[7625238](7625242 'cast' c_ptr(uint(8))[1466369] x[1916906]))
    const-val call_tmp[7625245]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625247 'move' call_tmp[7625245](7625249 '+' default_arg_length[1917147] 1))
    const-val call_tmp[7625252]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625254]:Error[85511] "error variable" "temp"
    (7625256 'move' error[7625254] nil[32])
    const-val ret_tmp[7625259]:string[244] "temp"
    (7625262 call createCopyingBuffer[1513110] call_tmp[7625238] default_arg_length[1917147] call_tmp[7625245] strict[37976] error[7625254] ret_tmp[7625259])
    (7625269 'move' call_tmp[7625252] ret_tmp[7625259])
    val errorExists[7625272]:bool[19] "temp"
    (7625274 'move' errorExists[7625272](7625276 '!=' error[7625254] nil[32]))
    if errorExists[7625272]
    {
      (7625281 '=' i_error_out[7625223] error[7625254])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625290] _endcreateCopyingBuffer[7625290]
    }
    (7625287 '=' ret[7625236] call_tmp[7625252])
    label _endcreateCopyingBuffer[7625290]
    (7625292 '=' i__retArg[7625229] ret[7625236])
    (5547556 'move' call_tmp[1916959] ret_tmp[5547553])
    val errorExists[7298648]:bool[19] "temp"
    (7298653 'move' errorExists[7298648](7298650 '!=' error[5501179] nil[32]))
    if errorExists[7298648]
    {
      gotoErrorHandling handler[5501180] handler[5501180]
    }
    const-val str[1916969]:string[244] "dead at end of block" "insert auto destroy"
    (1916971 'move' str[1916969] call_tmp[1916959])
    val call_tmp[1916975]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1916983]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917004]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1917006]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1917019]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917032]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1917034]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1917036]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917056]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1917058]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1917065]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917084]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1917109]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1917111 'move' call_tmp[1917109](1917114 call :[16582] str[1916969] error[5501179]))
    val errorExists[7298656]:bool[19] "temp"
    (7298661 'move' errorExists[7298656](7298658 '!=' error[5501179] nil[32]))
    if errorExists[7298656]
    {
      ref i_x[7338862]:string[244] "temp"
      (7338866 'move' i_x[7338862](7338864 'set reference' str[1916969]))
      (7338870 call deinit[21354] i_x[7338862])
      gotoErrorHandling handler[5501180] handler[5501180]
    }
    (1917117 'move' ret[1916908] call_tmp[1917109])
    ref i_x[7338874]:string[244] "temp"
    (7338878 'move' i_x[7338874](7338876 'set reference' str[1916969]))
    (7338882 call deinit[21354] i_x[7338874])
    gotoReturn _end__command_line_cast[1917128] _end__command_line_cast[1917128]
    ref i_x[7338886]:string[244] "temp"
    (7338890 'move' i_x[7338886](7338888 'set reference' str[1916969]))
    (7338894 call deinit[21354] i_x[7338886])
    label handler[5501180]
    const-val shouldHandleError[5501211]:bool[19] "temp"
    val errorExists[7298664]:bool[19] "temp"
    (7298669 'move' errorExists[7298664](7298666 '!=' error[5501179] nil[32]))
    (5501215 'move' shouldHandleError[5501211] errorExists[7298664])
    if shouldHandleError[5501211]
    {
      (5501208 call chpl_uncaught_error[87456] error[5501179])
    }
    label _end__command_line_cast[1917128]
    (1917130 return ret[1916908])
  }
  function _command_line_cast[1917235](const in arg x[1917243]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478457]:bool[19] "temp"
    val ret[1917245]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1917255]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917262]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917275]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917282]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501219]:Error[85511] "error variable" "temp"
    (5501242 'move' error[5501219] nil[32])
    const-val call_tmp[1917296]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1917484]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7621974]:Error[85511] "temp"
    (7621978 'move' i_error_out[7621974](7621976 'set reference' error[5501219]))
    val ret[7621981]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7621983]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7621985 'move' call_tmp[7621983](7621987 'string_length_bytes' x[1917243]))
    const-val call_tmp[7621989]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7621991]:owned IllegalArgumentError?[1471812] "temp"
    (7621994 call chpl_checkValue[1511482] call_tmp[7621983] ret_tmp[7621991])
    (7621997 'move' call_tmp[7621989] ret_tmp[7621991])
    val ifvar_borrow[7622000]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622002]:owned IllegalArgumentError?[1471812] "temp"
    (7622004 'move' i_arg[7622002](7622006 'set reference' call_tmp[7621989]))
    val call_tmp[7622008]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622010 'move' call_tmp[7622008](7622013 call borrow[1479886] i_arg[7622002]))
    (7622015 'move' ifvar_borrow[7622000] call_tmp[7622008])
    val coerce_tmp[7622018]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622020 'move' coerce_tmp[7622018](7622022 'cast' RootClass[236] call_tmp[7622008]))
    const-val call_tmp[7622025]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622027 'move' call_tmp[7622025](7622029 '!=' coerce_tmp[7622018] nil[32]))
    if call_tmp[7622025]
    {
      const-val call_tmp[7622034]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622036]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622038 'move' coerce_tmp[7622036](7622040 'cast' Error[85511] ifvar_borrow[7622000]))
      val _virtual_method_tmp_[7622043]:int(32)[66] "temp"
      (7622045 'move' _virtual_method_tmp_[7622043](7622047 'getcid' coerce_tmp[7622036]))
      val ret_tmp[7622049]:string[244] "temp"
      (7622051 'virtual method call' message[85497] _virtual_method_tmp_[7622043] coerce_tmp[7622036] ret_tmp[7622049])
      (7622056 'move' call_tmp[7622034] ret_tmp[7622049])
      (7622060 call safeCastCheckHalt[440] call_tmp[7622034])
      ref i_x[7622062]:string[244] "temp"
      (7622064 'move' i_x[7622062](7622066 'set reference' call_tmp[7622034]))
      (7622069 call deinit[21354] i_x[7622062])
    }
    (7622073 call chpl__autoDestroy[3929258] call_tmp[7621989])
    const-val call_tmp[7622075]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622077 'move' call_tmp[7622075] call_tmp[7621983])
    (7622080 'move' ret[7621981] call_tmp[7622075])
    (1917491 'move' default_arg_length[1917484] ret[7621981])
    val errorExists[7298672]:bool[19] "temp"
    (7298677 'move' errorExists[7298672](7298674 '!=' error[5501219] nil[32]))
    if errorExists[7298672]
    {
      gotoErrorHandling handler[5501220] handler[5501220]
    }
    val default_arg_policy[1917495]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547559]:string[244] "temp"
    ref i_error_out[7625297]:Error[85511] "temp"
    (7625301 'move' i_error_out[7625297](7625299 'set reference' error[5501219]))
    ref i__retArg[7625303]:string[244] "temp"
    (7625307 'move' i__retArg[7625303](7625305 'set reference' ret_tmp[5547559]))
    const-val ret[7625310]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625312]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625314 'move' call_tmp[7625312](7625316 'cast' c_ptr(uint(8))[1466369] x[1917243]))
    const-val call_tmp[7625319]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625321 'move' call_tmp[7625319](7625323 '+' default_arg_length[1917484] 1))
    const-val call_tmp[7625326]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625328]:Error[85511] "error variable" "temp"
    (7625330 'move' error[7625328] nil[32])
    const-val ret_tmp[7625333]:string[244] "temp"
    (7625336 call createCopyingBuffer[1513110] call_tmp[7625312] default_arg_length[1917484] call_tmp[7625319] strict[37976] error[7625328] ret_tmp[7625333])
    (7625343 'move' call_tmp[7625326] ret_tmp[7625333])
    val errorExists[7625346]:bool[19] "temp"
    (7625348 'move' errorExists[7625346](7625350 '!=' error[7625328] nil[32]))
    if errorExists[7625346]
    {
      (7625355 '=' i_error_out[7625297] error[7625328])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625364] _endcreateCopyingBuffer[7625364]
    }
    (7625361 '=' ret[7625310] call_tmp[7625326])
    label _endcreateCopyingBuffer[7625364]
    (7625366 '=' i__retArg[7625303] ret[7625310])
    (5547562 'move' call_tmp[1917296] ret_tmp[5547559])
    val errorExists[7298680]:bool[19] "temp"
    (7298685 'move' errorExists[7298680](7298682 '!=' error[5501219] nil[32]))
    if errorExists[7298680]
    {
      gotoErrorHandling handler[5501220] handler[5501220]
    }
    const-val str[1917306]:string[244] "dead at end of block" "insert auto destroy"
    (1917308 'move' str[1917306] call_tmp[1917296])
    val call_tmp[1917312]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917320]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917341]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1917343]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1917356]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917369]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1917371]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1917373]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917393]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1917395]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1917402]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917421]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1917446]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1917448 'move' call_tmp[1917446](1917451 call :[16582] str[1917306] error[5501219]))
    val errorExists[7298688]:bool[19] "temp"
    (7298693 'move' errorExists[7298688](7298690 '!=' error[5501219] nil[32]))
    if errorExists[7298688]
    {
      ref i_x[7338898]:string[244] "temp"
      (7338902 'move' i_x[7338898](7338900 'set reference' str[1917306]))
      (7338906 call deinit[21354] i_x[7338898])
      gotoErrorHandling handler[5501220] handler[5501220]
    }
    (1917454 'move' ret[1917245] call_tmp[1917446])
    ref i_x[7338910]:string[244] "temp"
    (7338914 'move' i_x[7338910](7338912 'set reference' str[1917306]))
    (7338918 call deinit[21354] i_x[7338910])
    gotoReturn _end__command_line_cast[1917465] _end__command_line_cast[1917465]
    ref i_x[7338922]:string[244] "temp"
    (7338926 'move' i_x[7338922](7338924 'set reference' str[1917306]))
    (7338930 call deinit[21354] i_x[7338922])
    label handler[5501220]
    const-val shouldHandleError[5501251]:bool[19] "temp"
    val errorExists[7298696]:bool[19] "temp"
    (7298701 'move' errorExists[7298696](7298698 '!=' error[5501219] nil[32]))
    (5501255 'move' shouldHandleError[5501251] errorExists[7298696])
    if shouldHandleError[5501251]
    {
      (5501248 call chpl_uncaught_error[87456] error[5501219])
    }
    label _end__command_line_cast[1917465]
    (1917467 return ret[1917245])
  }
  function _command_line_cast[1917572](const in arg x[1917580]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478459]:bool[19] "temp"
    val ret[1917582]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1917592]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917599]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917612]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917619]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501259]:Error[85511] "error variable" "temp"
    (5501282 'move' error[5501259] nil[32])
    const-val call_tmp[1917633]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1917821]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622087]:Error[85511] "temp"
    (7622091 'move' i_error_out[7622087](7622089 'set reference' error[5501259]))
    val ret[7622094]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622096]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622098 'move' call_tmp[7622096](7622100 'string_length_bytes' x[1917580]))
    const-val call_tmp[7622102]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622104]:owned IllegalArgumentError?[1471812] "temp"
    (7622107 call chpl_checkValue[1511482] call_tmp[7622096] ret_tmp[7622104])
    (7622110 'move' call_tmp[7622102] ret_tmp[7622104])
    val ifvar_borrow[7622113]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622115]:owned IllegalArgumentError?[1471812] "temp"
    (7622117 'move' i_arg[7622115](7622119 'set reference' call_tmp[7622102]))
    val call_tmp[7622121]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622123 'move' call_tmp[7622121](7622126 call borrow[1479886] i_arg[7622115]))
    (7622128 'move' ifvar_borrow[7622113] call_tmp[7622121])
    val coerce_tmp[7622131]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622133 'move' coerce_tmp[7622131](7622135 'cast' RootClass[236] call_tmp[7622121]))
    const-val call_tmp[7622138]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622140 'move' call_tmp[7622138](7622142 '!=' coerce_tmp[7622131] nil[32]))
    if call_tmp[7622138]
    {
      const-val call_tmp[7622147]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622149]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622151 'move' coerce_tmp[7622149](7622153 'cast' Error[85511] ifvar_borrow[7622113]))
      val _virtual_method_tmp_[7622156]:int(32)[66] "temp"
      (7622158 'move' _virtual_method_tmp_[7622156](7622160 'getcid' coerce_tmp[7622149]))
      val ret_tmp[7622162]:string[244] "temp"
      (7622164 'virtual method call' message[85497] _virtual_method_tmp_[7622156] coerce_tmp[7622149] ret_tmp[7622162])
      (7622169 'move' call_tmp[7622147] ret_tmp[7622162])
      (7622173 call safeCastCheckHalt[440] call_tmp[7622147])
      ref i_x[7622175]:string[244] "temp"
      (7622177 'move' i_x[7622175](7622179 'set reference' call_tmp[7622147]))
      (7622182 call deinit[21354] i_x[7622175])
    }
    (7622186 call chpl__autoDestroy[3929258] call_tmp[7622102])
    const-val call_tmp[7622188]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622190 'move' call_tmp[7622188] call_tmp[7622096])
    (7622193 'move' ret[7622094] call_tmp[7622188])
    (1917828 'move' default_arg_length[1917821] ret[7622094])
    val errorExists[7298704]:bool[19] "temp"
    (7298709 'move' errorExists[7298704](7298706 '!=' error[5501259] nil[32]))
    if errorExists[7298704]
    {
      gotoErrorHandling handler[5501260] handler[5501260]
    }
    val default_arg_policy[1917832]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547565]:string[244] "temp"
    ref i_error_out[7625371]:Error[85511] "temp"
    (7625375 'move' i_error_out[7625371](7625373 'set reference' error[5501259]))
    ref i__retArg[7625377]:string[244] "temp"
    (7625381 'move' i__retArg[7625377](7625379 'set reference' ret_tmp[5547565]))
    const-val ret[7625384]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625386]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625388 'move' call_tmp[7625386](7625390 'cast' c_ptr(uint(8))[1466369] x[1917580]))
    const-val call_tmp[7625393]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625395 'move' call_tmp[7625393](7625397 '+' default_arg_length[1917821] 1))
    const-val call_tmp[7625400]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625402]:Error[85511] "error variable" "temp"
    (7625404 'move' error[7625402] nil[32])
    const-val ret_tmp[7625407]:string[244] "temp"
    (7625410 call createCopyingBuffer[1513110] call_tmp[7625386] default_arg_length[1917821] call_tmp[7625393] strict[37976] error[7625402] ret_tmp[7625407])
    (7625417 'move' call_tmp[7625400] ret_tmp[7625407])
    val errorExists[7625420]:bool[19] "temp"
    (7625422 'move' errorExists[7625420](7625424 '!=' error[7625402] nil[32]))
    if errorExists[7625420]
    {
      (7625429 '=' i_error_out[7625371] error[7625402])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625438] _endcreateCopyingBuffer[7625438]
    }
    (7625435 '=' ret[7625384] call_tmp[7625400])
    label _endcreateCopyingBuffer[7625438]
    (7625440 '=' i__retArg[7625377] ret[7625384])
    (5547568 'move' call_tmp[1917633] ret_tmp[5547565])
    val errorExists[7298712]:bool[19] "temp"
    (7298717 'move' errorExists[7298712](7298714 '!=' error[5501259] nil[32]))
    if errorExists[7298712]
    {
      gotoErrorHandling handler[5501260] handler[5501260]
    }
    const-val str[1917643]:string[244] "dead at end of block" "insert auto destroy"
    (1917645 'move' str[1917643] call_tmp[1917633])
    val call_tmp[1917649]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917657]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917678]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1917680]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1917693]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917706]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1917708]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1917710]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1917730]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1917732]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1917739]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917758]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1917783]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1917785 'move' call_tmp[1917783](1917788 call :[16582] str[1917643] error[5501259]))
    val errorExists[7298720]:bool[19] "temp"
    (7298725 'move' errorExists[7298720](7298722 '!=' error[5501259] nil[32]))
    if errorExists[7298720]
    {
      ref i_x[7338934]:string[244] "temp"
      (7338938 'move' i_x[7338934](7338936 'set reference' str[1917643]))
      (7338942 call deinit[21354] i_x[7338934])
      gotoErrorHandling handler[5501260] handler[5501260]
    }
    (1917791 'move' ret[1917582] call_tmp[1917783])
    ref i_x[7338946]:string[244] "temp"
    (7338950 'move' i_x[7338946](7338948 'set reference' str[1917643]))
    (7338954 call deinit[21354] i_x[7338946])
    gotoReturn _end__command_line_cast[1917802] _end__command_line_cast[1917802]
    ref i_x[7338958]:string[244] "temp"
    (7338962 'move' i_x[7338958](7338960 'set reference' str[1917643]))
    (7338966 call deinit[21354] i_x[7338958])
    label handler[5501260]
    const-val shouldHandleError[5501291]:bool[19] "temp"
    val errorExists[7298728]:bool[19] "temp"
    (7298733 'move' errorExists[7298728](7298730 '!=' error[5501259] nil[32]))
    (5501295 'move' shouldHandleError[5501291] errorExists[7298728])
    if shouldHandleError[5501291]
    {
      (5501288 call chpl_uncaught_error[87456] error[5501259])
    }
    label _end__command_line_cast[1917802]
    (1917804 return ret[1917582])
  }
  function _command_line_cast[1917917](const in arg x[1917925]:c_ptrConst(int(8))[1466333]) : uint(64)[86] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478461]:uint(64)[86] "temp"
    val ret[1917927]:uint(64)[86] "dead after last mention" "RVV" "temp"
    val call_tmp[1917937]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917944]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917957]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1917964]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501299]:Error[85511] "error variable" "temp"
    (5501322 'move' error[5501299] nil[32])
    const-val call_tmp[1917978]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1918219]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622200]:Error[85511] "temp"
    (7622204 'move' i_error_out[7622200](7622202 'set reference' error[5501299]))
    val ret[7622207]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622209]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622211 'move' call_tmp[7622209](7622213 'string_length_bytes' x[1917925]))
    const-val call_tmp[7622215]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622217]:owned IllegalArgumentError?[1471812] "temp"
    (7622220 call chpl_checkValue[1511482] call_tmp[7622209] ret_tmp[7622217])
    (7622223 'move' call_tmp[7622215] ret_tmp[7622217])
    val ifvar_borrow[7622226]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622228]:owned IllegalArgumentError?[1471812] "temp"
    (7622230 'move' i_arg[7622228](7622232 'set reference' call_tmp[7622215]))
    val call_tmp[7622234]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622236 'move' call_tmp[7622234](7622239 call borrow[1479886] i_arg[7622228]))
    (7622241 'move' ifvar_borrow[7622226] call_tmp[7622234])
    val coerce_tmp[7622244]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622246 'move' coerce_tmp[7622244](7622248 'cast' RootClass[236] call_tmp[7622234]))
    const-val call_tmp[7622251]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622253 'move' call_tmp[7622251](7622255 '!=' coerce_tmp[7622244] nil[32]))
    if call_tmp[7622251]
    {
      const-val call_tmp[7622260]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622262]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622264 'move' coerce_tmp[7622262](7622266 'cast' Error[85511] ifvar_borrow[7622226]))
      val _virtual_method_tmp_[7622269]:int(32)[66] "temp"
      (7622271 'move' _virtual_method_tmp_[7622269](7622273 'getcid' coerce_tmp[7622262]))
      val ret_tmp[7622275]:string[244] "temp"
      (7622277 'virtual method call' message[85497] _virtual_method_tmp_[7622269] coerce_tmp[7622262] ret_tmp[7622275])
      (7622282 'move' call_tmp[7622260] ret_tmp[7622275])
      (7622286 call safeCastCheckHalt[440] call_tmp[7622260])
      ref i_x[7622288]:string[244] "temp"
      (7622290 'move' i_x[7622288](7622292 'set reference' call_tmp[7622260]))
      (7622295 call deinit[21354] i_x[7622288])
    }
    (7622299 call chpl__autoDestroy[3929258] call_tmp[7622215])
    const-val call_tmp[7622301]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622303 'move' call_tmp[7622301] call_tmp[7622209])
    (7622306 'move' ret[7622207] call_tmp[7622301])
    (1918226 'move' default_arg_length[1918219] ret[7622207])
    val errorExists[7298736]:bool[19] "temp"
    (7298741 'move' errorExists[7298736](7298738 '!=' error[5501299] nil[32]))
    if errorExists[7298736]
    {
      gotoErrorHandling handler[5501300] handler[5501300]
    }
    val default_arg_policy[1918230]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547571]:string[244] "temp"
    ref i_error_out[7625445]:Error[85511] "temp"
    (7625449 'move' i_error_out[7625445](7625447 'set reference' error[5501299]))
    ref i__retArg[7625451]:string[244] "temp"
    (7625455 'move' i__retArg[7625451](7625453 'set reference' ret_tmp[5547571]))
    const-val ret[7625458]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625460]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625462 'move' call_tmp[7625460](7625464 'cast' c_ptr(uint(8))[1466369] x[1917925]))
    const-val call_tmp[7625467]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625469 'move' call_tmp[7625467](7625471 '+' default_arg_length[1918219] 1))
    const-val call_tmp[7625474]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625476]:Error[85511] "error variable" "temp"
    (7625478 'move' error[7625476] nil[32])
    const-val ret_tmp[7625481]:string[244] "temp"
    (7625484 call createCopyingBuffer[1513110] call_tmp[7625460] default_arg_length[1918219] call_tmp[7625467] strict[37976] error[7625476] ret_tmp[7625481])
    (7625491 'move' call_tmp[7625474] ret_tmp[7625481])
    val errorExists[7625494]:bool[19] "temp"
    (7625496 'move' errorExists[7625494](7625498 '!=' error[7625476] nil[32]))
    if errorExists[7625494]
    {
      (7625503 '=' i_error_out[7625445] error[7625476])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625512] _endcreateCopyingBuffer[7625512]
    }
    (7625509 '=' ret[7625458] call_tmp[7625474])
    label _endcreateCopyingBuffer[7625512]
    (7625514 '=' i__retArg[7625451] ret[7625458])
    (5547574 'move' call_tmp[1917978] ret_tmp[5547571])
    val errorExists[7298744]:bool[19] "temp"
    (7298749 'move' errorExists[7298744](7298746 '!=' error[5501299] nil[32]))
    if errorExists[7298744]
    {
      gotoErrorHandling handler[5501300] handler[5501300]
    }
    const-val str[1917988]:string[244] "dead at end of block" "insert auto destroy"
    (1917990 'move' str[1917988] call_tmp[1917978])
    val call_tmp[1917994]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1918002]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1918023]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1918025]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1918038]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1918051]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1918053]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1918055]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1918075]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1918077]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1918084]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1918103]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1918128]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1918130 'move' call_tmp[1918128](1918133 call :[1918271] str[1917988] error[5501299]))
    val errorExists[7298752]:bool[19] "temp"
    (7298757 'move' errorExists[7298752](7298754 '!=' error[5501299] nil[32]))
    if errorExists[7298752]
    {
      ref i_x[7338970]:string[244] "temp"
      (7338974 'move' i_x[7338970](7338972 'set reference' str[1917988]))
      (7338978 call deinit[21354] i_x[7338970])
      gotoErrorHandling handler[5501300] handler[5501300]
    }
    (1918136 'move' ret[1917927] call_tmp[1918128])
    ref i_x[7338982]:string[244] "temp"
    (7338986 'move' i_x[7338982](7338984 'set reference' str[1917988]))
    (7338990 call deinit[21354] i_x[7338982])
    gotoReturn _end__command_line_cast[1918147] _end__command_line_cast[1918147]
    ref i_x[7338994]:string[244] "temp"
    (7338998 'move' i_x[7338994](7338996 'set reference' str[1917988]))
    (7339002 call deinit[21354] i_x[7338994])
    label handler[5501300]
    const-val shouldHandleError[5501331]:bool[19] "temp"
    val errorExists[7298760]:bool[19] "temp"
    (7298765 'move' errorExists[7298760](7298762 '!=' error[5501299] nil[32]))
    (5501335 'move' shouldHandleError[5501331] errorExists[7298760])
    if shouldHandleError[5501331]
    {
      (5501328 call chpl_uncaught_error[87456] error[5501299])
    }
    label _end__command_line_cast[1918147]
    (1918149 return ret[1917927])
  }
  function _command_line_cast[1920125](const in arg x[1920133]:c_ptrConst(int(8))[1466333]) : uint(64)[86] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478465]:uint(64)[86] "temp"
    val ret[1920135]:uint(64)[86] "dead after last mention" "RVV" "temp"
    val call_tmp[1920145]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920152]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920165]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920172]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501380]:Error[85511] "error variable" "temp"
    (5501403 'move' error[5501380] nil[32])
    const-val call_tmp[1920186]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1920374]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622313]:Error[85511] "temp"
    (7622317 'move' i_error_out[7622313](7622315 'set reference' error[5501380]))
    val ret[7622320]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622322]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622324 'move' call_tmp[7622322](7622326 'string_length_bytes' x[1920133]))
    const-val call_tmp[7622328]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622330]:owned IllegalArgumentError?[1471812] "temp"
    (7622333 call chpl_checkValue[1511482] call_tmp[7622322] ret_tmp[7622330])
    (7622336 'move' call_tmp[7622328] ret_tmp[7622330])
    val ifvar_borrow[7622339]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622341]:owned IllegalArgumentError?[1471812] "temp"
    (7622343 'move' i_arg[7622341](7622345 'set reference' call_tmp[7622328]))
    val call_tmp[7622347]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622349 'move' call_tmp[7622347](7622352 call borrow[1479886] i_arg[7622341]))
    (7622354 'move' ifvar_borrow[7622339] call_tmp[7622347])
    val coerce_tmp[7622357]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622359 'move' coerce_tmp[7622357](7622361 'cast' RootClass[236] call_tmp[7622347]))
    const-val call_tmp[7622364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622366 'move' call_tmp[7622364](7622368 '!=' coerce_tmp[7622357] nil[32]))
    if call_tmp[7622364]
    {
      const-val call_tmp[7622373]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622375]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622377 'move' coerce_tmp[7622375](7622379 'cast' Error[85511] ifvar_borrow[7622339]))
      val _virtual_method_tmp_[7622382]:int(32)[66] "temp"
      (7622384 'move' _virtual_method_tmp_[7622382](7622386 'getcid' coerce_tmp[7622375]))
      val ret_tmp[7622388]:string[244] "temp"
      (7622390 'virtual method call' message[85497] _virtual_method_tmp_[7622382] coerce_tmp[7622375] ret_tmp[7622388])
      (7622395 'move' call_tmp[7622373] ret_tmp[7622388])
      (7622399 call safeCastCheckHalt[440] call_tmp[7622373])
      ref i_x[7622401]:string[244] "temp"
      (7622403 'move' i_x[7622401](7622405 'set reference' call_tmp[7622373]))
      (7622408 call deinit[21354] i_x[7622401])
    }
    (7622412 call chpl__autoDestroy[3929258] call_tmp[7622328])
    const-val call_tmp[7622414]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622416 'move' call_tmp[7622414] call_tmp[7622322])
    (7622419 'move' ret[7622320] call_tmp[7622414])
    (1920381 'move' default_arg_length[1920374] ret[7622320])
    val errorExists[7298768]:bool[19] "temp"
    (7298773 'move' errorExists[7298768](7298770 '!=' error[5501380] nil[32]))
    if errorExists[7298768]
    {
      gotoErrorHandling handler[5501381] handler[5501381]
    }
    val default_arg_policy[1920385]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547577]:string[244] "temp"
    ref i_error_out[7625519]:Error[85511] "temp"
    (7625523 'move' i_error_out[7625519](7625521 'set reference' error[5501380]))
    ref i__retArg[7625525]:string[244] "temp"
    (7625529 'move' i__retArg[7625525](7625527 'set reference' ret_tmp[5547577]))
    const-val ret[7625532]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625534]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625536 'move' call_tmp[7625534](7625538 'cast' c_ptr(uint(8))[1466369] x[1920133]))
    const-val call_tmp[7625541]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625543 'move' call_tmp[7625541](7625545 '+' default_arg_length[1920374] 1))
    const-val call_tmp[7625548]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625550]:Error[85511] "error variable" "temp"
    (7625552 'move' error[7625550] nil[32])
    const-val ret_tmp[7625555]:string[244] "temp"
    (7625558 call createCopyingBuffer[1513110] call_tmp[7625534] default_arg_length[1920374] call_tmp[7625541] strict[37976] error[7625550] ret_tmp[7625555])
    (7625565 'move' call_tmp[7625548] ret_tmp[7625555])
    val errorExists[7625568]:bool[19] "temp"
    (7625570 'move' errorExists[7625568](7625572 '!=' error[7625550] nil[32]))
    if errorExists[7625568]
    {
      (7625577 '=' i_error_out[7625519] error[7625550])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625586] _endcreateCopyingBuffer[7625586]
    }
    (7625583 '=' ret[7625532] call_tmp[7625548])
    label _endcreateCopyingBuffer[7625586]
    (7625588 '=' i__retArg[7625525] ret[7625532])
    (5547580 'move' call_tmp[1920186] ret_tmp[5547577])
    val errorExists[7298776]:bool[19] "temp"
    (7298781 'move' errorExists[7298776](7298778 '!=' error[5501380] nil[32]))
    if errorExists[7298776]
    {
      gotoErrorHandling handler[5501381] handler[5501381]
    }
    const-val str[1920196]:string[244] "dead at end of block" "insert auto destroy"
    (1920198 'move' str[1920196] call_tmp[1920186])
    val call_tmp[1920202]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920210]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1920231]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1920233]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1920246]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1920259]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1920261]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1920263]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1920283]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1920285]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1920292]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920311]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1920336]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1920338 'move' call_tmp[1920336](1920341 call :[1918271] str[1920196] error[5501380]))
    val errorExists[7298784]:bool[19] "temp"
    (7298789 'move' errorExists[7298784](7298786 '!=' error[5501380] nil[32]))
    if errorExists[7298784]
    {
      ref i_x[7339198]:string[244] "temp"
      (7339202 'move' i_x[7339198](7339200 'set reference' str[1920196]))
      (7339206 call deinit[21354] i_x[7339198])
      gotoErrorHandling handler[5501381] handler[5501381]
    }
    (1920344 'move' ret[1920135] call_tmp[1920336])
    ref i_x[7339210]:string[244] "temp"
    (7339214 'move' i_x[7339210](7339212 'set reference' str[1920196]))
    (7339218 call deinit[21354] i_x[7339210])
    gotoReturn _end__command_line_cast[1920355] _end__command_line_cast[1920355]
    ref i_x[7339222]:string[244] "temp"
    (7339226 'move' i_x[7339222](7339224 'set reference' str[1920196]))
    (7339230 call deinit[21354] i_x[7339222])
    label handler[5501381]
    const-val shouldHandleError[5501412]:bool[19] "temp"
    val errorExists[7298792]:bool[19] "temp"
    (7298797 'move' errorExists[7298792](7298794 '!=' error[5501380] nil[32]))
    (5501416 'move' shouldHandleError[5501412] errorExists[7298792])
    if shouldHandleError[5501412]
    {
      (5501409 call chpl_uncaught_error[87456] error[5501380])
    }
    label _end__command_line_cast[1920355]
    (1920357 return ret[1920135])
  }
  function _command_line_cast[1920462](const in arg x[1920470]:c_ptrConst(int(8))[1466333], ref arg _retArg[5557595]:string[244]) : void[4] "command line setting" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478467]:string[244] "temp"
    const-val ret[1920472]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[1920482]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920489]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920502]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920509]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501420]:Error[85511] "error variable" "temp"
    (5501436 'move' error[5501420] nil[32])
    const-val call_tmp[1920523]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1920764]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622426]:Error[85511] "temp"
    (7622430 'move' i_error_out[7622426](7622428 'set reference' error[5501420]))
    val ret[7622433]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622435]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622437 'move' call_tmp[7622435](7622439 'string_length_bytes' x[1920470]))
    const-val call_tmp[7622441]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622443]:owned IllegalArgumentError?[1471812] "temp"
    (7622446 call chpl_checkValue[1511482] call_tmp[7622435] ret_tmp[7622443])
    (7622449 'move' call_tmp[7622441] ret_tmp[7622443])
    val ifvar_borrow[7622452]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622454]:owned IllegalArgumentError?[1471812] "temp"
    (7622456 'move' i_arg[7622454](7622458 'set reference' call_tmp[7622441]))
    val call_tmp[7622460]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622462 'move' call_tmp[7622460](7622465 call borrow[1479886] i_arg[7622454]))
    (7622467 'move' ifvar_borrow[7622452] call_tmp[7622460])
    val coerce_tmp[7622470]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622472 'move' coerce_tmp[7622470](7622474 'cast' RootClass[236] call_tmp[7622460]))
    const-val call_tmp[7622477]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622479 'move' call_tmp[7622477](7622481 '!=' coerce_tmp[7622470] nil[32]))
    if call_tmp[7622477]
    {
      const-val call_tmp[7622486]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622488]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622490 'move' coerce_tmp[7622488](7622492 'cast' Error[85511] ifvar_borrow[7622452]))
      val _virtual_method_tmp_[7622495]:int(32)[66] "temp"
      (7622497 'move' _virtual_method_tmp_[7622495](7622499 'getcid' coerce_tmp[7622488]))
      val ret_tmp[7622501]:string[244] "temp"
      (7622503 'virtual method call' message[85497] _virtual_method_tmp_[7622495] coerce_tmp[7622488] ret_tmp[7622501])
      (7622508 'move' call_tmp[7622486] ret_tmp[7622501])
      (7622512 call safeCastCheckHalt[440] call_tmp[7622486])
      ref i_x[7622514]:string[244] "temp"
      (7622516 'move' i_x[7622514](7622518 'set reference' call_tmp[7622486]))
      (7622521 call deinit[21354] i_x[7622514])
    }
    (7622525 call chpl__autoDestroy[3929258] call_tmp[7622441])
    const-val call_tmp[7622527]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622529 'move' call_tmp[7622527] call_tmp[7622435])
    (7622532 'move' ret[7622433] call_tmp[7622527])
    (1920771 'move' default_arg_length[1920764] ret[7622433])
    val errorExists[7298800]:bool[19] "temp"
    (7298805 'move' errorExists[7298800](7298802 '!=' error[5501420] nil[32]))
    if errorExists[7298800]
    {
      gotoErrorHandling handler[5501421] handler[5501421]
    }
    val default_arg_policy[1920775]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547583]:string[244] "temp"
    ref i_error_out[7625593]:Error[85511] "temp"
    (7625597 'move' i_error_out[7625593](7625595 'set reference' error[5501420]))
    ref i__retArg[7625599]:string[244] "temp"
    (7625603 'move' i__retArg[7625599](7625601 'set reference' ret_tmp[5547583]))
    const-val ret[7625606]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625608]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625610 'move' call_tmp[7625608](7625612 'cast' c_ptr(uint(8))[1466369] x[1920470]))
    const-val call_tmp[7625615]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625617 'move' call_tmp[7625615](7625619 '+' default_arg_length[1920764] 1))
    const-val call_tmp[7625622]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625624]:Error[85511] "error variable" "temp"
    (7625626 'move' error[7625624] nil[32])
    const-val ret_tmp[7625629]:string[244] "temp"
    (7625632 call createCopyingBuffer[1513110] call_tmp[7625608] default_arg_length[1920764] call_tmp[7625615] strict[37976] error[7625624] ret_tmp[7625629])
    (7625639 'move' call_tmp[7625622] ret_tmp[7625629])
    val errorExists[7625642]:bool[19] "temp"
    (7625644 'move' errorExists[7625642](7625646 '!=' error[7625624] nil[32]))
    if errorExists[7625642]
    {
      (7625651 '=' i_error_out[7625593] error[7625624])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625660] _endcreateCopyingBuffer[7625660]
    }
    (7625657 '=' ret[7625606] call_tmp[7625622])
    label _endcreateCopyingBuffer[7625660]
    (7625662 '=' i__retArg[7625599] ret[7625606])
    (5547586 'move' call_tmp[1920523] ret_tmp[5547583])
    val errorExists[7298808]:bool[19] "temp"
    (7298813 'move' errorExists[7298808](7298810 '!=' error[5501420] nil[32]))
    if errorExists[7298808]
    {
      gotoErrorHandling handler[5501421] handler[5501421]
    }
    const-val str[1920533]:string[244] "dead at end of block" "insert auto destroy"
    (1920535 'move' str[1920533] call_tmp[1920523])
    val call_tmp[1920539]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920547]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1920556 'move' ret[1920472] str[1920533])
    gotoReturn _end__command_line_cast[1920692] _end__command_line_cast[1920692]
    ref i_x[7339234]:string[244] "temp"
    (7339238 'move' i_x[7339234](7339236 'set reference' str[1920533]))
    (7339242 call deinit[21354] i_x[7339234])
    label handler[5501421]
    const-val shouldHandleError[5501445]:bool[19] "temp"
    val errorExists[7298816]:bool[19] "temp"
    (7298821 'move' errorExists[7298816](7298818 '!=' error[5501420] nil[32]))
    (5501449 'move' shouldHandleError[5501445] errorExists[7298816])
    if shouldHandleError[5501445]
    {
      (5501442 call chpl_uncaught_error[87456] error[5501420])
    }
    label _end__command_line_cast[1920692]
    (5557597 '=' _retArg[5557595] ret[1920472])
    (5557599 return _void[46])
  }
  function _command_line_cast[1920825](const in arg x[1920833]:c_ptrConst(int(8))[1466333], ref arg _retArg[5557607]:string[244]) : void[4] "command line setting" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478469]:string[244] "temp"
    const-val ret[1920835]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[1920845]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920852]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920865]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920872]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501453]:Error[85511] "error variable" "temp"
    (5501469 'move' error[5501453] nil[32])
    const-val call_tmp[1920886]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1921074]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622539]:Error[85511] "temp"
    (7622543 'move' i_error_out[7622539](7622541 'set reference' error[5501453]))
    val ret[7622546]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622548]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622550 'move' call_tmp[7622548](7622552 'string_length_bytes' x[1920833]))
    const-val call_tmp[7622554]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622556]:owned IllegalArgumentError?[1471812] "temp"
    (7622559 call chpl_checkValue[1511482] call_tmp[7622548] ret_tmp[7622556])
    (7622562 'move' call_tmp[7622554] ret_tmp[7622556])
    val ifvar_borrow[7622565]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622567]:owned IllegalArgumentError?[1471812] "temp"
    (7622569 'move' i_arg[7622567](7622571 'set reference' call_tmp[7622554]))
    val call_tmp[7622573]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622575 'move' call_tmp[7622573](7622578 call borrow[1479886] i_arg[7622567]))
    (7622580 'move' ifvar_borrow[7622565] call_tmp[7622573])
    val coerce_tmp[7622583]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622585 'move' coerce_tmp[7622583](7622587 'cast' RootClass[236] call_tmp[7622573]))
    const-val call_tmp[7622590]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622592 'move' call_tmp[7622590](7622594 '!=' coerce_tmp[7622583] nil[32]))
    if call_tmp[7622590]
    {
      const-val call_tmp[7622599]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622601]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622603 'move' coerce_tmp[7622601](7622605 'cast' Error[85511] ifvar_borrow[7622565]))
      val _virtual_method_tmp_[7622608]:int(32)[66] "temp"
      (7622610 'move' _virtual_method_tmp_[7622608](7622612 'getcid' coerce_tmp[7622601]))
      val ret_tmp[7622614]:string[244] "temp"
      (7622616 'virtual method call' message[85497] _virtual_method_tmp_[7622608] coerce_tmp[7622601] ret_tmp[7622614])
      (7622621 'move' call_tmp[7622599] ret_tmp[7622614])
      (7622625 call safeCastCheckHalt[440] call_tmp[7622599])
      ref i_x[7622627]:string[244] "temp"
      (7622629 'move' i_x[7622627](7622631 'set reference' call_tmp[7622599]))
      (7622634 call deinit[21354] i_x[7622627])
    }
    (7622638 call chpl__autoDestroy[3929258] call_tmp[7622554])
    const-val call_tmp[7622640]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622642 'move' call_tmp[7622640] call_tmp[7622548])
    (7622645 'move' ret[7622546] call_tmp[7622640])
    (1921081 'move' default_arg_length[1921074] ret[7622546])
    val errorExists[7298824]:bool[19] "temp"
    (7298829 'move' errorExists[7298824](7298826 '!=' error[5501453] nil[32]))
    if errorExists[7298824]
    {
      gotoErrorHandling handler[5501454] handler[5501454]
    }
    val default_arg_policy[1921085]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547589]:string[244] "temp"
    ref i_error_out[7625667]:Error[85511] "temp"
    (7625671 'move' i_error_out[7625667](7625669 'set reference' error[5501453]))
    ref i__retArg[7625673]:string[244] "temp"
    (7625677 'move' i__retArg[7625673](7625675 'set reference' ret_tmp[5547589]))
    const-val ret[7625680]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625682]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625684 'move' call_tmp[7625682](7625686 'cast' c_ptr(uint(8))[1466369] x[1920833]))
    const-val call_tmp[7625689]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625691 'move' call_tmp[7625689](7625693 '+' default_arg_length[1921074] 1))
    const-val call_tmp[7625696]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625698]:Error[85511] "error variable" "temp"
    (7625700 'move' error[7625698] nil[32])
    const-val ret_tmp[7625703]:string[244] "temp"
    (7625706 call createCopyingBuffer[1513110] call_tmp[7625682] default_arg_length[1921074] call_tmp[7625689] strict[37976] error[7625698] ret_tmp[7625703])
    (7625713 'move' call_tmp[7625696] ret_tmp[7625703])
    val errorExists[7625716]:bool[19] "temp"
    (7625718 'move' errorExists[7625716](7625720 '!=' error[7625698] nil[32]))
    if errorExists[7625716]
    {
      (7625725 '=' i_error_out[7625667] error[7625698])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625734] _endcreateCopyingBuffer[7625734]
    }
    (7625731 '=' ret[7625680] call_tmp[7625696])
    label _endcreateCopyingBuffer[7625734]
    (7625736 '=' i__retArg[7625673] ret[7625680])
    (5547592 'move' call_tmp[1920886] ret_tmp[5547589])
    val errorExists[7298832]:bool[19] "temp"
    (7298837 'move' errorExists[7298832](7298834 '!=' error[5501453] nil[32]))
    if errorExists[7298832]
    {
      gotoErrorHandling handler[5501454] handler[5501454]
    }
    const-val str[1920896]:string[244] "dead at end of block" "insert auto destroy"
    (1920898 'move' str[1920896] call_tmp[1920886])
    val call_tmp[1920902]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1920910]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1920919 'move' ret[1920835] str[1920896])
    gotoReturn _end__command_line_cast[1921055] _end__command_line_cast[1921055]
    ref i_x[7339246]:string[244] "temp"
    (7339250 'move' i_x[7339246](7339248 'set reference' str[1920896]))
    (7339254 call deinit[21354] i_x[7339246])
    label handler[5501454]
    const-val shouldHandleError[5501478]:bool[19] "temp"
    val errorExists[7298840]:bool[19] "temp"
    (7298845 'move' errorExists[7298840](7298842 '!=' error[5501453] nil[32]))
    (5501482 'move' shouldHandleError[5501478] errorExists[7298840])
    if shouldHandleError[5501478]
    {
      (5501475 call chpl_uncaught_error[87456] error[5501453])
    }
    label _end__command_line_cast[1921055]
    (5557609 '=' _retArg[5557607] ret[1920835])
    (5557611 return _void[46])
  }
  function _command_line_cast[1921135](const in arg x[1921143]:c_ptrConst(int(8))[1466333], ref arg _retArg[5557619]:string[244]) : void[4] "command line setting" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478471]:string[244] "temp"
    const-val ret[1921145]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[1921155]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1921162]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1921175]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1921182]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501486]:Error[85511] "error variable" "temp"
    (5501502 'move' error[5501486] nil[32])
    const-val call_tmp[1921196]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1921384]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622652]:Error[85511] "temp"
    (7622656 'move' i_error_out[7622652](7622654 'set reference' error[5501486]))
    val ret[7622659]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622661]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622663 'move' call_tmp[7622661](7622665 'string_length_bytes' x[1921143]))
    const-val call_tmp[7622667]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622669]:owned IllegalArgumentError?[1471812] "temp"
    (7622672 call chpl_checkValue[1511482] call_tmp[7622661] ret_tmp[7622669])
    (7622675 'move' call_tmp[7622667] ret_tmp[7622669])
    val ifvar_borrow[7622678]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622680]:owned IllegalArgumentError?[1471812] "temp"
    (7622682 'move' i_arg[7622680](7622684 'set reference' call_tmp[7622667]))
    val call_tmp[7622686]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622688 'move' call_tmp[7622686](7622691 call borrow[1479886] i_arg[7622680]))
    (7622693 'move' ifvar_borrow[7622678] call_tmp[7622686])
    val coerce_tmp[7622696]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622698 'move' coerce_tmp[7622696](7622700 'cast' RootClass[236] call_tmp[7622686]))
    const-val call_tmp[7622703]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622705 'move' call_tmp[7622703](7622707 '!=' coerce_tmp[7622696] nil[32]))
    if call_tmp[7622703]
    {
      const-val call_tmp[7622712]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622714]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622716 'move' coerce_tmp[7622714](7622718 'cast' Error[85511] ifvar_borrow[7622678]))
      val _virtual_method_tmp_[7622721]:int(32)[66] "temp"
      (7622723 'move' _virtual_method_tmp_[7622721](7622725 'getcid' coerce_tmp[7622714]))
      val ret_tmp[7622727]:string[244] "temp"
      (7622729 'virtual method call' message[85497] _virtual_method_tmp_[7622721] coerce_tmp[7622714] ret_tmp[7622727])
      (7622734 'move' call_tmp[7622712] ret_tmp[7622727])
      (7622738 call safeCastCheckHalt[440] call_tmp[7622712])
      ref i_x[7622740]:string[244] "temp"
      (7622742 'move' i_x[7622740](7622744 'set reference' call_tmp[7622712]))
      (7622747 call deinit[21354] i_x[7622740])
    }
    (7622751 call chpl__autoDestroy[3929258] call_tmp[7622667])
    const-val call_tmp[7622753]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622755 'move' call_tmp[7622753] call_tmp[7622661])
    (7622758 'move' ret[7622659] call_tmp[7622753])
    (1921391 'move' default_arg_length[1921384] ret[7622659])
    val errorExists[7298848]:bool[19] "temp"
    (7298853 'move' errorExists[7298848](7298850 '!=' error[5501486] nil[32]))
    if errorExists[7298848]
    {
      gotoErrorHandling handler[5501487] handler[5501487]
    }
    val default_arg_policy[1921395]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547595]:string[244] "temp"
    ref i_error_out[7625741]:Error[85511] "temp"
    (7625745 'move' i_error_out[7625741](7625743 'set reference' error[5501486]))
    ref i__retArg[7625747]:string[244] "temp"
    (7625751 'move' i__retArg[7625747](7625749 'set reference' ret_tmp[5547595]))
    const-val ret[7625754]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625756]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625758 'move' call_tmp[7625756](7625760 'cast' c_ptr(uint(8))[1466369] x[1921143]))
    const-val call_tmp[7625763]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625765 'move' call_tmp[7625763](7625767 '+' default_arg_length[1921384] 1))
    const-val call_tmp[7625770]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625772]:Error[85511] "error variable" "temp"
    (7625774 'move' error[7625772] nil[32])
    const-val ret_tmp[7625777]:string[244] "temp"
    (7625780 call createCopyingBuffer[1513110] call_tmp[7625756] default_arg_length[1921384] call_tmp[7625763] strict[37976] error[7625772] ret_tmp[7625777])
    (7625787 'move' call_tmp[7625770] ret_tmp[7625777])
    val errorExists[7625790]:bool[19] "temp"
    (7625792 'move' errorExists[7625790](7625794 '!=' error[7625772] nil[32]))
    if errorExists[7625790]
    {
      (7625799 '=' i_error_out[7625741] error[7625772])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625808] _endcreateCopyingBuffer[7625808]
    }
    (7625805 '=' ret[7625754] call_tmp[7625770])
    label _endcreateCopyingBuffer[7625808]
    (7625810 '=' i__retArg[7625747] ret[7625754])
    (5547598 'move' call_tmp[1921196] ret_tmp[5547595])
    val errorExists[7298856]:bool[19] "temp"
    (7298861 'move' errorExists[7298856](7298858 '!=' error[5501486] nil[32]))
    if errorExists[7298856]
    {
      gotoErrorHandling handler[5501487] handler[5501487]
    }
    const-val str[1921206]:string[244] "dead at end of block" "insert auto destroy"
    (1921208 'move' str[1921206] call_tmp[1921196])
    val call_tmp[1921212]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1921220]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1921229 'move' ret[1921145] str[1921206])
    gotoReturn _end__command_line_cast[1921365] _end__command_line_cast[1921365]
    ref i_x[7339258]:string[244] "temp"
    (7339262 'move' i_x[7339258](7339260 'set reference' str[1921206]))
    (7339266 call deinit[21354] i_x[7339258])
    label handler[5501487]
    const-val shouldHandleError[5501511]:bool[19] "temp"
    val errorExists[7298864]:bool[19] "temp"
    (7298869 'move' errorExists[7298864](7298866 '!=' error[5501486] nil[32]))
    (5501515 'move' shouldHandleError[5501511] errorExists[7298864])
    if shouldHandleError[5501511]
    {
      (5501508 call chpl_uncaught_error[87456] error[5501486])
    }
    label _end__command_line_cast[1921365]
    (5557621 '=' _retArg[5557619] ret[1921145])
    (5557623 return _void[46])
  }
  function _command_line_cast[1933077](const in arg x[1933085]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478477]:int(64)[10] "temp"
    val ret[1933087]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1933097]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933104]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933117]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933124]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501519]:Error[85511] "error variable" "temp"
    (5501542 'move' error[5501519] nil[32])
    const-val call_tmp[1933138]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1933326]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622765]:Error[85511] "temp"
    (7622769 'move' i_error_out[7622765](7622767 'set reference' error[5501519]))
    val ret[7622772]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622774]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622776 'move' call_tmp[7622774](7622778 'string_length_bytes' x[1933085]))
    const-val call_tmp[7622780]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622782]:owned IllegalArgumentError?[1471812] "temp"
    (7622785 call chpl_checkValue[1511482] call_tmp[7622774] ret_tmp[7622782])
    (7622788 'move' call_tmp[7622780] ret_tmp[7622782])
    val ifvar_borrow[7622791]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622793]:owned IllegalArgumentError?[1471812] "temp"
    (7622795 'move' i_arg[7622793](7622797 'set reference' call_tmp[7622780]))
    val call_tmp[7622799]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622801 'move' call_tmp[7622799](7622804 call borrow[1479886] i_arg[7622793]))
    (7622806 'move' ifvar_borrow[7622791] call_tmp[7622799])
    val coerce_tmp[7622809]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622811 'move' coerce_tmp[7622809](7622813 'cast' RootClass[236] call_tmp[7622799]))
    const-val call_tmp[7622816]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622818 'move' call_tmp[7622816](7622820 '!=' coerce_tmp[7622809] nil[32]))
    if call_tmp[7622816]
    {
      const-val call_tmp[7622825]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622827]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622829 'move' coerce_tmp[7622827](7622831 'cast' Error[85511] ifvar_borrow[7622791]))
      val _virtual_method_tmp_[7622834]:int(32)[66] "temp"
      (7622836 'move' _virtual_method_tmp_[7622834](7622838 'getcid' coerce_tmp[7622827]))
      val ret_tmp[7622840]:string[244] "temp"
      (7622842 'virtual method call' message[85497] _virtual_method_tmp_[7622834] coerce_tmp[7622827] ret_tmp[7622840])
      (7622847 'move' call_tmp[7622825] ret_tmp[7622840])
      (7622851 call safeCastCheckHalt[440] call_tmp[7622825])
      ref i_x[7622853]:string[244] "temp"
      (7622855 'move' i_x[7622853](7622857 'set reference' call_tmp[7622825]))
      (7622860 call deinit[21354] i_x[7622853])
    }
    (7622864 call chpl__autoDestroy[3929258] call_tmp[7622780])
    const-val call_tmp[7622866]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622868 'move' call_tmp[7622866] call_tmp[7622774])
    (7622871 'move' ret[7622772] call_tmp[7622866])
    (1933333 'move' default_arg_length[1933326] ret[7622772])
    val errorExists[7298872]:bool[19] "temp"
    (7298877 'move' errorExists[7298872](7298874 '!=' error[5501519] nil[32]))
    if errorExists[7298872]
    {
      gotoErrorHandling handler[5501520] handler[5501520]
    }
    val default_arg_policy[1933337]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547601]:string[244] "temp"
    ref i_error_out[7625815]:Error[85511] "temp"
    (7625819 'move' i_error_out[7625815](7625817 'set reference' error[5501519]))
    ref i__retArg[7625821]:string[244] "temp"
    (7625825 'move' i__retArg[7625821](7625823 'set reference' ret_tmp[5547601]))
    const-val ret[7625828]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625830]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625832 'move' call_tmp[7625830](7625834 'cast' c_ptr(uint(8))[1466369] x[1933085]))
    const-val call_tmp[7625837]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625839 'move' call_tmp[7625837](7625841 '+' default_arg_length[1933326] 1))
    const-val call_tmp[7625844]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625846]:Error[85511] "error variable" "temp"
    (7625848 'move' error[7625846] nil[32])
    const-val ret_tmp[7625851]:string[244] "temp"
    (7625854 call createCopyingBuffer[1513110] call_tmp[7625830] default_arg_length[1933326] call_tmp[7625837] strict[37976] error[7625846] ret_tmp[7625851])
    (7625861 'move' call_tmp[7625844] ret_tmp[7625851])
    val errorExists[7625864]:bool[19] "temp"
    (7625866 'move' errorExists[7625864](7625868 '!=' error[7625846] nil[32]))
    if errorExists[7625864]
    {
      (7625873 '=' i_error_out[7625815] error[7625846])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625882] _endcreateCopyingBuffer[7625882]
    }
    (7625879 '=' ret[7625828] call_tmp[7625844])
    label _endcreateCopyingBuffer[7625882]
    (7625884 '=' i__retArg[7625821] ret[7625828])
    (5547604 'move' call_tmp[1933138] ret_tmp[5547601])
    val errorExists[7298880]:bool[19] "temp"
    (7298885 'move' errorExists[7298880](7298882 '!=' error[5501519] nil[32]))
    if errorExists[7298880]
    {
      gotoErrorHandling handler[5501520] handler[5501520]
    }
    const-val str[1933148]:string[244] "dead at end of block" "insert auto destroy"
    (1933150 'move' str[1933148] call_tmp[1933138])
    val call_tmp[1933154]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933162]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933183]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1933185]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1933198]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933211]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1933213]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1933215]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933235]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1933237]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1933244]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933263]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1933288]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1933290 'move' call_tmp[1933288](1933293 call :[1751964] str[1933148] error[5501519]))
    val errorExists[7298888]:bool[19] "temp"
    (7298893 'move' errorExists[7298888](7298890 '!=' error[5501519] nil[32]))
    if errorExists[7298888]
    {
      ref i_x[7339306]:string[244] "temp"
      (7339310 'move' i_x[7339306](7339308 'set reference' str[1933148]))
      (7339314 call deinit[21354] i_x[7339306])
      gotoErrorHandling handler[5501520] handler[5501520]
    }
    (1933296 'move' ret[1933087] call_tmp[1933288])
    ref i_x[7339318]:string[244] "temp"
    (7339322 'move' i_x[7339318](7339320 'set reference' str[1933148]))
    (7339326 call deinit[21354] i_x[7339318])
    gotoReturn _end__command_line_cast[1933307] _end__command_line_cast[1933307]
    ref i_x[7339330]:string[244] "temp"
    (7339334 'move' i_x[7339330](7339332 'set reference' str[1933148]))
    (7339338 call deinit[21354] i_x[7339330])
    label handler[5501520]
    const-val shouldHandleError[5501551]:bool[19] "temp"
    val errorExists[7298896]:bool[19] "temp"
    (7298901 'move' errorExists[7298896](7298898 '!=' error[5501519] nil[32]))
    (5501555 'move' shouldHandleError[5501551] errorExists[7298896])
    if shouldHandleError[5501551]
    {
      (5501548 call chpl_uncaught_error[87456] error[5501519])
    }
    label _end__command_line_cast[1933307]
    (1933309 return ret[1933087])
  }
  function _command_line_cast[1933414](const in arg x[1933422]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478479]:bool[19] "temp"
    val ret[1933424]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1933434]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933441]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933454]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933461]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501559]:Error[85511] "error variable" "temp"
    (5501582 'move' error[5501559] nil[32])
    const-val call_tmp[1933475]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1933663]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622878]:Error[85511] "temp"
    (7622882 'move' i_error_out[7622878](7622880 'set reference' error[5501559]))
    val ret[7622885]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7622887]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622889 'move' call_tmp[7622887](7622891 'string_length_bytes' x[1933422]))
    const-val call_tmp[7622893]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7622895]:owned IllegalArgumentError?[1471812] "temp"
    (7622898 call chpl_checkValue[1511482] call_tmp[7622887] ret_tmp[7622895])
    (7622901 'move' call_tmp[7622893] ret_tmp[7622895])
    val ifvar_borrow[7622904]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7622906]:owned IllegalArgumentError?[1471812] "temp"
    (7622908 'move' i_arg[7622906](7622910 'set reference' call_tmp[7622893]))
    val call_tmp[7622912]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622914 'move' call_tmp[7622912](7622917 call borrow[1479886] i_arg[7622906]))
    (7622919 'move' ifvar_borrow[7622904] call_tmp[7622912])
    val coerce_tmp[7622922]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7622924 'move' coerce_tmp[7622922](7622926 'cast' RootClass[236] call_tmp[7622912]))
    const-val call_tmp[7622929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622931 'move' call_tmp[7622929](7622933 '!=' coerce_tmp[7622922] nil[32]))
    if call_tmp[7622929]
    {
      const-val call_tmp[7622938]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7622940]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7622942 'move' coerce_tmp[7622940](7622944 'cast' Error[85511] ifvar_borrow[7622904]))
      val _virtual_method_tmp_[7622947]:int(32)[66] "temp"
      (7622949 'move' _virtual_method_tmp_[7622947](7622951 'getcid' coerce_tmp[7622940]))
      val ret_tmp[7622953]:string[244] "temp"
      (7622955 'virtual method call' message[85497] _virtual_method_tmp_[7622947] coerce_tmp[7622940] ret_tmp[7622953])
      (7622960 'move' call_tmp[7622938] ret_tmp[7622953])
      (7622964 call safeCastCheckHalt[440] call_tmp[7622938])
      ref i_x[7622966]:string[244] "temp"
      (7622968 'move' i_x[7622966](7622970 'set reference' call_tmp[7622938]))
      (7622973 call deinit[21354] i_x[7622966])
    }
    (7622977 call chpl__autoDestroy[3929258] call_tmp[7622893])
    const-val call_tmp[7622979]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7622981 'move' call_tmp[7622979] call_tmp[7622887])
    (7622984 'move' ret[7622885] call_tmp[7622979])
    (1933670 'move' default_arg_length[1933663] ret[7622885])
    val errorExists[7298904]:bool[19] "temp"
    (7298909 'move' errorExists[7298904](7298906 '!=' error[5501559] nil[32]))
    if errorExists[7298904]
    {
      gotoErrorHandling handler[5501560] handler[5501560]
    }
    val default_arg_policy[1933674]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547607]:string[244] "temp"
    ref i_error_out[7625889]:Error[85511] "temp"
    (7625893 'move' i_error_out[7625889](7625891 'set reference' error[5501559]))
    ref i__retArg[7625895]:string[244] "temp"
    (7625899 'move' i__retArg[7625895](7625897 'set reference' ret_tmp[5547607]))
    const-val ret[7625902]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625904]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625906 'move' call_tmp[7625904](7625908 'cast' c_ptr(uint(8))[1466369] x[1933422]))
    const-val call_tmp[7625911]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625913 'move' call_tmp[7625911](7625915 '+' default_arg_length[1933663] 1))
    const-val call_tmp[7625918]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625920]:Error[85511] "error variable" "temp"
    (7625922 'move' error[7625920] nil[32])
    const-val ret_tmp[7625925]:string[244] "temp"
    (7625928 call createCopyingBuffer[1513110] call_tmp[7625904] default_arg_length[1933663] call_tmp[7625911] strict[37976] error[7625920] ret_tmp[7625925])
    (7625935 'move' call_tmp[7625918] ret_tmp[7625925])
    val errorExists[7625938]:bool[19] "temp"
    (7625940 'move' errorExists[7625938](7625942 '!=' error[7625920] nil[32]))
    if errorExists[7625938]
    {
      (7625947 '=' i_error_out[7625889] error[7625920])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7625956] _endcreateCopyingBuffer[7625956]
    }
    (7625953 '=' ret[7625902] call_tmp[7625918])
    label _endcreateCopyingBuffer[7625956]
    (7625958 '=' i__retArg[7625895] ret[7625902])
    (5547610 'move' call_tmp[1933475] ret_tmp[5547607])
    val errorExists[7298912]:bool[19] "temp"
    (7298917 'move' errorExists[7298912](7298914 '!=' error[5501559] nil[32]))
    if errorExists[7298912]
    {
      gotoErrorHandling handler[5501560] handler[5501560]
    }
    const-val str[1933485]:string[244] "dead at end of block" "insert auto destroy"
    (1933487 'move' str[1933485] call_tmp[1933475])
    val call_tmp[1933491]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933499]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933520]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1933522]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1933535]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933548]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1933550]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1933552]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933572]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1933574]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1933581]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933600]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1933625]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1933627 'move' call_tmp[1933625](1933630 call :[16582] str[1933485] error[5501559]))
    val errorExists[7298920]:bool[19] "temp"
    (7298925 'move' errorExists[7298920](7298922 '!=' error[5501559] nil[32]))
    if errorExists[7298920]
    {
      ref i_x[7339342]:string[244] "temp"
      (7339346 'move' i_x[7339342](7339344 'set reference' str[1933485]))
      (7339350 call deinit[21354] i_x[7339342])
      gotoErrorHandling handler[5501560] handler[5501560]
    }
    (1933633 'move' ret[1933424] call_tmp[1933625])
    ref i_x[7339354]:string[244] "temp"
    (7339358 'move' i_x[7339354](7339356 'set reference' str[1933485]))
    (7339362 call deinit[21354] i_x[7339354])
    gotoReturn _end__command_line_cast[1933644] _end__command_line_cast[1933644]
    ref i_x[7339366]:string[244] "temp"
    (7339370 'move' i_x[7339366](7339368 'set reference' str[1933485]))
    (7339374 call deinit[21354] i_x[7339366])
    label handler[5501560]
    const-val shouldHandleError[5501591]:bool[19] "temp"
    val errorExists[7298928]:bool[19] "temp"
    (7298933 'move' errorExists[7298928](7298930 '!=' error[5501559] nil[32]))
    (5501595 'move' shouldHandleError[5501591] errorExists[7298928])
    if shouldHandleError[5501591]
    {
      (5501588 call chpl_uncaught_error[87456] error[5501559])
    }
    label _end__command_line_cast[1933644]
    (1933646 return ret[1933424])
  }
  function _command_line_cast[1933751](const in arg x[1933759]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478481]:int(64)[10] "temp"
    val ret[1933761]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1933771]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933778]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933791]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933798]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501599]:Error[85511] "error variable" "temp"
    (5501622 'move' error[5501599] nil[32])
    const-val call_tmp[1933812]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1934000]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7622991]:Error[85511] "temp"
    (7622995 'move' i_error_out[7622991](7622993 'set reference' error[5501599]))
    val ret[7622998]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623000]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623002 'move' call_tmp[7623000](7623004 'string_length_bytes' x[1933759]))
    const-val call_tmp[7623006]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623008]:owned IllegalArgumentError?[1471812] "temp"
    (7623011 call chpl_checkValue[1511482] call_tmp[7623000] ret_tmp[7623008])
    (7623014 'move' call_tmp[7623006] ret_tmp[7623008])
    val ifvar_borrow[7623017]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623019]:owned IllegalArgumentError?[1471812] "temp"
    (7623021 'move' i_arg[7623019](7623023 'set reference' call_tmp[7623006]))
    val call_tmp[7623025]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623027 'move' call_tmp[7623025](7623030 call borrow[1479886] i_arg[7623019]))
    (7623032 'move' ifvar_borrow[7623017] call_tmp[7623025])
    val coerce_tmp[7623035]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623037 'move' coerce_tmp[7623035](7623039 'cast' RootClass[236] call_tmp[7623025]))
    const-val call_tmp[7623042]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623044 'move' call_tmp[7623042](7623046 '!=' coerce_tmp[7623035] nil[32]))
    if call_tmp[7623042]
    {
      const-val call_tmp[7623051]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623053]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623055 'move' coerce_tmp[7623053](7623057 'cast' Error[85511] ifvar_borrow[7623017]))
      val _virtual_method_tmp_[7623060]:int(32)[66] "temp"
      (7623062 'move' _virtual_method_tmp_[7623060](7623064 'getcid' coerce_tmp[7623053]))
      val ret_tmp[7623066]:string[244] "temp"
      (7623068 'virtual method call' message[85497] _virtual_method_tmp_[7623060] coerce_tmp[7623053] ret_tmp[7623066])
      (7623073 'move' call_tmp[7623051] ret_tmp[7623066])
      (7623077 call safeCastCheckHalt[440] call_tmp[7623051])
      ref i_x[7623079]:string[244] "temp"
      (7623081 'move' i_x[7623079](7623083 'set reference' call_tmp[7623051]))
      (7623086 call deinit[21354] i_x[7623079])
    }
    (7623090 call chpl__autoDestroy[3929258] call_tmp[7623006])
    const-val call_tmp[7623092]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623094 'move' call_tmp[7623092] call_tmp[7623000])
    (7623097 'move' ret[7622998] call_tmp[7623092])
    (1934007 'move' default_arg_length[1934000] ret[7622998])
    val errorExists[7298936]:bool[19] "temp"
    (7298941 'move' errorExists[7298936](7298938 '!=' error[5501599] nil[32]))
    if errorExists[7298936]
    {
      gotoErrorHandling handler[5501600] handler[5501600]
    }
    val default_arg_policy[1934011]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547613]:string[244] "temp"
    ref i_error_out[7625963]:Error[85511] "temp"
    (7625967 'move' i_error_out[7625963](7625965 'set reference' error[5501599]))
    ref i__retArg[7625969]:string[244] "temp"
    (7625973 'move' i__retArg[7625969](7625971 'set reference' ret_tmp[5547613]))
    const-val ret[7625976]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7625978]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625980 'move' call_tmp[7625978](7625982 'cast' c_ptr(uint(8))[1466369] x[1933759]))
    const-val call_tmp[7625985]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7625987 'move' call_tmp[7625985](7625989 '+' default_arg_length[1934000] 1))
    const-val call_tmp[7625992]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7625994]:Error[85511] "error variable" "temp"
    (7625996 'move' error[7625994] nil[32])
    const-val ret_tmp[7625999]:string[244] "temp"
    (7626002 call createCopyingBuffer[1513110] call_tmp[7625978] default_arg_length[1934000] call_tmp[7625985] strict[37976] error[7625994] ret_tmp[7625999])
    (7626009 'move' call_tmp[7625992] ret_tmp[7625999])
    val errorExists[7626012]:bool[19] "temp"
    (7626014 'move' errorExists[7626012](7626016 '!=' error[7625994] nil[32]))
    if errorExists[7626012]
    {
      (7626021 '=' i_error_out[7625963] error[7625994])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626030] _endcreateCopyingBuffer[7626030]
    }
    (7626027 '=' ret[7625976] call_tmp[7625992])
    label _endcreateCopyingBuffer[7626030]
    (7626032 '=' i__retArg[7625969] ret[7625976])
    (5547616 'move' call_tmp[1933812] ret_tmp[5547613])
    val errorExists[7298944]:bool[19] "temp"
    (7298949 'move' errorExists[7298944](7298946 '!=' error[5501599] nil[32]))
    if errorExists[7298944]
    {
      gotoErrorHandling handler[5501600] handler[5501600]
    }
    const-val str[1933822]:string[244] "dead at end of block" "insert auto destroy"
    (1933824 'move' str[1933822] call_tmp[1933812])
    val call_tmp[1933828]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933836]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933857]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1933859]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1933872]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933885]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1933887]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1933889]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1933909]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1933911]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1933918]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1933937]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1933962]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1933964 'move' call_tmp[1933962](1933967 call :[1751964] str[1933822] error[5501599]))
    val errorExists[7298952]:bool[19] "temp"
    (7298957 'move' errorExists[7298952](7298954 '!=' error[5501599] nil[32]))
    if errorExists[7298952]
    {
      ref i_x[7339378]:string[244] "temp"
      (7339382 'move' i_x[7339378](7339380 'set reference' str[1933822]))
      (7339386 call deinit[21354] i_x[7339378])
      gotoErrorHandling handler[5501600] handler[5501600]
    }
    (1933970 'move' ret[1933761] call_tmp[1933962])
    ref i_x[7339390]:string[244] "temp"
    (7339394 'move' i_x[7339390](7339392 'set reference' str[1933822]))
    (7339398 call deinit[21354] i_x[7339390])
    gotoReturn _end__command_line_cast[1933981] _end__command_line_cast[1933981]
    ref i_x[7339402]:string[244] "temp"
    (7339406 'move' i_x[7339402](7339404 'set reference' str[1933822]))
    (7339410 call deinit[21354] i_x[7339402])
    label handler[5501600]
    const-val shouldHandleError[5501631]:bool[19] "temp"
    val errorExists[7298960]:bool[19] "temp"
    (7298965 'move' errorExists[7298960](7298962 '!=' error[5501599] nil[32]))
    (5501635 'move' shouldHandleError[5501631] errorExists[7298960])
    if shouldHandleError[5501631]
    {
      (5501628 call chpl_uncaught_error[87456] error[5501599])
    }
    label _end__command_line_cast[1933981]
    (1933983 return ret[1933761])
  }
  function _command_line_cast[1934107](const in arg x[1934115]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478483]:bool[19] "temp"
    val ret[1934117]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1934127]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934134]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934147]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934154]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501639]:Error[85511] "error variable" "temp"
    (5501662 'move' error[5501639] nil[32])
    const-val call_tmp[1934168]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1934356]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623104]:Error[85511] "temp"
    (7623108 'move' i_error_out[7623104](7623106 'set reference' error[5501639]))
    val ret[7623111]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623113]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623115 'move' call_tmp[7623113](7623117 'string_length_bytes' x[1934115]))
    const-val call_tmp[7623119]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623121]:owned IllegalArgumentError?[1471812] "temp"
    (7623124 call chpl_checkValue[1511482] call_tmp[7623113] ret_tmp[7623121])
    (7623127 'move' call_tmp[7623119] ret_tmp[7623121])
    val ifvar_borrow[7623130]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623132]:owned IllegalArgumentError?[1471812] "temp"
    (7623134 'move' i_arg[7623132](7623136 'set reference' call_tmp[7623119]))
    val call_tmp[7623138]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623140 'move' call_tmp[7623138](7623143 call borrow[1479886] i_arg[7623132]))
    (7623145 'move' ifvar_borrow[7623130] call_tmp[7623138])
    val coerce_tmp[7623148]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623150 'move' coerce_tmp[7623148](7623152 'cast' RootClass[236] call_tmp[7623138]))
    const-val call_tmp[7623155]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623157 'move' call_tmp[7623155](7623159 '!=' coerce_tmp[7623148] nil[32]))
    if call_tmp[7623155]
    {
      const-val call_tmp[7623164]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623166]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623168 'move' coerce_tmp[7623166](7623170 'cast' Error[85511] ifvar_borrow[7623130]))
      val _virtual_method_tmp_[7623173]:int(32)[66] "temp"
      (7623175 'move' _virtual_method_tmp_[7623173](7623177 'getcid' coerce_tmp[7623166]))
      val ret_tmp[7623179]:string[244] "temp"
      (7623181 'virtual method call' message[85497] _virtual_method_tmp_[7623173] coerce_tmp[7623166] ret_tmp[7623179])
      (7623186 'move' call_tmp[7623164] ret_tmp[7623179])
      (7623190 call safeCastCheckHalt[440] call_tmp[7623164])
      ref i_x[7623192]:string[244] "temp"
      (7623194 'move' i_x[7623192](7623196 'set reference' call_tmp[7623164]))
      (7623199 call deinit[21354] i_x[7623192])
    }
    (7623203 call chpl__autoDestroy[3929258] call_tmp[7623119])
    const-val call_tmp[7623205]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623207 'move' call_tmp[7623205] call_tmp[7623113])
    (7623210 'move' ret[7623111] call_tmp[7623205])
    (1934363 'move' default_arg_length[1934356] ret[7623111])
    val errorExists[7298968]:bool[19] "temp"
    (7298973 'move' errorExists[7298968](7298970 '!=' error[5501639] nil[32]))
    if errorExists[7298968]
    {
      gotoErrorHandling handler[5501640] handler[5501640]
    }
    val default_arg_policy[1934367]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547619]:string[244] "temp"
    ref i_error_out[7626037]:Error[85511] "temp"
    (7626041 'move' i_error_out[7626037](7626039 'set reference' error[5501639]))
    ref i__retArg[7626043]:string[244] "temp"
    (7626047 'move' i__retArg[7626043](7626045 'set reference' ret_tmp[5547619]))
    const-val ret[7626050]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626052]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626054 'move' call_tmp[7626052](7626056 'cast' c_ptr(uint(8))[1466369] x[1934115]))
    const-val call_tmp[7626059]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626061 'move' call_tmp[7626059](7626063 '+' default_arg_length[1934356] 1))
    const-val call_tmp[7626066]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626068]:Error[85511] "error variable" "temp"
    (7626070 'move' error[7626068] nil[32])
    const-val ret_tmp[7626073]:string[244] "temp"
    (7626076 call createCopyingBuffer[1513110] call_tmp[7626052] default_arg_length[1934356] call_tmp[7626059] strict[37976] error[7626068] ret_tmp[7626073])
    (7626083 'move' call_tmp[7626066] ret_tmp[7626073])
    val errorExists[7626086]:bool[19] "temp"
    (7626088 'move' errorExists[7626086](7626090 '!=' error[7626068] nil[32]))
    if errorExists[7626086]
    {
      (7626095 '=' i_error_out[7626037] error[7626068])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626104] _endcreateCopyingBuffer[7626104]
    }
    (7626101 '=' ret[7626050] call_tmp[7626066])
    label _endcreateCopyingBuffer[7626104]
    (7626106 '=' i__retArg[7626043] ret[7626050])
    (5547622 'move' call_tmp[1934168] ret_tmp[5547619])
    val errorExists[7298976]:bool[19] "temp"
    (7298981 'move' errorExists[7298976](7298978 '!=' error[5501639] nil[32]))
    if errorExists[7298976]
    {
      gotoErrorHandling handler[5501640] handler[5501640]
    }
    const-val str[1934178]:string[244] "dead at end of block" "insert auto destroy"
    (1934180 'move' str[1934178] call_tmp[1934168])
    val call_tmp[1934184]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934192]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1934213]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1934215]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1934228]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1934241]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1934243]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1934245]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1934265]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1934267]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1934274]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934293]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1934318]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1934320 'move' call_tmp[1934318](1934323 call :[16582] str[1934178] error[5501639]))
    val errorExists[7298984]:bool[19] "temp"
    (7298989 'move' errorExists[7298984](7298986 '!=' error[5501639] nil[32]))
    if errorExists[7298984]
    {
      ref i_x[7339414]:string[244] "temp"
      (7339418 'move' i_x[7339414](7339416 'set reference' str[1934178]))
      (7339422 call deinit[21354] i_x[7339414])
      gotoErrorHandling handler[5501640] handler[5501640]
    }
    (1934326 'move' ret[1934117] call_tmp[1934318])
    ref i_x[7339426]:string[244] "temp"
    (7339430 'move' i_x[7339426](7339428 'set reference' str[1934178]))
    (7339434 call deinit[21354] i_x[7339426])
    gotoReturn _end__command_line_cast[1934337] _end__command_line_cast[1934337]
    ref i_x[7339438]:string[244] "temp"
    (7339442 'move' i_x[7339438](7339440 'set reference' str[1934178]))
    (7339446 call deinit[21354] i_x[7339438])
    label handler[5501640]
    const-val shouldHandleError[5501671]:bool[19] "temp"
    val errorExists[7298992]:bool[19] "temp"
    (7298997 'move' errorExists[7298992](7298994 '!=' error[5501639] nil[32]))
    (5501675 'move' shouldHandleError[5501671] errorExists[7298992])
    if shouldHandleError[5501671]
    {
      (5501668 call chpl_uncaught_error[87456] error[5501639])
    }
    label _end__command_line_cast[1934337]
    (1934339 return ret[1934117])
  }
  function _command_line_cast[1934447](const in arg x[1934455]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5478485]:bool[19] "temp"
    val ret[1934457]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[1934467]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934474]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934487]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934494]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5501679]:Error[85511] "error variable" "temp"
    (5501702 'move' error[5501679] nil[32])
    const-val call_tmp[1934508]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1934696]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623217]:Error[85511] "temp"
    (7623221 'move' i_error_out[7623217](7623219 'set reference' error[5501679]))
    val ret[7623224]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623226]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623228 'move' call_tmp[7623226](7623230 'string_length_bytes' x[1934455]))
    const-val call_tmp[7623232]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623234]:owned IllegalArgumentError?[1471812] "temp"
    (7623237 call chpl_checkValue[1511482] call_tmp[7623226] ret_tmp[7623234])
    (7623240 'move' call_tmp[7623232] ret_tmp[7623234])
    val ifvar_borrow[7623243]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623245]:owned IllegalArgumentError?[1471812] "temp"
    (7623247 'move' i_arg[7623245](7623249 'set reference' call_tmp[7623232]))
    val call_tmp[7623251]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623253 'move' call_tmp[7623251](7623256 call borrow[1479886] i_arg[7623245]))
    (7623258 'move' ifvar_borrow[7623243] call_tmp[7623251])
    val coerce_tmp[7623261]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623263 'move' coerce_tmp[7623261](7623265 'cast' RootClass[236] call_tmp[7623251]))
    const-val call_tmp[7623268]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623270 'move' call_tmp[7623268](7623272 '!=' coerce_tmp[7623261] nil[32]))
    if call_tmp[7623268]
    {
      const-val call_tmp[7623277]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623279]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623281 'move' coerce_tmp[7623279](7623283 'cast' Error[85511] ifvar_borrow[7623243]))
      val _virtual_method_tmp_[7623286]:int(32)[66] "temp"
      (7623288 'move' _virtual_method_tmp_[7623286](7623290 'getcid' coerce_tmp[7623279]))
      val ret_tmp[7623292]:string[244] "temp"
      (7623294 'virtual method call' message[85497] _virtual_method_tmp_[7623286] coerce_tmp[7623279] ret_tmp[7623292])
      (7623299 'move' call_tmp[7623277] ret_tmp[7623292])
      (7623303 call safeCastCheckHalt[440] call_tmp[7623277])
      ref i_x[7623305]:string[244] "temp"
      (7623307 'move' i_x[7623305](7623309 'set reference' call_tmp[7623277]))
      (7623312 call deinit[21354] i_x[7623305])
    }
    (7623316 call chpl__autoDestroy[3929258] call_tmp[7623232])
    const-val call_tmp[7623318]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623320 'move' call_tmp[7623318] call_tmp[7623226])
    (7623323 'move' ret[7623224] call_tmp[7623318])
    (1934703 'move' default_arg_length[1934696] ret[7623224])
    val errorExists[7299000]:bool[19] "temp"
    (7299005 'move' errorExists[7299000](7299002 '!=' error[5501679] nil[32]))
    if errorExists[7299000]
    {
      gotoErrorHandling handler[5501680] handler[5501680]
    }
    val default_arg_policy[1934707]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547625]:string[244] "temp"
    ref i_error_out[7626111]:Error[85511] "temp"
    (7626115 'move' i_error_out[7626111](7626113 'set reference' error[5501679]))
    ref i__retArg[7626117]:string[244] "temp"
    (7626121 'move' i__retArg[7626117](7626119 'set reference' ret_tmp[5547625]))
    const-val ret[7626124]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626126]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626128 'move' call_tmp[7626126](7626130 'cast' c_ptr(uint(8))[1466369] x[1934455]))
    const-val call_tmp[7626133]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626135 'move' call_tmp[7626133](7626137 '+' default_arg_length[1934696] 1))
    const-val call_tmp[7626140]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626142]:Error[85511] "error variable" "temp"
    (7626144 'move' error[7626142] nil[32])
    const-val ret_tmp[7626147]:string[244] "temp"
    (7626150 call createCopyingBuffer[1513110] call_tmp[7626126] default_arg_length[1934696] call_tmp[7626133] strict[37976] error[7626142] ret_tmp[7626147])
    (7626157 'move' call_tmp[7626140] ret_tmp[7626147])
    val errorExists[7626160]:bool[19] "temp"
    (7626162 'move' errorExists[7626160](7626164 '!=' error[7626142] nil[32]))
    if errorExists[7626160]
    {
      (7626169 '=' i_error_out[7626111] error[7626142])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626178] _endcreateCopyingBuffer[7626178]
    }
    (7626175 '=' ret[7626124] call_tmp[7626140])
    label _endcreateCopyingBuffer[7626178]
    (7626180 '=' i__retArg[7626117] ret[7626124])
    (5547628 'move' call_tmp[1934508] ret_tmp[5547625])
    val errorExists[7299008]:bool[19] "temp"
    (7299013 'move' errorExists[7299008](7299010 '!=' error[5501679] nil[32]))
    if errorExists[7299008]
    {
      gotoErrorHandling handler[5501680] handler[5501680]
    }
    const-val str[1934518]:string[244] "dead at end of block" "insert auto destroy"
    (1934520 'move' str[1934518] call_tmp[1934508])
    val call_tmp[1934524]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934532]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1934553]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1934555]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1934568]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1934581]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[1934583]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1934585]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1934605]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[1934607]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1934614]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1934633]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[1934658]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1934660 'move' call_tmp[1934658](1934663 call :[16582] str[1934518] error[5501679]))
    val errorExists[7299016]:bool[19] "temp"
    (7299021 'move' errorExists[7299016](7299018 '!=' error[5501679] nil[32]))
    if errorExists[7299016]
    {
      ref i_x[7339450]:string[244] "temp"
      (7339454 'move' i_x[7339450](7339452 'set reference' str[1934518]))
      (7339458 call deinit[21354] i_x[7339450])
      gotoErrorHandling handler[5501680] handler[5501680]
    }
    (1934666 'move' ret[1934457] call_tmp[1934658])
    ref i_x[7339462]:string[244] "temp"
    (7339466 'move' i_x[7339462](7339464 'set reference' str[1934518]))
    (7339470 call deinit[21354] i_x[7339462])
    gotoReturn _end__command_line_cast[1934677] _end__command_line_cast[1934677]
    ref i_x[7339474]:string[244] "temp"
    (7339478 'move' i_x[7339474](7339476 'set reference' str[1934518]))
    (7339482 call deinit[21354] i_x[7339474])
    label handler[5501680]
    const-val shouldHandleError[5501711]:bool[19] "temp"
    val errorExists[7299024]:bool[19] "temp"
    (7299029 'move' errorExists[7299024](7299026 '!=' error[5501679] nil[32]))
    (5501715 'move' shouldHandleError[5501711] errorExists[7299024])
    if shouldHandleError[5501711]
    {
      (5501708 call chpl_uncaught_error[87456] error[5501679])
    }
    label _end__command_line_cast[1934677]
    (1934679 return ret[1934457])
  }
  function _command_line_cast[3715887](const in arg x[3715895]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5480422]:int(64)[10] "temp"
    val ret[3715897]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[3715907]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3715914]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3715927]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3715934]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5518329]:Error[85511] "error variable" "temp"
    (5518352 'move' error[5518329] nil[32])
    const-val call_tmp[3715948]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[3716136]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623330]:Error[85511] "temp"
    (7623334 'move' i_error_out[7623330](7623332 'set reference' error[5518329]))
    val ret[7623337]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623339]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623341 'move' call_tmp[7623339](7623343 'string_length_bytes' x[3715895]))
    const-val call_tmp[7623345]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623347]:owned IllegalArgumentError?[1471812] "temp"
    (7623350 call chpl_checkValue[1511482] call_tmp[7623339] ret_tmp[7623347])
    (7623353 'move' call_tmp[7623345] ret_tmp[7623347])
    val ifvar_borrow[7623356]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623358]:owned IllegalArgumentError?[1471812] "temp"
    (7623360 'move' i_arg[7623358](7623362 'set reference' call_tmp[7623345]))
    val call_tmp[7623364]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623366 'move' call_tmp[7623364](7623369 call borrow[1479886] i_arg[7623358]))
    (7623371 'move' ifvar_borrow[7623356] call_tmp[7623364])
    val coerce_tmp[7623374]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623376 'move' coerce_tmp[7623374](7623378 'cast' RootClass[236] call_tmp[7623364]))
    const-val call_tmp[7623381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623383 'move' call_tmp[7623381](7623385 '!=' coerce_tmp[7623374] nil[32]))
    if call_tmp[7623381]
    {
      const-val call_tmp[7623390]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623392]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623394 'move' coerce_tmp[7623392](7623396 'cast' Error[85511] ifvar_borrow[7623356]))
      val _virtual_method_tmp_[7623399]:int(32)[66] "temp"
      (7623401 'move' _virtual_method_tmp_[7623399](7623403 'getcid' coerce_tmp[7623392]))
      val ret_tmp[7623405]:string[244] "temp"
      (7623407 'virtual method call' message[85497] _virtual_method_tmp_[7623399] coerce_tmp[7623392] ret_tmp[7623405])
      (7623412 'move' call_tmp[7623390] ret_tmp[7623405])
      (7623416 call safeCastCheckHalt[440] call_tmp[7623390])
      ref i_x[7623418]:string[244] "temp"
      (7623420 'move' i_x[7623418](7623422 'set reference' call_tmp[7623390]))
      (7623425 call deinit[21354] i_x[7623418])
    }
    (7623429 call chpl__autoDestroy[3929258] call_tmp[7623345])
    const-val call_tmp[7623431]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623433 'move' call_tmp[7623431] call_tmp[7623339])
    (7623436 'move' ret[7623337] call_tmp[7623431])
    (3716143 'move' default_arg_length[3716136] ret[7623337])
    val errorExists[7306560]:bool[19] "temp"
    (7306565 'move' errorExists[7306560](7306562 '!=' error[5518329] nil[32]))
    if errorExists[7306560]
    {
      gotoErrorHandling handler[5518330] handler[5518330]
    }
    val default_arg_policy[3716147]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547649]:string[244] "temp"
    ref i_error_out[7626407]:Error[85511] "temp"
    (7626411 'move' i_error_out[7626407](7626409 'set reference' error[5518329]))
    ref i__retArg[7626413]:string[244] "temp"
    (7626417 'move' i__retArg[7626413](7626415 'set reference' ret_tmp[5547649]))
    const-val ret[7626420]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626422]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626424 'move' call_tmp[7626422](7626426 'cast' c_ptr(uint(8))[1466369] x[3715895]))
    const-val call_tmp[7626429]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626431 'move' call_tmp[7626429](7626433 '+' default_arg_length[3716136] 1))
    const-val call_tmp[7626436]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626438]:Error[85511] "error variable" "temp"
    (7626440 'move' error[7626438] nil[32])
    const-val ret_tmp[7626443]:string[244] "temp"
    (7626446 call createCopyingBuffer[1513110] call_tmp[7626422] default_arg_length[3716136] call_tmp[7626429] strict[37976] error[7626438] ret_tmp[7626443])
    (7626453 'move' call_tmp[7626436] ret_tmp[7626443])
    val errorExists[7626456]:bool[19] "temp"
    (7626458 'move' errorExists[7626456](7626460 '!=' error[7626438] nil[32]))
    if errorExists[7626456]
    {
      (7626465 '=' i_error_out[7626407] error[7626438])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626474] _endcreateCopyingBuffer[7626474]
    }
    (7626471 '=' ret[7626420] call_tmp[7626436])
    label _endcreateCopyingBuffer[7626474]
    (7626476 '=' i__retArg[7626413] ret[7626420])
    (5547652 'move' call_tmp[3715948] ret_tmp[5547649])
    val errorExists[7306568]:bool[19] "temp"
    (7306573 'move' errorExists[7306568](7306570 '!=' error[5518329] nil[32]))
    if errorExists[7306568]
    {
      gotoErrorHandling handler[5518330] handler[5518330]
    }
    const-val str[3715958]:string[244] "dead at end of block" "insert auto destroy"
    (3715960 'move' str[3715958] call_tmp[3715948])
    val call_tmp[3715964]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3715972]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3715993]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3715995]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3716008]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3716021]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3716023]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3716025]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3716045]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3716047]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3716054]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3716073]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3716098]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3716100 'move' call_tmp[3716098](3716103 call :[1751964] str[3715958] error[5518329]))
    val errorExists[7306576]:bool[19] "temp"
    (7306581 'move' errorExists[7306576](7306578 '!=' error[5518329] nil[32]))
    if errorExists[7306576]
    {
      ref i_x[7343314]:string[244] "temp"
      (7343318 'move' i_x[7343314](7343316 'set reference' str[3715958]))
      (7343322 call deinit[21354] i_x[7343314])
      gotoErrorHandling handler[5518330] handler[5518330]
    }
    (3716106 'move' ret[3715897] call_tmp[3716098])
    ref i_x[7343326]:string[244] "temp"
    (7343330 'move' i_x[7343326](7343328 'set reference' str[3715958]))
    (7343334 call deinit[21354] i_x[7343326])
    gotoReturn _end__command_line_cast[3716117] _end__command_line_cast[3716117]
    ref i_x[7343338]:string[244] "temp"
    (7343342 'move' i_x[7343338](7343340 'set reference' str[3715958]))
    (7343346 call deinit[21354] i_x[7343338])
    label handler[5518330]
    const-val shouldHandleError[5518361]:bool[19] "temp"
    val errorExists[7306584]:bool[19] "temp"
    (7306589 'move' errorExists[7306584](7306586 '!=' error[5518329] nil[32]))
    (5518365 'move' shouldHandleError[5518361] errorExists[7306584])
    if shouldHandleError[5518361]
    {
      (5518358 call chpl_uncaught_error[87456] error[5518329])
    }
    label _end__command_line_cast[3716117]
    (3716119 return ret[3715897])
  }
  function _command_line_cast[3786341](const in arg x[3786349]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5480472]:int(64)[10] "temp"
    val ret[3786351]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[3786361]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3786368]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3786381]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3786388]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5520571]:Error[85511] "error variable" "temp"
    (5520594 'move' error[5520571] nil[32])
    const-val call_tmp[3786402]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[3786590]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623443]:Error[85511] "temp"
    (7623447 'move' i_error_out[7623443](7623445 'set reference' error[5520571]))
    val ret[7623450]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623452]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623454 'move' call_tmp[7623452](7623456 'string_length_bytes' x[3786349]))
    const-val call_tmp[7623458]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623460]:owned IllegalArgumentError?[1471812] "temp"
    (7623463 call chpl_checkValue[1511482] call_tmp[7623452] ret_tmp[7623460])
    (7623466 'move' call_tmp[7623458] ret_tmp[7623460])
    val ifvar_borrow[7623469]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623471]:owned IllegalArgumentError?[1471812] "temp"
    (7623473 'move' i_arg[7623471](7623475 'set reference' call_tmp[7623458]))
    val call_tmp[7623477]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623479 'move' call_tmp[7623477](7623482 call borrow[1479886] i_arg[7623471]))
    (7623484 'move' ifvar_borrow[7623469] call_tmp[7623477])
    val coerce_tmp[7623487]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623489 'move' coerce_tmp[7623487](7623491 'cast' RootClass[236] call_tmp[7623477]))
    const-val call_tmp[7623494]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623496 'move' call_tmp[7623494](7623498 '!=' coerce_tmp[7623487] nil[32]))
    if call_tmp[7623494]
    {
      const-val call_tmp[7623503]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623505]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623507 'move' coerce_tmp[7623505](7623509 'cast' Error[85511] ifvar_borrow[7623469]))
      val _virtual_method_tmp_[7623512]:int(32)[66] "temp"
      (7623514 'move' _virtual_method_tmp_[7623512](7623516 'getcid' coerce_tmp[7623505]))
      val ret_tmp[7623518]:string[244] "temp"
      (7623520 'virtual method call' message[85497] _virtual_method_tmp_[7623512] coerce_tmp[7623505] ret_tmp[7623518])
      (7623525 'move' call_tmp[7623503] ret_tmp[7623518])
      (7623529 call safeCastCheckHalt[440] call_tmp[7623503])
      ref i_x[7623531]:string[244] "temp"
      (7623533 'move' i_x[7623531](7623535 'set reference' call_tmp[7623503]))
      (7623538 call deinit[21354] i_x[7623531])
    }
    (7623542 call chpl__autoDestroy[3929258] call_tmp[7623458])
    const-val call_tmp[7623544]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623546 'move' call_tmp[7623544] call_tmp[7623452])
    (7623549 'move' ret[7623450] call_tmp[7623544])
    (3786597 'move' default_arg_length[3786590] ret[7623450])
    val errorExists[7307456]:bool[19] "temp"
    (7307461 'move' errorExists[7307456](7307458 '!=' error[5520571] nil[32]))
    if errorExists[7307456]
    {
      gotoErrorHandling handler[5520572] handler[5520572]
    }
    val default_arg_policy[3786601]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547655]:string[244] "temp"
    ref i_error_out[7626481]:Error[85511] "temp"
    (7626485 'move' i_error_out[7626481](7626483 'set reference' error[5520571]))
    ref i__retArg[7626487]:string[244] "temp"
    (7626491 'move' i__retArg[7626487](7626489 'set reference' ret_tmp[5547655]))
    const-val ret[7626494]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626496]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626498 'move' call_tmp[7626496](7626500 'cast' c_ptr(uint(8))[1466369] x[3786349]))
    const-val call_tmp[7626503]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626505 'move' call_tmp[7626503](7626507 '+' default_arg_length[3786590] 1))
    const-val call_tmp[7626510]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626512]:Error[85511] "error variable" "temp"
    (7626514 'move' error[7626512] nil[32])
    const-val ret_tmp[7626517]:string[244] "temp"
    (7626520 call createCopyingBuffer[1513110] call_tmp[7626496] default_arg_length[3786590] call_tmp[7626503] strict[37976] error[7626512] ret_tmp[7626517])
    (7626527 'move' call_tmp[7626510] ret_tmp[7626517])
    val errorExists[7626530]:bool[19] "temp"
    (7626532 'move' errorExists[7626530](7626534 '!=' error[7626512] nil[32]))
    if errorExists[7626530]
    {
      (7626539 '=' i_error_out[7626481] error[7626512])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626548] _endcreateCopyingBuffer[7626548]
    }
    (7626545 '=' ret[7626494] call_tmp[7626510])
    label _endcreateCopyingBuffer[7626548]
    (7626550 '=' i__retArg[7626487] ret[7626494])
    (5547658 'move' call_tmp[3786402] ret_tmp[5547655])
    val errorExists[7307464]:bool[19] "temp"
    (7307469 'move' errorExists[7307464](7307466 '!=' error[5520571] nil[32]))
    if errorExists[7307464]
    {
      gotoErrorHandling handler[5520572] handler[5520572]
    }
    const-val str[3786412]:string[244] "dead at end of block" "insert auto destroy"
    (3786414 'move' str[3786412] call_tmp[3786402])
    val call_tmp[3786418]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3786426]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3786447]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3786449]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3786462]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3786475]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3786477]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3786479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3786499]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3786501]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3786508]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3786527]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3786552]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3786554 'move' call_tmp[3786552](3786557 call :[1751964] str[3786412] error[5520571]))
    val errorExists[7307472]:bool[19] "temp"
    (7307477 'move' errorExists[7307472](7307474 '!=' error[5520571] nil[32]))
    if errorExists[7307472]
    {
      ref i_x[7343614]:string[244] "temp"
      (7343618 'move' i_x[7343614](7343616 'set reference' str[3786412]))
      (7343622 call deinit[21354] i_x[7343614])
      gotoErrorHandling handler[5520572] handler[5520572]
    }
    (3786560 'move' ret[3786351] call_tmp[3786552])
    ref i_x[7343626]:string[244] "temp"
    (7343630 'move' i_x[7343626](7343628 'set reference' str[3786412]))
    (7343634 call deinit[21354] i_x[7343626])
    gotoReturn _end__command_line_cast[3786571] _end__command_line_cast[3786571]
    ref i_x[7343638]:string[244] "temp"
    (7343642 'move' i_x[7343638](7343640 'set reference' str[3786412]))
    (7343646 call deinit[21354] i_x[7343638])
    label handler[5520572]
    const-val shouldHandleError[5520603]:bool[19] "temp"
    val errorExists[7307480]:bool[19] "temp"
    (7307485 'move' errorExists[7307480](7307482 '!=' error[5520571] nil[32]))
    (5520607 'move' shouldHandleError[5520603] errorExists[7307480])
    if shouldHandleError[5520603]
    {
      (5520600 call chpl_uncaught_error[87456] error[5520571])
    }
    label _end__command_line_cast[3786571]
    (3786573 return ret[3786351])
  }
  function _command_line_cast[3812777](const in arg x[3812785]:c_ptrConst(int(8))[1466333]) : int(64)[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5480508]:int(64)[10] "temp"
    val ret[3812787]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[3812797]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3812804]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3812817]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3812824]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5520611]:Error[85511] "error variable" "temp"
    (5520634 'move' error[5520611] nil[32])
    const-val call_tmp[3812838]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[3813026]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623556]:Error[85511] "temp"
    (7623560 'move' i_error_out[7623556](7623558 'set reference' error[5520611]))
    val ret[7623563]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623565]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623567 'move' call_tmp[7623565](7623569 'string_length_bytes' x[3812785]))
    const-val call_tmp[7623571]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623573]:owned IllegalArgumentError?[1471812] "temp"
    (7623576 call chpl_checkValue[1511482] call_tmp[7623565] ret_tmp[7623573])
    (7623579 'move' call_tmp[7623571] ret_tmp[7623573])
    val ifvar_borrow[7623582]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623584]:owned IllegalArgumentError?[1471812] "temp"
    (7623586 'move' i_arg[7623584](7623588 'set reference' call_tmp[7623571]))
    val call_tmp[7623590]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623592 'move' call_tmp[7623590](7623595 call borrow[1479886] i_arg[7623584]))
    (7623597 'move' ifvar_borrow[7623582] call_tmp[7623590])
    val coerce_tmp[7623600]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623602 'move' coerce_tmp[7623600](7623604 'cast' RootClass[236] call_tmp[7623590]))
    const-val call_tmp[7623607]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623609 'move' call_tmp[7623607](7623611 '!=' coerce_tmp[7623600] nil[32]))
    if call_tmp[7623607]
    {
      const-val call_tmp[7623616]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623618]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623620 'move' coerce_tmp[7623618](7623622 'cast' Error[85511] ifvar_borrow[7623582]))
      val _virtual_method_tmp_[7623625]:int(32)[66] "temp"
      (7623627 'move' _virtual_method_tmp_[7623625](7623629 'getcid' coerce_tmp[7623618]))
      val ret_tmp[7623631]:string[244] "temp"
      (7623633 'virtual method call' message[85497] _virtual_method_tmp_[7623625] coerce_tmp[7623618] ret_tmp[7623631])
      (7623638 'move' call_tmp[7623616] ret_tmp[7623631])
      (7623642 call safeCastCheckHalt[440] call_tmp[7623616])
      ref i_x[7623644]:string[244] "temp"
      (7623646 'move' i_x[7623644](7623648 'set reference' call_tmp[7623616]))
      (7623651 call deinit[21354] i_x[7623644])
    }
    (7623655 call chpl__autoDestroy[3929258] call_tmp[7623571])
    const-val call_tmp[7623657]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623659 'move' call_tmp[7623657] call_tmp[7623565])
    (7623662 'move' ret[7623563] call_tmp[7623657])
    (3813033 'move' default_arg_length[3813026] ret[7623563])
    val errorExists[7307488]:bool[19] "temp"
    (7307493 'move' errorExists[7307488](7307490 '!=' error[5520611] nil[32]))
    if errorExists[7307488]
    {
      gotoErrorHandling handler[5520612] handler[5520612]
    }
    val default_arg_policy[3813037]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547661]:string[244] "temp"
    ref i_error_out[7626555]:Error[85511] "temp"
    (7626559 'move' i_error_out[7626555](7626557 'set reference' error[5520611]))
    ref i__retArg[7626561]:string[244] "temp"
    (7626565 'move' i__retArg[7626561](7626563 'set reference' ret_tmp[5547661]))
    const-val ret[7626568]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626570]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626572 'move' call_tmp[7626570](7626574 'cast' c_ptr(uint(8))[1466369] x[3812785]))
    const-val call_tmp[7626577]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626579 'move' call_tmp[7626577](7626581 '+' default_arg_length[3813026] 1))
    const-val call_tmp[7626584]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626586]:Error[85511] "error variable" "temp"
    (7626588 'move' error[7626586] nil[32])
    const-val ret_tmp[7626591]:string[244] "temp"
    (7626594 call createCopyingBuffer[1513110] call_tmp[7626570] default_arg_length[3813026] call_tmp[7626577] strict[37976] error[7626586] ret_tmp[7626591])
    (7626601 'move' call_tmp[7626584] ret_tmp[7626591])
    val errorExists[7626604]:bool[19] "temp"
    (7626606 'move' errorExists[7626604](7626608 '!=' error[7626586] nil[32]))
    if errorExists[7626604]
    {
      (7626613 '=' i_error_out[7626555] error[7626586])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626622] _endcreateCopyingBuffer[7626622]
    }
    (7626619 '=' ret[7626568] call_tmp[7626584])
    label _endcreateCopyingBuffer[7626622]
    (7626624 '=' i__retArg[7626561] ret[7626568])
    (5547664 'move' call_tmp[3812838] ret_tmp[5547661])
    val errorExists[7307496]:bool[19] "temp"
    (7307501 'move' errorExists[7307496](7307498 '!=' error[5520611] nil[32]))
    if errorExists[7307496]
    {
      gotoErrorHandling handler[5520612] handler[5520612]
    }
    const-val str[3812848]:string[244] "dead at end of block" "insert auto destroy"
    (3812850 'move' str[3812848] call_tmp[3812838])
    val call_tmp[3812854]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3812862]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3812883]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3812885]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3812898]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3812911]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3812913]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3812915]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3812935]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3812937]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3812944]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3812963]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3812988]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3812990 'move' call_tmp[3812988](3812993 call :[1751964] str[3812848] error[5520611]))
    val errorExists[7307504]:bool[19] "temp"
    (7307509 'move' errorExists[7307504](7307506 '!=' error[5520611] nil[32]))
    if errorExists[7307504]
    {
      ref i_x[7343650]:string[244] "temp"
      (7343654 'move' i_x[7343650](7343652 'set reference' str[3812848]))
      (7343658 call deinit[21354] i_x[7343650])
      gotoErrorHandling handler[5520612] handler[5520612]
    }
    (3812996 'move' ret[3812787] call_tmp[3812988])
    ref i_x[7343662]:string[244] "temp"
    (7343666 'move' i_x[7343662](7343664 'set reference' str[3812848]))
    (7343670 call deinit[21354] i_x[7343662])
    gotoReturn _end__command_line_cast[3813007] _end__command_line_cast[3813007]
    ref i_x[7343674]:string[244] "temp"
    (7343678 'move' i_x[7343674](7343676 'set reference' str[3812848]))
    (7343682 call deinit[21354] i_x[7343674])
    label handler[5520612]
    const-val shouldHandleError[5520643]:bool[19] "temp"
    val errorExists[7307512]:bool[19] "temp"
    (7307517 'move' errorExists[7307512](7307514 '!=' error[5520611] nil[32]))
    (5520647 'move' shouldHandleError[5520643] errorExists[7307512])
    if shouldHandleError[5520643]
    {
      (5520640 call chpl_uncaught_error[87456] error[5520611])
    }
    label _end__command_line_cast[3813007]
    (3813009 return ret[3812787])
  }
  function _command_line_cast[3825840](const in arg x[3825848]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5480510]:bool[19] "temp"
    val ret[3825850]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3825860]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3825867]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3825880]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3825887]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5520831]:Error[85511] "error variable" "temp"
    (5520854 'move' error[5520831] nil[32])
    const-val call_tmp[3825901]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[3826089]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623669]:Error[85511] "temp"
    (7623673 'move' i_error_out[7623669](7623671 'set reference' error[5520831]))
    val ret[7623676]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623678]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623680 'move' call_tmp[7623678](7623682 'string_length_bytes' x[3825848]))
    const-val call_tmp[7623684]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623686]:owned IllegalArgumentError?[1471812] "temp"
    (7623689 call chpl_checkValue[1511482] call_tmp[7623678] ret_tmp[7623686])
    (7623692 'move' call_tmp[7623684] ret_tmp[7623686])
    val ifvar_borrow[7623695]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623697]:owned IllegalArgumentError?[1471812] "temp"
    (7623699 'move' i_arg[7623697](7623701 'set reference' call_tmp[7623684]))
    val call_tmp[7623703]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623705 'move' call_tmp[7623703](7623708 call borrow[1479886] i_arg[7623697]))
    (7623710 'move' ifvar_borrow[7623695] call_tmp[7623703])
    val coerce_tmp[7623713]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623715 'move' coerce_tmp[7623713](7623717 'cast' RootClass[236] call_tmp[7623703]))
    const-val call_tmp[7623720]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623722 'move' call_tmp[7623720](7623724 '!=' coerce_tmp[7623713] nil[32]))
    if call_tmp[7623720]
    {
      const-val call_tmp[7623729]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623731]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623733 'move' coerce_tmp[7623731](7623735 'cast' Error[85511] ifvar_borrow[7623695]))
      val _virtual_method_tmp_[7623738]:int(32)[66] "temp"
      (7623740 'move' _virtual_method_tmp_[7623738](7623742 'getcid' coerce_tmp[7623731]))
      val ret_tmp[7623744]:string[244] "temp"
      (7623746 'virtual method call' message[85497] _virtual_method_tmp_[7623738] coerce_tmp[7623731] ret_tmp[7623744])
      (7623751 'move' call_tmp[7623729] ret_tmp[7623744])
      (7623755 call safeCastCheckHalt[440] call_tmp[7623729])
      ref i_x[7623757]:string[244] "temp"
      (7623759 'move' i_x[7623757](7623761 'set reference' call_tmp[7623729]))
      (7623764 call deinit[21354] i_x[7623757])
    }
    (7623768 call chpl__autoDestroy[3929258] call_tmp[7623684])
    const-val call_tmp[7623770]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623772 'move' call_tmp[7623770] call_tmp[7623678])
    (7623775 'move' ret[7623676] call_tmp[7623770])
    (3826096 'move' default_arg_length[3826089] ret[7623676])
    val errorExists[7307616]:bool[19] "temp"
    (7307621 'move' errorExists[7307616](7307618 '!=' error[5520831] nil[32]))
    if errorExists[7307616]
    {
      gotoErrorHandling handler[5520832] handler[5520832]
    }
    val default_arg_policy[3826100]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547667]:string[244] "temp"
    ref i_error_out[7626629]:Error[85511] "temp"
    (7626633 'move' i_error_out[7626629](7626631 'set reference' error[5520831]))
    ref i__retArg[7626635]:string[244] "temp"
    (7626639 'move' i__retArg[7626635](7626637 'set reference' ret_tmp[5547667]))
    const-val ret[7626642]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626644]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626646 'move' call_tmp[7626644](7626648 'cast' c_ptr(uint(8))[1466369] x[3825848]))
    const-val call_tmp[7626651]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626653 'move' call_tmp[7626651](7626655 '+' default_arg_length[3826089] 1))
    const-val call_tmp[7626658]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626660]:Error[85511] "error variable" "temp"
    (7626662 'move' error[7626660] nil[32])
    const-val ret_tmp[7626665]:string[244] "temp"
    (7626668 call createCopyingBuffer[1513110] call_tmp[7626644] default_arg_length[3826089] call_tmp[7626651] strict[37976] error[7626660] ret_tmp[7626665])
    (7626675 'move' call_tmp[7626658] ret_tmp[7626665])
    val errorExists[7626678]:bool[19] "temp"
    (7626680 'move' errorExists[7626678](7626682 '!=' error[7626660] nil[32]))
    if errorExists[7626678]
    {
      (7626687 '=' i_error_out[7626629] error[7626660])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626696] _endcreateCopyingBuffer[7626696]
    }
    (7626693 '=' ret[7626642] call_tmp[7626658])
    label _endcreateCopyingBuffer[7626696]
    (7626698 '=' i__retArg[7626635] ret[7626642])
    (5547670 'move' call_tmp[3825901] ret_tmp[5547667])
    val errorExists[7307624]:bool[19] "temp"
    (7307629 'move' errorExists[7307624](7307626 '!=' error[5520831] nil[32]))
    if errorExists[7307624]
    {
      gotoErrorHandling handler[5520832] handler[5520832]
    }
    const-val str[3825911]:string[244] "dead at end of block" "insert auto destroy"
    (3825913 'move' str[3825911] call_tmp[3825901])
    val call_tmp[3825917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3825925]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3825946]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3825948]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3825961]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3825974]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3825976]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3825978]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3825998]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3826000]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3826007]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3826026]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3826051]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3826053 'move' call_tmp[3826051](3826056 call :[16582] str[3825911] error[5520831]))
    val errorExists[7307632]:bool[19] "temp"
    (7307637 'move' errorExists[7307632](7307634 '!=' error[5520831] nil[32]))
    if errorExists[7307632]
    {
      ref i_x[7343746]:string[244] "temp"
      (7343750 'move' i_x[7343746](7343748 'set reference' str[3825911]))
      (7343754 call deinit[21354] i_x[7343746])
      gotoErrorHandling handler[5520832] handler[5520832]
    }
    (3826059 'move' ret[3825850] call_tmp[3826051])
    ref i_x[7343758]:string[244] "temp"
    (7343762 'move' i_x[7343758](7343760 'set reference' str[3825911]))
    (7343766 call deinit[21354] i_x[7343758])
    gotoReturn _end__command_line_cast[3826070] _end__command_line_cast[3826070]
    ref i_x[7343770]:string[244] "temp"
    (7343774 'move' i_x[7343770](7343772 'set reference' str[3825911]))
    (7343778 call deinit[21354] i_x[7343770])
    label handler[5520832]
    const-val shouldHandleError[5520863]:bool[19] "temp"
    val errorExists[7307640]:bool[19] "temp"
    (7307645 'move' errorExists[7307640](7307642 '!=' error[5520831] nil[32]))
    (5520867 'move' shouldHandleError[5520863] errorExists[7307640])
    if shouldHandleError[5520863]
    {
      (5520860 call chpl_uncaught_error[87456] error[5520831])
    }
    label _end__command_line_cast[3826070]
    (3826072 return ret[3825850])
  }
  function _command_line_cast[3874530](const in arg x[3874538]:c_ptrConst(int(8))[1466333]) : bool[19] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[5480668]:bool[19] "temp"
    val ret[3874540]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3874550]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3874557]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3874570]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3874577]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val error[5521021]:Error[85511] "error variable" "temp"
    (5521044 'move' error[5521021] nil[32])
    const-val call_tmp[3874591]:string[244] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[3874779]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[7623782]:Error[85511] "temp"
    (7623786 'move' i_error_out[7623782](7623784 'set reference' error[5521021]))
    val ret[7623789]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[7623791]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623793 'move' call_tmp[7623791](7623795 'string_length_bytes' x[3874538]))
    const-val call_tmp[7623797]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7623799]:owned IllegalArgumentError?[1471812] "temp"
    (7623802 call chpl_checkValue[1511482] call_tmp[7623791] ret_tmp[7623799])
    (7623805 'move' call_tmp[7623797] ret_tmp[7623799])
    val ifvar_borrow[7623808]:IllegalArgumentError[85616] "dead after last mention" "temp"
    ref i_arg[7623810]:owned IllegalArgumentError?[1471812] "temp"
    (7623812 'move' i_arg[7623810](7623814 'set reference' call_tmp[7623797]))
    val call_tmp[7623816]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623818 'move' call_tmp[7623816](7623821 call borrow[1479886] i_arg[7623810]))
    (7623823 'move' ifvar_borrow[7623808] call_tmp[7623816])
    val coerce_tmp[7623826]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7623828 'move' coerce_tmp[7623826](7623830 'cast' RootClass[236] call_tmp[7623816]))
    const-val call_tmp[7623833]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623835 'move' call_tmp[7623833](7623837 '!=' coerce_tmp[7623826] nil[32]))
    if call_tmp[7623833]
    {
      const-val call_tmp[7623842]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7623844]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7623846 'move' coerce_tmp[7623844](7623848 'cast' Error[85511] ifvar_borrow[7623808]))
      val _virtual_method_tmp_[7623851]:int(32)[66] "temp"
      (7623853 'move' _virtual_method_tmp_[7623851](7623855 'getcid' coerce_tmp[7623844]))
      val ret_tmp[7623857]:string[244] "temp"
      (7623859 'virtual method call' message[85497] _virtual_method_tmp_[7623851] coerce_tmp[7623844] ret_tmp[7623857])
      (7623864 'move' call_tmp[7623842] ret_tmp[7623857])
      (7623868 call safeCastCheckHalt[440] call_tmp[7623842])
      ref i_x[7623870]:string[244] "temp"
      (7623872 'move' i_x[7623870](7623874 'set reference' call_tmp[7623842]))
      (7623877 call deinit[21354] i_x[7623870])
    }
    (7623881 call chpl__autoDestroy[3929258] call_tmp[7623797])
    const-val call_tmp[7623883]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623885 'move' call_tmp[7623883] call_tmp[7623791])
    (7623888 'move' ret[7623789] call_tmp[7623883])
    (3874786 'move' default_arg_length[3874779] ret[7623789])
    val errorExists[7307728]:bool[19] "temp"
    (7307733 'move' errorExists[7307728](7307730 '!=' error[5521021] nil[32]))
    if errorExists[7307728]
    {
      gotoErrorHandling handler[5521022] handler[5521022]
    }
    val default_arg_policy[3874790]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val ret_tmp[5547673]:string[244] "temp"
    ref i_error_out[7626703]:Error[85511] "temp"
    (7626707 'move' i_error_out[7626703](7626705 'set reference' error[5521021]))
    ref i__retArg[7626709]:string[244] "temp"
    (7626713 'move' i__retArg[7626709](7626711 'set reference' ret_tmp[5547673]))
    const-val ret[7626716]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7626718]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626720 'move' call_tmp[7626718](7626722 'cast' c_ptr(uint(8))[1466369] x[3874538]))
    const-val call_tmp[7626725]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7626727 'move' call_tmp[7626725](7626729 '+' default_arg_length[3874779] 1))
    const-val call_tmp[7626732]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7626734]:Error[85511] "error variable" "temp"
    (7626736 'move' error[7626734] nil[32])
    const-val ret_tmp[7626739]:string[244] "temp"
    (7626742 call createCopyingBuffer[1513110] call_tmp[7626718] default_arg_length[3874779] call_tmp[7626725] strict[37976] error[7626734] ret_tmp[7626739])
    (7626749 'move' call_tmp[7626732] ret_tmp[7626739])
    val errorExists[7626752]:bool[19] "temp"
    (7626754 'move' errorExists[7626752](7626756 '!=' error[7626734] nil[32]))
    if errorExists[7626752]
    {
      (7626761 '=' i_error_out[7626703] error[7626734])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7626770] _endcreateCopyingBuffer[7626770]
    }
    (7626767 '=' ret[7626716] call_tmp[7626732])
    label _endcreateCopyingBuffer[7626770]
    (7626772 '=' i__retArg[7626709] ret[7626716])
    (5547676 'move' call_tmp[3874591] ret_tmp[5547673])
    val errorExists[7307736]:bool[19] "temp"
    (7307741 'move' errorExists[7307736](7307738 '!=' error[5521021] nil[32]))
    if errorExists[7307736]
    {
      gotoErrorHandling handler[5521022] handler[5521022]
    }
    const-val str[3874601]:string[244] "dead at end of block" "insert auto destroy"
    (3874603 'move' str[3874601] call_tmp[3874591])
    val call_tmp[3874607]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3874615]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3874636]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3874638]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3874651]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3874664]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3874666]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3874668]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3874688]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3874690]:nothing[7] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3874697]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3874716]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3874741]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3874743 'move' call_tmp[3874741](3874746 call :[16582] str[3874601] error[5521021]))
    val errorExists[7307744]:bool[19] "temp"
    (7307749 'move' errorExists[7307744](7307746 '!=' error[5521021] nil[32]))
    if errorExists[7307744]
    {
      ref i_x[7343830]:string[244] "temp"
      (7343834 'move' i_x[7343830](7343832 'set reference' str[3874601]))
      (7343838 call deinit[21354] i_x[7343830])
      gotoErrorHandling handler[5521022] handler[5521022]
    }
    (3874749 'move' ret[3874540] call_tmp[3874741])
    ref i_x[7343842]:string[244] "temp"
    (7343846 'move' i_x[7343842](7343844 'set reference' str[3874601]))
    (7343850 call deinit[21354] i_x[7343842])
    gotoReturn _end__command_line_cast[3874760] _end__command_line_cast[3874760]
    ref i_x[7343854]:string[244] "temp"
    (7343858 'move' i_x[7343854](7343856 'set reference' str[3874601]))
    (7343862 call deinit[21354] i_x[7343854])
    label handler[5521022]
    const-val shouldHandleError[5521053]:bool[19] "temp"
    val errorExists[7307752]:bool[19] "temp"
    (7307757 'move' errorExists[7307752](7307754 '!=' error[5521021] nil[32]))
    (5521057 'move' shouldHandleError[5521053] errorExists[7307752])
    if shouldHandleError[5521053]
    {
      (5521050 call chpl_uncaught_error[87456] error[5521021])
    }
    label _end__command_line_cast[3874760]
    (3874762 return ret[3874540])
  }
  type chpl_main_argument[311085] val argc[311071]:int(64)[10] val return_value[311078]:int(32)[66]
  function chpl_rt_preUserCodeHook[311329]() : void[4] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl_rt_postUserCodeHook[311333]() : void[4] "extern" "local args" "no fn body" "resolved"
  {
  }
  function allocate_string_literals_buf[311337](const in arg s[311340]:int(64)[10]) : c_ptrConst(int(8))[1466333] "extern" "local args" "no fn body" "resolved"
  {
  }
  function deallocate_string_literals_buf[311349]() : void[4] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl_addModule[311360](const in arg moduleName[311363]:chpl_c_string[16], const in arg deinitFun[311367]:chpl_c_fn_ptr[123]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[938813]:chpl_ModuleDeinit[77307] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[3877629]:chpl_ModuleDeinit[77307] "dead after last mention" "temp"
    val coerce_tmp[3877634]:c_ptrConst(int(8))[1466333] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3877640 'move' coerce_tmp[3877634](3877636 'cast' c_ptrConst(int(8))[1466333] moduleName[311363]))
    (3877631 'move' new_temp[3877629](3877487 call _new[3877566] coerce_tmp[3877634] deinitFun[311367] chpl_moduleDeinitFuns[77310]))
    (938816 'move' call_tmp[938813] new_temp[3877629])
    val coerce_tmp[3877654]:chpl_ModuleDeinit[77307] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3877660 'move' coerce_tmp[3877654] call_tmp[938813])
    ref i_a[8584816]:chpl_ModuleDeinit[77307] "temp"
    (8584820 'move' i_a[8584816](8584818 'set reference' chpl_moduleDeinitFuns[77310]))
    (8584823 '=' i_a[8584816] coerce_tmp[3877654])
    (631510 return _void[46])
  }
  function chpl_deinitModules[311384]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val call_tmp[938818]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val prev[311434]:chpl_ModuleDeinit[77307] "dead at end of block" "insert auto destroy"
    (654106 'move' prev[311434] chpl_moduleDeinitFuns[77310])
    val tmp[311487]:bool[19] "dead after last mention" "temp"
    val ret[8584691]:bool[19] "dead after last mention" "RVV" "temp"
    val coerce_tmp[8584693]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8584695 'move' coerce_tmp[8584693](8584697 'cast' RootClass[236] prev[311434]))
    const-val call_tmp[8584700]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8584702 'move' call_tmp[8584700](8584704 '!=' coerce_tmp[8584693] nil[32]))
    (8584707 '=' ret[8584691] call_tmp[8584700])
    (311505 'move' tmp[311487] ret[8584691])
    WhileDo[311492] hazard
    {
      val call_tmp[938823]:chpl_ModuleDeinit[77307] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[8584782]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8584784 'move' coerce_tmp[8584782](8584786 'cast' RootClass[236] prev[311434]))
      const-val call_tmp[8584789]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8584791 'move' call_tmp[8584789](8584793 '==' coerce_tmp[8584782] nil[32]))
      if call_tmp[8584789]
      {
        (8584799 call nilCheckHalt[392] "argument to ! is nil")
      }
      (938826 'move' call_tmp[938823] prev[311434])
      const curr[311441]:chpl_ModuleDeinit[77307] "dead at end of block" "const" "insert auto destroy"
      (654108 'move' curr[311441] call_tmp[938823])
      val call_tmp[938828]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      const-ref call_tmp[938842]:chpl_c_fn_ptr[123] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[3876317]:chpl_ModuleDeinit[77307] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3876322 'move' coerce_tmp[3876317] curr[311441])
      ref call_tmp[7631705]:chpl_c_fn_ptr[123] "dead after last mention" "maybe param" "temp"
      (7631707 'move' call_tmp[7631705](7631709 '.' coerce_tmp[3876317] deinitFun[77254]))
      (938845 'move' call_tmp[938842] call_tmp[7631705])
      const-val coerce_tmp[3876325]:chpl_c_fn_ptr[123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3876329 'move' coerce_tmp[3876325](3876327 'deref' call_tmp[938842]))
      (311466 call chpl_execute_module_deinit[311413] coerce_tmp[3876325])
      const-ref call_tmp[938849]:chpl_ModuleDeinit[77307] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[3876332]:chpl_ModuleDeinit[77307] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3876337 'move' coerce_tmp[3876332] curr[311441])
      ref call_tmp[7631719]:chpl_ModuleDeinit[77307] "dead after last mention" "maybe param" "temp"
      (7631721 'move' call_tmp[7631719](7631723 '.' coerce_tmp[3876332] prevModule[77259]))
      (938852 'move' call_tmp[938849] call_tmp[7631719])
      val coerce_tmp[3876401]:chpl_ModuleDeinit[77307] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3876405 'move' coerce_tmp[3876401](3876403 'deref' call_tmp[938849]))
      ref i_a[8584804]:chpl_ModuleDeinit[77307] "temp"
      (8584808 'move' i_a[8584804](8584806 'set reference' prev[311434]))
      (8584811 '=' i_a[8584804] coerce_tmp[3876401])
      (311484 call chpl__delete[3876408] curr[311441])
      val ret[8584715]:bool[19] "dead after last mention" "RVV" "temp"
      val coerce_tmp[8584717]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8584719 'move' coerce_tmp[8584717](8584721 'cast' RootClass[236] prev[311434]))
      const-val call_tmp[8584724]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8584726 'move' call_tmp[8584724](8584728 '!=' coerce_tmp[8584717] nil[32]))
      (8584731 '=' ret[8584715] call_tmp[8584724])
      (311498 'move' tmp[311487] ret[8584715])
      tmp[311487]
    }
    ref i_a[8584828]:chpl_ModuleDeinit[77307] "temp"
    (8584832 'move' i_a[8584828](8584830 'set reference' chpl_moduleDeinitFuns[77310]))
    (8584835 '=' i_a[8584828](8584837 'cast' chpl_ModuleDeinit[77307] nil[32]))
    (311513 call deallocate_string_literals_buf[311349])
    (631512 return _void[46])
  }
  function chpl_execute_module_deinit[311413](const in arg deinitFun[311416]:chpl_c_fn_ptr[123]) : void[4] "extern" "local args" "no fn body" "resolved"
  {
  }
}
AST dump for List after pass createTaskFunctions.
Module use list: ChapelStandard ChapelLocks HaltWrappers Math Sort IO Reflection 

{
  function chpl__init_List[468483]() : void[4] "insert line file info" "module init"
  {
    (649713 'init var' _initialCapacity[225849] 8)
    (225852 'end of statement')
    (649715 'init var' _initialArrayCapacity[225854] 16)
    (225857 'end of statement')
    (649717 'init var' _sanityChecks[225859] 0)
    (225862 'end of statement')
    (649720 'move' _lockType[225883] chpl_LocalSpinlock[85418])
    (649722 'init var' warnForListParsafeMismatch[226040] 1)
    (226043 'end of statement')
    (1001064 'resolution point' |serializable[475277])
    (1001066 'end of statement')
    (622168 return _void[46])
  }
  const _initialCapacity[225849] "dead at end of block" "const" "insert auto destroy" "private"
  const _initialArrayCapacity[225854] "dead at end of block" "const" "insert auto destroy" "private"
  unknown _sanityChecks[225859] "dead at end of block" "param" "private"
  function _sanity[225863](arg expr[225866]:bool[19]) : _unknown[42] "inline" "private" "no return value for void"
  {
    unknown call_tmp[875718] "expr temp" "maybe param" "maybe type" "temp"
    (875721 'move' call_tmp[875718](225875 call _cond_test _sanityChecks[225859]))
    if call_tmp[875718]
    {
      (225871 call assert expr[225866])
    }
    (621439 return _void[46])
  }
  unknown _lockType[225883] "dead at end of block" "insert auto destroy" "type variable"
  function _LockWrapper[225928].lock[225899](arg _mt[225903]:_MT[201], arg this[225901]:_LockWrapper[225928]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[875725] "expr temp" "maybe param" "maybe type" "temp"
    (875728 'move' call_tmp[875725](406895 call lockVar _mt[203] this[225901]))
    (225910 call(225907 call (partial) lock _mt[203] call_tmp[875725]))
    (621441 return _void[46])
  }
  function _LockWrapper[225928].unlock[225913](arg _mt[225917]:_MT[201], arg this[225915]:_LockWrapper[225928]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[875734] "expr temp" "maybe param" "maybe type" "temp"
    (875737 'move' call_tmp[875734](406900 call lockVar _mt[203] this[225915]))
    (225924 call(225921 call (partial) unlock _mt[203] call_tmp[875734]))
    (621443 return _void[46])
  }
  function _LockWrapper[225928].super[1227873](arg _mt[1227875]:_MT[201], arg this[1227877]:_LockWrapper[225928]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1227887] "RVV" "temp"
    unknown call_tmp[1227894] "expr temp" "maybe param" "maybe type" "temp"
    (1227897 'move' call_tmp[1227894](1227881 '.v' this[1227877] c"super"))
    (1227892 'move' ret[1227887](1227891 'deref' call_tmp[1227894]))
    (1227889 return ret[1227887])
  }
  function _LockWrapper[225928].lockVar[1227899](arg _mt[1227901]:_MT[201], arg this[1227903]:_LockWrapper[225928]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1227913] "RVV" "temp"
    unknown call_tmp[1227920] "expr temp" "maybe param" "maybe type" "temp"
    (1227923 'move' call_tmp[1227920](1227907 '.' this[1227903] c"lockVar"))
    (1227918 'move' ret[1227913](1227917 'addr of' call_tmp[1227920]))
    (1227915 return ret[1227913])
  }
  function _LockWrapper[225928].init[1227925](arg _mt[1227927]:_MT[201], arg this[1227928]:_LockWrapper[225928], in arg lockVar[1227939] :
  (1228009 'new' _lockType[225883]) =
  (1228010 'new' _lockType[225883])) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1227958] "temporary of super field" "temp"
    (1227960 'move' super_tmp[1227958](1227957 '.v' this[1227928] c"super"))
    (1227938 call(1227936 call (partial) init _mt[203] super_tmp[1227958]))
    (1227984 'end of statement')
    unknown tmp[1227963] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1227987] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1227999] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1228002 'move' call_tmp[1227999](1227965 '.v' this[1227928] c"super"))
      (1227991 'move' call_type_tmp[1227987](1227968 'typeof' call_tmp[1227999]))
    }
    (1227969 'move' tmp[1227963] call_type_tmp[1227987])
    unknown call_tmp[1228004] "maybe param" "maybe type" "temp"
    (1228007 'move' call_tmp[1228004](1227974 'cast' tmp[1227963] this[1227928]))
    unknown chpl__thisAsParent[1227971] "dead at end of block" "insert auto destroy" "temp"
    (1227995 'init var' chpl__thisAsParent[1227971] call_tmp[1228004] tmp[1227963])
    (1227977 'setcid' chpl__thisAsParent[1227971])
    (1227979 '.=' this[1227928] c"lockVar" lockVar[1227939])
    (1227985 'end of statement')
    (1227982 'setcid' this[1227928])
    (1227993 return _void[46])
  }
  function _LockWrapper[225928].init[1228011](arg _mt[1228013]:_MT[201], arg this[1228014]:_LockWrapper[225928], arg reader[1228015]:_any[141](?), ref arg deserializer[1228016]:_any[141](?)) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1228132] "expr temp" "maybe param" "maybe type" "temp"
    (1228135 'move' call_tmp[1228132](1228026 'simple type name' this[1228014]))
    unknown call_tmp[1228137] "maybe param" "maybe type" "temp"
    (1228140 'move' call_tmp[1228137](1228028 call startClass _mt[203] deserializer[1228016] reader[1228015] call_tmp[1228132]))
    unknown _chpl_des_helper[1228033] "dead at end of block" "insert auto destroy"
    (1228128 'init var' _chpl_des_helper[1228033] call_tmp[1228137])
    (1228106 'end of statement')
    unknown super_tmp[1228075] "temporary of super field" "temp"
    (1228077 'move' super_tmp[1228075](1228074 '.v' this[1228014] c"super"))
    (1228042 call(1228040 call (partial) init _mt[203] super_tmp[1228075]))
    (1228107 'end of statement')
    unknown tmp[1228080] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1228114] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1228144] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1228147 'move' call_tmp[1228144](1228082 '.v' this[1228014] c"super"))
      (1228118 'move' call_type_tmp[1228114](1228085 'typeof' call_tmp[1228144]))
    }
    (1228086 'move' tmp[1228080] call_type_tmp[1228114])
    unknown call_tmp[1228149] "maybe param" "maybe type" "temp"
    (1228152 'move' call_tmp[1228149](1228091 'cast' tmp[1228080] this[1228014]))
    unknown chpl__thisAsParent[1228088] "dead at end of block" "insert auto destroy" "temp"
    (1228130 'init var' chpl__thisAsParent[1228088] call_tmp[1228149] tmp[1228080])
    (1228094 'setcid' chpl__thisAsParent[1228088])
    (1228108 'end of statement')
    { scopeless type
      unknown call_type_tmp[1228120] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1228154] "insert auto destroy for explicit new" "maybe param" "used in type" "maybe type" "temp"
      (1228157 'move' call_tmp[1228154](1228174 'new' _lockType[225883]))
      (1228124 'move' call_type_tmp[1228120](1228055 'typeof' call_tmp[1228154]))
    }
    unknown call_tmp[1228159] "expr temp" "maybe param" "maybe type" "temp"
    (1228162 'move' call_tmp[1228159](1228056 'field num to name' this[1228014] 1))
    unknown call_tmp[1228164] "maybe param" "maybe type" "temp"
    (1228167 'move' call_tmp[1228164](1228059 call readField _mt[203] _chpl_des_helper[1228033] call_tmp[1228159] call_type_tmp[1228120]))
    unknown lockVar[1228096] "temp"
    (1228098 'init var' lockVar[1228096] call_tmp[1228164])
    (1228100 '.=' this[1228014] c"lockVar" lockVar[1228096])
    (1228109 'end of statement' _chpl_des_helper[1228033])
    (1228069 call endClass _mt[203] _chpl_des_helper[1228033])
    (1228111 'end of statement' _chpl_des_helper[1228033])
    (1228104 'setcid' this[1228014])
    (1228126 return _void[46])
  }
  where {
    unknown call_tmp[1228169] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1228172 'move' call_tmp[1228169](1228017 'typeof' reader[1228015]))
    (1228019 call chpl__isFileReader call_tmp[1228169])
  }
  function _LockWrapper[225928].deinit[1228177](arg _mt[1228179]:_MT[201], arg this[1228181]:_LockWrapper[225928]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1228189 return _void[46])
  }
  function _LockWrapper[225928].serialize[1228191](arg _mt[1228195]:_MT[201], arg this[1228193]:_LockWrapper[225928], arg writer[1228194]:_any[141](?), ref arg serializer[1228199]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1228202 call serializeDefaultImpl writer[1228194] serializer[1228199] this[1228193])
    (1228208 return _void[46])
  }
  function _LockWrapper[225928].deserialize[1228210](arg _mt[1228214]:_MT[201], arg this[1228212]:_LockWrapper[225928], arg reader[1228213]:_any[141](?), ref arg deserializer[1228219]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1228221] "temp"
    (1228223 'move' _deser_temp[1228221] this[1228212])
    (1228226 call deserializeDefaultImpl reader[1228213] deserializer[1228219] _deser_temp[1228221])
    (1228232 return _void[46])
  }
  type _LockWrapper[225928] val super[397615]:RootClass[236] "super class" unknown lockVar[225893](225894 'new'(225896 call _lockType[225883]))
  type _LockWrapper[445043](?)
  function _checkType[225930](arg eltType[225932]:_any[141](?)) param : _unknown[42] "no return value for void"
  {
    unknown call_tmp[875741] "expr temp" "maybe param" "maybe type" "temp"
    (875744 'move' call_tmp[875741](225977 call isGenericType eltType[225932]))
    unknown call_tmp[875746] "expr temp" "maybe param" "maybe type" "temp"
    (875749 'move' call_tmp[875746](225979 call _cond_test call_tmp[875741]))
    if call_tmp[875746]
    {
      unknown call_tmp[875751] "expr temp" "maybe param" "maybe type" "temp"
      (875754 'move' call_tmp[875751](225943 call : eltType[225932] string[244]))
      unknown call_tmp[875756] "expr temp" "maybe param" "maybe type" "temp"
      (875759 'move' call_tmp[875756](225938 call + "creating a list with element type " call_tmp[875751]))
      (225937 call compilerWarning call_tmp[875756] 2)
      (560837 'end of statement')
      unknown tmp[497451] "maybe param" "temp"
      (497462 'move' tmp[497451](225956 call isClassType eltType[225932]))
      unknown call_tmp[875761] "expr temp" "maybe param" "maybe type" "temp"
      (875764 'move' call_tmp[875761](497464 call _cond_invalid tmp[497451]))
      if call_tmp[875761]
      {
        (497467 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[694327] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[694328] "maybe param" "temp"
      unknown call_tmp[875766] "expr temp" "maybe param" "maybe type" "temp"
      (875769 'move' call_tmp[875766](497452 call isTrue tmp[497451]))
      (694333 'move' tmp[694328](694331 call _cond_test call_tmp[875766]))
      if tmp[694328]
      {
        unknown tmp[694335] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[875771] "expr temp" "maybe param" "maybe type" "temp"
        (875774 'move' call_tmp[875771](225962 call : eltType[225932] borrowed[174](?)))
        unknown call_tmp[875776] "expr temp" "maybe param" "maybe type" "temp"
        (875779 'move' call_tmp[875776](225961 call isGenericType call_tmp[875771]))
        unknown call_tmp[875781] "expr temp" "maybe param" "maybe type" "temp"
        (875784 'move' call_tmp[875781](225958 call ! call_tmp[875776]))
        (694337 'move' tmp[694335](497455 call isTrue call_tmp[875781]))
        (694342 'move' tmp[694327](694339 '_paramFoldLogical' tmp[694328] tmp[694335]))
      }
      {
        (694347 'move' tmp[694327](694344 '_paramFoldLogical' tmp[694328] 0))
      }
      unknown call_tmp[875786] "expr temp" "maybe param" "maybe type" "temp"
      (875789 'move' call_tmp[875786](225966 call _cond_test tmp[694327]))
      if call_tmp[875786]
      {
        (225950 call compilerWarning "which is a class type with generic management" 2)
      }
      (225971 call compilerError "list element type cannot currently be generic" 2)
    }
    unknown call_tmp[875791] "expr temp" "maybe param" "maybe type" "temp"
    (875794 'move' call_tmp[875791](225990 call == eltType[225932] void[4]))
    unknown call_tmp[875796] "expr temp" "maybe param" "maybe type" "temp"
    (875799 'move' call_tmp[875796](225994 call _cond_test call_tmp[875791]))
    if call_tmp[875796]
    {
      (225985 call compilerError "list element type cannot be 'void'" 2)
    }
    unknown call_tmp[875801] "expr temp" "maybe param" "maybe type" "temp"
    (875804 'move' call_tmp[875801](226005 call == eltType[225932] nothing[7]))
    unknown call_tmp[875806] "expr temp" "maybe param" "maybe type" "temp"
    (875809 'move' call_tmp[875806](226009 call _cond_test call_tmp[875801]))
    if call_tmp[875806]
    {
      (226000 call compilerError "list element type cannot be 'nothing'" 2)
    }
    (621445 return _void[46])
  }
  function _dummyFieldType[226015](arg t[226017]:_any[141](?)) type : _unknown[42]
  {
    unknown ret[621449] "RVV" "temp" "type variable"
    unknown call_tmp[875811] "expr temp" "maybe param" "maybe type" "temp"
    (875814 'move' call_tmp[875811](226028 call isBorrowedClass t[226017]))
    unknown call_tmp[875816] "expr temp" "maybe param" "maybe type" "temp"
    (875819 'move' call_tmp[875816](226030 call _cond_test call_tmp[875811]))
    if call_tmp[875816]
    {
      unknown call_tmp[875821] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (875824 'move' call_tmp[875821](226023 'to nilable class from type' t[226017]))
      (621454 'move' ret[621449](621453 'deref' call_tmp[875821]))
      gotoReturn _end__dummyFieldType[621447] _end__dummyFieldType[621447]
    }
    {
      (621459 'move' ret[621449](621458 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[621447] _end__dummyFieldType[621447]
    }
    label _end__dummyFieldType[621447]
    (621451 return ret[621449])
  }
  unknown warnForListParsafeMismatch[226040] "config" "param"
  function list[231871](?).init[226098](arg _mt[226104]:_MT[201], ref arg this[226100]:list[231871](?), arg eltType[226102]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    (226108 call _checkType eltType[226102])
    (560845 'end of statement')
    unknown eltType[528880] "temp" "type variable"
    (528882 'move' eltType[528880] eltType[226102])
    (528884 'init field' this[226100] c"eltType" eltType[528880])
    (560846 'end of statement')
    unknown parSafe[528888] "param" "temp"
    (528890 'init var' parSafe[528888] 0)
    (528892 'init field' this[226100] c"parSafe" parSafe[528888])
    (560847 'end of statement')
    unknown _size[528897] "temp"
    (528899 'init var' _size[528897] 0)
    (528901 '.=' this[226100] c"_size" _size[528897])
    (560848 'end of statement')
    unknown _lock[528913] "temp"
    unknown tmp[694354] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694355] "maybe param" "temp"
    unknown call_tmp[875826] "expr temp" "maybe param" "maybe type" "temp"
    (875829 'move' call_tmp[875826](528921 '.v' this[226100] c"parSafe"))
    (694360 'move' tmp[694355](694358 call _cond_test call_tmp[875826]))
    if tmp[694355]
    {
      unknown tmp[694362] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694364 'move' tmp[694362](1000367 'new' _LockWrapper[445043](?)))
      (694369 'move' tmp[694354](694366 '_paramFoldLogical' tmp[694355] tmp[694362]))
    }
    {
      (694374 'move' tmp[694354](694371 '_paramFoldLogical' tmp[694355] none[48]))
    }
    (528915 'init var' _lock[528913] tmp[694354])
    (528917 '.=' this[226100] c"_lock" _lock[528913])
    (560849 'end of statement')
    unknown call_tmp[875831] "expr temp" "maybe param" "maybe type" "temp"
    (875834 'move' call_tmp[875831](528938 '.v' this[226100] c"eltType"))
    unknown call_tmp[875836] "expr temp" "maybe param" "maybe type" "temp"
    (875839 'move' call_tmp[875836](528930 call _ddata[67573](?) call_tmp[875831]))
    unknown call_tmp[875841] "maybe param" "maybe type" "temp"
    (875844 'move' call_tmp[875841](528928 call _ddata[67573](?) call_tmp[875836]))
    unknown _arrays[528925] "temp"
    (528932 'init var' _arrays[528925] nil[32] call_tmp[875841])
    (528934 'init field' this[226100] c"_arrays" _arrays[528925])
    (560850 'end of statement')
    unknown _arrayCapacity[528942] "temp"
    (528944 'init var' _arrayCapacity[528942] 0)
    (528946 '.=' this[226100] c"_arrayCapacity" _arrayCapacity[528942])
    (560851 'end of statement')
    unknown _totalCapacity[528951] "temp"
    (528953 'init var' _totalCapacity[528951] 0)
    (528955 '.=' this[226100] c"_totalCapacity" _totalCapacity[528951])
    (560852 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[528959] "temp"
    unknown call_tmp[875846] "expr temp" "maybe param" "maybe type" "temp"
    (875849 'move' call_tmp[875846](528972 '.v' this[226100] c"eltType"))
    unknown call_tmp[875851] "expr temp" "maybe param" "maybe type" "temp"
    (875854 'move' call_tmp[875851](528962 call _dummyFieldType call_tmp[875846]))
    (528964 'default init var' _dummyFieldToForceBorrowChecking[528959] call_tmp[875851])
    (528968 '.=' this[226100] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[528959])
    (560853 'end of statement')
    (528975 'init done')
    (560854 'end of statement')
    (226135 call(226132 call (partial) _firstTimeInitializeArrays _mt[203] this[226100]))
    (621463 return _void[46])
  }
  function list[231871](?).init[226138](arg _mt[226148]:_MT[201], ref arg this[226140]:list[231871](?), arg eltType[226142]:_any[141](?), param arg parSafe[226145] :
  0 =
  0) : void[4] "last resort" "method" "primary method" "@unstable" "no return value for void"
  {
    (226152 call _checkType eltType[226142])
    (560856 'end of statement')
    unknown eltType[528976] "temp" "type variable"
    (528978 'move' eltType[528976] eltType[226142])
    (528980 'init field' this[226140] c"eltType" eltType[528976])
    (560857 'end of statement')
    unknown parSafe[528984] "param" "temp"
    (528986 'init var' parSafe[528984] parSafe[226145])
    (528988 'init field' this[226140] c"parSafe" parSafe[528984])
    (560858 'end of statement')
    unknown _size[528993] "temp"
    (528995 'init var' _size[528993] 0)
    (528997 '.=' this[226140] c"_size" _size[528993])
    (560859 'end of statement')
    unknown _lock[529009] "temp"
    unknown tmp[694381] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694382] "maybe param" "temp"
    unknown call_tmp[875858] "expr temp" "maybe param" "maybe type" "temp"
    (875861 'move' call_tmp[875858](529017 '.v' this[226140] c"parSafe"))
    (694387 'move' tmp[694382](694385 call _cond_test call_tmp[875858]))
    if tmp[694382]
    {
      unknown tmp[694389] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694391 'move' tmp[694389](1000368 'new' _LockWrapper[445043](?)))
      (694396 'move' tmp[694381](694393 '_paramFoldLogical' tmp[694382] tmp[694389]))
    }
    {
      (694401 'move' tmp[694381](694398 '_paramFoldLogical' tmp[694382] none[48]))
    }
    (529011 'init var' _lock[529009] tmp[694381])
    (529013 '.=' this[226140] c"_lock" _lock[529009])
    (560860 'end of statement')
    unknown call_tmp[875863] "expr temp" "maybe param" "maybe type" "temp"
    (875866 'move' call_tmp[875863](529034 '.v' this[226140] c"eltType"))
    unknown call_tmp[875868] "expr temp" "maybe param" "maybe type" "temp"
    (875871 'move' call_tmp[875868](529026 call _ddata[67573](?) call_tmp[875863]))
    unknown call_tmp[875873] "maybe param" "maybe type" "temp"
    (875876 'move' call_tmp[875873](529024 call _ddata[67573](?) call_tmp[875868]))
    unknown _arrays[529021] "temp"
    (529028 'init var' _arrays[529021] nil[32] call_tmp[875873])
    (529030 'init field' this[226140] c"_arrays" _arrays[529021])
    (560861 'end of statement')
    unknown _arrayCapacity[529038] "temp"
    (529040 'init var' _arrayCapacity[529038] 0)
    (529042 '.=' this[226140] c"_arrayCapacity" _arrayCapacity[529038])
    (560862 'end of statement')
    unknown _totalCapacity[529047] "temp"
    (529049 'init var' _totalCapacity[529047] 0)
    (529051 '.=' this[226140] c"_totalCapacity" _totalCapacity[529047])
    (560863 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529055] "temp"
    unknown call_tmp[875878] "expr temp" "maybe param" "maybe type" "temp"
    (875881 'move' call_tmp[875878](529066 '.v' this[226140] c"eltType"))
    unknown call_tmp[875883] "expr temp" "maybe param" "maybe type" "temp"
    (875886 'move' call_tmp[875883](529058 call _dummyFieldType call_tmp[875878]))
    (529060 'default init var' _dummyFieldToForceBorrowChecking[529055] call_tmp[875883])
    (529062 '.=' this[226140] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529055])
    (560864 'end of statement')
    (529069 'init done')
    (560865 'end of statement')
    (226177 call(226174 call (partial) _firstTimeInitializeArrays _mt[203] this[226140]))
    (621465 return _void[46])
  }
  function list[231871](?).init[226180](arg _mt[226191]:_MT[201], ref arg this[226182]:list[231871](?), arg other[226188]:list[231871](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[875890] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (875893 'move' call_tmp[875890](226210 'typeof' this[226182]))
    unknown call_tmp[875897] "expr temp" "maybe param" "maybe type" "temp"
    (875900 'move' call_tmp[875897](226211 call eltType _mt[203] call_tmp[875890]))
    unknown call_tmp[875902] "expr temp" "maybe param" "maybe type" "temp"
    (875905 'move' call_tmp[875902](226208 call isCopyableType call_tmp[875897]))
    unknown call_tmp[875907] "expr temp" "maybe param" "maybe type" "temp"
    (875910 'move' call_tmp[875907](226205 call ! call_tmp[875902]))
    unknown call_tmp[875912] "expr temp" "maybe param" "maybe type" "temp"
    (875915 'move' call_tmp[875912](226214 call _cond_test call_tmp[875907]))
    if call_tmp[875912]
    {
      unknown call_tmp[875917] "expr temp" "maybe param" "maybe type" "temp"
      (875920 'move' call_tmp[875917](226196 call + "Cannot copy list with element type that " "cannot be copied"))
      (226195 call compilerError call_tmp[875917])
    }
    unknown eltType[529080] "temp" "type variable"
    (529082 'move' eltType[529080](529076 'query' other[226188] 1))
    (529084 'init field' this[226182] c"eltType" eltType[529080])
    (560868 'end of statement')
    unknown call_tmp[875924] "maybe param" "maybe type" "temp"
    (875927 'move' call_tmp[875924](226233 call parSafe _mt[203] other[226188]))
    unknown parSafe[529088] "param" "temp"
    (529090 'init var' parSafe[529088] call_tmp[875924])
    (529092 'init field' this[226182] c"parSafe" parSafe[529088])
    (560869 'end of statement')
    unknown _size[529097] "temp"
    (529099 'init var' _size[529097] 0)
    (529101 '.=' this[226182] c"_size" _size[529097])
    (560870 'end of statement')
    unknown _lock[529113] "temp"
    unknown tmp[694408] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694409] "maybe param" "temp"
    unknown call_tmp[875929] "expr temp" "maybe param" "maybe type" "temp"
    (875932 'move' call_tmp[875929](529121 '.v' this[226182] c"parSafe"))
    (694414 'move' tmp[694409](694412 call _cond_test call_tmp[875929]))
    if tmp[694409]
    {
      unknown tmp[694416] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694418 'move' tmp[694416](1000369 'new' _LockWrapper[445043](?)))
      (694423 'move' tmp[694408](694420 '_paramFoldLogical' tmp[694409] tmp[694416]))
    }
    {
      (694428 'move' tmp[694408](694425 '_paramFoldLogical' tmp[694409] none[48]))
    }
    (529115 'init var' _lock[529113] tmp[694408])
    (529117 '.=' this[226182] c"_lock" _lock[529113])
    (560871 'end of statement')
    unknown call_tmp[875934] "expr temp" "maybe param" "maybe type" "temp"
    (875937 'move' call_tmp[875934](529138 '.v' this[226182] c"eltType"))
    unknown call_tmp[875939] "expr temp" "maybe param" "maybe type" "temp"
    (875942 'move' call_tmp[875939](529130 call _ddata[67573](?) call_tmp[875934]))
    unknown call_tmp[875944] "maybe param" "maybe type" "temp"
    (875947 'move' call_tmp[875944](529128 call _ddata[67573](?) call_tmp[875939]))
    unknown _arrays[529125] "temp"
    (529132 'init var' _arrays[529125] nil[32] call_tmp[875944])
    (529134 'init field' this[226182] c"_arrays" _arrays[529125])
    (560872 'end of statement')
    unknown _arrayCapacity[529142] "temp"
    (529144 'init var' _arrayCapacity[529142] 0)
    (529146 '.=' this[226182] c"_arrayCapacity" _arrayCapacity[529142])
    (560873 'end of statement')
    unknown _totalCapacity[529151] "temp"
    (529153 'init var' _totalCapacity[529151] 0)
    (529155 '.=' this[226182] c"_totalCapacity" _totalCapacity[529151])
    (560874 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529159] "temp"
    unknown call_tmp[875949] "expr temp" "maybe param" "maybe type" "temp"
    (875952 'move' call_tmp[875949](529170 '.v' this[226182] c"eltType"))
    unknown call_tmp[875954] "expr temp" "maybe param" "maybe type" "temp"
    (875957 'move' call_tmp[875954](529162 call _dummyFieldType call_tmp[875949]))
    (529164 'default init var' _dummyFieldToForceBorrowChecking[529159] call_tmp[875954])
    (529166 '.=' this[226182] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529159])
    (560875 'end of statement')
    (529173 'init done')
    (560876 'end of statement')
    (226242 call(445062 call (partial) _commonInitFromIterable _mt[203] this[226182]) other[226188])
    (621467 return _void[46])
  }
  function list[231871](?).init[226246](arg _mt[226264]:_MT[201], ref arg this[226248]:list[231871](?), arg other[226254]:list[231871](?), param arg parSafe[226261] :
  (1002292 call parSafe _mt[203] other[226254]) =
  (226258 call parSafe _mt[203] other[226254])) : void[4] "last resort" "method" "primary method" "@unstable" "no return value for void"
  {
    unknown call_tmp[875963] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (875966 'move' call_tmp[875963](226279 'typeof' this[226248]))
    unknown call_tmp[875970] "expr temp" "maybe param" "maybe type" "temp"
    (875973 'move' call_tmp[875970](226280 call eltType _mt[203] call_tmp[875963]))
    unknown call_tmp[875975] "expr temp" "maybe param" "maybe type" "temp"
    (875978 'move' call_tmp[875975](226277 call isCopyableType call_tmp[875970]))
    unknown call_tmp[875980] "expr temp" "maybe param" "maybe type" "temp"
    (875983 'move' call_tmp[875980](226274 call ! call_tmp[875975]))
    unknown call_tmp[875985] "expr temp" "maybe param" "maybe type" "temp"
    (875988 'move' call_tmp[875985](226283 call _cond_test call_tmp[875980]))
    if call_tmp[875985]
    {
      unknown call_tmp[875990] "expr temp" "maybe param" "maybe type" "temp"
      (875993 'move' call_tmp[875990](226269 call + "Cannot copy list with element type that " "cannot be copied"))
      (226268 call compilerError call_tmp[875990])
    }
    unknown eltType[529184] "temp" "type variable"
    (529186 'move' eltType[529184](529180 'query' other[226254] 1))
    (529188 'init field' this[226248] c"eltType" eltType[529184])
    (560879 'end of statement')
    unknown parSafe[529192] "param" "temp"
    (529194 'init var' parSafe[529192] parSafe[226261])
    (529196 'init field' this[226248] c"parSafe" parSafe[529192])
    (560880 'end of statement')
    unknown _size[529201] "temp"
    (529203 'init var' _size[529201] 0)
    (529205 '.=' this[226248] c"_size" _size[529201])
    (560881 'end of statement')
    unknown _lock[529217] "temp"
    unknown tmp[694435] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694436] "maybe param" "temp"
    unknown call_tmp[875995] "expr temp" "maybe param" "maybe type" "temp"
    (875998 'move' call_tmp[875995](529225 '.v' this[226248] c"parSafe"))
    (694441 'move' tmp[694436](694439 call _cond_test call_tmp[875995]))
    if tmp[694436]
    {
      unknown tmp[694443] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694445 'move' tmp[694443](1000370 'new' _LockWrapper[445043](?)))
      (694450 'move' tmp[694435](694447 '_paramFoldLogical' tmp[694436] tmp[694443]))
    }
    {
      (694455 'move' tmp[694435](694452 '_paramFoldLogical' tmp[694436] none[48]))
    }
    (529219 'init var' _lock[529217] tmp[694435])
    (529221 '.=' this[226248] c"_lock" _lock[529217])
    (560882 'end of statement')
    unknown call_tmp[876000] "expr temp" "maybe param" "maybe type" "temp"
    (876003 'move' call_tmp[876000](529242 '.v' this[226248] c"eltType"))
    unknown call_tmp[876005] "expr temp" "maybe param" "maybe type" "temp"
    (876008 'move' call_tmp[876005](529234 call _ddata[67573](?) call_tmp[876000]))
    unknown call_tmp[876010] "maybe param" "maybe type" "temp"
    (876013 'move' call_tmp[876010](529232 call _ddata[67573](?) call_tmp[876005]))
    unknown _arrays[529229] "temp"
    (529236 'init var' _arrays[529229] nil[32] call_tmp[876010])
    (529238 'init field' this[226248] c"_arrays" _arrays[529229])
    (560883 'end of statement')
    unknown _arrayCapacity[529246] "temp"
    (529248 'init var' _arrayCapacity[529246] 0)
    (529250 '.=' this[226248] c"_arrayCapacity" _arrayCapacity[529246])
    (560884 'end of statement')
    unknown _totalCapacity[529255] "temp"
    (529257 'init var' _totalCapacity[529255] 0)
    (529259 '.=' this[226248] c"_totalCapacity" _totalCapacity[529255])
    (560885 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529263] "temp"
    unknown call_tmp[876015] "expr temp" "maybe param" "maybe type" "temp"
    (876018 'move' call_tmp[876015](529274 '.v' this[226248] c"eltType"))
    unknown call_tmp[876020] "expr temp" "maybe param" "maybe type" "temp"
    (876023 'move' call_tmp[876020](529266 call _dummyFieldType call_tmp[876015]))
    (529268 'default init var' _dummyFieldToForceBorrowChecking[529263] call_tmp[876020])
    (529270 '.=' this[226248] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529263])
    (560886 'end of statement')
    (529277 'init done')
    (560887 'end of statement')
    (226308 call(445071 call (partial) _commonInitFromIterable _mt[203] this[226248]) other[226254])
    (621469 return _void[46])
  }
  function list[231871](?).init[226312](arg _mt[226325]:_MT[201], ref arg this[226314]:list[231871](?), arg other[226322]:_array[255540](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[876029] "expr temp" "maybe param" "maybe type" "temp"
    (876032 'move' call_tmp[876029](529280 call eltType _mt[203] other[226322]))
    (226329 call _checkType call_tmp[876029])
    (560889 'end of statement')
    unknown call_tmp[876036] "expr temp" "maybe param" "maybe type" "temp"
    (876039 'move' call_tmp[876036](529284 call eltType _mt[203] other[226322]))
    unknown call_tmp[876041] "expr temp" "maybe param" "maybe type" "temp"
    (876044 'move' call_tmp[876041](226345 call isCopyableType call_tmp[876036]))
    unknown call_tmp[876046] "expr temp" "maybe param" "maybe type" "temp"
    (876049 'move' call_tmp[876046](226342 call ! call_tmp[876041]))
    unknown call_tmp[876051] "expr temp" "maybe param" "maybe type" "temp"
    (876054 'move' call_tmp[876051](226347 call _cond_test call_tmp[876046]))
    if call_tmp[876051]
    {
      unknown call_tmp[876056] "expr temp" "maybe param" "maybe type" "temp"
      (876059 'move' call_tmp[876056](226333 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (226332 call compilerError call_tmp[876056])
    }
    unknown eltType[529292] "temp" "type variable"
    (529294 'move' eltType[529292](529288 call eltType _mt[203] other[226322]))
    (529296 'init field' this[226314] c"eltType" eltType[529292])
    (560891 'end of statement')
    unknown parSafe[529300] "param" "temp"
    (529302 'init var' parSafe[529300] 0)
    (529304 'init field' this[226314] c"parSafe" parSafe[529300])
    (560892 'end of statement')
    unknown _size[529309] "temp"
    (529311 'init var' _size[529309] 0)
    (529313 '.=' this[226314] c"_size" _size[529309])
    (560893 'end of statement')
    unknown _lock[529325] "temp"
    unknown tmp[694462] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694463] "maybe param" "temp"
    unknown call_tmp[876063] "expr temp" "maybe param" "maybe type" "temp"
    (876066 'move' call_tmp[876063](529333 '.v' this[226314] c"parSafe"))
    (694468 'move' tmp[694463](694466 call _cond_test call_tmp[876063]))
    if tmp[694463]
    {
      unknown tmp[694470] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694472 'move' tmp[694470](1000371 'new' _LockWrapper[445043](?)))
      (694477 'move' tmp[694462](694474 '_paramFoldLogical' tmp[694463] tmp[694470]))
    }
    {
      (694482 'move' tmp[694462](694479 '_paramFoldLogical' tmp[694463] none[48]))
    }
    (529327 'init var' _lock[529325] tmp[694462])
    (529329 '.=' this[226314] c"_lock" _lock[529325])
    (560894 'end of statement')
    unknown call_tmp[876068] "expr temp" "maybe param" "maybe type" "temp"
    (876071 'move' call_tmp[876068](529350 '.v' this[226314] c"eltType"))
    unknown call_tmp[876073] "expr temp" "maybe param" "maybe type" "temp"
    (876076 'move' call_tmp[876073](529342 call _ddata[67573](?) call_tmp[876068]))
    unknown call_tmp[876078] "maybe param" "maybe type" "temp"
    (876081 'move' call_tmp[876078](529340 call _ddata[67573](?) call_tmp[876073]))
    unknown _arrays[529337] "temp"
    (529344 'init var' _arrays[529337] nil[32] call_tmp[876078])
    (529346 'init field' this[226314] c"_arrays" _arrays[529337])
    (560895 'end of statement')
    unknown _arrayCapacity[529354] "temp"
    (529356 'init var' _arrayCapacity[529354] 0)
    (529358 '.=' this[226314] c"_arrayCapacity" _arrayCapacity[529354])
    (560896 'end of statement')
    unknown _totalCapacity[529363] "temp"
    (529365 'init var' _totalCapacity[529363] 0)
    (529367 '.=' this[226314] c"_totalCapacity" _totalCapacity[529363])
    (560897 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529371] "temp"
    unknown call_tmp[876083] "expr temp" "maybe param" "maybe type" "temp"
    (876086 'move' call_tmp[876083](529382 '.v' this[226314] c"eltType"))
    unknown call_tmp[876088] "expr temp" "maybe param" "maybe type" "temp"
    (876091 'move' call_tmp[876088](529374 call _dummyFieldType call_tmp[876083]))
    (529376 'default init var' _dummyFieldToForceBorrowChecking[529371] call_tmp[876088])
    (529378 '.=' this[226314] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529371])
    (560898 'end of statement')
    (529385 'init done')
    (560899 'end of statement')
    (226372 call(445079 call (partial) _commonInitFromIterable _mt[203] this[226314]) other[226322])
    (621471 return _void[46])
  }
  function list[231871](?).init[226376](arg _mt[226393]:_MT[201], ref arg this[226378]:list[231871](?), arg other[226386]:_array[255540](?), param arg parSafe[226390] :
  0 =
  0) : void[4] "last resort" "method" "primary method" "@unstable" "no return value for void"
  {
    unknown call_tmp[876097] "expr temp" "maybe param" "maybe type" "temp"
    (876100 'move' call_tmp[876097](529388 call eltType _mt[203] other[226386]))
    (226397 call _checkType call_tmp[876097])
    (560901 'end of statement')
    unknown call_tmp[876104] "expr temp" "maybe param" "maybe type" "temp"
    (876107 'move' call_tmp[876104](529392 call eltType _mt[203] other[226386]))
    unknown call_tmp[876109] "expr temp" "maybe param" "maybe type" "temp"
    (876112 'move' call_tmp[876109](226409 call isCopyableType call_tmp[876104]))
    unknown call_tmp[876114] "expr temp" "maybe param" "maybe type" "temp"
    (876117 'move' call_tmp[876114](226406 call ! call_tmp[876109]))
    unknown call_tmp[876119] "expr temp" "maybe param" "maybe type" "temp"
    (876122 'move' call_tmp[876119](226411 call _cond_test call_tmp[876114]))
    if call_tmp[876119]
    {
      unknown call_tmp[876124] "expr temp" "maybe param" "maybe type" "temp"
      (876127 'move' call_tmp[876124](226401 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (226400 call compilerError call_tmp[876124])
    }
    unknown eltType[529400] "temp" "type variable"
    (529402 'move' eltType[529400](529396 call eltType _mt[203] other[226386]))
    (529404 'init field' this[226378] c"eltType" eltType[529400])
    (560903 'end of statement')
    unknown parSafe[529408] "param" "temp"
    (529410 'init var' parSafe[529408] parSafe[226390])
    (529412 'init field' this[226378] c"parSafe" parSafe[529408])
    (560904 'end of statement')
    unknown _size[529417] "temp"
    (529419 'init var' _size[529417] 0)
    (529421 '.=' this[226378] c"_size" _size[529417])
    (560905 'end of statement')
    unknown _lock[529433] "temp"
    unknown tmp[694489] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694490] "maybe param" "temp"
    unknown call_tmp[876131] "expr temp" "maybe param" "maybe type" "temp"
    (876134 'move' call_tmp[876131](529441 '.v' this[226378] c"parSafe"))
    (694495 'move' tmp[694490](694493 call _cond_test call_tmp[876131]))
    if tmp[694490]
    {
      unknown tmp[694497] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694499 'move' tmp[694497](1000372 'new' _LockWrapper[445043](?)))
      (694504 'move' tmp[694489](694501 '_paramFoldLogical' tmp[694490] tmp[694497]))
    }
    {
      (694509 'move' tmp[694489](694506 '_paramFoldLogical' tmp[694490] none[48]))
    }
    (529435 'init var' _lock[529433] tmp[694489])
    (529437 '.=' this[226378] c"_lock" _lock[529433])
    (560906 'end of statement')
    unknown call_tmp[876136] "expr temp" "maybe param" "maybe type" "temp"
    (876139 'move' call_tmp[876136](529458 '.v' this[226378] c"eltType"))
    unknown call_tmp[876141] "expr temp" "maybe param" "maybe type" "temp"
    (876144 'move' call_tmp[876141](529450 call _ddata[67573](?) call_tmp[876136]))
    unknown call_tmp[876146] "maybe param" "maybe type" "temp"
    (876149 'move' call_tmp[876146](529448 call _ddata[67573](?) call_tmp[876141]))
    unknown _arrays[529445] "temp"
    (529452 'init var' _arrays[529445] nil[32] call_tmp[876146])
    (529454 'init field' this[226378] c"_arrays" _arrays[529445])
    (560907 'end of statement')
    unknown _arrayCapacity[529462] "temp"
    (529464 'init var' _arrayCapacity[529462] 0)
    (529466 '.=' this[226378] c"_arrayCapacity" _arrayCapacity[529462])
    (560908 'end of statement')
    unknown _totalCapacity[529471] "temp"
    (529473 'init var' _totalCapacity[529471] 0)
    (529475 '.=' this[226378] c"_totalCapacity" _totalCapacity[529471])
    (560909 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529479] "temp"
    unknown call_tmp[876151] "expr temp" "maybe param" "maybe type" "temp"
    (876154 'move' call_tmp[876151](529490 '.v' this[226378] c"eltType"))
    unknown call_tmp[876156] "expr temp" "maybe param" "maybe type" "temp"
    (876159 'move' call_tmp[876156](529482 call _dummyFieldType call_tmp[876151]))
    (529484 'default init var' _dummyFieldToForceBorrowChecking[529479] call_tmp[876156])
    (529486 '.=' this[226378] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529479])
    (560910 'end of statement')
    (529493 'init done')
    (560911 'end of statement')
    (226436 call(445088 call (partial) _commonInitFromIterable _mt[203] this[226378]) other[226386])
    (621473 return _void[46])
  }
  function list[231871](?).init[226440](arg _mt[226451]:_MT[201], ref arg this[226442]:list[231871](?), arg other[226448]:range[240](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[876163] "expr temp" "maybe param" "maybe type" "temp"
    (876166 'move' call_tmp[876163](529500 'query' other[226448] 1))
    (226455 call _checkType call_tmp[876163])
    (560913 'end of statement')
    unknown eltType[529507] "temp" "type variable"
    (529509 'move' eltType[529507](529503 'query' other[226448] 1))
    (529511 'init field' this[226442] c"eltType" eltType[529507])
    (560914 'end of statement')
    unknown parSafe[529515] "param" "temp"
    (529517 'init var' parSafe[529515] 0)
    (529519 'init field' this[226442] c"parSafe" parSafe[529515])
    (560915 'end of statement')
    unknown call_tmp[876170] "expr temp" "maybe param" "maybe type" "temp"
    (876173 'move' call_tmp[876170](226514 call bounds _mt[203] other[226448]))
    unknown call_tmp[876175] "expr temp" "maybe param" "maybe type" "temp"
    (876178 'move' call_tmp[876175](226511 call != call_tmp[876170] both[107114]))
    unknown call_tmp[876180] "expr temp" "maybe param" "maybe type" "temp"
    (876183 'move' call_tmp[876180](226521 call _cond_test call_tmp[876175]))
    if call_tmp[876180]
    {
      unknown call_tmp[876185] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876188 'move' call_tmp[876185](226477 'typeof' this[226442]))
      unknown call_tmp[876190] "maybe param" "maybe type" "temp"
      (876193 'move' call_tmp[876190](226474 call : call_tmp[876185] string[244]))
      unknown e[226473] "dead at end of block" "param"
      (649724 'init var' e[226473] call_tmp[876190])
      (226480 'end of statement')
      unknown call_tmp[876195] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876198 'move' call_tmp[876195](226486 'typeof' other[226448]))
      unknown call_tmp[876200] "maybe param" "maybe type" "temp"
      (876203 'move' call_tmp[876200](226483 call : call_tmp[876195] string[244]))
      unknown f[226482] "dead at end of block" "param"
      (649726 'init var' f[226482] call_tmp[876200])
      (226489 'end of statement')
      unknown call_tmp[876205] "expr temp" "maybe param" "maybe type" "temp"
      (876208 'move' call_tmp[876205](226496 call + "Cannot init " e[226473]))
      unknown call_tmp[876210] "expr temp" "maybe param" "maybe type" "temp"
      (876213 'move' call_tmp[876210](226494 call + call_tmp[876205] " from unbounded "))
      unknown call_tmp[876215] "maybe param" "maybe type" "temp"
      (876218 'move' call_tmp[876215](226492 call + call_tmp[876210] f[226482]))
      unknown msg[226491] "dead at end of block" "param"
      (649728 'init var' msg[226491] call_tmp[876215])
      (226507 'end of statement')
      (226509 call compilerError msg[226491])
    }
    unknown _size[529524] "temp"
    (529526 'init var' _size[529524] 0)
    (529528 '.=' this[226442] c"_size" _size[529524])
    (560917 'end of statement')
    unknown _lock[529540] "temp"
    unknown tmp[694516] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694517] "maybe param" "temp"
    unknown call_tmp[876220] "expr temp" "maybe param" "maybe type" "temp"
    (876223 'move' call_tmp[876220](529548 '.v' this[226442] c"parSafe"))
    (694522 'move' tmp[694517](694520 call _cond_test call_tmp[876220]))
    if tmp[694517]
    {
      unknown tmp[694524] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694526 'move' tmp[694524](1000373 'new' _LockWrapper[445043](?)))
      (694531 'move' tmp[694516](694528 '_paramFoldLogical' tmp[694517] tmp[694524]))
    }
    {
      (694536 'move' tmp[694516](694533 '_paramFoldLogical' tmp[694517] none[48]))
    }
    (529542 'init var' _lock[529540] tmp[694516])
    (529544 '.=' this[226442] c"_lock" _lock[529540])
    (560918 'end of statement')
    unknown call_tmp[876225] "expr temp" "maybe param" "maybe type" "temp"
    (876228 'move' call_tmp[876225](529565 '.v' this[226442] c"eltType"))
    unknown call_tmp[876230] "expr temp" "maybe param" "maybe type" "temp"
    (876233 'move' call_tmp[876230](529557 call _ddata[67573](?) call_tmp[876225]))
    unknown call_tmp[876235] "maybe param" "maybe type" "temp"
    (876238 'move' call_tmp[876235](529555 call _ddata[67573](?) call_tmp[876230]))
    unknown _arrays[529552] "temp"
    (529559 'init var' _arrays[529552] nil[32] call_tmp[876235])
    (529561 'init field' this[226442] c"_arrays" _arrays[529552])
    (560919 'end of statement')
    unknown _arrayCapacity[529569] "temp"
    (529571 'init var' _arrayCapacity[529569] 0)
    (529573 '.=' this[226442] c"_arrayCapacity" _arrayCapacity[529569])
    (560920 'end of statement')
    unknown _totalCapacity[529578] "temp"
    (529580 'init var' _totalCapacity[529578] 0)
    (529582 '.=' this[226442] c"_totalCapacity" _totalCapacity[529578])
    (560921 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529586] "temp"
    unknown call_tmp[876240] "expr temp" "maybe param" "maybe type" "temp"
    (876243 'move' call_tmp[876240](529597 '.v' this[226442] c"eltType"))
    unknown call_tmp[876245] "expr temp" "maybe param" "maybe type" "temp"
    (876248 'move' call_tmp[876245](529589 call _dummyFieldType call_tmp[876240]))
    (529591 'default init var' _dummyFieldToForceBorrowChecking[529586] call_tmp[876245])
    (529593 '.=' this[226442] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529586])
    (560922 'end of statement')
    (529600 'init done')
    (560923 'end of statement')
    (226531 call(445101 call (partial) _commonInitFromIterable _mt[203] this[226442]) other[226448])
    (621475 return _void[46])
  }
  function list[231871](?).init[226535](arg _mt[226550]:_MT[201], ref arg this[226537]:list[231871](?), arg other[226543]:range[240](?), param arg parSafe[226547] :
  0 =
  0) : void[4] "last resort" "method" "primary method" "@unstable" "no return value for void"
  {
    unknown call_tmp[876252] "expr temp" "maybe param" "maybe type" "temp"
    (876255 'move' call_tmp[876252](529607 'query' other[226543] 1))
    (226554 call _checkType call_tmp[876252])
    (560925 'end of statement')
    unknown eltType[529614] "temp" "type variable"
    (529616 'move' eltType[529614](529610 'query' other[226543] 1))
    (529618 'init field' this[226537] c"eltType" eltType[529614])
    (560926 'end of statement')
    unknown parSafe[529622] "param" "temp"
    (529624 'init var' parSafe[529622] parSafe[226547])
    (529626 'init field' this[226537] c"parSafe" parSafe[529622])
    (560927 'end of statement')
    unknown call_tmp[876259] "expr temp" "maybe param" "maybe type" "temp"
    (876262 'move' call_tmp[876259](226609 call bounds _mt[203] other[226543]))
    unknown call_tmp[876264] "expr temp" "maybe param" "maybe type" "temp"
    (876267 'move' call_tmp[876264](226606 call != call_tmp[876259] both[107114]))
    unknown call_tmp[876269] "expr temp" "maybe param" "maybe type" "temp"
    (876272 'move' call_tmp[876269](226616 call _cond_test call_tmp[876264]))
    if call_tmp[876269]
    {
      unknown call_tmp[876274] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876277 'move' call_tmp[876274](226576 'typeof' this[226537]))
      unknown call_tmp[876279] "maybe param" "maybe type" "temp"
      (876282 'move' call_tmp[876279](226573 call : call_tmp[876274] string[244]))
      unknown e[226572] "dead at end of block" "param"
      (649730 'init var' e[226572] call_tmp[876279])
      (226579 'end of statement')
      unknown call_tmp[876284] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876287 'move' call_tmp[876284](226585 'typeof' other[226543]))
      unknown call_tmp[876289] "maybe param" "maybe type" "temp"
      (876292 'move' call_tmp[876289](226582 call : call_tmp[876284] string[244]))
      unknown f[226581] "dead at end of block" "param"
      (649732 'init var' f[226581] call_tmp[876289])
      (226588 'end of statement')
      unknown call_tmp[876294] "expr temp" "maybe param" "maybe type" "temp"
      (876297 'move' call_tmp[876294](226595 call + "Cannot init " e[226572]))
      unknown call_tmp[876299] "expr temp" "maybe param" "maybe type" "temp"
      (876302 'move' call_tmp[876299](226593 call + call_tmp[876294] " from unbounded "))
      unknown call_tmp[876304] "maybe param" "maybe type" "temp"
      (876307 'move' call_tmp[876304](226591 call + call_tmp[876299] f[226581]))
      unknown msg[226590] "dead at end of block" "param"
      (649734 'init var' msg[226590] call_tmp[876304])
      (226602 'end of statement')
      (226604 call compilerError msg[226590])
    }
    unknown _size[529631] "temp"
    (529633 'init var' _size[529631] 0)
    (529635 '.=' this[226537] c"_size" _size[529631])
    (560929 'end of statement')
    unknown _lock[529647] "temp"
    unknown tmp[694543] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694544] "maybe param" "temp"
    unknown call_tmp[876309] "expr temp" "maybe param" "maybe type" "temp"
    (876312 'move' call_tmp[876309](529655 '.v' this[226537] c"parSafe"))
    (694549 'move' tmp[694544](694547 call _cond_test call_tmp[876309]))
    if tmp[694544]
    {
      unknown tmp[694551] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694553 'move' tmp[694551](1000374 'new' _LockWrapper[445043](?)))
      (694558 'move' tmp[694543](694555 '_paramFoldLogical' tmp[694544] tmp[694551]))
    }
    {
      (694563 'move' tmp[694543](694560 '_paramFoldLogical' tmp[694544] none[48]))
    }
    (529649 'init var' _lock[529647] tmp[694543])
    (529651 '.=' this[226537] c"_lock" _lock[529647])
    (560930 'end of statement')
    unknown call_tmp[876314] "expr temp" "maybe param" "maybe type" "temp"
    (876317 'move' call_tmp[876314](529672 '.v' this[226537] c"eltType"))
    unknown call_tmp[876319] "expr temp" "maybe param" "maybe type" "temp"
    (876322 'move' call_tmp[876319](529664 call _ddata[67573](?) call_tmp[876314]))
    unknown call_tmp[876324] "maybe param" "maybe type" "temp"
    (876327 'move' call_tmp[876324](529662 call _ddata[67573](?) call_tmp[876319]))
    unknown _arrays[529659] "temp"
    (529666 'init var' _arrays[529659] nil[32] call_tmp[876324])
    (529668 'init field' this[226537] c"_arrays" _arrays[529659])
    (560931 'end of statement')
    unknown _arrayCapacity[529676] "temp"
    (529678 'init var' _arrayCapacity[529676] 0)
    (529680 '.=' this[226537] c"_arrayCapacity" _arrayCapacity[529676])
    (560932 'end of statement')
    unknown _totalCapacity[529685] "temp"
    (529687 'init var' _totalCapacity[529685] 0)
    (529689 '.=' this[226537] c"_totalCapacity" _totalCapacity[529685])
    (560933 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529693] "temp"
    unknown call_tmp[876329] "expr temp" "maybe param" "maybe type" "temp"
    (876332 'move' call_tmp[876329](529704 '.v' this[226537] c"eltType"))
    unknown call_tmp[876334] "expr temp" "maybe param" "maybe type" "temp"
    (876337 'move' call_tmp[876334](529696 call _dummyFieldType call_tmp[876329]))
    (529698 'default init var' _dummyFieldToForceBorrowChecking[529693] call_tmp[876334])
    (529700 '.=' this[226537] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529693])
    (560934 'end of statement')
    (529707 'init done')
    (560935 'end of statement')
    (226626 call(445115 call (partial) _commonInitFromIterable _mt[203] this[226537]) other[226543])
    (621477 return _void[46])
  }
  function list[231871](?).init[226630](arg _mt[226638]:_MT[201], ref arg this[226632]:list[231871](?), arg other[226635]:_iteratorRecord[165](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown t[226642] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[876341] "expr temp" "maybe param" "used in type" "maybe type" "temp" "type variable"
    (876344 'move' call_tmp[876341](649737 'typeof' other[226635]))
    (649739 'move' t[226642](649736 'scalar promotion type' call_tmp[876341]))
    (560937 'end of statement')
    (226648 call _checkType t[226642])
    (560938 'end of statement' t[226642])
    unknown eltType[529708] "temp" "type variable"
    (529710 'move' eltType[529708] t[226642])
    (529712 'init field' this[226632] c"eltType" eltType[529708])
    (560940 'end of statement')
    unknown parSafe[529716] "param" "temp"
    (529718 'init var' parSafe[529716] 0)
    (529720 'init field' this[226632] c"parSafe" parSafe[529716])
    (560941 'end of statement')
    unknown _size[529725] "temp"
    (529727 'init var' _size[529725] 0)
    (529729 '.=' this[226632] c"_size" _size[529725])
    (560942 'end of statement')
    unknown _lock[529741] "temp"
    unknown tmp[694570] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694571] "maybe param" "temp"
    unknown call_tmp[876346] "expr temp" "maybe param" "maybe type" "temp"
    (876349 'move' call_tmp[876346](529749 '.v' this[226632] c"parSafe"))
    (694576 'move' tmp[694571](694574 call _cond_test call_tmp[876346]))
    if tmp[694571]
    {
      unknown tmp[694578] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694580 'move' tmp[694578](1000375 'new' _LockWrapper[445043](?)))
      (694585 'move' tmp[694570](694582 '_paramFoldLogical' tmp[694571] tmp[694578]))
    }
    {
      (694590 'move' tmp[694570](694587 '_paramFoldLogical' tmp[694571] none[48]))
    }
    (529743 'init var' _lock[529741] tmp[694570])
    (529745 '.=' this[226632] c"_lock" _lock[529741])
    (560943 'end of statement')
    unknown call_tmp[876351] "expr temp" "maybe param" "maybe type" "temp"
    (876354 'move' call_tmp[876351](529766 '.v' this[226632] c"eltType"))
    unknown call_tmp[876356] "expr temp" "maybe param" "maybe type" "temp"
    (876359 'move' call_tmp[876356](529758 call _ddata[67573](?) call_tmp[876351]))
    unknown call_tmp[876361] "maybe param" "maybe type" "temp"
    (876364 'move' call_tmp[876361](529756 call _ddata[67573](?) call_tmp[876356]))
    unknown _arrays[529753] "temp"
    (529760 'init var' _arrays[529753] nil[32] call_tmp[876361])
    (529762 'init field' this[226632] c"_arrays" _arrays[529753])
    (560944 'end of statement')
    unknown _arrayCapacity[529770] "temp"
    (529772 'init var' _arrayCapacity[529770] 0)
    (529774 '.=' this[226632] c"_arrayCapacity" _arrayCapacity[529770])
    (560945 'end of statement')
    unknown _totalCapacity[529779] "temp"
    (529781 'init var' _totalCapacity[529779] 0)
    (529783 '.=' this[226632] c"_totalCapacity" _totalCapacity[529779])
    (560946 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529787] "temp"
    unknown call_tmp[876366] "expr temp" "maybe param" "maybe type" "temp"
    (876369 'move' call_tmp[876366](529798 '.v' this[226632] c"eltType"))
    unknown call_tmp[876371] "expr temp" "maybe param" "maybe type" "temp"
    (876374 'move' call_tmp[876371](529790 call _dummyFieldType call_tmp[876366]))
    (529792 'default init var' _dummyFieldToForceBorrowChecking[529787] call_tmp[876371])
    (529794 '.=' this[226632] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529787])
    (560947 'end of statement')
    (529801 'init done')
    (560948 'end of statement')
    (226670 call(445124 call (partial) _commonInitFromIterable _mt[203] this[226632]) other[226635])
    (621479 return _void[46])
  }
  function list[231871](?).init[226674](arg _mt[226686]:_MT[201], ref arg this[226676]:list[231871](?), arg other[226679]:_iteratorRecord[165](?), param arg parSafe[226683] :
  0 =
  0) : void[4] "last resort" "method" "primary method" "@unstable" "no return value for void"
  {
    unknown t[226690] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[876378] "expr temp" "maybe param" "used in type" "maybe type" "temp" "type variable"
    (876381 'move' call_tmp[876378](649742 'typeof' other[226679]))
    (649744 'move' t[226690](649741 'scalar promotion type' call_tmp[876378]))
    (560950 'end of statement')
    (226696 call _checkType t[226690])
    (560951 'end of statement' t[226690])
    unknown eltType[529802] "temp" "type variable"
    (529804 'move' eltType[529802] t[226690])
    (529806 'init field' this[226676] c"eltType" eltType[529802])
    (560953 'end of statement')
    unknown parSafe[529810] "param" "temp"
    (529812 'init var' parSafe[529810] parSafe[226683])
    (529814 'init field' this[226676] c"parSafe" parSafe[529810])
    (560954 'end of statement')
    unknown _size[529819] "temp"
    (529821 'init var' _size[529819] 0)
    (529823 '.=' this[226676] c"_size" _size[529819])
    (560955 'end of statement')
    unknown _lock[529835] "temp"
    unknown tmp[694597] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694598] "maybe param" "temp"
    unknown call_tmp[876383] "expr temp" "maybe param" "maybe type" "temp"
    (876386 'move' call_tmp[876383](529843 '.v' this[226676] c"parSafe"))
    (694603 'move' tmp[694598](694601 call _cond_test call_tmp[876383]))
    if tmp[694598]
    {
      unknown tmp[694605] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694607 'move' tmp[694605](1000376 'new' _LockWrapper[445043](?)))
      (694612 'move' tmp[694597](694609 '_paramFoldLogical' tmp[694598] tmp[694605]))
    }
    {
      (694617 'move' tmp[694597](694614 '_paramFoldLogical' tmp[694598] none[48]))
    }
    (529837 'init var' _lock[529835] tmp[694597])
    (529839 '.=' this[226676] c"_lock" _lock[529835])
    (560956 'end of statement')
    unknown call_tmp[876388] "expr temp" "maybe param" "maybe type" "temp"
    (876391 'move' call_tmp[876388](529860 '.v' this[226676] c"eltType"))
    unknown call_tmp[876393] "expr temp" "maybe param" "maybe type" "temp"
    (876396 'move' call_tmp[876393](529852 call _ddata[67573](?) call_tmp[876388]))
    unknown call_tmp[876398] "maybe param" "maybe type" "temp"
    (876401 'move' call_tmp[876398](529850 call _ddata[67573](?) call_tmp[876393]))
    unknown _arrays[529847] "temp"
    (529854 'init var' _arrays[529847] nil[32] call_tmp[876398])
    (529856 'init field' this[226676] c"_arrays" _arrays[529847])
    (560957 'end of statement')
    unknown _arrayCapacity[529864] "temp"
    (529866 'init var' _arrayCapacity[529864] 0)
    (529868 '.=' this[226676] c"_arrayCapacity" _arrayCapacity[529864])
    (560958 'end of statement')
    unknown _totalCapacity[529873] "temp"
    (529875 'init var' _totalCapacity[529873] 0)
    (529877 '.=' this[226676] c"_totalCapacity" _totalCapacity[529873])
    (560959 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529881] "temp"
    unknown call_tmp[876403] "expr temp" "maybe param" "maybe type" "temp"
    (876406 'move' call_tmp[876403](529892 '.v' this[226676] c"eltType"))
    unknown call_tmp[876408] "expr temp" "maybe param" "maybe type" "temp"
    (876411 'move' call_tmp[876408](529884 call _dummyFieldType call_tmp[876403]))
    (529886 'default init var' _dummyFieldToForceBorrowChecking[529881] call_tmp[876408])
    (529888 '.=' this[226676] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529881])
    (560960 'end of statement')
    (529895 'init done')
    (560961 'end of statement')
    (226718 call(445134 call (partial) _commonInitFromIterable _mt[203] this[226676]) other[226679])
    (621481 return _void[46])
  }
  function list[231871](?).init=[226722](arg _mt[226730]:_MT[201], ref arg this[226724]:list[231871](?), arg other[226727]:list[231871](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[876415] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876418 'move' call_tmp[876415](226745 'typeof' this[226724]))
    unknown call_tmp[876422] "expr temp" "maybe param" "maybe type" "temp"
    (876425 'move' call_tmp[876422](226746 call eltType _mt[203] call_tmp[876415]))
    unknown call_tmp[876427] "expr temp" "maybe param" "maybe type" "temp"
    (876430 'move' call_tmp[876427](226743 call isCopyableType call_tmp[876422]))
    unknown call_tmp[876432] "expr temp" "maybe param" "maybe type" "temp"
    (876435 'move' call_tmp[876432](226740 call ! call_tmp[876427]))
    unknown call_tmp[876437] "expr temp" "maybe param" "maybe type" "temp"
    (876440 'move' call_tmp[876437](226749 call _cond_test call_tmp[876432]))
    if call_tmp[876437]
    {
      unknown call_tmp[876442] "expr temp" "maybe param" "maybe type" "temp"
      (876445 'move' call_tmp[876442](226735 call + "Cannot copy list with element type that " "cannot be copied"))
      (226734 call compilerError call_tmp[876442])
    }
    unknown eltType[529896] "temp" "type variable"
    unknown tmp[694624] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694625] "maybe param" "temp"
    unknown call_tmp[876447] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876450 'move' call_tmp[876447](226763 'typeof' this[226724]))
    unknown call_tmp[876454] "expr temp" "maybe param" "maybe type" "temp"
    (876457 'move' call_tmp[876454](226764 call eltType _mt[203] call_tmp[876447]))
    unknown call_tmp[876459] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876462 'move' call_tmp[876459](226760 call != call_tmp[876454] ?[227]))
    (694630 'move' tmp[694625](694628 call _cond_test call_tmp[876459]))
    if tmp[694625]
    {
      unknown tmp[694632] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876464] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876467 'move' call_tmp[876464](226769 'typeof' this[226724]))
      (694634 'move' tmp[694632](226770 call eltType _mt[203] call_tmp[876464]))
      (694639 'move' tmp[694624](694636 '_paramFoldLogical' tmp[694625] tmp[694632]))
    }
    {
      unknown tmp[694641] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694643 'move' tmp[694641](226774 call eltType _mt[203] other[226727]))
      (694648 'move' tmp[694624](694645 '_paramFoldLogical' tmp[694625] tmp[694641]))
    }
    (529898 'move' eltType[529896] tmp[694624])
    (529900 'init field' this[226724] c"eltType" eltType[529896])
    (560964 'end of statement')
    unknown parSafe[529904] "param" "temp"
    unknown tmp[694655] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694656] "maybe param" "temp"
    unknown call_tmp[876473] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876476 'move' call_tmp[876473](226789 'typeof' this[226724]))
    unknown call_tmp[876480] "expr temp" "maybe param" "maybe type" "temp"
    (876483 'move' call_tmp[876480](226790 call parSafe _mt[203] call_tmp[876473]))
    unknown call_tmp[876485] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876488 'move' call_tmp[876485](226786 call != call_tmp[876480] ?[227]))
    (694661 'move' tmp[694656](694659 call _cond_test call_tmp[876485]))
    if tmp[694656]
    {
      unknown tmp[694663] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876490] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876493 'move' call_tmp[876490](226795 'typeof' this[226724]))
      (694665 'move' tmp[694663](226796 call parSafe _mt[203] call_tmp[876490]))
      (694670 'move' tmp[694655](694667 '_paramFoldLogical' tmp[694656] tmp[694663]))
    }
    {
      unknown tmp[694672] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694674 'move' tmp[694672](226800 call parSafe _mt[203] other[226727]))
      (694679 'move' tmp[694655](694676 '_paramFoldLogical' tmp[694656] tmp[694672]))
    }
    (529906 'init var' parSafe[529904] tmp[694655])
    (529908 'init field' this[226724] c"parSafe" parSafe[529904])
    (560965 'end of statement')
    unknown tmp[497472] "maybe param" "temp"
    unknown call_tmp[876499] "expr temp" "maybe param" "maybe type" "temp"
    (876502 'move' call_tmp[876499](226832 '.' this[226724] c"parSafe"))
    unknown call_tmp[876506] "expr temp" "maybe param" "maybe type" "temp"
    (876509 'move' call_tmp[876506](226836 call parSafe _mt[203] other[226727]))
    (497483 'move' tmp[497472](226829 call != call_tmp[876499] call_tmp[876506]))
    unknown call_tmp[876511] "expr temp" "maybe param" "maybe type" "temp"
    (876514 'move' call_tmp[876511](497485 call _cond_invalid tmp[497472]))
    if call_tmp[876511]
    {
      (497488 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[694686] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694687] "maybe param" "temp"
    unknown call_tmp[876516] "expr temp" "maybe param" "maybe type" "temp"
    (876519 'move' call_tmp[876516](497473 call isTrue tmp[497472]))
    (694692 'move' tmp[694687](694690 call _cond_test call_tmp[876516]))
    if tmp[694687]
    {
      unknown tmp[694694] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694696 'move' tmp[694694](497476 call isTrue warnForListParsafeMismatch[226040]))
      (694701 'move' tmp[694686](694698 '_paramFoldLogical' tmp[694687] tmp[694694]))
    }
    {
      (694706 'move' tmp[694686](694703 '_paramFoldLogical' tmp[694687] 0))
    }
    unknown call_tmp[876521] "expr temp" "maybe param" "maybe type" "temp"
    (876524 'move' call_tmp[876521](226840 call _cond_test tmp[694686]))
    if call_tmp[876521]
    {
      unknown call_tmp[876526] "expr temp" "maybe param" "maybe type" "temp"
      (876529 'move' call_tmp[876526](226813 call + "initializing between two lists with different " "parSafe settings\n"))
      unknown call_tmp[876531] "expr temp" "maybe param" "maybe type" "temp"
      (876534 'move' call_tmp[876531](226811 call + call_tmp[876526] "Note: this warning can be "))
      unknown call_tmp[876536] "expr temp" "maybe param" "maybe type" "temp"
      (876539 'move' call_tmp[876536](226809 call + call_tmp[876531] "silenced with '-swarnForListParsafeMismatch=false'"))
      (226808 call compilerWarning call_tmp[876536])
    }
    unknown _size[529913] "temp"
    (529915 'init var' _size[529913] 0)
    (529917 '.=' this[226724] c"_size" _size[529913])
    (560968 'end of statement')
    unknown _lock[529929] "temp"
    unknown tmp[694713] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694714] "maybe param" "temp"
    unknown call_tmp[876541] "expr temp" "maybe param" "maybe type" "temp"
    (876544 'move' call_tmp[876541](529937 '.v' this[226724] c"parSafe"))
    (694719 'move' tmp[694714](694717 call _cond_test call_tmp[876541]))
    if tmp[694714]
    {
      unknown tmp[694721] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694723 'move' tmp[694721](1000377 'new' _LockWrapper[445043](?)))
      (694728 'move' tmp[694713](694725 '_paramFoldLogical' tmp[694714] tmp[694721]))
    }
    {
      (694733 'move' tmp[694713](694730 '_paramFoldLogical' tmp[694714] none[48]))
    }
    (529931 'init var' _lock[529929] tmp[694713])
    (529933 '.=' this[226724] c"_lock" _lock[529929])
    (560969 'end of statement')
    unknown call_tmp[876546] "expr temp" "maybe param" "maybe type" "temp"
    (876549 'move' call_tmp[876546](529954 '.v' this[226724] c"eltType"))
    unknown call_tmp[876551] "expr temp" "maybe param" "maybe type" "temp"
    (876554 'move' call_tmp[876551](529946 call _ddata[67573](?) call_tmp[876546]))
    unknown call_tmp[876556] "maybe param" "maybe type" "temp"
    (876559 'move' call_tmp[876556](529944 call _ddata[67573](?) call_tmp[876551]))
    unknown _arrays[529941] "temp"
    (529948 'init var' _arrays[529941] nil[32] call_tmp[876556])
    (529950 'init field' this[226724] c"_arrays" _arrays[529941])
    (560970 'end of statement')
    unknown _arrayCapacity[529958] "temp"
    (529960 'init var' _arrayCapacity[529958] 0)
    (529962 '.=' this[226724] c"_arrayCapacity" _arrayCapacity[529958])
    (560971 'end of statement')
    unknown _totalCapacity[529967] "temp"
    (529969 'init var' _totalCapacity[529967] 0)
    (529971 '.=' this[226724] c"_totalCapacity" _totalCapacity[529967])
    (560972 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[529975] "temp"
    unknown call_tmp[876561] "expr temp" "maybe param" "maybe type" "temp"
    (876564 'move' call_tmp[876561](529986 '.v' this[226724] c"eltType"))
    unknown call_tmp[876566] "expr temp" "maybe param" "maybe type" "temp"
    (876569 'move' call_tmp[876566](529978 call _dummyFieldType call_tmp[876561]))
    (529980 'default init var' _dummyFieldToForceBorrowChecking[529975] call_tmp[876566])
    (529982 '.=' this[226724] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[529975])
    (560973 'end of statement')
    (529989 'init done')
    (560974 'end of statement')
    (226850 call(445146 call (partial) _commonInitFromIterable _mt[203] this[226724]) other[226727])
    (621483 return _void[46])
  }
  function list[231871](?).init=[226854](arg _mt[226864]:_MT[201], ref arg this[226856]:list[231871](?), arg other[226861]:_array[255540](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[876575] "expr temp" "maybe param" "maybe type" "temp"
    (876578 'move' call_tmp[876575](226883 call eltType _mt[203] other[226861]))
    unknown call_tmp[876580] "expr temp" "maybe param" "maybe type" "temp"
    (876583 'move' call_tmp[876580](226881 call isCopyableType call_tmp[876575]))
    unknown call_tmp[876585] "expr temp" "maybe param" "maybe type" "temp"
    (876588 'move' call_tmp[876585](226878 call ! call_tmp[876580]))
    unknown call_tmp[876590] "expr temp" "maybe param" "maybe type" "temp"
    (876593 'move' call_tmp[876590](226886 call _cond_test call_tmp[876585]))
    if call_tmp[876590]
    {
      unknown call_tmp[876595] "expr temp" "maybe param" "maybe type" "temp"
      (876598 'move' call_tmp[876595](226869 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (226868 call compilerError call_tmp[876595])
    }
    unknown eltType[529992] "temp" "type variable"
    unknown tmp[694740] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694741] "maybe param" "temp"
    unknown call_tmp[876600] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876603 'move' call_tmp[876600](226900 'typeof' this[226856]))
    unknown call_tmp[876607] "expr temp" "maybe param" "maybe type" "temp"
    (876610 'move' call_tmp[876607](226901 call eltType _mt[203] call_tmp[876600]))
    unknown call_tmp[876612] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876615 'move' call_tmp[876612](226897 call != call_tmp[876607] ?[227]))
    (694746 'move' tmp[694741](694744 call _cond_test call_tmp[876612]))
    if tmp[694741]
    {
      unknown tmp[694748] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876617] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876620 'move' call_tmp[876617](226906 'typeof' this[226856]))
      (694750 'move' tmp[694748](226907 call eltType _mt[203] call_tmp[876617]))
      (694755 'move' tmp[694740](694752 '_paramFoldLogical' tmp[694741] tmp[694748]))
    }
    {
      unknown tmp[694757] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694759 'move' tmp[694757](226911 call eltType _mt[203] other[226861]))
      (694764 'move' tmp[694740](694761 '_paramFoldLogical' tmp[694741] tmp[694757]))
    }
    (529994 'move' eltType[529992] tmp[694740])
    (529996 'init field' this[226856] c"eltType" eltType[529992])
    (560977 'end of statement')
    unknown parSafe[530000] "param" "temp"
    unknown tmp[694771] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694772] "maybe param" "temp"
    unknown call_tmp[876626] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876629 'move' call_tmp[876626](226926 'typeof' this[226856]))
    unknown call_tmp[876633] "expr temp" "maybe param" "maybe type" "temp"
    (876636 'move' call_tmp[876633](226927 call parSafe _mt[203] call_tmp[876626]))
    unknown call_tmp[876638] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876641 'move' call_tmp[876638](226923 call != call_tmp[876633] ?[227]))
    (694777 'move' tmp[694772](694775 call _cond_test call_tmp[876638]))
    if tmp[694772]
    {
      unknown tmp[694779] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876643] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876646 'move' call_tmp[876643](226932 'typeof' this[226856]))
      (694781 'move' tmp[694779](226933 call parSafe _mt[203] call_tmp[876643]))
      (694786 'move' tmp[694771](694783 '_paramFoldLogical' tmp[694772] tmp[694779]))
    }
    {
      (694791 'move' tmp[694771](694788 '_paramFoldLogical' tmp[694772] 0))
    }
    (530002 'init var' parSafe[530000] tmp[694771])
    (530004 'init field' this[226856] c"parSafe" parSafe[530000])
    (560978 'end of statement')
    unknown _size[530009] "temp"
    (530011 'init var' _size[530009] 0)
    (530013 '.=' this[226856] c"_size" _size[530009])
    (560979 'end of statement')
    unknown _lock[530025] "temp"
    unknown tmp[694798] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694799] "maybe param" "temp"
    unknown call_tmp[876650] "expr temp" "maybe param" "maybe type" "temp"
    (876653 'move' call_tmp[876650](530033 '.v' this[226856] c"parSafe"))
    (694804 'move' tmp[694799](694802 call _cond_test call_tmp[876650]))
    if tmp[694799]
    {
      unknown tmp[694806] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694808 'move' tmp[694806](1000378 'new' _LockWrapper[445043](?)))
      (694813 'move' tmp[694798](694810 '_paramFoldLogical' tmp[694799] tmp[694806]))
    }
    {
      (694818 'move' tmp[694798](694815 '_paramFoldLogical' tmp[694799] none[48]))
    }
    (530027 'init var' _lock[530025] tmp[694798])
    (530029 '.=' this[226856] c"_lock" _lock[530025])
    (560980 'end of statement')
    unknown call_tmp[876655] "expr temp" "maybe param" "maybe type" "temp"
    (876658 'move' call_tmp[876655](530050 '.v' this[226856] c"eltType"))
    unknown call_tmp[876660] "expr temp" "maybe param" "maybe type" "temp"
    (876663 'move' call_tmp[876660](530042 call _ddata[67573](?) call_tmp[876655]))
    unknown call_tmp[876665] "maybe param" "maybe type" "temp"
    (876668 'move' call_tmp[876665](530040 call _ddata[67573](?) call_tmp[876660]))
    unknown _arrays[530037] "temp"
    (530044 'init var' _arrays[530037] nil[32] call_tmp[876665])
    (530046 'init field' this[226856] c"_arrays" _arrays[530037])
    (560981 'end of statement')
    unknown _arrayCapacity[530054] "temp"
    (530056 'init var' _arrayCapacity[530054] 0)
    (530058 '.=' this[226856] c"_arrayCapacity" _arrayCapacity[530054])
    (560982 'end of statement')
    unknown _totalCapacity[530063] "temp"
    (530065 'init var' _totalCapacity[530063] 0)
    (530067 '.=' this[226856] c"_totalCapacity" _totalCapacity[530063])
    (560983 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[530071] "temp"
    unknown call_tmp[876670] "expr temp" "maybe param" "maybe type" "temp"
    (876673 'move' call_tmp[876670](530082 '.v' this[226856] c"eltType"))
    unknown call_tmp[876675] "expr temp" "maybe param" "maybe type" "temp"
    (876678 'move' call_tmp[876675](530074 call _dummyFieldType call_tmp[876670]))
    (530076 'default init var' _dummyFieldToForceBorrowChecking[530071] call_tmp[876675])
    (530078 '.=' this[226856] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[530071])
    (560984 'end of statement')
    (530085 'init done')
    (560985 'end of statement')
    (226946 call(445155 call (partial) _commonInitFromIterable _mt[203] this[226856]) other[226861])
    (621485 return _void[46])
  }
  function list[231871](?).init=[226950](arg _mt[226960]:_MT[201], ref arg this[226952]:list[231871](?), arg other[226957]:range[240](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[876684] "expr temp" "maybe param" "maybe type" "temp"
    (876687 'move' call_tmp[876684](227002 call bounds _mt[203] other[226957]))
    unknown call_tmp[876689] "expr temp" "maybe param" "maybe type" "temp"
    (876692 'move' call_tmp[876689](226999 call != call_tmp[876684] both[107114]))
    unknown call_tmp[876694] "expr temp" "maybe param" "maybe type" "temp"
    (876697 'move' call_tmp[876694](227009 call _cond_test call_tmp[876689]))
    if call_tmp[876694]
    {
      unknown call_tmp[876699] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876702 'move' call_tmp[876699](226969 'typeof' this[226952]))
      unknown call_tmp[876704] "maybe param" "maybe type" "temp"
      (876707 'move' call_tmp[876704](226966 call : call_tmp[876699] string[244]))
      unknown e[226965] "dead at end of block" "param"
      (649746 'init var' e[226965] call_tmp[876704])
      (226972 'end of statement')
      unknown call_tmp[876709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876712 'move' call_tmp[876709](226978 'typeof' other[226957]))
      unknown call_tmp[876714] "maybe param" "maybe type" "temp"
      (876717 'move' call_tmp[876714](226975 call : call_tmp[876709] string[244]))
      unknown f[226974] "dead at end of block" "param"
      (649748 'init var' f[226974] call_tmp[876714])
      (226981 'end of statement')
      unknown call_tmp[876719] "expr temp" "maybe param" "maybe type" "temp"
      (876722 'move' call_tmp[876719](226988 call + "Cannot init " e[226965]))
      unknown call_tmp[876724] "expr temp" "maybe param" "maybe type" "temp"
      (876727 'move' call_tmp[876724](226986 call + call_tmp[876719] " from unbounded "))
      unknown call_tmp[876729] "maybe param" "maybe type" "temp"
      (876732 'move' call_tmp[876729](226984 call + call_tmp[876724] f[226974]))
      unknown msg[226983] "dead at end of block" "param"
      (649750 'init var' msg[226983] call_tmp[876729])
      (226995 'end of statement')
      (226997 call compilerError msg[226983])
    }
    unknown eltType[530093] "temp" "type variable"
    unknown tmp[694825] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694826] "maybe param" "temp"
    unknown call_tmp[876734] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876737 'move' call_tmp[876734](227022 'typeof' this[226952]))
    unknown call_tmp[876741] "expr temp" "maybe param" "maybe type" "temp"
    (876744 'move' call_tmp[876741](227023 call eltType _mt[203] call_tmp[876734]))
    unknown call_tmp[876746] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876749 'move' call_tmp[876746](227019 call != call_tmp[876741] ?[227]))
    (694831 'move' tmp[694826](694829 call _cond_test call_tmp[876746]))
    if tmp[694826]
    {
      unknown tmp[694833] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876751] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876754 'move' call_tmp[876751](227028 'typeof' this[226952]))
      (694835 'move' tmp[694833](227029 call eltType _mt[203] call_tmp[876751]))
      (694840 'move' tmp[694825](694837 '_paramFoldLogical' tmp[694826] tmp[694833]))
    }
    {
      unknown tmp[694842] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694844 'move' tmp[694842](227033 call idxType _mt[203] other[226957]))
      (694849 'move' tmp[694825](694846 '_paramFoldLogical' tmp[694826] tmp[694842]))
    }
    (530095 'move' eltType[530093] tmp[694825])
    (530097 'init field' this[226952] c"eltType" eltType[530093])
    (560988 'end of statement')
    unknown parSafe[530101] "param" "temp"
    unknown tmp[694856] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694857] "maybe param" "temp"
    unknown call_tmp[876760] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876763 'move' call_tmp[876760](227048 'typeof' this[226952]))
    unknown call_tmp[876767] "expr temp" "maybe param" "maybe type" "temp"
    (876770 'move' call_tmp[876767](227049 call parSafe _mt[203] call_tmp[876760]))
    unknown call_tmp[876772] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876775 'move' call_tmp[876772](227045 call != call_tmp[876767] ?[227]))
    (694862 'move' tmp[694857](694860 call _cond_test call_tmp[876772]))
    if tmp[694857]
    {
      unknown tmp[694864] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876777] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876780 'move' call_tmp[876777](227054 'typeof' this[226952]))
      (694866 'move' tmp[694864](227055 call parSafe _mt[203] call_tmp[876777]))
      (694871 'move' tmp[694856](694868 '_paramFoldLogical' tmp[694857] tmp[694864]))
    }
    {
      (694876 'move' tmp[694856](694873 '_paramFoldLogical' tmp[694857] 0))
    }
    (530103 'init var' parSafe[530101] tmp[694856])
    (530105 'init field' this[226952] c"parSafe" parSafe[530101])
    (560989 'end of statement')
    unknown _size[530110] "temp"
    (530112 'init var' _size[530110] 0)
    (530114 '.=' this[226952] c"_size" _size[530110])
    (560990 'end of statement')
    unknown _lock[530126] "temp"
    unknown tmp[694883] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694884] "maybe param" "temp"
    unknown call_tmp[876784] "expr temp" "maybe param" "maybe type" "temp"
    (876787 'move' call_tmp[876784](530134 '.v' this[226952] c"parSafe"))
    (694889 'move' tmp[694884](694887 call _cond_test call_tmp[876784]))
    if tmp[694884]
    {
      unknown tmp[694891] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694893 'move' tmp[694891](1000379 'new' _LockWrapper[445043](?)))
      (694898 'move' tmp[694883](694895 '_paramFoldLogical' tmp[694884] tmp[694891]))
    }
    {
      (694903 'move' tmp[694883](694900 '_paramFoldLogical' tmp[694884] none[48]))
    }
    (530128 'init var' _lock[530126] tmp[694883])
    (530130 '.=' this[226952] c"_lock" _lock[530126])
    (560991 'end of statement')
    unknown call_tmp[876789] "expr temp" "maybe param" "maybe type" "temp"
    (876792 'move' call_tmp[876789](530151 '.v' this[226952] c"eltType"))
    unknown call_tmp[876794] "expr temp" "maybe param" "maybe type" "temp"
    (876797 'move' call_tmp[876794](530143 call _ddata[67573](?) call_tmp[876789]))
    unknown call_tmp[876799] "maybe param" "maybe type" "temp"
    (876802 'move' call_tmp[876799](530141 call _ddata[67573](?) call_tmp[876794]))
    unknown _arrays[530138] "temp"
    (530145 'init var' _arrays[530138] nil[32] call_tmp[876799])
    (530147 'init field' this[226952] c"_arrays" _arrays[530138])
    (560992 'end of statement')
    unknown _arrayCapacity[530155] "temp"
    (530157 'init var' _arrayCapacity[530155] 0)
    (530159 '.=' this[226952] c"_arrayCapacity" _arrayCapacity[530155])
    (560993 'end of statement')
    unknown _totalCapacity[530164] "temp"
    (530166 'init var' _totalCapacity[530164] 0)
    (530168 '.=' this[226952] c"_totalCapacity" _totalCapacity[530164])
    (560994 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[530172] "temp"
    unknown call_tmp[876804] "expr temp" "maybe param" "maybe type" "temp"
    (876807 'move' call_tmp[876804](530183 '.v' this[226952] c"eltType"))
    unknown call_tmp[876809] "expr temp" "maybe param" "maybe type" "temp"
    (876812 'move' call_tmp[876809](530175 call _dummyFieldType call_tmp[876804]))
    (530177 'default init var' _dummyFieldToForceBorrowChecking[530172] call_tmp[876809])
    (530179 '.=' this[226952] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[530172])
    (560995 'end of statement')
    (530186 'init done')
    (560996 'end of statement')
    (227068 call(445170 call (partial) _commonInitFromIterable _mt[203] this[226952]) other[226957])
    (621487 return _void[46])
  }
  function list[231871](?).init=[227072](arg _mt[227080]:_MT[201], ref arg this[227074]:list[231871](?), arg other[227077]:_iteratorRecord[165](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown t[227084] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[876816] "expr temp" "maybe param" "used in type" "maybe type" "temp" "type variable"
    (876819 'move' call_tmp[876816](649753 'typeof' other[227077]))
    (649755 'move' t[227084](649752 'scalar promotion type' call_tmp[876816]))
    (560998 'end of statement')
    unknown eltType[530187] "temp" "type variable"
    unknown tmp[694910] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694911] "maybe param" "temp"
    unknown call_tmp[876821] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876824 'move' call_tmp[876821](227098 'typeof' this[227074]))
    unknown call_tmp[876828] "expr temp" "maybe param" "maybe type" "temp"
    (876831 'move' call_tmp[876828](227099 call eltType _mt[203] call_tmp[876821]))
    unknown call_tmp[876833] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876836 'move' call_tmp[876833](227095 call != call_tmp[876828] ?[227]))
    (694916 'move' tmp[694911](694914 call _cond_test call_tmp[876833]))
    if tmp[694911]
    {
      unknown tmp[694918] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876838] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876841 'move' call_tmp[876838](227104 'typeof' this[227074]))
      (694920 'move' tmp[694918](227105 call eltType _mt[203] call_tmp[876838]))
      (694925 'move' tmp[694910](694922 '_paramFoldLogical' tmp[694911] tmp[694918]))
    }
    {
      (694930 'move' tmp[694910](694927 '_paramFoldLogical' tmp[694911] t[227084]))
    }
    (530189 'move' eltType[530187] tmp[694910])
    (530191 'init field' this[227074] c"eltType" eltType[530187])
    (560999 'end of statement')
    unknown parSafe[530195] "param" "temp"
    unknown tmp[694937] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694938] "maybe param" "temp"
    unknown call_tmp[876845] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (876848 'move' call_tmp[876845](227121 'typeof' this[227074]))
    unknown call_tmp[876852] "expr temp" "maybe param" "maybe type" "temp"
    (876855 'move' call_tmp[876852](227122 call parSafe _mt[203] call_tmp[876845]))
    unknown call_tmp[876857] "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    (876860 'move' call_tmp[876857](227118 call != call_tmp[876852] ?[227]))
    (694943 'move' tmp[694938](694941 call _cond_test call_tmp[876857]))
    if tmp[694938]
    {
      unknown tmp[694945] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876862] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (876865 'move' call_tmp[876862](227127 'typeof' this[227074]))
      (694947 'move' tmp[694945](227128 call parSafe _mt[203] call_tmp[876862]))
      (694952 'move' tmp[694937](694949 '_paramFoldLogical' tmp[694938] tmp[694945]))
    }
    {
      (694957 'move' tmp[694937](694954 '_paramFoldLogical' tmp[694938] 0))
    }
    (530197 'init var' parSafe[530195] tmp[694937])
    (530199 'init field' this[227074] c"parSafe" parSafe[530195])
    (561000 'end of statement')
    unknown _size[530204] "temp"
    (530206 'init var' _size[530204] 0)
    (530208 '.=' this[227074] c"_size" _size[530204])
    (561001 'end of statement')
    unknown _lock[530220] "temp"
    unknown tmp[694964] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694965] "maybe param" "temp"
    unknown call_tmp[876869] "expr temp" "maybe param" "maybe type" "temp"
    (876872 'move' call_tmp[876869](530228 '.v' this[227074] c"parSafe"))
    (694970 'move' tmp[694965](694968 call _cond_test call_tmp[876869]))
    if tmp[694965]
    {
      unknown tmp[694972] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (694974 'move' tmp[694972](1000380 'new' _LockWrapper[445043](?)))
      (694979 'move' tmp[694964](694976 '_paramFoldLogical' tmp[694965] tmp[694972]))
    }
    {
      (694984 'move' tmp[694964](694981 '_paramFoldLogical' tmp[694965] none[48]))
    }
    (530222 'init var' _lock[530220] tmp[694964])
    (530224 '.=' this[227074] c"_lock" _lock[530220])
    (561002 'end of statement')
    unknown call_tmp[876874] "expr temp" "maybe param" "maybe type" "temp"
    (876877 'move' call_tmp[876874](530245 '.v' this[227074] c"eltType"))
    unknown call_tmp[876879] "expr temp" "maybe param" "maybe type" "temp"
    (876882 'move' call_tmp[876879](530237 call _ddata[67573](?) call_tmp[876874]))
    unknown call_tmp[876884] "maybe param" "maybe type" "temp"
    (876887 'move' call_tmp[876884](530235 call _ddata[67573](?) call_tmp[876879]))
    unknown _arrays[530232] "temp"
    (530239 'init var' _arrays[530232] nil[32] call_tmp[876884])
    (530241 'init field' this[227074] c"_arrays" _arrays[530232])
    (561003 'end of statement')
    unknown _arrayCapacity[530249] "temp"
    (530251 'init var' _arrayCapacity[530249] 0)
    (530253 '.=' this[227074] c"_arrayCapacity" _arrayCapacity[530249])
    (561004 'end of statement')
    unknown _totalCapacity[530258] "temp"
    (530260 'init var' _totalCapacity[530258] 0)
    (530262 '.=' this[227074] c"_totalCapacity" _totalCapacity[530258])
    (561005 'end of statement')
    unknown _dummyFieldToForceBorrowChecking[530266] "temp"
    unknown call_tmp[876889] "expr temp" "maybe param" "maybe type" "temp"
    (876892 'move' call_tmp[876889](530277 '.v' this[227074] c"eltType"))
    unknown call_tmp[876894] "expr temp" "maybe param" "maybe type" "temp"
    (876897 'move' call_tmp[876894](530269 call _dummyFieldType call_tmp[876889]))
    (530271 'default init var' _dummyFieldToForceBorrowChecking[530266] call_tmp[876894])
    (530273 '.=' this[227074] c"_dummyFieldToForceBorrowChecking" _dummyFieldToForceBorrowChecking[530266])
    (561006 'end of statement')
    (530280 'init done')
    (561007 'end of statement')
    (227141 call(445182 call (partial) _commonInitFromIterable _mt[203] this[227074]) other[227077])
    (621489 return _void[46])
  }
  function list[231871](?)._commonInitFromIterable[227145](arg _mt[227151]:_MT[201], ref arg this[227147]:list[231871](?), arg iterable[227149]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (227164 call(227161 call (partial) _firstTimeInitializeArrays _mt[203] this[227147]))
    (561009 'end of statement')
    unknown tmp[497493] "maybe param" "temp"
    unknown call_tmp[876905] "expr temp" "maybe param" "maybe type" "temp"
    (876908 'move' call_tmp[876905](227259 call eltType _mt[203] this[227147]))
    (497504 'move' tmp[497493](395474 'is_subtype' list[231871](?) call_tmp[876905]))
    unknown call_tmp[876910] "expr temp" "maybe param" "maybe type" "temp"
    (876913 'move' call_tmp[876910](497506 call _cond_invalid tmp[497493]))
    if call_tmp[876910]
    {
      (497509 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[694991] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[694992] "maybe param" "temp"
    unknown call_tmp[876915] "expr temp" "maybe param" "maybe type" "temp"
    (876918 'move' call_tmp[876915](497494 call isTrue tmp[497493]))
    (694997 'move' tmp[694992](694995 call _cond_test call_tmp[876915]))
    if tmp[694992]
    {
      (695002 'move' tmp[694991](694999 '_paramFoldLogical' tmp[694992] 1))
    }
    {
      unknown tmp[695004] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[876922] "expr temp" "maybe param" "maybe type" "temp"
      (876925 'move' call_tmp[876922](227266 call eltType _mt[203] this[227147]))
      unknown call_tmp[876927] "expr temp" "maybe param" "maybe type" "temp"
      (876930 'move' call_tmp[876927](227264 call isArrayType call_tmp[876922]))
      (695006 'move' tmp[695004](497498 call isTrue call_tmp[876927]))
      (695011 'move' tmp[694991](695008 '_paramFoldLogical' tmp[694992] tmp[695004]))
    }
    unknown call_tmp[876932] "expr temp" "maybe param" "maybe type" "temp"
    (876935 'move' call_tmp[876932](227269 call _cond_test tmp[694991]))
    if call_tmp[876932]
    {
      {
        unknown _indexOfInterest[227182] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[227183] "expr temp" "temp"
        (227192 'move' _iterator[227183](227190 call _getIterator iterable[227149]))
        Defer
        {
          {
            (227207 call _freeIterator _iterator[227183])
          }
        }
        { scopeless type
          (227197 'move' _indexOfInterest[227182](227194 call iteratorIndex _iterator[227183]))
        }
        ForLoop[227184]
        {
          unknown x[227166] "index var" "insert auto destroy"
          (561012 'end of statement')
          (227202 'move' x[227166] _indexOfInterest[227182])
          (561013 'end of statement' x[227166])
          {
            unknown call_tmp[876939] "maybe param" "maybe type" "temp"
            (876942 'move' call_tmp[876939](227173 call eltType _mt[203] this[227147]))
            unknown tmp[227171] "dead at end of block" "insert auto destroy"
            (649757 'init var' tmp[227171] x[227166] call_tmp[876939])
            (227178 'end of statement' x[227166])
            (227180 call(445191 call (partial) pushBack _mt[203] this[227147]) tmp[227171])
            (561016 'end of statement' tmp[227171])
          }
          label _continueLabel[227187]
          _indexOfInterest[227182]
          _iterator[227183]
        }
        label _breakLabel[227188]
      }
    }
    {
      {
        unknown _indexOfInterest[227222] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[227223] "expr temp" "temp"
        (227232 'move' _iterator[227223](227230 call _getIterator iterable[227149]))
        Defer
        {
          {
            (227247 call _freeIterator _iterator[227223])
          }
        }
        { scopeless type
          (227237 'move' _indexOfInterest[227222](227234 call iteratorIndex _iterator[227223]))
        }
        ForLoop[227224]
        {
          unknown x[227215] "index var" "insert auto destroy"
          (561019 'end of statement')
          (227242 'move' x[227215] _indexOfInterest[227222])
          (561020 'end of statement' x[227215])
          {
            (227220 call(445197 call (partial) pushBack _mt[203] this[227147]) x[227215])
            (561022 'end of statement' x[227215])
          }
          label _continueLabel[227227]
          _indexOfInterest[227222]
          _iterator[227223]
        }
        label _breakLabel[227228]
      }
    }
    (621491 return _void[46])
  }
  {
    (227157 call <(227154 'lifetime_of' this[227147])(227156 'lifetime_of' iterable[227149]))
  }
  function list[231871](?)._firstTimeInitializeArrays[227276](arg _mt[227280]:_MT[201], ref arg this[227278]:list[231871](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[876950] "expr temp" "maybe param" "maybe type" "temp"
    (876953 'move' call_tmp[876950](445206 call _arrays _mt[203] this[227278]))
    unknown call_tmp[876955] "expr temp" "maybe param" "maybe type" "temp"
    (876958 'move' call_tmp[876955](227285 call == call_tmp[876950] nil[32]))
    (227284 call _sanity call_tmp[876955])
    (561024 'end of statement')
    unknown call_tmp[876962] "expr temp" "maybe param" "maybe type" "temp"
    (876965 'move' call_tmp[876962](445213 call _totalCapacity _mt[203] this[227278]))
    unknown call_tmp[876967] "expr temp" "maybe param" "maybe type" "temp"
    (876970 'move' call_tmp[876967](227291 call == call_tmp[876962] 0))
    (227290 call _sanity call_tmp[876967])
    (561025 'end of statement')
    unknown call_tmp[876974] "expr temp" "maybe param" "maybe type" "temp"
    (876977 'move' call_tmp[876974](445218 call _size _mt[203] this[227278]))
    unknown call_tmp[876979] "expr temp" "maybe param" "maybe type" "temp"
    (876982 'move' call_tmp[876979](227297 call == call_tmp[876974] 0))
    (227296 call _sanity call_tmp[876979])
    (561026 'end of statement')
    unknown call_tmp[876986] "expr temp" "maybe param" "maybe type" "temp"
    (876989 'move' call_tmp[876986](445223 call _arrays _mt[203] this[227278]))
    unknown call_tmp[876993] "expr temp" "maybe param" "maybe type" "temp"
    (876996 'move' call_tmp[876993](227305 call(445229 call (partial) _makeBlockArray _mt[203] this[227278]) _initialArrayCapacity[225854]))
    (227301 call = call_tmp[876986] call_tmp[876993])
    (561027 'end of statement')
    unknown call_tmp[877000] "expr temp" "maybe param" "maybe type" "temp"
    (877003 'move' call_tmp[877000](445237 call _arrayCapacity _mt[203] this[227278]))
    (227307 call = call_tmp[877000] _initialArrayCapacity[225854])
    (561028 'end of statement')
    unknown call_tmp[877007] "expr temp" "maybe param" "maybe type" "temp"
    (877010 'move' call_tmp[877007](227314 call(445243 call (partial) _arrays _mt[203] this[227278]) 0))
    unknown call_tmp[877014] "expr temp" "maybe param" "maybe type" "temp"
    (877017 'move' call_tmp[877014](227317 call(445249 call (partial) _makeArray _mt[203] this[227278]) _initialCapacity[225849]))
    (227311 call = call_tmp[877007] call_tmp[877014])
    (561029 'end of statement')
    unknown call_tmp[877021] "expr temp" "maybe param" "maybe type" "temp"
    (877024 'move' call_tmp[877021](445255 call _totalCapacity _mt[203] this[227278]))
    (227319 call = call_tmp[877021] _initialCapacity[225849])
    (621493 return _void[46])
  }
  function list[231871](?).deinit[227325](arg _mt[227329]:_MT[201], ref arg this[227327]:list[231871](?)) : _unknown[42] "destructor" "inline" "method" "primary method" "no return value for void"
  {
    (227333 call(445260 call (partial) _fireAllDestructors _mt[203] this[227327]))
    (561031 'end of statement')
    (227335 call(445264 call (partial) _freeAllArrays _mt[203] this[227327]))
    (561032 'end of statement')
    unknown call_tmp[877032] "expr temp" "maybe param" "maybe type" "temp"
    (877035 'move' call_tmp[877032](445269 call _totalCapacity _mt[203] this[227327]))
    unknown call_tmp[877037] "expr temp" "maybe param" "maybe type" "temp"
    (877040 'move' call_tmp[877037](227338 call == call_tmp[877032] 0))
    (227337 call _sanity call_tmp[877037])
    (561033 'end of statement')
    unknown call_tmp[877044] "expr temp" "maybe param" "maybe type" "temp"
    (877047 'move' call_tmp[877044](445274 call _size _mt[203] this[227327]))
    unknown call_tmp[877049] "expr temp" "maybe param" "maybe type" "temp"
    (877052 'move' call_tmp[877049](227344 call == call_tmp[877044] 0))
    (227343 call _sanity call_tmp[877049])
    (561034 'end of statement')
    unknown call_tmp[877056] "expr temp" "maybe param" "maybe type" "temp"
    (877059 'move' call_tmp[877056](445279 call _arrays _mt[203] this[227327]))
    unknown call_tmp[877061] "expr temp" "maybe param" "maybe type" "temp"
    (877064 'move' call_tmp[877061](227350 call == call_tmp[877056] nil[32]))
    (227349 call _sanity call_tmp[877061])
    (621495 return _void[46])
  }
  function list[231871](?)._destroy[227356](arg _mt[227364]:_MT[201], arg this[227358]:list[231871](?), ref arg item[227361] :
  (445284 call eltType _mt[203] this[227358])) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    (227368 call chpl__autoDestroy item[227361])
    (621497 return _void[46])
  }
  function list[231871](?)._move[227372](arg _mt[227385]:_MT[201], arg this[227374]:list[231871](?), ref arg src[227378]:_any[141](?), ref arg dst[227382] :
  (530281 'typeof' src[227378])) : _unknown[42] "inline" "method" "primary method" "unsafe" "no return value for void"
  {
    (227394 '=' dst[227382] src[227378])
    (621499 return _void[46])
  }
  {
    (227391 call ==(227388 'lifetime_of' src[227378])(227390 'lifetime_of' dst[227382]))
  }
  function list[231871](?)._getArrayCapacity[227400](arg _mt[227408]:_MT[201], arg this[227402]:list[231871](?), arg array[227405]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621503] "RVV" "temp"
    unknown call_tmp[877068] "expr temp" "maybe param" "maybe type" "temp"
    (877071 'move' call_tmp[877068](227418 call log2 _initialCapacity[225849]))
    unknown call_tmp[877073] "maybe param" "maybe type" "temp"
    (877076 'move' call_tmp[877073](227414 call + array[227405] call_tmp[877068]))
    const exp[227413] "dead at end of block" "const" "insert auto destroy"
    (649759 'init var' exp[227413] call_tmp[877073])
    (227421 'end of statement')
    unknown call_tmp[877078] "maybe param" "maybe type" "temp"
    (877081 'move' call_tmp[877078](227424 call ** 2 exp[227413]))
    const result[227423] "dead at end of block" "const" "insert auto destroy"
    (649761 'init var' result[227423] call_tmp[877078])
    (227429 'end of statement' exp[227413])
    (621509 'move' ret[621503](621508 'coerce' result[227423] int(64)[10]))
    gotoReturn _end__getArrayCapacity[621501] _end__getArrayCapacity[621501]
    (561039 'end of statement' result[227423])
    label _end__getArrayCapacity[621501]
    (621505 return ret[621503])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?)._getArrayIdx[227435](arg _mt[227443]:_MT[201], arg this[227437]:list[231871](?), arg zpos[227440]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621515] "RVV" "temp"
    unknown call_tmp[877083] "maybe param" "maybe type" "temp"
    (877086 'move' call_tmp[877083](227449 call + zpos[227440] _initialCapacity[225849]))
    const adj[227448] "dead at end of block" "const" "insert auto destroy"
    (649763 'init var' adj[227448] call_tmp[877083])
    (227454 'end of statement')
    unknown call_tmp[877088] "expr temp" "maybe param" "maybe type" "temp"
    (877091 'move' call_tmp[877088](227460 call log2 adj[227448]))
    unknown call_tmp[877093] "expr temp" "maybe param" "maybe type" "temp"
    (877096 'move' call_tmp[877093](227463 call log2 _initialCapacity[225849]))
    unknown call_tmp[877098] "maybe param" "maybe type" "temp"
    (877101 'move' call_tmp[877098](227457 call - call_tmp[877088] call_tmp[877093]))
    const result[227456] "dead at end of block" "const" "insert auto destroy"
    (649765 'init var' result[227456] call_tmp[877098])
    (227466 'end of statement' adj[227448])
    (621521 'move' ret[621515](621520 'coerce' result[227456] int(64)[10]))
    gotoReturn _end__getArrayIdx[621513] _end__getArrayIdx[621513]
    (561042 'end of statement' result[227456])
    label _end__getArrayIdx[621513]
    (621517 return ret[621515])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?)._getLastArrayIdx[227472](arg _mt[227476]:_MT[201], arg this[227474]:list[231871](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621527] "RVV" "temp"
    unknown call_tmp[877107] "expr temp" "maybe param" "maybe type" "temp"
    (877110 'move' call_tmp[877107](445310 call _size _mt[203] this[227474]))
    unknown call_tmp[877112] "expr temp" "maybe param" "maybe type" "temp"
    (877115 'move' call_tmp[877112](227484 call - call_tmp[877107] 1))
    unknown call_tmp[877117] "maybe param" "maybe type" "temp"
    (877120 'move' call_tmp[877117](227483 call(445305 call (partial) _getArrayIdx _mt[203] this[227474]) call_tmp[877112]))
    const result[227481] "dead at end of block" "const" "insert auto destroy"
    (649767 'init var' result[227481] call_tmp[877117])
    (227489 'end of statement')
    unknown call_tmp[877122] "expr temp" "maybe param" "maybe type" "temp"
    (877125 'move' call_tmp[877122](227492 call >= result[227481] 0))
    (227491 call _sanity call_tmp[877122])
    (561044 'end of statement' result[227481])
    (621533 'move' ret[621527](621532 'coerce' result[227481] int(64)[10]))
    gotoReturn _end__getLastArrayIdx[621525] _end__getLastArrayIdx[621525]
    (561046 'end of statement' result[227481])
    label _end__getLastArrayIdx[621525]
    (621529 return ret[621527])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?)._getItemIdx[227501](arg _mt[227509]:_MT[201], arg this[227503]:list[231871](?), arg zpos[227506]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621539] "RVV" "temp"
    unknown call_tmp[877127] "maybe param" "maybe type" "temp"
    (877130 'move' call_tmp[877127](227515 call + zpos[227506] _initialCapacity[225849]))
    const adj[227514] "dead at end of block" "const" "insert auto destroy"
    (649769 'init var' adj[227514] call_tmp[877127])
    (227520 'end of statement')
    unknown call_tmp[877132] "expr temp" "maybe param" "maybe type" "temp"
    (877135 'move' call_tmp[877132](227530 call log2 adj[227514]))
    unknown call_tmp[877137] "expr temp" "maybe param" "maybe type" "temp"
    (877140 'move' call_tmp[877137](227526 call << 1 call_tmp[877132]))
    unknown call_tmp[877142] "maybe param" "maybe type" "temp"
    (877145 'move' call_tmp[877142](227523 call ^ adj[227514] call_tmp[877137]))
    const result[227522] "dead at end of block" "const" "insert auto destroy"
    (649771 'init var' result[227522] call_tmp[877142])
    (227533 'end of statement' adj[227514])
    (621545 'move' ret[621539](621544 'coerce' result[227522] int(64)[10]))
    gotoReturn _end__getItemIdx[621537] _end__getItemIdx[621537]
    (561049 'end of statement' result[227522])
    label _end__getItemIdx[621537]
    (621541 return ret[621539])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?)._getRef[227539](arg _mt[227547]:_MT[201], const  ref arg this[227541]:list[231871](?), arg idx[227544]:int(64)[10]) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621551] "RVV" "temp"
    unknown tmp[497514] "maybe param" "temp"
    (497525 'move' tmp[497514](227554 call >= idx[227544] 0))
    unknown call_tmp[877147] "expr temp" "maybe param" "maybe type" "temp"
    (877150 'move' call_tmp[877147](497527 call _cond_invalid tmp[497514]))
    if call_tmp[877147]
    {
      (497530 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695018] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695019] "maybe param" "temp"
    unknown call_tmp[877152] "expr temp" "maybe param" "maybe type" "temp"
    (877155 'move' call_tmp[877152](497515 call isTrue tmp[497514]))
    (695024 'move' tmp[695019](695022 call _cond_test call_tmp[877152]))
    if tmp[695019]
    {
      unknown tmp[695026] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[877159] "expr temp" "maybe param" "maybe type" "temp"
      (877162 'move' call_tmp[877159](445324 call _totalCapacity _mt[203] this[227541]))
      unknown call_tmp[877164] "expr temp" "maybe param" "maybe type" "temp"
      (877167 'move' call_tmp[877164](227558 call < idx[227544] call_tmp[877159]))
      (695028 'move' tmp[695026](497518 call isTrue call_tmp[877164]))
      (695033 'move' tmp[695018](695030 '_paramFoldLogical' tmp[695019] tmp[695026]))
    }
    {
      (695038 'move' tmp[695018](695035 '_paramFoldLogical' tmp[695019] 0))
    }
    (227551 call _sanity tmp[695018])
    (561052 'end of statement')
    unknown call_tmp[877171] "maybe param" "maybe type" "temp"
    (877174 'move' call_tmp[877171](227565 call(445328 call (partial) _getArrayIdx _mt[203] this[227541]) idx[227544]))
    const arrayIdx[227563] "dead at end of block" "const" "insert auto destroy"
    (649773 'init var' arrayIdx[227563] call_tmp[877171])
    (227568 'end of statement')
    unknown call_tmp[877178] "maybe param" "maybe type" "temp"
    (877181 'move' call_tmp[877178](227572 call(445335 call (partial) _getItemIdx _mt[203] this[227541]) idx[227544]))
    const itemIdx[227570] "dead at end of block" "const" "insert auto destroy"
    (649775 'init var' itemIdx[227570] call_tmp[877178])
    (227575 'end of statement')
    unknown call_tmp[877185] "maybe param" "maybe type" "temp"
    (877188 'move' call_tmp[877185](227579 call(445341 call (partial) _arrays _mt[203] this[227541]) arrayIdx[227563]))
    const array[227577] "dead at end of block" "const" "insert auto destroy"
    (649777 'init var' array[227577] call_tmp[877185])
    (227582 'end of statement')
    unknown call_tmp[877190] "expr temp" "maybe param" "maybe type" "temp"
    (877193 'move' call_tmp[877190](227585 call != array[227577] nil[32]))
    (227584 call _sanity call_tmp[877190])
    (561054 'end of statement' array[227577])
    unknown result[227590] "dead at end of block" "ref var"
    (649782 'init ref decl' result[227590])
    unknown call_tmp[877195] "expr temp" "maybe param" "maybe type" "temp"
    (877198 'move' call_tmp[877195](227592 call array[227577] itemIdx[227570]))
    (649780 'move' result[227590](649779 'addr of' call_tmp[877195]))
    (227595 'end of statement' arrayIdx[227563] array[227577] itemIdx[227570])
    (621556 'move' ret[621551](621555 'addr of' result[227590]))
    gotoReturn _end__getRef[621549] _end__getRef[621549]
    (561058 'end of statement' result[227590])
    label _end__getRef[621549]
    (621553 return ret[621551])
  }
  function list[231871](?)._enter[227600](arg _mt[227604]:_MT[201], arg this[227602]:list[231871](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877202] "expr temp" "maybe param" "maybe type" "temp"
    (877205 'move' call_tmp[877202](445351 call parSafe _mt[203] this[227602]))
    unknown call_tmp[877207] "expr temp" "maybe param" "maybe type" "temp"
    (877210 'move' call_tmp[877207](227614 call _cond_test call_tmp[877202]))
    if call_tmp[877207]
    {
      unknown call_tmp[877214] "expr temp" "maybe param" "maybe type" "temp"
      (877217 'move' call_tmp[877214](406970 call _lock _mt[203] this[227602]))
      (227611 call(227608 call (partial) lock _mt[203] call_tmp[877214]))
    }
    (621560 return _void[46])
  }
  function list[231871](?)._leave[227621](arg _mt[227625]:_MT[201], arg this[227623]:list[231871](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877223] "expr temp" "maybe param" "maybe type" "temp"
    (877226 'move' call_tmp[877223](445356 call parSafe _mt[203] this[227623]))
    unknown call_tmp[877228] "expr temp" "maybe param" "maybe type" "temp"
    (877231 'move' call_tmp[877228](227635 call _cond_test call_tmp[877223]))
    if call_tmp[877228]
    {
      unknown call_tmp[877235] "expr temp" "maybe param" "maybe type" "temp"
      (877238 'move' call_tmp[877235](406975 call _lock _mt[203] this[227623]))
      (227632 call(227629 call (partial) unlock _mt[203] call_tmp[877235]))
    }
    (621562 return _void[46])
  }
  function list[231871](?)._withinBounds[227642](arg _mt[227650]:_MT[201], const arg this[227644]:list[231871](?), arg idx[227647]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621566] "RVV" "temp"
    unknown tmp[497535] "maybe param" "temp"
    (497546 'move' tmp[497535](227657 call >= idx[227647] 0))
    unknown call_tmp[877242] "expr temp" "maybe param" "maybe type" "temp"
    (877245 'move' call_tmp[877242](497548 call _cond_invalid tmp[497535]))
    if call_tmp[877242]
    {
      (497551 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695045] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695046] "maybe param" "temp"
    unknown call_tmp[877247] "expr temp" "maybe param" "maybe type" "temp"
    (877250 'move' call_tmp[877247](497536 call isTrue tmp[497535]))
    (695051 'move' tmp[695046](695049 call _cond_test call_tmp[877247]))
    if tmp[695046]
    {
      unknown tmp[695053] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[877254] "expr temp" "maybe param" "maybe type" "temp"
      (877257 'move' call_tmp[877254](445364 call _size _mt[203] this[227644]))
      unknown call_tmp[877259] "expr temp" "maybe param" "maybe type" "temp"
      (877262 'move' call_tmp[877259](227661 call < idx[227647] call_tmp[877254]))
      (695055 'move' tmp[695053](497539 call isTrue call_tmp[877259]))
      (695060 'move' tmp[695045](695057 '_paramFoldLogical' tmp[695046] tmp[695053]))
    }
    {
      (695065 'move' tmp[695045](695062 '_paramFoldLogical' tmp[695046] 0))
    }
    (621572 'move' ret[621566](621571 'coerce' tmp[695045] bool[19]))
    (621568 return ret[621566])
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?)._boundsCheckLeaveOnThrow[227668](arg _mt[227682]:_MT[201], const arg this[227670]:list[231871](?), arg i[227673]:int(64)[10], arg umsg[227678]:string[244] =
  "") : _unknown[42] throws "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877266] "expr temp" "maybe param" "maybe type" "temp"
    (877269 'move' call_tmp[877266](227719 call(445379 call (partial) _withinBounds _mt[203] this[227670]) i[227673]))
    unknown call_tmp[877271] "expr temp" "maybe param" "maybe type" "temp"
    (877274 'move' call_tmp[877271](227716 call ! call_tmp[877266]))
    unknown call_tmp[877276] "expr temp" "maybe param" "maybe type" "temp"
    (877279 'move' call_tmp[877276](227721 call _cond_test call_tmp[877271]))
    if call_tmp[877276]
    {
      (227687 call(445368 call (partial) _leave _mt[203] this[227670]))
      (561064 'end of statement')
      const msg[227689] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[695072] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[695073] "maybe param" "temp"
      unknown call_tmp[877283] "expr temp" "maybe param" "maybe type" "temp"
      (877286 'move' call_tmp[877283](227690 call != umsg[227678] ""))
      (695078 'move' tmp[695073](695076 call _cond_test call_tmp[877283]))
      if tmp[695073]
      {
        (695083 'move' tmp[695072](695080 '_paramFoldLogical' tmp[695073] umsg[227678]))
      }
      {
        unknown tmp[695085] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[877288] "expr temp" "maybe param" "maybe type" "temp"
        (877291 'move' call_tmp[877288](227700 call : i[227673] string[244]))
        (695087 'move' tmp[695085](227695 call + "Index out of bounds: " call_tmp[877288]))
        (695092 'move' tmp[695072](695089 '_paramFoldLogical' tmp[695073] tmp[695085]))
      }
      (649784 'init var' msg[227689] tmp[695072])
      (227708 'end of statement')
      unknown call_tmp[877293] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (877296 'move' call_tmp[877293](1000381 'new' IllegalArgumentError[414940](?) msg[227689](_chpl_manager = _owned[238](?))))
      unknown call_tmp[877298] "expr temp" "maybe param" "maybe type" "temp"
      (877301 'move' call_tmp[877298](542451 call chpl_fix_thrown_error call_tmp[877293]))
      (227709 'throw' call_tmp[877298])
      (561065 'end of statement' msg[227689])
    }
    (621574 return _void[46])
  }
  function list[231871](?)._makeBlockArray[227727](arg _mt[227735]:_MT[201], arg this[227729]:list[231871](?), arg size[227732]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[621578] "RVV" "temp"
    unknown call_tmp[877305] "expr temp" "maybe param" "maybe type" "temp"
    (877308 'move' call_tmp[877305](445386 call eltType _mt[203] this[227729]))
    unknown call_tmp[877310] "expr temp" "maybe param" "maybe type" "temp"
    (877313 'move' call_tmp[877310](227742 call _ddata[67573](?) call_tmp[877305]))
    unknown call_tmp[877315] "expr temp" "maybe param" "maybe type" "temp"
    (877318 'move' call_tmp[877315](227740 call _ddata_allocate call_tmp[877310] size[227732]))
    (621583 'move' ret[621578](621582 'deref' call_tmp[877315]))
    (621580 return ret[621578])
  }
  function list[231871](?)._freeBlockArray[227747](arg _mt[227763]:_MT[201], arg this[227749]:list[231871](?), arg data[227756] :
  unknown call_tmp[877322] "expr temp" "maybe param" "maybe type" "temp", arg size[227760]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (227767 call _ddata_free data[227756] size[227760])
    (621585 return _void[46])
  }
  function list[231871](?)._makeArray[227772](arg _mt[227780]:_MT[201], arg this[227774]:list[231871](?), arg size[227777]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[621589] "RVV" "temp"
    unknown callPostAlloc[227784] "dead at end of block" "insert auto destroy"
    (649786 'init var' callPostAlloc[227784] 0)
    (227787 'end of statement')
    unknown call_tmp[877334] "expr temp" "maybe param" "maybe type" "temp"
    (877337 'move' call_tmp[877334](445401 call eltType _mt[203] this[227774]))
    unknown call_tmp[877339] "maybe param" "maybe type" "temp"
    (877342 'move' call_tmp[877339](227791 call _ddata_allocate_noinit call_tmp[877334] size[227777] callPostAlloc[227784]))
    unknown ret[227789] "dead at end of block" "insert auto destroy"
    (649788 'init var' ret[227789] call_tmp[877339])
    (227796 'end of statement' callPostAlloc[227784])
    unknown call_tmp[877344] "expr temp" "maybe param" "maybe type" "temp"
    (877347 'move' call_tmp[877344](227803 call _cond_test callPostAlloc[227784]))
    if call_tmp[877344]
    {
      (227798 call _ddata_allocate_postalloc ret[227789] size[227777])
      (561070 'end of statement' ret[227789])
    }
    (621594 'move' ret[621589](621593 'deref' ret[227789]))
    gotoReturn _end__makeArray[621587] _end__makeArray[621587]
    (561072 'end of statement' ret[227789])
    label _end__makeArray[621587]
    (621591 return ret[621589])
  }
  function list[231871](?)._freeArray[227812](arg _mt[227826]:_MT[201], arg this[227814]:list[231871](?), arg data[227819] :
  unknown call_tmp[877351] "expr temp" "maybe param" "maybe type" "temp", arg size[227823]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (227830 call _ddata_free data[227819] size[227823])
    (621598 return _void[46])
  }
  function list[231871](?)._maybeAcquireMem[227835](arg _mt[227843]:_MT[201], ref arg this[227837]:list[231871](?), arg amount[227840]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877358] "expr temp" "maybe param" "maybe type" "temp"
    (877361 'move' call_tmp[877358](445420 call _totalCapacity _mt[203] this[227837]))
    unknown call_tmp[877365] "expr temp" "maybe param" "maybe type" "temp"
    (877368 'move' call_tmp[877365](445425 call _size _mt[203] this[227837]))
    unknown call_tmp[877370] "maybe param" "maybe type" "temp"
    (877373 'move' call_tmp[877370](227848 call - call_tmp[877358] call_tmp[877365]))
    const remaining[227847] "dead at end of block" "const" "insert auto destroy"
    (649790 'init var' remaining[227847] call_tmp[877370])
    (227853 'end of statement')
    unknown call_tmp[877375] "expr temp" "maybe param" "maybe type" "temp"
    (877378 'move' call_tmp[877375](227856 call >= remaining[227847] 0))
    (227855 call _sanity call_tmp[877375])
    (561075 'end of statement' remaining[227847])
    unknown call_tmp[877380] "expr temp" "maybe param" "maybe type" "temp"
    (877383 'move' call_tmp[877380](227862 call >= remaining[227847] amount[227840]))
    unknown call_tmp[877385] "expr temp" "maybe param" "maybe type" "temp"
    (877388 'move' call_tmp[877385](227866 call _cond_test call_tmp[877380]))
    if call_tmp[877385]
    {
      gotoReturn _end__maybeAcquireMem[621600] _end__maybeAcquireMem[621600]
    }
    unknown lastArrayIdx[227872] "dead at end of block" "insert auto destroy"
    unknown tmp[695099] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695100] "maybe param" "temp"
    unknown call_tmp[877392] "expr temp" "maybe param" "maybe type" "temp"
    (877395 'move' call_tmp[877392](445433 call _size _mt[203] this[227837]))
    unknown call_tmp[877397] "expr temp" "maybe param" "maybe type" "temp"
    (877400 'move' call_tmp[877397](227873 call == call_tmp[877392] 0))
    (695105 'move' tmp[695100](695103 call _cond_test call_tmp[877397]))
    if tmp[695100]
    {
      (695110 'move' tmp[695099](695107 '_paramFoldLogical' tmp[695100] 0))
    }
    {
      unknown tmp[695112] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (695114 'move' tmp[695112](227879 call(445439 call (partial) _getLastArrayIdx _mt[203] this[227837])))
      (695119 'move' tmp[695099](695116 '_paramFoldLogical' tmp[695100] tmp[695112]))
    }
    (649792 'init var' lastArrayIdx[227872] tmp[695099])
    (227884 'end of statement')
    unknown call_tmp[877404] "maybe param" "maybe type" "temp"
    (877407 'move' call_tmp[877404](227887 call - amount[227840] remaining[227847]))
    unknown req[227886] "dead at end of block" "insert auto destroy"
    (649794 'init var' req[227886] call_tmp[877404])
    (227892 'end of statement' remaining[227847])
    {
      unknown tmp[228073] "temp"
      unknown call_tmp[877409] "expr temp" "maybe param" "maybe type" "temp"
      (877412 'move' call_tmp[877409](228094 call > req[227886] 0))
      (228097 'move' tmp[228073](228092 call _cond_test call_tmp[877409]))
      WhileDo[228078]
      {
        {
          unknown call_tmp[877416] "expr temp" "maybe param" "maybe type" "temp"
          (877419 'move' call_tmp[877416](445497 call _arrayCapacity _mt[203] this[227837]))
          unknown call_tmp[877421] "expr temp" "maybe param" "maybe type" "temp"
          (877424 'move' call_tmp[877421](227992 call - call_tmp[877416] 1))
          unknown call_tmp[877426] "expr temp" "maybe param" "maybe type" "temp"
          (877429 'move' call_tmp[877426](227989 call >= lastArrayIdx[227872] call_tmp[877421]))
          unknown call_tmp[877431] "expr temp" "maybe param" "maybe type" "temp"
          (877434 'move' call_tmp[877431](227996 call _cond_test call_tmp[877426]))
          if call_tmp[877431]
          {
            {
              const tmp[227981] "const" "temp"
              unknown call_tmp[877436] "expr temp" "maybe param" "maybe type" "temp"
              (877439 'move' call_tmp[877436](227978 '_wide_get_locale' this[227837]))
              (227982 'move' tmp[227981](227979 'deref' call_tmp[877436]))
              {
                unknown call_tmp[877445] "expr temp" "maybe param" "maybe type" "temp"
                (877448 'move' call_tmp[877445](445451 call _arrayCapacity _mt[203] this[227837]))
                unknown call_tmp[877450] "expr temp" "maybe param" "maybe type" "temp"
                (877453 'move' call_tmp[877450](227904 call * call_tmp[877445] 2))
                unknown call_tmp[877455] "maybe param" "maybe type" "temp"
                (877458 'move' call_tmp[877455](227903 call(445446 call (partial) _makeBlockArray _mt[203] this[227837]) call_tmp[877450]))
                unknown _narrays[227901] "dead at end of block" "insert auto destroy"
                (649796 'init var' _narrays[227901] call_tmp[877455])
                (227909 'end of statement')
                {
                  unknown _indexOfInterest[227927] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[227928] "expr temp" "temp"
                  unknown call_tmp[877462] "expr temp" "maybe param" "maybe type" "temp"
                  (877465 'move' call_tmp[877462](445464 call _arrayCapacity _mt[203] this[227837]))
                  unknown call_tmp[877467] "expr temp" "maybe param" "maybe type" "temp"
                  (877470 'move' call_tmp[877467](227944 call chpl_direct_counted_range_iter 0 call_tmp[877462]))
                  (227937 'move' _iterator[227928](227935 call _getIterator call_tmp[877467]))
                  Defer
                  {
                    {
                      (227959 call _freeIterator _iterator[227928])
                    }
                  }
                  { scopeless type
                    (227949 'move' _indexOfInterest[227927](227946 call iteratorIndex _iterator[227928]))
                  }
                  ForLoop[227929]
                  {
                    unknown i[227910] "index var" "insert auto destroy"
                    (561080 'end of statement')
                    (227954 'move' i[227910] _indexOfInterest[227927])
                    (561081 'end of statement' i[227910])
                    unknown call_tmp[877472] "expr temp" "maybe param" "maybe type" "temp"
                    (877475 'move' call_tmp[877472](227921 call _narrays[227901] i[227910]))
                    unknown call_tmp[877479] "expr temp" "maybe param" "maybe type" "temp"
                    (877482 'move' call_tmp[877479](227924 call(445458 call (partial) _arrays _mt[203] this[227837]) i[227910]))
                    (227918 call = call_tmp[877472] call_tmp[877479])
                    (561083 'end of statement' _narrays[227901] i[227910])
                    label _continueLabel[227932]
                    _indexOfInterest[227927]
                    _iterator[227928]
                  }
                  label _breakLabel[227933]
                }
                unknown call_tmp[877488] "expr temp" "maybe param" "maybe type" "temp"
                (877491 'move' call_tmp[877488](445475 call _arrays _mt[203] this[227837]))
                unknown call_tmp[877495] "expr temp" "maybe param" "maybe type" "temp"
                (877498 'move' call_tmp[877495](445480 call _arrayCapacity _mt[203] this[227837]))
                (227967 call(445470 call (partial) _freeBlockArray _mt[203] this[227837]) call_tmp[877488] call_tmp[877495])
                (561086 'end of statement')
                unknown call_tmp[877502] "expr temp" "maybe param" "maybe type" "temp"
                (877505 'move' call_tmp[877502](445485 call _arrays _mt[203] this[227837]))
                (227970 call = call_tmp[877502] _narrays[227901])
                (561087 'end of statement' _narrays[227901])
                unknown call_tmp[877509] "expr temp" "maybe param" "maybe type" "temp"
                (877512 'move' call_tmp[877509](445491 call _arrayCapacity _mt[203] this[227837]))
                (227974 call *= call_tmp[877509] 2)
              }
              (227985 'elided on block' 0 tmp[227981])
            }
          }
          {
            const tmp[228065] "const" "temp"
            unknown call_tmp[877514] "expr temp" "maybe param" "maybe type" "temp"
            (877517 'move' call_tmp[877514](228062 '_wide_get_locale' this[227837]))
            (228066 'move' tmp[228065](228063 'deref' call_tmp[877514]))
            {
              unknown call_tmp[877521] "maybe param" "maybe type" "temp"
              (877524 'move' call_tmp[877521](228006 call(445503 call (partial) _arrays _mt[203] this[227837]) lastArrayIdx[227872]))
              const oldLast[228004] "dead at end of block" "const" "insert auto destroy"
              (649798 'init var' oldLast[228004] call_tmp[877521])
              (228009 'end of statement')
              unknown call_tmp[877528] "maybe param" "maybe type" "temp"
              (877531 'move' call_tmp[877528](228013 call(445510 call (partial) _getArrayCapacity _mt[203] this[227837]) lastArrayIdx[227872]))
              const oldLastCapacity[228011] "dead at end of block" "const" "insert auto destroy"
              (649800 'init var' oldLastCapacity[228011] call_tmp[877528])
              (228016 'end of statement')
              (228017 call += lastArrayIdx[227872] 1)
              (561091 'end of statement' lastArrayIdx[227872])
              unknown newLast[228022] "dead at end of block" "ref var"
              (649805 'init ref decl' newLast[228022])
              unknown call_tmp[877535] "expr temp" "maybe param" "maybe type" "temp"
              (877538 'move' call_tmp[877535](228024 call(445517 call (partial) _arrays _mt[203] this[227837]) lastArrayIdx[227872]))
              (649803 'move' newLast[228022](649802 'addr of' call_tmp[877535]))
              (228027 'end of statement')
              unknown call_tmp[877540] "maybe param" "maybe type" "temp"
              (877543 'move' call_tmp[877540](228030 call * oldLastCapacity[228011] 2))
              const newLastCapacity[228029] "dead at end of block" "const" "insert auto destroy"
              (649807 'init var' newLastCapacity[228029] call_tmp[877540])
              (228035 'end of statement' lastArrayIdx[227872] oldLastCapacity[228011])
              unknown call_tmp[877545] "expr temp" "maybe param" "maybe type" "temp"
              (877548 'move' call_tmp[877545](228038 call != oldLast[228004] nil[32]))
              (228037 call _sanity call_tmp[877545])
              (561094 'end of statement' oldLast[228004])
              unknown call_tmp[877550] "expr temp" "maybe param" "maybe type" "temp"
              (877553 'move' call_tmp[877550](228044 call == newLast[228022] nil[32]))
              (228043 call _sanity call_tmp[877550])
              (561096 'end of statement' newLast[228022])
              unknown call_tmp[877557] "expr temp" "maybe param" "maybe type" "temp"
              (877560 'move' call_tmp[877557](228052 call(445526 call (partial) _makeArray _mt[203] this[227837]) newLastCapacity[228029]))
              (228048 call = newLast[228022] call_tmp[877557])
              (561098 'end of statement' newLast[228022] newLastCapacity[228029])
              unknown call_tmp[877564] "expr temp" "maybe param" "maybe type" "temp"
              (877567 'move' call_tmp[877564](445532 call _totalCapacity _mt[203] this[227837]))
              (228054 call += call_tmp[877564] newLastCapacity[228029])
              (561101 'end of statement' newLastCapacity[228029])
              (228058 call -= req[227886] newLastCapacity[228029])
              (561103 'end of statement' req[227886] newLastCapacity[228029])
            }
            (228069 'elided on block' 0 tmp[228065])
          }
        }
        label _continueLabel[228076]
        unknown call_tmp[877569] "expr temp" "maybe param" "maybe type" "temp"
        (877572 'move' call_tmp[877569](228084 call > req[227886] 0))
        (228087 'move' tmp[228073](228082 call _cond_test call_tmp[877569]))
        tmp[228073]
      }
      label _breakLabel[228077]
    }
    label _end__maybeAcquireMem[621600]
    (621602 return _void[46])
  }
  function list[231871](?)._maybeReleaseMem[228103](arg _mt[228111]:_MT[201], ref arg this[228105]:list[231871](?), arg amount[228108]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877576] "expr temp" "maybe param" "maybe type" "temp"
    (877579 'move' call_tmp[877576](445542 call _totalCapacity _mt[203] this[228105]))
    unknown call_tmp[877581] "expr temp" "maybe param" "maybe type" "temp"
    (877584 'move' call_tmp[877581](228116 call <= call_tmp[877576] _initialCapacity[225849]))
    unknown call_tmp[877586] "expr temp" "maybe param" "maybe type" "temp"
    (877589 'move' call_tmp[877586](228120 call _cond_test call_tmp[877581]))
    if call_tmp[877586]
    {
      gotoReturn _end__maybeReleaseMem[621606] _end__maybeReleaseMem[621606]
    }
    unknown call_tmp[877593] "maybe param" "maybe type" "temp"
    (877596 'move' call_tmp[877593](228128 call(445547 call (partial) _getLastArrayIdx _mt[203] this[228105])))
    const lastArrayIdx[228126] "dead at end of block" "const" "insert auto destroy"
    (649809 'init var' lastArrayIdx[228126] call_tmp[877593])
    (228130 'end of statement')
    unknown call_tmp[877598] "expr temp" "maybe param" "maybe type" "temp"
    (877601 'move' call_tmp[877598](228133 call != lastArrayIdx[228126] 0))
    (228132 call _sanity call_tmp[877598])
    (561108 'end of statement' lastArrayIdx[228126])
    unknown call_tmp[877605] "maybe param" "maybe type" "temp"
    (877608 'move' call_tmp[877605](228140 call(445552 call (partial) _getArrayCapacity _mt[203] this[228105]) lastArrayIdx[228126]))
    const lastArrayCapacity[228138] "dead at end of block" "const" "insert auto destroy"
    (649811 'init var' lastArrayCapacity[228138] call_tmp[877605])
    (228143 'end of statement')
    unknown call_tmp[877612] "expr temp" "maybe param" "maybe type" "temp"
    (877615 'move' call_tmp[877612](445558 call _totalCapacity _mt[203] this[228105]))
    unknown call_tmp[877617] "maybe param" "maybe type" "temp"
    (877620 'move' call_tmp[877617](228146 call - call_tmp[877612] lastArrayCapacity[228138]))
    const threshold[228145] "dead at end of block" "const" "insert auto destroy"
    (649813 'init var' threshold[228145] call_tmp[877617])
    (228151 'end of statement')
    unknown call_tmp[877624] "expr temp" "maybe param" "maybe type" "temp"
    (877627 'move' call_tmp[877624](445564 call _size _mt[203] this[228105]))
    unknown call_tmp[877629] "maybe param" "maybe type" "temp"
    (877632 'move' call_tmp[877629](228154 call - call_tmp[877624] amount[228108]))
    const nsize[228153] "dead at end of block" "const" "insert auto destroy"
    (649815 'init var' nsize[228153] call_tmp[877629])
    (228159 'end of statement')
    unknown call_tmp[877634] "expr temp" "maybe param" "maybe type" "temp"
    (877637 'move' call_tmp[877634](228162 call > nsize[228153] threshold[228145]))
    unknown call_tmp[877639] "expr temp" "maybe param" "maybe type" "temp"
    (877642 'move' call_tmp[877639](228166 call _cond_test call_tmp[877634]))
    if call_tmp[877639]
    {
      gotoReturn _end__maybeReleaseMem[621606] _end__maybeReleaseMem[621606]
    }
    unknown array[228172] "dead at end of block" "ref var"
    (649820 'init ref decl' array[228172])
    unknown call_tmp[877646] "expr temp" "maybe param" "maybe type" "temp"
    (877649 'move' call_tmp[877646](228174 call(445572 call (partial) _arrays _mt[203] this[228105]) lastArrayIdx[228126]))
    (649818 'move' array[228172](649817 'addr of' call_tmp[877646]))
    (228177 'end of statement' lastArrayIdx[228126] lastArrayCapacity[228138])
    unknown call_tmp[877651] "expr temp" "maybe param" "maybe type" "temp"
    (877654 'move' call_tmp[877651](228180 call != array[228172] nil[32]))
    (228179 call _sanity call_tmp[877651])
    (561113 'end of statement' array[228172])
    (228185 call(445580 call (partial) _freeArray _mt[203] this[228105]) array[228172] lastArrayCapacity[228138])
    (561115 'end of statement' array[228172] lastArrayCapacity[228138])
    unknown call_tmp[877660] "expr temp" "maybe param" "maybe type" "temp"
    (877663 'move' call_tmp[877660](445587 call _totalCapacity _mt[203] this[228105]))
    (228188 call -= call_tmp[877660] lastArrayCapacity[228138])
    (561118 'end of statement' lastArrayCapacity[228138])
    (228192 call = array[228172] nil[32])
    (561120 'end of statement' array[228172])
    label _end__maybeReleaseMem[621606]
    (621608 return _void[46])
  }
  function list[231871](?)._expand[228198](arg _mt[228212]:_MT[201], ref arg this[228200]:list[231871](?), arg idx[228203]:int(64)[10], arg shift[228208]:int(64)[10] =
  1) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877667] "expr temp" "maybe param" "maybe type" "temp"
    (877670 'move' call_tmp[877667](228218 call(445593 call (partial) _withinBounds _mt[203] this[228200]) idx[228203]))
    (228216 call _sanity call_tmp[877667])
    (561122 'end of statement')
    unknown call_tmp[877672] "expr temp" "maybe param" "maybe type" "temp"
    (877675 'move' call_tmp[877672](228222 call <= shift[228208] 0))
    unknown call_tmp[877677] "expr temp" "maybe param" "maybe type" "temp"
    (877680 'move' call_tmp[877677](228226 call _cond_test call_tmp[877672]))
    if call_tmp[877677]
    {
      gotoReturn _end__expand[621614] _end__expand[621614]
    }
    {
      const tmp[228324] "const" "temp"
      unknown call_tmp[877682] "expr temp" "maybe param" "maybe type" "temp"
      (877685 'move' call_tmp[877682](228321 '_wide_get_locale' this[228200]))
      (228325 'move' tmp[228324](228322 'deref' call_tmp[877682]))
      {
        (228234 call(445602 call (partial) _maybeAcquireMem _mt[203] this[228200]) shift[228208])
        (561124 'end of statement')
        {
          unknown _indexOfInterest[228272] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[228273] "expr temp" "temp"
          unknown call_tmp[877691] "expr temp" "maybe param" "maybe type" "temp"
          (877694 'move' call_tmp[877691](445628 call _size _mt[203] this[228200]))
          unknown call_tmp[877696] "expr temp" "maybe param" "maybe type" "temp"
          (877699 'move' call_tmp[877696](228296 call - call_tmp[877691] 1))
          unknown call_tmp[877701] "expr temp" "maybe param" "maybe type" "temp"
          (877704 'move' call_tmp[877701](228292 call - 1))
          unknown call_tmp[877706] "expr temp" "maybe param" "maybe type" "temp"
          (877709 'move' call_tmp[877706](228299 call chpl_direct_strided_range_iter idx[228203] call_tmp[877696] call_tmp[877701]))
          (228282 'move' _iterator[228273](228280 call _getIterator call_tmp[877706]))
          Defer
          {
            {
              (228314 call _freeIterator _iterator[228273])
            }
          }
          { scopeless type
            (228304 'move' _indexOfInterest[228272](228301 call iteratorIndex _iterator[228273]))
          }
          ForLoop[228274]
          {
            unknown i[228236] "index var" "insert auto destroy"
            (561126 'end of statement')
            (228309 'move' i[228236] _indexOfInterest[228272])
            (561127 'end of statement' i[228236])
            {
              unknown src[228252] "dead at end of block" "ref var"
              (649825 'init ref decl' src[228252])
              unknown call_tmp[877713] "expr temp" "maybe param" "maybe type" "temp"
              (877716 'move' call_tmp[877713](228254 call(445607 call (partial) _getRef _mt[203] this[228200]) i[228236]))
              (649823 'move' src[228252](649822 'addr of' call_tmp[877713]))
              (228257 'end of statement')
              unknown dst[228259] "dead at end of block" "ref var"
              (649830 'init ref decl' dst[228259])
              unknown call_tmp[877720] "expr temp" "maybe param" "maybe type" "temp"
              (877723 'move' call_tmp[877720](228262 call + i[228236] shift[228208]))
              unknown call_tmp[877725] "expr temp" "maybe param" "maybe type" "temp"
              (877728 'move' call_tmp[877725](228261 call(445612 call (partial) _getRef _mt[203] this[228200]) call_tmp[877720]))
              (649828 'move' dst[228259](649827 'addr of' call_tmp[877725]))
              (228267 'end of statement' i[228236])
              (228269 call(445620 call (partial) _move _mt[203] this[228200]) src[228252] dst[228259])
              (561130 'end of statement' src[228252] dst[228259])
            }
            label _continueLabel[228277]
            _indexOfInterest[228272]
            _iterator[228273]
          }
          label _breakLabel[228278]
        }
      }
      (228328 'elided on block' 0 tmp[228324])
    }
    label _end__expand[621614]
    (621616 return _void[46])
  }
  function list[231871](?)._collapse[228335](arg _mt[228343]:_MT[201], ref arg this[228337]:list[231871](?), arg idx[228340]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[877734] "expr temp" "maybe param" "maybe type" "temp"
    (877737 'move' call_tmp[877734](228349 call(445632 call (partial) _withinBounds _mt[203] this[228337]) idx[228340]))
    (228347 call _sanity call_tmp[877734])
    (561134 'end of statement')
    unknown call_tmp[877741] "expr temp" "maybe param" "maybe type" "temp"
    (877744 'move' call_tmp[877741](445646 call _size _mt[203] this[228337]))
    unknown call_tmp[877746] "expr temp" "maybe param" "maybe type" "temp"
    (877749 'move' call_tmp[877746](228372 call - call_tmp[877741] 1))
    unknown call_tmp[877751] "expr temp" "maybe param" "maybe type" "temp"
    (877754 'move' call_tmp[877751](228369 call == idx[228340] call_tmp[877746]))
    unknown call_tmp[877756] "expr temp" "maybe param" "maybe type" "temp"
    (877759 'move' call_tmp[877756](228376 call _cond_test call_tmp[877751]))
    if call_tmp[877756]
    {
      {
        const tmp[228360] "const" "temp"
        unknown call_tmp[877761] "expr temp" "maybe param" "maybe type" "temp"
        (877764 'move' call_tmp[877761](228357 '_wide_get_locale' this[228337]))
        (228361 'move' tmp[228360](228358 'deref' call_tmp[877761]))
        (228354 call(445640 call (partial) _maybeReleaseMem _mt[203] this[228337]) 1)
        (228364 'elided on block' 0 tmp[228360])
      }
      gotoReturn _end__collapse[621620] _end__collapse[621620]
    }
    {
      const tmp[228458] "const" "temp"
      unknown call_tmp[877768] "expr temp" "maybe param" "maybe type" "temp"
      (877771 'move' call_tmp[877768](228455 '_wide_get_locale' this[228337]))
      (228459 'move' tmp[228458](228456 'deref' call_tmp[877768]))
      {
        {
          unknown _indexOfInterest[228413] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[228414] "expr temp" "temp"
          unknown call_tmp[877775] "expr temp" "maybe param" "maybe type" "temp"
          (877778 'move' call_tmp[877775](445669 call _size _mt[203] this[228337]))
          unknown call_tmp[877780] "expr temp" "maybe param" "maybe type" "temp"
          (877783 'move' call_tmp[877780](228427 call - call_tmp[877775] 2))
          unknown call_tmp[877785] "expr temp" "maybe param" "maybe type" "temp"
          (877788 'move' call_tmp[877785](228430 call chpl_direct_range_iter idx[228340] call_tmp[877780]))
          (228423 'move' _iterator[228414](228421 call _getIterator call_tmp[877785]))
          Defer
          {
            {
              (228445 call _freeIterator _iterator[228414])
            }
          }
          { scopeless type
            (228435 'move' _indexOfInterest[228413](228432 call iteratorIndex _iterator[228414]))
          }
          ForLoop[228415]
          {
            unknown i[228382] "index var" "insert auto destroy"
            (561138 'end of statement')
            (228440 'move' i[228382] _indexOfInterest[228413])
            (561139 'end of statement' i[228382])
            {
              unknown src[228393] "dead at end of block" "ref var"
              (649835 'init ref decl' src[228393])
              unknown call_tmp[877792] "expr temp" "maybe param" "maybe type" "temp"
              (877795 'move' call_tmp[877792](228396 call + i[228382] 1))
              unknown call_tmp[877797] "expr temp" "maybe param" "maybe type" "temp"
              (877800 'move' call_tmp[877797](228395 call(445651 call (partial) _getRef _mt[203] this[228337]) call_tmp[877792]))
              (649833 'move' src[228393](649832 'addr of' call_tmp[877797]))
              (228401 'end of statement')
              unknown dst[228403] "dead at end of block" "ref var"
              (649840 'init ref decl' dst[228403])
              unknown call_tmp[877804] "expr temp" "maybe param" "maybe type" "temp"
              (877807 'move' call_tmp[877804](228405 call(445656 call (partial) _getRef _mt[203] this[228337]) i[228382]))
              (649838 'move' dst[228403](649837 'addr of' call_tmp[877804]))
              (228408 'end of statement' i[228382])
              (228410 call(445661 call (partial) _move _mt[203] this[228337]) src[228393] dst[228403])
              (561142 'end of statement' src[228393] dst[228403])
            }
            label _continueLabel[228418]
            _indexOfInterest[228413]
            _iterator[228414]
          }
          label _breakLabel[228419]
        }
        (228453 call(445673 call (partial) _maybeReleaseMem _mt[203] this[228337]) 1)
      }
      (228462 'elided on block' 0 tmp[228458])
    }
    label _end__collapse[621620]
    (621622 return _void[46])
  }
  function list[231871](?)._appendByRef[228469](arg _mt[228477]:_MT[201], ref arg this[228471]:list[231871](?), ref arg x[228474] :
  (445678 call eltType _mt[203] this[228471])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (228481 call(445682 call (partial) _maybeAcquireMem _mt[203] this[228471]) 1)
    (561147 'end of statement')
    unknown src[228484] "dead at end of block" "ref var"
    (649845 'init ref decl' src[228484])
    (649843 'move' src[228484](649842 'addr of' x[228474]))
    (228487 'end of statement')
    unknown dst[228489] "dead at end of block" "ref var"
    (649850 'init ref decl' dst[228489])
    unknown call_tmp[877821] "expr temp" "maybe param" "maybe type" "temp"
    (877824 'move' call_tmp[877821](445692 call _size _mt[203] this[228471]))
    unknown call_tmp[877826] "expr temp" "maybe param" "maybe type" "temp"
    (877829 'move' call_tmp[877826](228491 call(445687 call (partial) _getRef _mt[203] this[228471]) call_tmp[877821]))
    (649848 'move' dst[228489](649847 'addr of' call_tmp[877826]))
    (228494 'end of statement')
    (228496 call(445696 call (partial) _move _mt[203] this[228471]) src[228484] dst[228489])
    (561148 'end of statement' src[228484] dst[228489])
    unknown call_tmp[877835] "expr temp" "maybe param" "maybe type" "temp"
    (877838 'move' call_tmp[877835](445703 call _size _mt[203] this[228471]))
    (228499 call += call_tmp[877835] 1)
    (621626 return _void[46])
  }
  function list[231871](?).pushBack[228505](arg _mt[228516]:_MT[201], ref arg this[228507]:list[231871](?), in arg x[228513] :
  (228510 call eltType _mt[203] this[228507])) : _unknown[42] "method" "primary method"
  {
    unknown ret[621630] "RVV" "temp"
    (228527 call(445709 call (partial) _enter _mt[203] this[228507]))
    (561152 'end of statement')
    (228529 call(445715 call (partial) _appendByRef _mt[203] this[228507]) x[228513])
    (561153 'end of statement')
    unknown call_tmp[877848] "expr temp" "maybe param" "maybe type" "temp"
    (877851 'move' call_tmp[877848](445721 call _size _mt[203] this[228507]))
    unknown call_tmp[877853] "maybe param" "maybe type" "temp"
    (877856 'move' call_tmp[877853](228533 call - call_tmp[877848] 1))
    unknown result[228532] "dead at end of block" "insert auto destroy"
    (649852 'init var' result[228532] call_tmp[877853])
    (228538 'end of statement')
    (228540 call(445725 call (partial) _leave _mt[203] this[228507]))
    (561154 'end of statement')
    (621636 'move' ret[621630](621635 'coerce' result[228532] int(64)[10]))
    gotoReturn _end_pushBack[621628] _end_pushBack[621628]
    (561155 'end of statement' result[228532])
    label _end_pushBack[621628]
    (621632 return ret[621630])
  }
  {
    (228523 call <(228520 'lifetime_of' this[228507])(228522 'lifetime_of' x[228513]))
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?)._appendGeneric[228547](arg _mt[228553]:_MT[201], ref arg this[228549]:list[231871](?), arg collection[228551]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[621642] "RVV" "temp"
    unknown startSize[228557] "dead at end of block" "insert auto destroy"
    (649854 'default init var' startSize[228557] int(64)[10])
    (228560 'end of statement')
    unknown endSize[228562] "dead at end of block" "insert auto destroy"
    (649856 'default init var' endSize[228562] int(64)[10])
    (228565 'end of statement')
    {
      const tmp[228623] "const" "temp"
      unknown call_tmp[877860] "expr temp" "maybe param" "maybe type" "temp"
      (877863 'move' call_tmp[877860](228620 '_wide_get_locale' this[228549]))
      (228624 'move' tmp[228623](228621 'deref' call_tmp[877860]))
      {
        unknown call_tmp[877867] "expr temp" "maybe param" "maybe type" "temp"
        (877870 'move' call_tmp[877867](445733 call _size _mt[203] this[228549]))
        (228568 call = startSize[228557] call_tmp[877867])
        (561157 'end of statement' startSize[228557])
        {
          unknown _indexOfInterest[228584] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[228585] "expr temp" "temp"
          (228594 'move' _iterator[228585](228592 call _getIterator collection[228551]))
          Defer
          {
            {
              (228609 call _freeIterator _iterator[228585])
            }
          }
          { scopeless type
            (228599 'move' _indexOfInterest[228584](228596 call iteratorIndex _iterator[228585]))
          }
          ForLoop[228586]
          {
            unknown item[228572] "index var" "insert auto destroy"
            (561160 'end of statement')
            (228604 'move' item[228572] _indexOfInterest[228584])
            (561161 'end of statement' item[228572])
            {
              unknown cpy[228577] "dead at end of block" "no auto destroy"
              (649858 'init var' cpy[228577] item[228572])
              (228580 'end of statement' item[228572])
              (228582 call(445739 call (partial) _appendByRef _mt[203] this[228549]) cpy[228577])
              (561164 'end of statement' cpy[228577])
            }
            label _continueLabel[228589]
            _indexOfInterest[228584]
            _iterator[228585]
          }
          label _breakLabel[228590]
        }
        unknown call_tmp[877876] "expr temp" "maybe param" "maybe type" "temp"
        (877879 'move' call_tmp[877876](445746 call _size _mt[203] this[228549]))
        (228616 call = endSize[228562] call_tmp[877876])
        (561166 'end of statement' endSize[228562])
      }
      (228627 'elided on block' 0 tmp[228623])
    }
    unknown call_tmp[877881] "expr temp" "maybe param" "maybe type" "temp"
    (877884 'move' call_tmp[877881](228633 call - endSize[228562] 1))
    unknown call_tmp[877886] "expr temp" "maybe param" "maybe type" "temp"
    (877889 'move' call_tmp[877886](228637 call chpl_build_bounded_range startSize[228557] call_tmp[877881]))
    (621647 'move' ret[621642](621646 'deref' call_tmp[877886]))
    gotoReturn _end__appendGeneric[621640] _end__appendGeneric[621640]
    (561168 'end of statement' startSize[228557] endSize[228562])
    label _end__appendGeneric[621640]
    (621644 return ret[621642])
  }
  function list[231871](?).pushBack[228641](arg _mt[228653]:_MT[201], ref arg this[228643]:list[231871](?), arg other[228650]:list[231871](?)) : _unknown[42] "compiler added where" "method" "primary method"
  {
    unknown ret[621653] "RVV" "temp"
    unknown ret[228663] "dead at end of block" "insert auto destroy"
    (649860 'default init var' ret[228663] range[240](?))
    (228666 'end of statement')
    {
      const tmp[228682] "const" "temp"
      unknown call_tmp[877891] "expr temp" "maybe param" "maybe type" "temp"
      (877894 'move' call_tmp[877891](228679 '_wide_get_locale' this[228643]))
      (228683 'move' tmp[228682](228680 'deref' call_tmp[877891]))
      {
        (228670 call(445762 call (partial) _enter _mt[203] this[228643]))
        (561171 'end of statement')
        unknown call_tmp[877900] "expr temp" "maybe param" "maybe type" "temp"
        (877903 'move' call_tmp[877900](228675 call(445767 call (partial) _appendGeneric _mt[203] this[228643]) other[228650]))
        (228671 call = ret[228663] call_tmp[877900])
        (561172 'end of statement' ret[228663])
        (228678 call(445772 call (partial) _leave _mt[203] this[228643]))
      }
      (228686 'elided on block' 0 tmp[228682])
    }
    (621658 'move' ret[621653](621657 'deref' ret[228663]))
    gotoReturn _end_pushBack[621651] _end_pushBack[621651]
    (561175 'end of statement' ret[228663])
    label _end_pushBack[621651]
    (621655 return ret[621653])
  }
  where {
    unknown call_tmp[877909] "expr temp" "maybe param" "maybe type" "temp"
    (877912 'move' call_tmp[877909](530290 call eltType _mt[203] this[228643]))
    unknown call_tmp[877914] "expr temp" "maybe param" "maybe type" "temp"
    (877917 'move' call_tmp[877914](530286 'query' other[228650] 1))
    unknown call_tmp[877919] "expr temp" "maybe param" "maybe type" "temp"
    (877922 'move' call_tmp[877919](530293 call == call_tmp[877909] call_tmp[877914]))
    (530297 call & 1 call_tmp[877919])
  }
  {
    (228659 call <(228656 'lifetime_of' this[228643])(228658 'lifetime_of' other[228650]))
  }
  function list[231871](?).pushBack[228695](arg _mt[228707]:_MT[201], ref arg this[228697]:list[231871](?), arg other[228704]:_array[255540](?)) : _unknown[42] "compiler added where" "method" "primary method"
  {
    unknown ret[621664] "RVV" "temp"
    unknown ret[228717] "dead at end of block" "insert auto destroy"
    (649862 'default init var' ret[228717] range[240](?))
    (228720 'end of statement')
    {
      const tmp[228736] "const" "temp"
      unknown call_tmp[877924] "expr temp" "maybe param" "maybe type" "temp"
      (877927 'move' call_tmp[877924](228733 '_wide_get_locale' this[228697]))
      (228737 'move' tmp[228736](228734 'deref' call_tmp[877924]))
      {
        (228724 call(445786 call (partial) _enter _mt[203] this[228697]))
        (561177 'end of statement')
        unknown call_tmp[877933] "expr temp" "maybe param" "maybe type" "temp"
        (877936 'move' call_tmp[877933](228729 call(445791 call (partial) _appendGeneric _mt[203] this[228697]) other[228704]))
        (228725 call = ret[228717] call_tmp[877933])
        (561178 'end of statement' ret[228717])
        (228732 call(445796 call (partial) _leave _mt[203] this[228697]))
      }
      (228740 'elided on block' 0 tmp[228736])
    }
    (621669 'move' ret[621664](621668 'deref' ret[228717]))
    gotoReturn _end_pushBack[621662] _end_pushBack[621662]
    (561181 'end of statement' ret[228717])
    label _end_pushBack[621662]
    (621666 return ret[621664])
  }
  where {
    unknown call_tmp[877942] "expr temp" "maybe param" "maybe type" "temp"
    (877945 'move' call_tmp[877942](445778 call eltType _mt[203] this[228697]))
    unknown call_tmp[877949] "expr temp" "maybe param" "maybe type" "temp"
    (877952 'move' call_tmp[877949](530309 call eltType _mt[203] other[228704]))
    unknown call_tmp[877954] "expr temp" "maybe param" "maybe type" "temp"
    (877957 'move' call_tmp[877954](530313 'is_instantiation_allow_values' call_tmp[877942] call_tmp[877949]))
    (530307 call & 1 call_tmp[877954])
  }
  {
    (228713 call <(228710 'lifetime_of' this[228697])(228712 'lifetime_of' other[228704]))
  }
  function list[231871](?).pushBack[228749](arg _mt[228763]:_MT[201], ref arg this[228751]:list[231871](?), arg other[228760]:range[240](?)) : _unknown[42] "compiler added where" "method" "primary method"
  {
    unknown ret[621675] "RVV" "temp"
    unknown call_tmp[877961] "expr temp" "maybe param" "maybe type" "temp"
    (877964 'move' call_tmp[877961](228815 call bounds _mt[203] other[228760]))
    unknown call_tmp[877966] "expr temp" "maybe param" "maybe type" "temp"
    (877969 'move' call_tmp[877966](228812 call != call_tmp[877961] both[107114]))
    unknown call_tmp[877971] "expr temp" "maybe param" "maybe type" "temp"
    (877974 'move' call_tmp[877971](228822 call _cond_test call_tmp[877966]))
    if call_tmp[877971]
    {
      unknown call_tmp[877976] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (877979 'move' call_tmp[877976](228778 'typeof' this[228751]))
      unknown call_tmp[877981] "maybe param" "maybe type" "temp"
      (877984 'move' call_tmp[877981](228775 call : call_tmp[877976] string[244]))
      unknown e[228774] "dead at end of block" "param"
      (649864 'init var' e[228774] call_tmp[877981])
      (228781 'end of statement')
      unknown call_tmp[877986] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (877989 'move' call_tmp[877986](228787 'typeof' other[228760]))
      unknown call_tmp[877991] "maybe param" "maybe type" "temp"
      (877994 'move' call_tmp[877991](228784 call : call_tmp[877986] string[244]))
      unknown f[228783] "dead at end of block" "param"
      (649866 'init var' f[228783] call_tmp[877991])
      (228790 'end of statement')
      unknown call_tmp[877996] "expr temp" "maybe param" "maybe type" "temp"
      (877999 'move' call_tmp[877996](228797 call + "Cannot extend " e[228774]))
      unknown call_tmp[878001] "expr temp" "maybe param" "maybe type" "temp"
      (878004 'move' call_tmp[878001](228795 call + call_tmp[877996] " with unbounded "))
      unknown call_tmp[878006] "maybe param" "maybe type" "temp"
      (878009 'move' call_tmp[878006](228793 call + call_tmp[878001] f[228783]))
      unknown msg[228792] "dead at end of block" "param"
      (649868 'init var' msg[228792] call_tmp[878006])
      (228808 'end of statement')
      (228810 call compilerError msg[228792])
    }
    unknown ret[228827] "dead at end of block" "insert auto destroy"
    (649870 'default init var' ret[228827] range[240](?))
    (228830 'end of statement')
    {
      const tmp[228846] "const" "temp"
      unknown call_tmp[878011] "expr temp" "maybe param" "maybe type" "temp"
      (878014 'move' call_tmp[878011](228843 '_wide_get_locale' this[228751]))
      (228847 'move' tmp[228846](228844 'deref' call_tmp[878011]))
      {
        (228834 call(445816 call (partial) _enter _mt[203] this[228751]))
        (561184 'end of statement')
        unknown call_tmp[878020] "expr temp" "maybe param" "maybe type" "temp"
        (878023 'move' call_tmp[878020](228839 call(445821 call (partial) _appendGeneric _mt[203] this[228751]) other[228760]))
        (228835 call = ret[228827] call_tmp[878020])
        (561185 'end of statement' ret[228827])
        (228842 call(445826 call (partial) _leave _mt[203] this[228751]))
      }
      (228850 'elided on block' 0 tmp[228846])
    }
    (621680 'move' ret[621675](621679 'deref' ret[228827]))
    gotoReturn _end_pushBack[621673] _end_pushBack[621673]
    (561188 'end of statement' ret[228827])
    label _end_pushBack[621673]
    (621677 return ret[621675])
  }
  where {
    unknown call_tmp[878029] "expr temp" "maybe param" "maybe type" "temp"
    (878032 'move' call_tmp[878029](530321 call eltType _mt[203] this[228751]))
    unknown call_tmp[878034] "expr temp" "maybe param" "maybe type" "temp"
    (878037 'move' call_tmp[878034](530317 'query' other[228760] 1))
    unknown call_tmp[878039] "expr temp" "maybe param" "maybe type" "temp"
    (878042 'move' call_tmp[878039](530324 call == call_tmp[878029] call_tmp[878034]))
    (530328 call & 1 call_tmp[878039])
  }
  {
    (228769 call <(228766 'lifetime_of' this[228751])(228768 'lifetime_of' other[228760]))
  }
  function list[231871](?).contains[228859](arg _mt[228867]:_MT[201], const arg this[228861]:list[231871](?), arg x[228864] :
  (445832 call eltType _mt[203] this[228861])) : _unknown[42] "method" "primary method"
  {
    unknown ret[621686] "RVV" "temp"
    unknown result[228872] "dead at end of block" "insert auto destroy"
    (649872 'init var' result[228872] 0)
    (228875 'end of statement')
    {
      const tmp[228936] "const" "temp"
      unknown call_tmp[878046] "expr temp" "maybe param" "maybe type" "temp"
      (878049 'move' call_tmp[878046](228933 '_wide_get_locale' this[228861]))
      (228937 'move' tmp[228936](228934 'deref' call_tmp[878046]))
      {
        (228879 call(445838 call (partial) _enter _mt[203] this[228861]))
        (561190 'end of statement')
        {
          unknown _indexOfInterest[228899] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[228900] "expr temp" "temp"
          (228909 'move' _iterator[228900](228907 call _getIterator this[228861]))
          Defer
          {
            {
              (228924 call _freeIterator _iterator[228900])
            }
          }
          { scopeless type
            (228914 'move' _indexOfInterest[228899](228911 call iteratorIndex _iterator[228900]))
          }
          ForLoop[228901]
          {
            unknown item[228880] "index var" "insert auto destroy"
            (561192 'end of statement')
            (228919 'move' item[228880] _indexOfInterest[228899])
            (561193 'end of statement' item[228880])
            unknown call_tmp[878053] "expr temp" "maybe param" "maybe type" "temp"
            (878056 'move' call_tmp[878053](228891 call == item[228880] x[228864]))
            unknown call_tmp[878058] "expr temp" "maybe param" "maybe type" "temp"
            (878061 'move' call_tmp[878058](228895 call _cond_test call_tmp[878053]))
            if call_tmp[878058]
            {
              (228884 call = result[228872] 1)
              (561195 'end of statement' result[228872])
              break _breakLabel[228905] _breakLabel[228905]
            }
            label _continueLabel[228904]
            _indexOfInterest[228899]
            _iterator[228900]
          }
          label _breakLabel[228905]
        }
        (228932 call(445846 call (partial) _leave _mt[203] this[228861]))
      }
      (228940 'elided on block' 0 tmp[228936])
    }
    (621692 'move' ret[621686](621691 'coerce' result[228872] bool[19]))
    gotoReturn _end_contains[621684] _end_contains[621684]
    (561198 'end of statement' result[228872])
    label _end_contains[621684]
    (621688 return ret[621686])
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).first[228949](arg _mt[228953]:_MT[201], ref arg this[228951]:list[231871](?)) ref : _unknown[42] "deprecated parenful" "method" "primary method" "no parens"
  {
    unknown ret[621698] "RVV" "temp"
    unknown call_tmp[878067] "expr temp" "maybe param" "maybe type" "temp"
    (878070 'move' call_tmp[878067](445852 call parSafe _mt[203] this[228951]))
    unknown call_tmp[878072] "expr temp" "maybe param" "maybe type" "temp"
    (878075 'move' call_tmp[878072](228973 call _cond_test call_tmp[878067]))
    if call_tmp[878072]
    {
      unknown call_tmp[878077] "expr temp" "maybe param" "maybe type" "temp"
      (878080 'move' call_tmp[878077](228960 call + "Calling `first()` on a list initialized with " "`parSafe=true` has been deprecated, consider "))
      unknown call_tmp[878082] "expr temp" "maybe param" "maybe type" "temp"
      (878085 'move' call_tmp[878082](228958 call + call_tmp[878077] "using `set()` or `update()` instead"))
      (228957 call compilerWarning call_tmp[878082])
    }
    (228979 call(445856 call (partial) _enter _mt[203] this[228951]))
    (561201 'end of statement')
    unknown tmp[497556] "maybe param" "temp"
    (497567 'move' tmp[497556] 1)
    unknown call_tmp[878089] "expr temp" "maybe param" "maybe type" "temp"
    (878092 'move' call_tmp[878089](497569 call _cond_invalid tmp[497556]))
    if call_tmp[878089]
    {
      (497572 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695126] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695127] "maybe param" "temp"
    unknown call_tmp[878094] "expr temp" "maybe param" "maybe type" "temp"
    (878097 'move' call_tmp[878094](497557 call isTrue tmp[497556]))
    (695132 'move' tmp[695127](695130 call _cond_test call_tmp[878094]))
    if tmp[695127]
    {
      unknown tmp[695134] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[878101] "expr temp" "maybe param" "maybe type" "temp"
      (878104 'move' call_tmp[878101](445866 call _size _mt[203] this[228951]))
      unknown call_tmp[878106] "expr temp" "maybe param" "maybe type" "temp"
      (878109 'move' call_tmp[878106](228991 call == call_tmp[878101] 0))
      (695136 'move' tmp[695134](497560 call isTrue call_tmp[878106]))
      (695141 'move' tmp[695126](695138 '_paramFoldLogical' tmp[695127] tmp[695134]))
    }
    {
      (695146 'move' tmp[695126](695143 '_paramFoldLogical' tmp[695127] 0))
    }
    unknown call_tmp[878111] "expr temp" "maybe param" "maybe type" "temp"
    (878114 'move' call_tmp[878111](228995 call _cond_test tmp[695126]))
    if call_tmp[878111]
    {
      (228982 call(445860 call (partial) _leave _mt[203] this[228951]))
      (561203 'end of statement')
      (228984 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[229000] "dead at end of block" "ref var"
    (649877 'init ref decl' result[229000])
    unknown call_tmp[878120] "expr temp" "maybe param" "maybe type" "temp"
    (878123 'move' call_tmp[878120](229002 call(445870 call (partial) _getRef _mt[203] this[228951]) 0))
    (649875 'move' result[229000](649874 'addr of' call_tmp[878120]))
    (229005 'end of statement')
    (229007 call(445874 call (partial) _leave _mt[203] this[228951]))
    (561205 'end of statement')
    (621703 'move' ret[621698](621702 'addr of' result[229000]))
    gotoReturn _end_first[621696] _end_first[621696]
    (561206 'end of statement' result[229000])
    label _end_first[621696]
    (621700 return ret[621698])
  }
  function list[231871](?).last[229012](arg _mt[229016]:_MT[201], ref arg this[229014]:list[231871](?)) ref : _unknown[42] "deprecated parenful" "method" "primary method" "no parens"
  {
    unknown ret[621709] "RVV" "temp"
    unknown call_tmp[878129] "expr temp" "maybe param" "maybe type" "temp"
    (878132 'move' call_tmp[878129](445880 call parSafe _mt[203] this[229014]))
    unknown call_tmp[878134] "expr temp" "maybe param" "maybe type" "temp"
    (878137 'move' call_tmp[878134](229032 call _cond_test call_tmp[878129]))
    if call_tmp[878134]
    {
      unknown call_tmp[878139] "expr temp" "maybe param" "maybe type" "temp"
      (878142 'move' call_tmp[878139](229023 call + "Calling `last()` on a list initialized with " "`parSafe=true` has been deprecated, consider "))
      unknown call_tmp[878144] "expr temp" "maybe param" "maybe type" "temp"
      (878147 'move' call_tmp[878144](229021 call + call_tmp[878139] "using `set()` or `update()` instead"))
      (229020 call compilerWarning call_tmp[878144])
    }
    (229038 call(445884 call (partial) _enter _mt[203] this[229014]))
    (561209 'end of statement')
    unknown tmp[497577] "maybe param" "temp"
    (497588 'move' tmp[497577] 1)
    unknown call_tmp[878151] "expr temp" "maybe param" "maybe type" "temp"
    (878154 'move' call_tmp[878151](497590 call _cond_invalid tmp[497577]))
    if call_tmp[878151]
    {
      (497593 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695153] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695154] "maybe param" "temp"
    unknown call_tmp[878156] "expr temp" "maybe param" "maybe type" "temp"
    (878159 'move' call_tmp[878156](497578 call isTrue tmp[497577]))
    (695159 'move' tmp[695154](695157 call _cond_test call_tmp[878156]))
    if tmp[695154]
    {
      unknown tmp[695161] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[878163] "expr temp" "maybe param" "maybe type" "temp"
      (878166 'move' call_tmp[878163](445894 call _size _mt[203] this[229014]))
      unknown call_tmp[878168] "expr temp" "maybe param" "maybe type" "temp"
      (878171 'move' call_tmp[878168](229050 call == call_tmp[878163] 0))
      (695163 'move' tmp[695161](497581 call isTrue call_tmp[878168]))
      (695168 'move' tmp[695153](695165 '_paramFoldLogical' tmp[695154] tmp[695161]))
    }
    {
      (695173 'move' tmp[695153](695170 '_paramFoldLogical' tmp[695154] 0))
    }
    unknown call_tmp[878173] "expr temp" "maybe param" "maybe type" "temp"
    (878176 'move' call_tmp[878173](229054 call _cond_test tmp[695153]))
    if call_tmp[878173]
    {
      (229041 call(445888 call (partial) _leave _mt[203] this[229014]))
      (561211 'end of statement')
      (229043 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[229059] "dead at end of block" "ref var"
    (649882 'init ref decl' result[229059])
    unknown call_tmp[878184] "expr temp" "maybe param" "maybe type" "temp"
    (878187 'move' call_tmp[878184](445903 call _size _mt[203] this[229014]))
    unknown call_tmp[878189] "expr temp" "maybe param" "maybe type" "temp"
    (878192 'move' call_tmp[878189](229062 call - call_tmp[878184] 1))
    unknown call_tmp[878194] "expr temp" "maybe param" "maybe type" "temp"
    (878197 'move' call_tmp[878194](229061 call(445898 call (partial) _getRef _mt[203] this[229014]) call_tmp[878189]))
    (649880 'move' result[229059](649879 'addr of' call_tmp[878194]))
    (229067 'end of statement')
    (229069 call(445907 call (partial) _leave _mt[203] this[229014]))
    (561213 'end of statement')
    (621714 'move' ret[621709](621713 'addr of' result[229059]))
    gotoReturn _end_last[621707] _end_last[621707]
    (561214 'end of statement' result[229059])
    label _end_last[621707]
    (621711 return ret[621709])
  }
  function list[231871](?).insert[229074](arg _mt[229086]:_MT[201], ref arg this[229076]:list[231871](?), arg idx[229079]:int(64)[10], in arg x[229083] :
  (445913 call eltType _mt[203] this[229076])) : _unknown[42] "method" "primary method"
  {
    unknown ret[621720] "RVV" "temp"
    unknown result[229097] "dead at end of block" "insert auto destroy"
    (649884 'init var' result[229097] 0)
    (229100 'end of statement')
    (229102 call(445920 call (partial) _enter _mt[203] this[229076]))
    (561216 'end of statement')
    unknown call_tmp[878207] "expr temp" "maybe param" "maybe type" "temp"
    (878210 'move' call_tmp[878207](445962 call _size _mt[203] this[229076]))
    unknown call_tmp[878212] "expr temp" "maybe param" "maybe type" "temp"
    (878215 'move' call_tmp[878212](229146 call == idx[229079] call_tmp[878207]))
    unknown call_tmp[878217] "expr temp" "maybe param" "maybe type" "temp"
    (878220 'move' call_tmp[878217](229150 call _cond_test call_tmp[878212]))
    if call_tmp[878217]
    {
      (229105 call(445924 call (partial) _appendByRef _mt[203] this[229076]) x[229083])
      (561217 'end of statement')
      (229107 call = result[229097] 1)
      (561218 'end of statement' result[229097])
    }
    {
      unknown call_tmp[878226] "expr temp" "maybe param" "maybe type" "temp"
      (878229 'move' call_tmp[878226](229140 call(445955 call (partial) _withinBounds _mt[203] this[229076]) idx[229079]))
      unknown call_tmp[878231] "expr temp" "maybe param" "maybe type" "temp"
      (878234 'move' call_tmp[878231](229142 call _cond_test call_tmp[878226]))
      if call_tmp[878231]
      {
        (229113 call(445932 call (partial) _expand _mt[203] this[229076]) idx[229079])
        (561220 'end of statement')
        unknown src[229116] "dead at end of block" "ref var"
        (649889 'init ref decl' src[229116])
        (649887 'move' src[229116](649886 'addr of' x[229083]))
        (229119 'end of statement')
        unknown dst[229121] "dead at end of block" "ref var"
        (649894 'init ref decl' dst[229121])
        unknown call_tmp[878240] "expr temp" "maybe param" "maybe type" "temp"
        (878243 'move' call_tmp[878240](229123 call(445938 call (partial) _getRef _mt[203] this[229076]) idx[229079]))
        (649892 'move' dst[229121](649891 'addr of' call_tmp[878240]))
        (229126 'end of statement')
        (229128 call(445943 call (partial) _move _mt[203] this[229076]) src[229116] dst[229121])
        (561221 'end of statement' src[229116] dst[229121])
        unknown call_tmp[878249] "expr temp" "maybe param" "maybe type" "temp"
        (878252 'move' call_tmp[878249](445950 call _size _mt[203] this[229076]))
        (229131 call += call_tmp[878249] 1)
        (561224 'end of statement')
        (229135 call = result[229097] 1)
        (561225 'end of statement' result[229097])
      }
    }
    (229156 call(445966 call (partial) _leave _mt[203] this[229076]))
    (561227 'end of statement')
    unknown call_tmp[878256] "expr temp" "maybe param" "maybe type" "temp"
    (878259 'move' call_tmp[878256](229161 call ! result[229097]))
    unknown call_tmp[878261] "expr temp" "maybe param" "maybe type" "temp"
    (878264 'move' call_tmp[878261](229164 call _cond_test call_tmp[878256]))
    if call_tmp[878261]
    {
      (229158 call(445972 call (partial) _destroy _mt[203] this[229076]) x[229083])
    }
    (621726 'move' ret[621720](621725 'coerce' result[229097] bool[19]))
    gotoReturn _end_insert[621718] _end_insert[621718]
    (561229 'end of statement' result[229097])
    label _end_insert[621718]
    (621722 return ret[621720])
  }
  {
    (229093 call <(229090 'lifetime_of' this[229076])(229092 'lifetime_of' x[229083]))
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?)._insertGenericKnownSize[229175](arg _mt[229189]:_MT[201], ref arg this[229177]:list[231871](?), arg idx[229180]:int(64)[10], arg items[229183]:_any[141](?), arg size[229186]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[621732] "RVV" "temp"
    unknown result[229194] "dead at end of block" "insert auto destroy"
    (649896 'init var' result[229194] 0)
    (229197 'end of statement')
    unknown call_tmp[878268] "expr temp" "maybe param" "maybe type" "temp"
    (878271 'move' call_tmp[878268](229200 call >= size[229186] 0))
    (229199 call _sanity call_tmp[878268])
    (561231 'end of statement')
    unknown call_tmp[878273] "expr temp" "maybe param" "maybe type" "temp"
    (878276 'move' call_tmp[878273](229207 call == size[229186] 0))
    unknown call_tmp[878278] "expr temp" "maybe param" "maybe type" "temp"
    (878281 'move' call_tmp[878278](229211 call _cond_test call_tmp[878273]))
    if call_tmp[878278]
    {
      (621738 'move' ret[621732](621737 'coerce' 1 bool[19]))
      gotoReturn _end__insertGenericKnownSize[621730] _end__insertGenericKnownSize[621730]
    }
    {
      const tmp[229324] "const" "temp"
      unknown call_tmp[878283] "expr temp" "maybe param" "maybe type" "temp"
      (878286 'move' call_tmp[878283](229321 '_wide_get_locale' this[229177]))
      (229325 'move' tmp[229324](229322 'deref' call_tmp[878283]))
      {
        unknown call_tmp[878290] "expr temp" "maybe param" "maybe type" "temp"
        (878293 'move' call_tmp[878290](446024 call _size _mt[203] this[229177]))
        unknown call_tmp[878295] "expr temp" "maybe param" "maybe type" "temp"
        (878298 'move' call_tmp[878295](229312 call == idx[229180] call_tmp[878290]))
        unknown call_tmp[878300] "expr temp" "maybe param" "maybe type" "temp"
        (878303 'move' call_tmp[878300](229316 call _cond_test call_tmp[878295]))
        if call_tmp[878300]
        {
          (229220 call(445983 call (partial) _appendGeneric _mt[203] this[229177]) items[229183])
          (561233 'end of statement')
          (229222 call = result[229194] 1)
          (561234 'end of statement' result[229194])
        }
        {
          unknown call_tmp[878309] "expr temp" "maybe param" "maybe type" "temp"
          (878312 'move' call_tmp[878309](229306 call(446017 call (partial) _withinBounds _mt[203] this[229177]) idx[229180]))
          unknown call_tmp[878314] "expr temp" "maybe param" "maybe type" "temp"
          (878317 'move' call_tmp[878314](229308 call _cond_test call_tmp[878309]))
          if call_tmp[878314]
          {
            (229228 call(445989 call (partial) _expand _mt[203] this[229177]) idx[229180] size[229186])
            (561236 'end of statement')
            unknown i[229232] "dead at end of block" "insert auto destroy"
            (649898 'init var' i[229232] idx[229180])
            (229235 'end of statement')
            {
              unknown _indexOfInterest[229269] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[229270] "expr temp" "temp"
              (229279 'move' _iterator[229270](229277 call _getIterator items[229183]))
              Defer
              {
                {
                  (229294 call _freeIterator _iterator[229270])
                }
              }
              { scopeless type
                (229284 'move' _indexOfInterest[229269](229281 call iteratorIndex _iterator[229270]))
              }
              ForLoop[229271]
              {
                unknown x[229236] "index var" "insert auto destroy"
                (561238 'end of statement')
                (229289 'move' x[229236] _indexOfInterest[229269])
                (561239 'end of statement' x[229236])
                {
                  unknown cpy[229241] "dead at end of block" "no auto destroy"
                  (649900 'init var' cpy[229241] x[229236])
                  (229244 'end of statement')
                  unknown src[229246] "dead at end of block" "ref var"
                  (649905 'init ref decl' src[229246])
                  (649903 'move' src[229246](649902 'addr of' cpy[229241]))
                  (229249 'end of statement')
                  unknown dst[229251] "dead at end of block" "ref var"
                  (649910 'init ref decl' dst[229251])
                  unknown call_tmp[878323] "expr temp" "maybe param" "maybe type" "temp"
                  (878326 'move' call_tmp[878323](229253 call(445999 call (partial) _getRef _mt[203] this[229177]) i[229232]))
                  (649908 'move' dst[229251](649907 'addr of' call_tmp[878323]))
                  (229256 'end of statement' x[229236] cpy[229241] i[229232])
                  (229258 call(446004 call (partial) _move _mt[203] this[229177]) src[229246] dst[229251])
                  (561244 'end of statement' src[229246] dst[229251])
                  unknown call_tmp[878332] "expr temp" "maybe param" "maybe type" "temp"
                  (878335 'move' call_tmp[878332](446011 call _size _mt[203] this[229177]))
                  (229261 call += call_tmp[878332] 1)
                  (561247 'end of statement')
                  (229265 call += i[229232] 1)
                  (561248 'end of statement' i[229232])
                }
                label _continueLabel[229274]
                _indexOfInterest[229269]
                _iterator[229270]
              }
              label _breakLabel[229275]
            }
            (229301 call = result[229194] 1)
            (561250 'end of statement' result[229194])
          }
        }
      }
      (229328 'elided on block' 0 tmp[229324])
    }
    (621744 'move' ret[621732](621743 'coerce' result[229194] bool[19]))
    gotoReturn _end__insertGenericKnownSize[621730] _end__insertGenericKnownSize[621730]
    (561252 'end of statement' result[229194])
    label _end__insertGenericKnownSize[621730]
    (621734 return ret[621732])
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).insert[229337](arg _mt[229353]:_MT[201], ref arg this[229339]:list[231871](?), arg idx[229342]:int(64)[10], arg arr[229350]:_array[255540](?)) : _unknown[42] "compiler added where" "method" "primary method"
  {
    unknown ret[621750] "RVV" "temp"
    unknown result[229364] "dead at end of block" "insert auto destroy"
    (649912 'init var' result[229364] 0)
    (229367 'end of statement')
    {
      const tmp[229388] "const" "temp"
      unknown call_tmp[878337] "expr temp" "maybe param" "maybe type" "temp"
      (878340 'move' call_tmp[878337](229385 '_wide_get_locale' this[229339]))
      (229389 'move' tmp[229388](229386 'deref' call_tmp[878337]))
      {
        (229371 call(446038 call (partial) _enter _mt[203] this[229339]))
        (561254 'end of statement')
        unknown call_tmp[878348] "expr temp" "maybe param" "maybe type" "temp"
        (878351 'move' call_tmp[878348](229380 call size _mt[203] arr[229350]))
        unknown call_tmp[878353] "expr temp" "maybe param" "maybe type" "temp"
        (878356 'move' call_tmp[878353](229376 call(446045 call (partial) _insertGenericKnownSize _mt[203] this[229339]) idx[229342] arr[229350] call_tmp[878348]))
        (229372 call = result[229364] call_tmp[878353])
        (561255 'end of statement' result[229364])
        (229384 call(446051 call (partial) _leave _mt[203] this[229339]))
      }
      (229392 'elided on block' 0 tmp[229388])
    }
    (621756 'move' ret[621750](621755 'coerce' result[229364] bool[19]))
    gotoReturn _end_insert[621748] _end_insert[621748]
    (561258 'end of statement' result[229364])
    label _end_insert[621748]
    (621752 return ret[621750])
  }
  where {
    unknown call_tmp[878362] "expr temp" "maybe param" "maybe type" "temp"
    (878365 'move' call_tmp[878362](446030 call eltType _mt[203] this[229339]))
    unknown call_tmp[878369] "expr temp" "maybe param" "maybe type" "temp"
    (878372 'move' call_tmp[878369](530343 call eltType _mt[203] arr[229350]))
    unknown call_tmp[878374] "expr temp" "maybe param" "maybe type" "temp"
    (878377 'move' call_tmp[878374](530347 'is_instantiation_allow_values' call_tmp[878362] call_tmp[878369]))
    (530341 call & 1 call_tmp[878374])
  }
  {
    (229360 call <(229357 'lifetime_of' this[229339])(229359 'lifetime_of' arr[229350]))
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).insert[229402](arg _mt[229416]:_MT[201], ref arg this[229404]:list[231871](?), arg idx[229407]:int(64)[10], arg lst[229413]:list[231871](?)) : _unknown[42] "compiler added where" "method" "primary method"
  {
    unknown ret[621762] "RVV" "temp"
    unknown result[229427] "dead at end of block" "insert auto destroy"
    (649914 'init var' result[229427] 0)
    (229430 'end of statement')
    unknown call_tmp[878381] "maybe param" "maybe type" "temp"
    (878384 'move' call_tmp[878381](229434 call size _mt[203] lst[229413]))
    const size[229432] "dead at end of block" "const" "insert auto destroy"
    (649916 'init var' size[229432] call_tmp[878381])
    (229438 'end of statement')
    {
      const tmp[229456] "const" "temp"
      unknown call_tmp[878386] "expr temp" "maybe param" "maybe type" "temp"
      (878389 'move' call_tmp[878386](229453 '_wide_get_locale' this[229404]))
      (229457 'move' tmp[229456](229454 'deref' call_tmp[878386]))
      {
        (229442 call(446066 call (partial) _enter _mt[203] this[229404]))
        (561260 'end of statement')
        unknown call_tmp[878395] "expr temp" "maybe param" "maybe type" "temp"
        (878398 'move' call_tmp[878395](229447 call(446071 call (partial) _insertGenericKnownSize _mt[203] this[229404]) idx[229407] lst[229413] size[229432]))
        (229443 call = result[229427] call_tmp[878395])
        (561261 'end of statement' result[229427] size[229432])
        (229452 call(446078 call (partial) _leave _mt[203] this[229404]))
      }
      (229460 'elided on block' 0 tmp[229456])
    }
    (621768 'move' ret[621762](621767 'coerce' result[229427] bool[19]))
    gotoReturn _end_insert[621760] _end_insert[621760]
    (561265 'end of statement' result[229427])
    label _end_insert[621760]
    (621764 return ret[621762])
  }
  where {
    unknown call_tmp[878404] "expr temp" "maybe param" "maybe type" "temp"
    (878407 'move' call_tmp[878404](530355 call eltType _mt[203] this[229404]))
    unknown call_tmp[878409] "expr temp" "maybe param" "maybe type" "temp"
    (878412 'move' call_tmp[878409](530351 'query' lst[229413] 1))
    unknown call_tmp[878414] "expr temp" "maybe param" "maybe type" "temp"
    (878417 'move' call_tmp[878414](530358 call == call_tmp[878404] call_tmp[878409]))
    (530362 call & 1 call_tmp[878414])
  }
  {
    (229423 call <(229420 'lifetime_of' this[229404])(229422 'lifetime_of' lst[229413]))
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).remove[229470](arg _mt[229484]:_MT[201], ref arg this[229472]:list[231871](?), arg x[229475] :
  (446084 call eltType _mt[203] this[229472]), arg count[229480]:int(64)[10] =
  1) : _unknown[42] "method" "primary method"
  {
    unknown ret[621774] "RVV" "temp"
    unknown result[229489] "dead at end of block" "insert auto destroy"
    (649918 'init var' result[229489] 0)
    (229492 'end of statement')
    {
      const tmp[229706] "const" "temp"
      unknown call_tmp[878421] "expr temp" "maybe param" "maybe type" "temp"
      (878424 'move' call_tmp[878421](229703 '_wide_get_locale' this[229472]))
      (229707 'move' tmp[229706](229704 'deref' call_tmp[878421]))
      {
        unknown type_tmp[229502] "dead at end of block" "insert auto destroy" "temp" "type variable"
        (649921 'move' type_tmp[229502] int(64)[10])
        unknown src_i[229501] "dead at end of block" "insert auto destroy" "split inited"
        unknown type_tmp[649923] "maybe param" "maybe type" "temp"
        (649929 'move' type_tmp[649923] type_tmp[229502])
        (649925 'init var split decl' src_i[229501] type_tmp[649923])
        unknown dst_i[229497] "dead at end of block" "insert auto destroy"
        (649934 'default init var' dst_i[229497] type_tmp[229502])
        (229507 'end of statement')
        unknown removed[229509] "dead at end of block" "insert auto destroy"
        (649936 'init var' removed[229509] 0)
        (229512 'end of statement')
        (649931 'init var split init' src_i[229501] 0 type_tmp[649923])
        (561267 'end of statement' src_i[229501])
        (229518 call(446090 call (partial) _enter _mt[203] this[229472]))
        (561269 'end of statement')
        {
          unknown tmp[229554] "temp"
          unknown call_tmp[878430] "expr temp" "maybe param" "maybe type" "temp"
          (878433 'move' call_tmp[878430](446116 call _size _mt[203] this[229472]))
          unknown call_tmp[878435] "expr temp" "maybe param" "maybe type" "temp"
          (878438 'move' call_tmp[878435](229575 call < dst_i[229497] call_tmp[878430]))
          (229578 'move' tmp[229554](229573 call _cond_test call_tmp[878435]))
          WhileDo[229559]
          {
            {
              unknown dst[229525] "dead at end of block" "ref var"
              (649941 'init ref decl' dst[229525])
              unknown call_tmp[878442] "expr temp" "maybe param" "maybe type" "temp"
              (878445 'move' call_tmp[878442](229527 call(446094 call (partial) _getRef _mt[203] this[229472]) dst_i[229497]))
              (649939 'move' dst[229525](649938 'addr of' call_tmp[878442]))
              (229530 'end of statement' dst_i[229497])
              unknown call_tmp[878447] "expr temp" "maybe param" "maybe type" "temp"
              (878450 'move' call_tmp[878447](229542 call == dst[229525] x[229475]))
              unknown call_tmp[878452] "expr temp" "maybe param" "maybe type" "temp"
              (878455 'move' call_tmp[878452](229546 call _cond_test call_tmp[878447]))
              if call_tmp[878452]
              {
                (229533 call(446099 call (partial) _destroy _mt[203] this[229472]) dst[229525])
                (561271 'end of statement' dst[229525])
                (229535 call += removed[229509] 1)
                (561273 'end of statement' removed[229509])
                break _breakLabel[229558] _breakLabel[229558]
              }
              (229550 call += dst_i[229497] 1)
              (561275 'end of statement' dst_i[229497])
            }
            label _continueLabel[229557]
            unknown call_tmp[878461] "expr temp" "maybe param" "maybe type" "temp"
            (878464 'move' call_tmp[878461](446110 call _size _mt[203] this[229472]))
            unknown call_tmp[878466] "expr temp" "maybe param" "maybe type" "temp"
            (878469 'move' call_tmp[878466](229565 call < dst_i[229497] call_tmp[878461]))
            (229568 'move' tmp[229554](229563 call _cond_test call_tmp[878466]))
            tmp[229554]
          }
          label _breakLabel[229558]
        }
        unknown call_tmp[878471] "expr temp" "maybe param" "maybe type" "temp"
        (878474 'move' call_tmp[878471](229584 call + dst_i[229497] 1))
        (229581 call = src_i[229501] call_tmp[878471])
        (561277 'end of statement' src_i[229501] dst_i[229497])
        {
          unknown tmp[229654] "temp"
          unknown call_tmp[878478] "expr temp" "maybe param" "maybe type" "temp"
          (878481 'move' call_tmp[878478](446160 call _size _mt[203] this[229472]))
          unknown call_tmp[878483] "expr temp" "maybe param" "maybe type" "temp"
          (878486 'move' call_tmp[878483](229675 call < src_i[229501] call_tmp[878478]))
          (229678 'move' tmp[229654](229673 call _cond_test call_tmp[878483]))
          WhileDo[229659]
          {
            {
              unknown src[229594] "dead at end of block" "ref var"
              (649946 'init ref decl' src[229594])
              unknown call_tmp[878490] "expr temp" "maybe param" "maybe type" "temp"
              (878493 'move' call_tmp[878490](229596 call(446122 call (partial) _getRef _mt[203] this[229472]) src_i[229501]))
              (649944 'move' src[229594](649943 'addr of' call_tmp[878490]))
              (229599 'end of statement')
              unknown tmp[497598] "maybe param" "temp"
              unknown tmp[497619] "maybe param" "temp"
              (497630 'move' tmp[497619](229619 call == count[229480] 0))
              unknown call_tmp[878495] "expr temp" "maybe param" "maybe type" "temp"
              (878498 'move' call_tmp[878495](497632 call _cond_invalid tmp[497619]))
              if call_tmp[878495]
              {
                (497635 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[695180] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[695181] "maybe param" "temp"
              unknown call_tmp[878500] "expr temp" "maybe param" "maybe type" "temp"
              (878503 'move' call_tmp[878500](497620 call isTrue tmp[497619]))
              (695186 'move' tmp[695181](695184 call _cond_test call_tmp[878500]))
              if tmp[695181]
              {
                (695191 'move' tmp[695180](695188 '_paramFoldLogical' tmp[695181] 1))
              }
              {
                unknown tmp[695193] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[878505] "expr temp" "maybe param" "maybe type" "temp"
                (878508 'move' call_tmp[878505](229623 call < removed[229509] count[229480]))
                (695195 'move' tmp[695193](497624 call isTrue call_tmp[878505]))
                (695200 'move' tmp[695180](695197 '_paramFoldLogical' tmp[695181] tmp[695193]))
              }
              (497609 'move' tmp[497598] tmp[695180])
              unknown call_tmp[878510] "expr temp" "maybe param" "maybe type" "temp"
              (878513 'move' call_tmp[878510](497611 call _cond_invalid tmp[497598]))
              if call_tmp[878510]
              {
                (497614 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[695207] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[695208] "maybe param" "temp"
              unknown call_tmp[878515] "expr temp" "maybe param" "maybe type" "temp"
              (878518 'move' call_tmp[878515](497599 call isTrue tmp[497598]))
              (695213 'move' tmp[695208](695211 call _cond_test call_tmp[878515]))
              if tmp[695208]
              {
                unknown tmp[695215] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[878520] "expr temp" "maybe param" "maybe type" "temp"
                (878523 'move' call_tmp[878520](229627 call == src[229594] x[229475]))
                (695217 'move' tmp[695215](497602 call isTrue call_tmp[878520]))
                (695222 'move' tmp[695207](695219 '_paramFoldLogical' tmp[695208] tmp[695215]))
              }
              {
                (695227 'move' tmp[695207](695224 '_paramFoldLogical' tmp[695208] 0))
              }
              unknown call_tmp[878525] "expr temp" "maybe param" "maybe type" "temp"
              (878528 'move' call_tmp[878525](229631 call _cond_test tmp[695207]))
              if call_tmp[878525]
              {
                (229602 call(446127 call (partial) _destroy _mt[203] this[229472]) src[229594])
                (561283 'end of statement' src[229594])
                (229604 call += src_i[229501] 1)
                (561285 'end of statement' src_i[229501])
                (229608 call += removed[229509] 1)
                (561287 'end of statement' removed[229509])
                continue _continueLabel[229657] _continueLabel[229657]
              }
              unknown dst[229636] "dead at end of block" "ref var"
              (649951 'init ref decl' dst[229636])
              unknown call_tmp[878534] "expr temp" "maybe param" "maybe type" "temp"
              (878537 'move' call_tmp[878534](229638 call(446139 call (partial) _getRef _mt[203] this[229472]) dst_i[229497]))
              (649949 'move' dst[229636](649948 'addr of' call_tmp[878534]))
              (229641 'end of statement' src_i[229501] dst_i[229497])
              (229643 call(446144 call (partial) _move _mt[203] this[229472]) src[229594] dst[229636])
              (561290 'end of statement' src[229594] dst[229636])
              (229646 call += src_i[229501] 1)
              (561293 'end of statement' src_i[229501])
              (229650 call += dst_i[229497] 1)
              (561295 'end of statement' dst_i[229497])
            }
            label _continueLabel[229657]
            unknown call_tmp[878543] "expr temp" "maybe param" "maybe type" "temp"
            (878546 'move' call_tmp[878543](446154 call _size _mt[203] this[229472]))
            unknown call_tmp[878548] "expr temp" "maybe param" "maybe type" "temp"
            (878551 'move' call_tmp[878548](229665 call < src_i[229501] call_tmp[878543]))
            (229668 'move' tmp[229654](229663 call _cond_test call_tmp[878548]))
            tmp[229654]
          }
          label _breakLabel[229658]
        }
        unknown call_tmp[878553] "expr temp" "maybe param" "maybe type" "temp"
        (878556 'move' call_tmp[878553](229693 call _cond_test removed[229509]))
        if call_tmp[878553]
        {
          (229683 call(446164 call (partial) _maybeReleaseMem _mt[203] this[229472]) removed[229509])
          (561297 'end of statement' removed[229509])
          unknown call_tmp[878562] "expr temp" "maybe param" "maybe type" "temp"
          (878565 'move' call_tmp[878562](446170 call _size _mt[203] this[229472]))
          unknown call_tmp[878569] "expr temp" "maybe param" "maybe type" "temp"
          (878572 'move' call_tmp[878569](446175 call _size _mt[203] this[229472]))
          unknown call_tmp[878574] "expr temp" "maybe param" "maybe type" "temp"
          (878577 'move' call_tmp[878574](229688 call - call_tmp[878569] removed[229509]))
          (229685 call = call_tmp[878562] call_tmp[878574])
          (561299 'end of statement' removed[229509])
        }
        (229698 call(446181 call (partial) _leave _mt[203] this[229472]))
        (561301 'end of statement')
        (229699 call = result[229489] removed[229509])
        (561302 'end of statement' result[229489] removed[229509])
      }
      (229710 'elided on block' 0 tmp[229706])
    }
    (621780 'move' ret[621774](621779 'coerce' result[229489] int(64)[10]))
    gotoReturn _end_remove[621772] _end_remove[621772]
    (561305 'end of statement' result[229489])
    label _end_remove[621772]
    (621776 return ret[621774])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?)._popAtIndex[229719](arg _mt[229731]:_MT[201], ref arg this[229721]:list[231871](?), arg idx[229724]:int(64)[10], arg unlockBeforeHalt[229728] :
  1 =
  1) : _unknown[42] "method" "primary method"
  {
    unknown ret[621786] "RVV" "temp"
    unknown tmp[497640] "maybe param" "temp"
    (497651 'move' tmp[497640] 1)
    unknown call_tmp[878581] "expr temp" "maybe param" "maybe type" "temp"
    (878584 'move' call_tmp[878581](497653 call _cond_invalid tmp[497640]))
    if call_tmp[878581]
    {
      (497656 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695234] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695235] "maybe param" "temp"
    unknown call_tmp[878586] "expr temp" "maybe param" "maybe type" "temp"
    (878589 'move' call_tmp[878586](497641 call isTrue tmp[497640]))
    (695240 'move' tmp[695235](695238 call _cond_test call_tmp[878586]))
    if tmp[695235]
    {
      unknown tmp[695242] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[878593] "expr temp" "maybe param" "maybe type" "temp"
      (878596 'move' call_tmp[878593](446200 call _size _mt[203] this[229721]))
      unknown call_tmp[878598] "expr temp" "maybe param" "maybe type" "temp"
      (878601 'move' call_tmp[878598](229753 call <= call_tmp[878593] 0))
      (695244 'move' tmp[695242](497644 call isTrue call_tmp[878598]))
      (695249 'move' tmp[695234](695246 '_paramFoldLogical' tmp[695235] tmp[695242]))
    }
    {
      (695254 'move' tmp[695234](695251 '_paramFoldLogical' tmp[695235] 0))
    }
    unknown call_tmp[878603] "expr temp" "maybe param" "maybe type" "temp"
    (878606 'move' call_tmp[878603](229757 call _cond_test tmp[695234]))
    if call_tmp[878603]
    {
      unknown call_tmp[878608] "expr temp" "maybe param" "maybe type" "temp"
      (878611 'move' call_tmp[878608](229740 call _cond_test unlockBeforeHalt[229728]))
      if call_tmp[878608]
      {
        (229737 call(446193 call (partial) _leave _mt[203] this[229721]))
      }
      (229746 call boundsCheckHalt "Called \"list.getAndRemove\" on an empty list.")
    }
    unknown tmp[497661] "maybe param" "temp"
    (497672 'move' tmp[497661] 1)
    unknown call_tmp[878615] "expr temp" "maybe param" "maybe type" "temp"
    (878618 'move' call_tmp[878615](497674 call _cond_invalid tmp[497661]))
    if call_tmp[878615]
    {
      (497677 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695261] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695262] "maybe param" "temp"
    unknown call_tmp[878620] "expr temp" "maybe param" "maybe type" "temp"
    (878623 'move' call_tmp[878620](497662 call isTrue tmp[497661]))
    (695267 'move' tmp[695262](695265 call _cond_test call_tmp[878620]))
    if tmp[695262]
    {
      unknown tmp[695269] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[878627] "expr temp" "maybe param" "maybe type" "temp"
      (878630 'move' call_tmp[878627](229793 call(446212 call (partial) _withinBounds _mt[203] this[229721]) idx[229724]))
      unknown call_tmp[878632] "expr temp" "maybe param" "maybe type" "temp"
      (878635 'move' call_tmp[878632](229790 call ! call_tmp[878627]))
      (695271 'move' tmp[695269](497665 call isTrue call_tmp[878632]))
      (695276 'move' tmp[695261](695273 '_paramFoldLogical' tmp[695262] tmp[695269]))
    }
    {
      (695281 'move' tmp[695261](695278 '_paramFoldLogical' tmp[695262] 0))
    }
    unknown call_tmp[878637] "expr temp" "maybe param" "maybe type" "temp"
    (878640 'move' call_tmp[878637](229795 call _cond_test tmp[695261]))
    if call_tmp[878637]
    {
      unknown call_tmp[878642] "expr temp" "maybe param" "maybe type" "temp"
      (878645 'move' call_tmp[878642](229766 call _cond_test unlockBeforeHalt[229728]))
      if call_tmp[878642]
      {
        (229763 call(446204 call (partial) _leave _mt[203] this[229721]))
      }
      unknown call_tmp[878649] "expr temp" "maybe param" "maybe type" "temp"
      (878652 'move' call_tmp[878649](229778 call : idx[229724] string[244]))
      unknown call_tmp[878654] "maybe param" "maybe type" "temp"
      (878657 'move' call_tmp[878654](229773 call + "Index for \"list.getAndRemove\" out of bounds: " call_tmp[878649]))
      const msg[229772] "dead at end of block" "const" "insert auto destroy"
      (649953 'init var' msg[229772] call_tmp[878654])
      (229783 'end of statement')
      (229785 call boundsCheckHalt msg[229772])
      (561312 'end of statement' msg[229772])
    }
    unknown item[229800] "dead at end of block" "ref var"
    (649958 'init ref decl' item[229800])
    unknown call_tmp[878661] "expr temp" "maybe param" "maybe type" "temp"
    (878664 'move' call_tmp[878661](229802 call(446217 call (partial) _getRef _mt[203] this[229721]) idx[229724]))
    (649956 'move' item[229800](649955 'addr of' call_tmp[878661]))
    (229805 'end of statement')
    unknown result[229807] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[878668] "expr temp" "maybe param" "maybe type" "temp"
    (878671 'move' call_tmp[878668](446223 call eltType _mt[203] this[229721]))
    (649960 'default init var' result[229807] call_tmp[878668])
    (229810 'end of statement')
    (229812 call(446227 call (partial) _move _mt[203] this[229721]) item[229800] result[229807])
    (561314 'end of statement' item[229800] result[229807])
    (229816 call(446235 call (partial) _collapse _mt[203] this[229721]) idx[229724])
    (561317 'end of statement')
    unknown call_tmp[878679] "expr temp" "maybe param" "maybe type" "temp"
    (878682 'move' call_tmp[878679](446241 call _size _mt[203] this[229721]))
    (229818 call -= call_tmp[878679] 1)
    (561318 'end of statement')
    unknown call_tmp[878686] "expr temp" "maybe param" "maybe type" "temp"
    (878689 'move' call_tmp[878686](621791 call eltType _mt[203] this[229721]))
    (621795 'move' ret[621786](621794 'coerce' result[229807] call_tmp[878686]))
    gotoReturn _end__popAtIndex[621784] _end__popAtIndex[621784]
    (561319 'end of statement' result[229807])
    label _end__popAtIndex[621784]
    (621788 return ret[621786])
  }
  { scopeless type
    (446189 call eltType _mt[203] this[229721])
  }
  function list[231871](?).popBack[229827](arg _mt[229831]:_MT[201], ref arg this[229829]:list[231871](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[621801] "RVV" "temp"
    (229836 call(446251 call (partial) _enter _mt[203] this[229829]))
    (561321 'end of statement')
    unknown call_tmp[878699] "expr temp" "maybe param" "maybe type" "temp"
    (878702 'move' call_tmp[878699](446262 call _size _mt[203] this[229829]))
    unknown call_tmp[878704] "expr temp" "maybe param" "maybe type" "temp"
    (878707 'move' call_tmp[878704](229841 call - call_tmp[878699] 1))
    unknown call_tmp[878709] "maybe param" "maybe type" "temp"
    (878712 'move' call_tmp[878709](229840 call(446257 call (partial) _popAtIndex _mt[203] this[229829]) call_tmp[878704]))
    unknown result[229838] "dead at end of block" "insert auto destroy"
    (649962 'init var' result[229838] call_tmp[878709])
    (229846 'end of statement')
    (229848 call(446266 call (partial) _leave _mt[203] this[229829]))
    (561322 'end of statement')
    unknown call_tmp[878718] "expr temp" "maybe param" "maybe type" "temp"
    (878721 'move' call_tmp[878718](621806 call eltType _mt[203] this[229829]))
    (621810 'move' ret[621801](621809 'coerce' result[229838] call_tmp[878718]))
    gotoReturn _end_popBack[621799] _end_popBack[621799]
    (561323 'end of statement' result[229838])
    label _end_popBack[621799]
    (621803 return ret[621801])
  }
  { scopeless type
    (446247 call eltType _mt[203] this[229829])
  }
  function list[231871](?).getAndRemove[229854](arg _mt[229862]:_MT[201], ref arg this[229856]:list[231871](?), arg idx[229859]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[621816] "RVV" "temp"
    (229867 call(446276 call (partial) _enter _mt[203] this[229856]))
    (561325 'end of statement')
    unknown call_tmp[878729] "maybe param" "maybe type" "temp"
    (878732 'move' call_tmp[878729](229871 call(446280 call (partial) _popAtIndex _mt[203] this[229856]) idx[229859]))
    unknown result[229869] "dead at end of block" "insert auto destroy"
    (649964 'init var' result[229869] call_tmp[878729])
    (229874 'end of statement')
    (229876 call(446285 call (partial) _leave _mt[203] this[229856]))
    (561326 'end of statement')
    unknown call_tmp[878738] "expr temp" "maybe param" "maybe type" "temp"
    (878741 'move' call_tmp[878738](621821 call eltType _mt[203] this[229856]))
    (621825 'move' ret[621816](621824 'coerce' result[229869] call_tmp[878738]))
    gotoReturn _end_getAndRemove[621814] _end_getAndRemove[621814]
    (561327 'end of statement' result[229869])
    label _end_getAndRemove[621814]
    (621818 return ret[621816])
  }
  { scopeless type
    (446272 call eltType _mt[203] this[229856])
  }
  function list[231871](?)._fireAllDestructors[229882](arg _mt[229886]:_MT[201], ref arg this[229884]:list[231871](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    {
      const tmp[229956] "const" "temp"
      unknown call_tmp[878745] "expr temp" "maybe param" "maybe type" "temp"
      (878748 'move' call_tmp[878745](229953 '_wide_get_locale' this[229884]))
      (229957 'move' tmp[229956](229954 'deref' call_tmp[878745]))
      {
        {
          unknown _indexOfInterest[229910] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[229911] "expr temp" "temp"
          unknown call_tmp[878752] "expr temp" "maybe param" "maybe type" "temp"
          (878755 'move' call_tmp[878752](446302 call _size _mt[203] this[229884]))
          unknown call_tmp[878757] "expr temp" "maybe param" "maybe type" "temp"
          (878760 'move' call_tmp[878757](229927 call chpl_direct_counted_range_iter 0 call_tmp[878752]))
          (229920 'move' _iterator[229911](229918 call _getIterator call_tmp[878757]))
          Defer
          {
            {
              (229942 call _freeIterator _iterator[229911])
            }
          }
          { scopeless type
            (229932 'move' _indexOfInterest[229910](229929 call iteratorIndex _iterator[229911]))
          }
          ForLoop[229912]
          {
            unknown i[229891] "index var" "insert auto destroy"
            (561330 'end of statement')
            (229937 'move' i[229891] _indexOfInterest[229910])
            (561331 'end of statement' i[229891])
            {
              unknown item[229901] "dead at end of block" "ref var"
              (649969 'init ref decl' item[229901])
              unknown call_tmp[878764] "expr temp" "maybe param" "maybe type" "temp"
              (878767 'move' call_tmp[878764](229903 call(446291 call (partial) _getRef _mt[203] this[229884]) i[229891]))
              (649967 'move' item[229901](649966 'addr of' call_tmp[878764]))
              (229906 'end of statement' i[229891])
              (229908 call(446296 call (partial) _destroy _mt[203] this[229884]) item[229901])
              (561334 'end of statement' item[229901])
            }
            label _continueLabel[229915]
            _indexOfInterest[229910]
            _iterator[229911]
          }
          label _breakLabel[229916]
        }
        unknown call_tmp[878773] "expr temp" "maybe param" "maybe type" "temp"
        (878776 'move' call_tmp[878773](446307 call _size _mt[203] this[229884]))
        (229949 call = call_tmp[878773] 0)
      }
      (229960 'elided on block' 0 tmp[229956])
    }
    (621831 return _void[46])
  }
  function list[231871](?)._freeAllArrays[229967](arg _mt[229971]:_MT[201], ref arg this[229969]:list[231871](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[878780] "expr temp" "maybe param" "maybe type" "temp"
    (878783 'move' call_tmp[878780](446312 call _arrays _mt[203] this[229969]))
    unknown call_tmp[878785] "expr temp" "maybe param" "maybe type" "temp"
    (878788 'move' call_tmp[878785](229976 call == call_tmp[878780] nil[32]))
    unknown call_tmp[878790] "expr temp" "maybe param" "maybe type" "temp"
    (878793 'move' call_tmp[878790](229980 call _cond_test call_tmp[878785]))
    if call_tmp[878790]
    {
      gotoReturn _end__freeAllArrays[621833] _end__freeAllArrays[621833]
    }
    unknown call_tmp[878797] "expr temp" "maybe param" "maybe type" "temp"
    (878800 'move' call_tmp[878797](446317 call _totalCapacity _mt[203] this[229969]))
    unknown call_tmp[878802] "expr temp" "maybe param" "maybe type" "temp"
    (878805 'move' call_tmp[878802](229987 call != call_tmp[878797] 0))
    (229986 call _sanity call_tmp[878802])
    (561339 'end of statement')
    unknown call_tmp[878809] "expr temp" "maybe param" "maybe type" "temp"
    (878812 'move' call_tmp[878809](446322 call _arrayCapacity _mt[203] this[229969]))
    unknown call_tmp[878814] "expr temp" "maybe param" "maybe type" "temp"
    (878817 'move' call_tmp[878814](229993 call != call_tmp[878809] 0))
    (229992 call _sanity call_tmp[878814])
    (561340 'end of statement')
    {
      const tmp[230106] "const" "temp"
      unknown call_tmp[878819] "expr temp" "maybe param" "maybe type" "temp"
      (878822 'move' call_tmp[878819](230103 '_wide_get_locale' this[229969]))
      (230107 'move' tmp[230106](230104 'deref' call_tmp[878819]))
      {
        {
          unknown _indexOfInterest[230046] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[230047] "expr temp" "temp"
          unknown call_tmp[878826] "expr temp" "maybe param" "maybe type" "temp"
          (878829 'move' call_tmp[878826](446353 call _arrayCapacity _mt[203] this[229969]))
          unknown call_tmp[878831] "expr temp" "maybe param" "maybe type" "temp"
          (878834 'move' call_tmp[878831](230063 call chpl_direct_counted_range_iter 0 call_tmp[878826]))
          (230056 'move' _iterator[230047](230054 call _getIterator call_tmp[878831]))
          Defer
          {
            {
              (230078 call _freeIterator _iterator[230047])
            }
          }
          { scopeless type
            (230068 'move' _indexOfInterest[230046](230065 call iteratorIndex _iterator[230047]))
          }
          ForLoop[230048]
          {
            unknown i[229999] "index var" "insert auto destroy"
            (561342 'end of statement')
            (230073 'move' i[229999] _indexOfInterest[230046])
            (561343 'end of statement' i[229999])
            {
              unknown array[230009] "dead at end of block" "ref var"
              (649974 'init ref decl' array[230009])
              unknown call_tmp[878838] "expr temp" "maybe param" "maybe type" "temp"
              (878841 'move' call_tmp[878838](230011 call(446328 call (partial) _arrays _mt[203] this[229969]) i[229999]))
              (649972 'move' array[230009](649971 'addr of' call_tmp[878838]))
              (230014 'end of statement')
              unknown call_tmp[878843] "expr temp" "maybe param" "maybe type" "temp"
              (878846 'move' call_tmp[878843](230018 call == array[230009] nil[32]))
              unknown call_tmp[878848] "expr temp" "maybe param" "maybe type" "temp"
              (878851 'move' call_tmp[878848](230022 call _cond_test call_tmp[878843]))
              if call_tmp[878848]
              {
                continue _continueLabel[230051] _continueLabel[230051]
              }
              unknown call_tmp[878855] "maybe param" "maybe type" "temp"
              (878858 'move' call_tmp[878855](230030 call(446334 call (partial) _getArrayCapacity _mt[203] this[229969]) i[229999]))
              const capacity[230028] "dead at end of block" "const" "insert auto destroy"
              (649976 'init var' capacity[230028] call_tmp[878855])
              (230033 'end of statement' i[229999])
              unknown call_tmp[878862] "expr temp" "maybe param" "maybe type" "temp"
              (878865 'move' call_tmp[878862](446340 call _totalCapacity _mt[203] this[229969]))
              (230034 call -= call_tmp[878862] capacity[230028])
              (561346 'end of statement' capacity[230028])
              (230039 call(446345 call (partial) _freeArray _mt[203] this[229969]) array[230009] capacity[230028])
              (561348 'end of statement' array[230009] capacity[230028])
              (230042 call = array[230009] nil[32])
              (561351 'end of statement' array[230009])
            }
            label _continueLabel[230051]
            _indexOfInterest[230046]
            _iterator[230047]
          }
          label _breakLabel[230052]
        }
        unknown call_tmp[878871] "expr temp" "maybe param" "maybe type" "temp"
        (878874 'move' call_tmp[878871](446358 call _totalCapacity _mt[203] this[229969]))
        unknown call_tmp[878876] "expr temp" "maybe param" "maybe type" "temp"
        (878879 'move' call_tmp[878876](230087 call == call_tmp[878871] 0))
        (230086 call _sanity call_tmp[878876])
        (561353 'end of statement')
        unknown call_tmp[878885] "expr temp" "maybe param" "maybe type" "temp"
        (878888 'move' call_tmp[878885](446367 call _arrays _mt[203] this[229969]))
        unknown call_tmp[878892] "expr temp" "maybe param" "maybe type" "temp"
        (878895 'move' call_tmp[878892](446372 call _arrayCapacity _mt[203] this[229969]))
        (230092 call(446362 call (partial) _freeBlockArray _mt[203] this[229969]) call_tmp[878885] call_tmp[878892])
        (561354 'end of statement')
        unknown call_tmp[878899] "expr temp" "maybe param" "maybe type" "temp"
        (878902 'move' call_tmp[878899](446377 call _arrays _mt[203] this[229969]))
        (230095 call = call_tmp[878899] nil[32])
        (561355 'end of statement')
        unknown call_tmp[878906] "expr temp" "maybe param" "maybe type" "temp"
        (878909 'move' call_tmp[878906](446382 call _size _mt[203] this[229969]))
        (230099 call = call_tmp[878906] 0)
      }
      (230110 'elided on block' 0 tmp[230106])
    }
    label _end__freeAllArrays[621833]
    (621835 return _void[46])
  }
  function list[231871](?)._clearLocked[230117](arg _mt[230121]:_MT[201], ref arg this[230119]:list[231871](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (230125 call(446386 call (partial) _fireAllDestructors _mt[203] this[230119]))
    (561358 'end of statement')
    (230127 call(446390 call (partial) _freeAllArrays _mt[203] this[230119]))
    (561359 'end of statement')
    unknown call_tmp[878917] "expr temp" "maybe param" "maybe type" "temp"
    (878920 'move' call_tmp[878917](446395 call _totalCapacity _mt[203] this[230119]))
    unknown call_tmp[878922] "expr temp" "maybe param" "maybe type" "temp"
    (878925 'move' call_tmp[878922](230130 call == call_tmp[878917] 0))
    (230129 call _sanity call_tmp[878922])
    (561360 'end of statement')
    unknown call_tmp[878929] "expr temp" "maybe param" "maybe type" "temp"
    (878932 'move' call_tmp[878929](446400 call _size _mt[203] this[230119]))
    unknown call_tmp[878934] "expr temp" "maybe param" "maybe type" "temp"
    (878937 'move' call_tmp[878934](230136 call == call_tmp[878929] 0))
    (230135 call _sanity call_tmp[878934])
    (561361 'end of statement')
    unknown call_tmp[878941] "expr temp" "maybe param" "maybe type" "temp"
    (878944 'move' call_tmp[878941](446405 call _arrays _mt[203] this[230119]))
    unknown call_tmp[878946] "expr temp" "maybe param" "maybe type" "temp"
    (878949 'move' call_tmp[878946](230142 call == call_tmp[878941] nil[32]))
    (230141 call _sanity call_tmp[878946])
    (561362 'end of statement')
    (230147 call(446409 call (partial) _firstTimeInitializeArrays _mt[203] this[230119]))
    (621839 return _void[46])
  }
  function list[231871](?).clear[230150](arg _mt[230154]:_MT[201], ref arg this[230152]:list[231871](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    {
      const tmp[230168] "const" "temp"
      unknown call_tmp[878953] "expr temp" "maybe param" "maybe type" "temp"
      (878956 'move' call_tmp[878953](230165 '_wide_get_locale' this[230152]))
      (230169 'move' tmp[230168](230166 'deref' call_tmp[878953]))
      {
        (230160 call(446414 call (partial) _enter _mt[203] this[230152]))
        (561364 'end of statement')
        (230162 call(446420 call (partial) _clearLocked _mt[203] this[230152]))
        (561365 'end of statement')
        (230164 call(446424 call (partial) _leave _mt[203] this[230152]))
      }
      (230172 'elided on block' 0 tmp[230168])
    }
    (621841 return _void[46])
  }
  function list[231871](?).find[230178](arg _mt[230200]:_MT[201], const arg this[230180]:list[231871](?), arg x[230183] :
  (446429 call eltType _mt[203] this[230180]), arg start[230188]:int(64)[10] =
  0, arg end[230196]:int(64)[10] =
  (230193 call - 1)) : _unknown[42] "method" "primary method"
  {
    unknown ret[621845] "RVV" "temp"
    unknown call_tmp[878966] "maybe param" "maybe type" "temp"
    (878969 'move' call_tmp[878966](230206 call - 1))
    unknown error[230205] "dead at end of block" "param"
    (649978 'init var' error[230205] call_tmp[878966])
    (230210 'end of statement')
    unknown call_tmp[878973] "expr temp" "maybe param" "maybe type" "temp"
    (878976 'move' call_tmp[878973](446435 call _size _mt[203] this[230180]))
    unknown call_tmp[878978] "expr temp" "maybe param" "maybe type" "temp"
    (878981 'move' call_tmp[878978](230214 call == call_tmp[878973] 0))
    unknown call_tmp[878983] "expr temp" "maybe param" "maybe type" "temp"
    (878986 'move' call_tmp[878983](230218 call _cond_test call_tmp[878978]))
    if call_tmp[878983]
    {
      (621851 'move' ret[621845](621850 'coerce' error[230205] int(64)[10]))
      gotoReturn _end_find[621843] _end_find[621843]
    }
    unknown call_tmp[878988] "expr temp" "maybe param" "maybe type" "temp"
    (878991 'move' call_tmp[878988](230288 call _cond_test 1))
    if call_tmp[878988]
    {
      const msg[230225] "dead at end of block" "const" "insert auto destroy"
      (649980 'init var' msg[230225] " index for \"list.find\" out of bounds: ")
      (230230 'end of statement')
      unknown tmp[497682] "maybe param" "temp"
      (497693 'move' tmp[497682](230248 call >= end[230196] 0))
      unknown call_tmp[878993] "expr temp" "maybe param" "maybe type" "temp"
      (878996 'move' call_tmp[878993](497695 call _cond_invalid tmp[497682]))
      if call_tmp[878993]
      {
        (497698 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[695288] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[695289] "maybe param" "temp"
      unknown call_tmp[878998] "expr temp" "maybe param" "maybe type" "temp"
      (879001 'move' call_tmp[878998](497683 call isTrue tmp[497682]))
      (695294 'move' tmp[695289](695292 call _cond_test call_tmp[878998]))
      if tmp[695289]
      {
        unknown tmp[695296] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[879005] "expr temp" "maybe param" "maybe type" "temp"
        (879008 'move' call_tmp[879005](230255 call(446442 call (partial) _withinBounds _mt[203] this[230180]) end[230196]))
        unknown call_tmp[879010] "expr temp" "maybe param" "maybe type" "temp"
        (879013 'move' call_tmp[879010](230252 call ! call_tmp[879005]))
        (695298 'move' tmp[695296](497686 call isTrue call_tmp[879010]))
        (695303 'move' tmp[695288](695300 '_paramFoldLogical' tmp[695289] tmp[695296]))
      }
      {
        (695308 'move' tmp[695288](695305 '_paramFoldLogical' tmp[695289] 0))
      }
      unknown call_tmp[879015] "expr temp" "maybe param" "maybe type" "temp"
      (879018 'move' call_tmp[879015](230257 call _cond_test tmp[695288]))
      if call_tmp[879015]
      {
        unknown call_tmp[879020] "expr temp" "maybe param" "maybe type" "temp"
        (879023 'move' call_tmp[879020](230235 call + "End" msg[230225]))
        unknown call_tmp[879025] "expr temp" "maybe param" "maybe type" "temp"
        (879028 'move' call_tmp[879025](230241 call : end[230196] string[244]))
        unknown call_tmp[879030] "expr temp" "maybe param" "maybe type" "temp"
        (879033 'move' call_tmp[879030](230233 call + call_tmp[879020] call_tmp[879025]))
        (230232 call boundsCheckHalt call_tmp[879030])
        (561369 'end of statement' msg[230225])
      }
      unknown call_tmp[879037] "expr temp" "maybe param" "maybe type" "temp"
      (879040 'move' call_tmp[879037](230280 call(446449 call (partial) _withinBounds _mt[203] this[230180]) start[230188]))
      unknown call_tmp[879042] "expr temp" "maybe param" "maybe type" "temp"
      (879045 'move' call_tmp[879042](230277 call ! call_tmp[879037]))
      unknown call_tmp[879047] "expr temp" "maybe param" "maybe type" "temp"
      (879050 'move' call_tmp[879047](230282 call _cond_test call_tmp[879042]))
      if call_tmp[879047]
      {
        unknown call_tmp[879052] "expr temp" "maybe param" "maybe type" "temp"
        (879055 'move' call_tmp[879052](230266 call + "Start" msg[230225]))
        unknown call_tmp[879057] "expr temp" "maybe param" "maybe type" "temp"
        (879060 'move' call_tmp[879057](230272 call : start[230188] string[244]))
        unknown call_tmp[879062] "expr temp" "maybe param" "maybe type" "temp"
        (879065 'move' call_tmp[879062](230264 call + call_tmp[879052] call_tmp[879057]))
        (230263 call boundsCheckHalt call_tmp[879062])
        (561371 'end of statement' msg[230225])
      }
    }
    unknown tmp[497703] "maybe param" "temp"
    (497714 'move' tmp[497703](230297 call >= end[230196] 0))
    unknown call_tmp[879067] "expr temp" "maybe param" "maybe type" "temp"
    (879070 'move' call_tmp[879067](497716 call _cond_invalid tmp[497703]))
    if call_tmp[879067]
    {
      (497719 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695315] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695316] "maybe param" "temp"
    unknown call_tmp[879072] "expr temp" "maybe param" "maybe type" "temp"
    (879075 'move' call_tmp[879072](497704 call isTrue tmp[497703]))
    (695321 'move' tmp[695316](695319 call _cond_test call_tmp[879072]))
    if tmp[695316]
    {
      unknown tmp[695323] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879077] "expr temp" "maybe param" "maybe type" "temp"
      (879080 'move' call_tmp[879077](230301 call < end[230196] start[230188]))
      (695325 'move' tmp[695323](497707 call isTrue call_tmp[879077]))
      (695330 'move' tmp[695315](695327 '_paramFoldLogical' tmp[695316] tmp[695323]))
    }
    {
      (695335 'move' tmp[695315](695332 '_paramFoldLogical' tmp[695316] 0))
    }
    unknown call_tmp[879082] "expr temp" "maybe param" "maybe type" "temp"
    (879085 'move' call_tmp[879082](230305 call _cond_test tmp[695315]))
    if call_tmp[879082]
    {
      (621857 'move' ret[621845](621856 'coerce' error[230205] int(64)[10]))
      gotoReturn _end_find[621843] _end_find[621843]
    }
    unknown result[230311] "dead at end of block" "insert auto destroy"
    (649982 'init var' result[230311] error[230205])
    (230314 'end of statement')
    {
      const tmp[230400] "const" "temp"
      unknown call_tmp[879087] "expr temp" "maybe param" "maybe type" "temp"
      (879090 'move' call_tmp[879087](230397 '_wide_get_locale' this[230180]))
      (230401 'move' tmp[230400](230398 'deref' call_tmp[879087]))
      {
        (230318 call(446461 call (partial) _enter _mt[203] this[230180]))
        (561375 'end of statement')
        const stop[230320] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[695342] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[695343] "maybe param" "temp"
        unknown call_tmp[879094] "expr temp" "maybe param" "maybe type" "temp"
        (879097 'move' call_tmp[879094](230321 call < end[230196] 0))
        (695348 'move' tmp[695343](695346 call _cond_test call_tmp[879094]))
        if tmp[695343]
        {
          unknown tmp[695350] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[879101] "expr temp" "maybe param" "maybe type" "temp"
          (879104 'move' call_tmp[879101](446467 call _size _mt[203] this[230180]))
          (695352 'move' tmp[695350](230325 call - call_tmp[879101] 1))
          (695357 'move' tmp[695342](695354 '_paramFoldLogical' tmp[695343] tmp[695350]))
        }
        {
          (695362 'move' tmp[695342](695359 '_paramFoldLogical' tmp[695343] end[230196]))
        }
        (649984 'init var' stop[230320] tmp[695342])
        (230334 'end of statement')
        {
          unknown _indexOfInterest[230359] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[230360] "expr temp" "temp"
          unknown call_tmp[879106] "expr temp" "maybe param" "maybe type" "temp"
          (879109 'move' call_tmp[879106](230373 call chpl_direct_range_iter start[230188] stop[230320]))
          (230369 'move' _iterator[230360](230367 call _getIterator call_tmp[879106]))
          Defer
          {
            {
              (230388 call _freeIterator _iterator[230360])
            }
          }
          { scopeless type
            (230378 'move' _indexOfInterest[230359](230375 call iteratorIndex _iterator[230360]))
          }
          ForLoop[230361]
          {
            unknown i[230335] "index var" "insert auto destroy"
            (561377 'end of statement')
            (230383 'move' i[230335] _indexOfInterest[230359])
            (561378 'end of statement' i[230335])
            unknown call_tmp[879113] "expr temp" "maybe param" "maybe type" "temp"
            (879116 'move' call_tmp[879113](230353 call(446475 call (partial) _getRef _mt[203] this[230180]) i[230335]))
            unknown call_tmp[879118] "expr temp" "maybe param" "maybe type" "temp"
            (879121 'move' call_tmp[879118](230349 call == x[230183] call_tmp[879113]))
            unknown call_tmp[879123] "expr temp" "maybe param" "maybe type" "temp"
            (879126 'move' call_tmp[879123](230355 call _cond_test call_tmp[879118]))
            if call_tmp[879123]
            {
              (230342 call = result[230311] i[230335])
              (561380 'end of statement' result[230311] i[230335])
              break _breakLabel[230365] _breakLabel[230365]
            }
            label _continueLabel[230364]
            _indexOfInterest[230359]
            _iterator[230360]
          }
          label _breakLabel[230365]
        }
        (230396 call(446482 call (partial) _leave _mt[203] this[230180]))
      }
      (230404 'elided on block' 0 tmp[230400])
    }
    (621863 'move' ret[621845](621862 'coerce' result[230311] int(64)[10]))
    gotoReturn _end_find[621843] _end_find[621843]
    (561384 'end of statement' result[230311])
    label _end_find[621843]
    (621847 return ret[621845])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?).count[230413](arg _mt[230421]:_MT[201], const arg this[230415]:list[231871](?), arg x[230418] :
  (446488 call eltType _mt[203] this[230415])) : _unknown[42] "method" "primary method"
  {
    unknown ret[621869] "RVV" "temp"
    unknown result[230426] "dead at end of block" "insert auto destroy"
    (649986 'init var' result[230426] 0)
    (230429 'end of statement')
    {
      const tmp[230497] "const" "temp"
      unknown call_tmp[879132] "expr temp" "maybe param" "maybe type" "temp"
      (879135 'move' call_tmp[879132](230494 '_wide_get_locale' this[230415]))
      (230498 'move' tmp[230497](230495 'deref' call_tmp[879132]))
      {
        (230433 call(446493 call (partial) _enter _mt[203] this[230415]))
        (561386 'end of statement')
        unknown count[230435] "dead at end of block" "insert auto destroy"
        (649988 'init var' count[230435] 0)
        (230438 'end of statement')
        {
          unknown _indexOfInterest[230456] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[230457] "expr temp" "temp"
          (230466 'move' _iterator[230457](230464 call _getIterator this[230415]))
          Defer
          {
            {
              (230481 call _freeIterator _iterator[230457])
            }
          }
          { scopeless type
            (230471 'move' _indexOfInterest[230456](230468 call iteratorIndex _iterator[230457]))
          }
          ForLoop[230458]
          {
            unknown item[230439] "index var" "insert auto destroy"
            (561388 'end of statement')
            (230476 'move' item[230439] _indexOfInterest[230456])
            (561389 'end of statement' item[230439])
            unknown call_tmp[879139] "expr temp" "maybe param" "maybe type" "temp"
            (879142 'move' call_tmp[879139](230447 call == x[230418] item[230439]))
            unknown call_tmp[879144] "expr temp" "maybe param" "maybe type" "temp"
            (879147 'move' call_tmp[879144](230451 call _cond_test call_tmp[879139]))
            if call_tmp[879144]
            {
              (230442 call += count[230435] 1)
              (561391 'end of statement' count[230435])
            }
            label _continueLabel[230461]
            _indexOfInterest[230456]
            _iterator[230457]
          }
          label _breakLabel[230462]
        }
        (230488 call = result[230426] count[230435])
        (561393 'end of statement' result[230426] count[230435])
        (230493 call(446503 call (partial) _leave _mt[203] this[230415]))
      }
      (230501 'elided on block' 0 tmp[230497])
    }
    (621875 'move' ret[621869](621874 'coerce' result[230426] int(64)[10]))
    gotoReturn _end_count[621867] _end_count[621867]
    (561397 'end of statement' result[230426])
    label _end_count[621867]
    (621871 return ret[621869])
  }
  { scopeless type
    int(64)[10]
  }
  function list[231871](?).sort[230510](arg _mt[230528]:_MT[201], ref arg this[230512]:list[231871](?), arg comparator[230524]:_any[141](?) :
  (1002304 'new' module=[222] Sort[247204] DefaultComparator[246408]) =
  (1000382 'new' module=[222] Sort[247204] DefaultComparator[246408])) : _unknown[42] "deprecated" "method" "primary method" "no return value for void"
  {
    (230537 call sort module=[222] Sort[247204] this[230512] comparator[230524])
    (621879 return _void[46])
    (406989 'referenced modules list' Sort[247204])
  }
  function list[231871](?).getValue[230542](arg _mt[230550]:_MT[201], const arg this[230544]:list[231871](?), arg i[230547]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[621883] "RVV" "temp"
    (230555 call(446515 call (partial) _enter _mt[203] this[230544]))
    (561400 'end of statement')
    Defer
    {
      { scopeless
        (230557 call(446519 call (partial) _leave _mt[203] this[230544]))
      }
    }
    unknown tmp[497724] "maybe param" "temp"
    (497735 'move' tmp[497724] 1)
    unknown call_tmp[879155] "expr temp" "maybe param" "maybe type" "temp"
    (879158 'move' call_tmp[879155](497737 call _cond_invalid tmp[497724]))
    if call_tmp[879155]
    {
      (497740 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695369] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695370] "maybe param" "temp"
    unknown call_tmp[879160] "expr temp" "maybe param" "maybe type" "temp"
    (879163 'move' call_tmp[879160](497725 call isTrue tmp[497724]))
    (695375 'move' tmp[695370](695373 call _cond_test call_tmp[879160]))
    if tmp[695370]
    {
      unknown tmp[695377] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879167] "expr temp" "maybe param" "maybe type" "temp"
      (879170 'move' call_tmp[879167](230584 call(446526 call (partial) _withinBounds _mt[203] this[230544]) i[230547]))
      unknown call_tmp[879172] "expr temp" "maybe param" "maybe type" "temp"
      (879175 'move' call_tmp[879172](230581 call ! call_tmp[879167]))
      (695379 'move' tmp[695377](497728 call isTrue call_tmp[879172]))
      (695384 'move' tmp[695369](695381 '_paramFoldLogical' tmp[695370] tmp[695377]))
    }
    {
      (695389 'move' tmp[695369](695386 '_paramFoldLogical' tmp[695370] 0))
    }
    unknown call_tmp[879177] "expr temp" "maybe param" "maybe type" "temp"
    (879180 'move' call_tmp[879177](230586 call _cond_test tmp[695369]))
    if call_tmp[879177]
    {
      unknown call_tmp[879182] "expr temp" "maybe param" "maybe type" "temp"
      (879185 'move' call_tmp[879182](230569 call : i[230547] string[244]))
      unknown call_tmp[879187] "maybe param" "maybe type" "temp"
      (879190 'move' call_tmp[879187](230564 call + "Invalid list index: " call_tmp[879182]))
      const msg[230563] "dead at end of block" "const" "insert auto destroy"
      (649990 'init var' msg[230563] call_tmp[879187])
      (230574 'end of statement')
      (230576 call boundsCheckHalt msg[230563])
      (561403 'end of statement' msg[230563])
    }
    unknown call_tmp[879194] "expr temp" "maybe param" "maybe type" "temp"
    (879197 'move' call_tmp[879194](230592 call(446531 call (partial) _getRef _mt[203] this[230544]) i[230547]))
    unknown call_tmp[879201] "expr temp" "maybe param" "maybe type" "temp"
    (879204 'move' call_tmp[879201](621888 call eltType _mt[203] this[230544]))
    (621892 'move' ret[621883](621891 'coerce' call_tmp[879194] call_tmp[879201]))
    (621885 return ret[621883])
  }
  { scopeless type
    (446511 call eltType _mt[203] this[230544])
  }
  function list[231871](?).getBorrowed[230597](arg _mt[230605]:_MT[201], const arg this[230599]:list[231871](?), arg i[230602]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[621896] "RVV" "temp"
    (230612 call(446541 call (partial) _enter _mt[203] this[230599]))
    (561406 'end of statement')
    Defer
    {
      { scopeless
        (230614 call(446545 call (partial) _leave _mt[203] this[230599]))
      }
    }
    unknown tmp[497745] "maybe param" "temp"
    (497756 'move' tmp[497745] 1)
    unknown call_tmp[879212] "expr temp" "maybe param" "maybe type" "temp"
    (879215 'move' call_tmp[879212](497758 call _cond_invalid tmp[497745]))
    if call_tmp[879212]
    {
      (497761 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695396] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695397] "maybe param" "temp"
    unknown call_tmp[879217] "expr temp" "maybe param" "maybe type" "temp"
    (879220 'move' call_tmp[879217](497746 call isTrue tmp[497745]))
    (695402 'move' tmp[695397](695400 call _cond_test call_tmp[879217]))
    if tmp[695397]
    {
      unknown tmp[695404] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879224] "expr temp" "maybe param" "maybe type" "temp"
      (879227 'move' call_tmp[879224](230639 call(446552 call (partial) _withinBounds _mt[203] this[230599]) i[230602]))
      unknown call_tmp[879229] "expr temp" "maybe param" "maybe type" "temp"
      (879232 'move' call_tmp[879229](230636 call ! call_tmp[879224]))
      (695406 'move' tmp[695404](497749 call isTrue call_tmp[879229]))
      (695411 'move' tmp[695396](695408 '_paramFoldLogical' tmp[695397] tmp[695404]))
    }
    {
      (695416 'move' tmp[695396](695413 '_paramFoldLogical' tmp[695397] 0))
    }
    unknown call_tmp[879234] "expr temp" "maybe param" "maybe type" "temp"
    (879237 'move' call_tmp[879234](230641 call _cond_test tmp[695396]))
    if call_tmp[879234]
    {
      unknown call_tmp[879239] "expr temp" "maybe param" "maybe type" "temp"
      (879242 'move' call_tmp[879239](230624 call : i[230602] string[244]))
      unknown call_tmp[879244] "maybe param" "maybe type" "temp"
      (879247 'move' call_tmp[879244](230621 call + "Invalid list index: " call_tmp[879239]))
      const msg[230620] "dead at end of block" "const" "insert auto destroy"
      (649992 'init var' msg[230620] call_tmp[879244])
      (230629 'end of statement')
      (230631 call boundsCheckHalt msg[230620])
      (561409 'end of statement' msg[230620])
    }
    unknown slot[230646] "dead at end of block" "ref var"
    (649997 'init ref decl' slot[230646])
    unknown call_tmp[879251] "expr temp" "maybe param" "maybe type" "temp"
    (879254 'move' call_tmp[879251](230648 call(446557 call (partial) _getRef _mt[203] this[230599]) i[230602]))
    (649995 'move' slot[230646](649994 'addr of' call_tmp[879251]))
    (230651 'end of statement')
    unknown call_tmp[879258] "expr temp" "maybe param" "maybe type" "temp"
    (879261 'move' call_tmp[879258](230657 call(230654 call (partial) borrow _mt[203] slot[230646])))
    (621901 'move' ret[621896](621900 'deref' call_tmp[879258]))
    gotoReturn _end_getBorrowed[621894] _end_getBorrowed[621894]
    (561411 'end of statement' slot[230646])
    label _end_getBorrowed[621894]
    (621898 return ret[621896])
  }
  where {
    unknown call_tmp[879265] "expr temp" "maybe param" "maybe type" "temp"
    (879268 'move' call_tmp[879265](446537 call eltType _mt[203] this[230599]))
    (230608 call isClass call_tmp[879265])
  }
  function list[231871](?).replace[230661](arg _mt[230673]:_MT[201], ref arg this[230663]:list[231871](?), arg i[230666]:int(64)[10], in arg x[230670] :
  (446563 call eltType _mt[203] this[230663])) : _unknown[42] "method" "primary method"
  {
    unknown ret[621907] "RVV" "temp"
    (230678 call(446568 call (partial) _enter _mt[203] this[230663]))
    (561413 'end of statement')
    Defer
    {
      { scopeless
        (230680 call(446572 call (partial) _leave _mt[203] this[230663]))
      }
    }
    unknown call_tmp[879278] "expr temp" "maybe param" "maybe type" "temp"
    (879281 'move' call_tmp[879278](230693 call(446581 call (partial) _withinBounds _mt[203] this[230663]) i[230666]))
    unknown call_tmp[879283] "expr temp" "maybe param" "maybe type" "temp"
    (879286 'move' call_tmp[879283](230690 call ! call_tmp[879278]))
    unknown call_tmp[879288] "expr temp" "maybe param" "maybe type" "temp"
    (879291 'move' call_tmp[879288](230695 call _cond_test call_tmp[879283]))
    if call_tmp[879288]
    {
      (230686 call(446576 call (partial) _destroy _mt[203] this[230663]) x[230670])
      (561415 'end of statement')
      (621913 'move' ret[621907](621912 'coerce' 0 bool[19]))
      gotoReturn _end_replace[621905] _end_replace[621905]
    }
    unknown src[230700] "dead at end of block" "ref var"
    (650002 'init ref decl' src[230700])
    (650000 'move' src[230700](649999 'addr of' x[230670]))
    (230703 'end of statement')
    unknown dst[230705] "dead at end of block" "ref var"
    (650007 'init ref decl' dst[230705])
    unknown call_tmp[879297] "expr temp" "maybe param" "maybe type" "temp"
    (879300 'move' call_tmp[879297](230707 call(446587 call (partial) _getRef _mt[203] this[230663]) i[230666]))
    (650005 'move' dst[230705](650004 'addr of' call_tmp[879297]))
    (230710 'end of statement')
    (230712 call(446592 call (partial) _destroy _mt[203] this[230663]) dst[230705])
    (561417 'end of statement' dst[230705])
    (230715 call(446597 call (partial) _move _mt[203] this[230663]) src[230700] dst[230705])
    (561419 'end of statement' src[230700] dst[230705])
    (621919 'move' ret[621907](621918 'coerce' 1 bool[19]))
    label _end_replace[621905]
    (621909 return ret[621907])
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).update[230723](arg _mt[230733]:_MT[201], arg this[230725]:list[231871](?), arg i[230728]:int(64)[10], arg updater[230731]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    unknown ret[621923] "RVV" "temp"
    (230737 call(446603 call (partial) _enter _mt[203] this[230725]))
    (561423 'end of statement')
    Defer
    {
      { scopeless
        (230739 call(446607 call (partial) _leave _mt[203] this[230725]))
      }
    }
    unknown tmp[497766] "maybe param" "temp"
    (497777 'move' tmp[497766] 1)
    unknown call_tmp[879310] "expr temp" "maybe param" "maybe type" "temp"
    (879313 'move' call_tmp[879310](497779 call _cond_invalid tmp[497766]))
    if call_tmp[879310]
    {
      (497782 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695423] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695424] "maybe param" "temp"
    unknown call_tmp[879315] "expr temp" "maybe param" "maybe type" "temp"
    (879318 'move' call_tmp[879315](497767 call isTrue tmp[497766]))
    (695429 'move' tmp[695424](695427 call _cond_test call_tmp[879315]))
    if tmp[695424]
    {
      unknown tmp[695431] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879322] "expr temp" "maybe param" "maybe type" "temp"
      (879325 'move' call_tmp[879322](230764 call(446614 call (partial) _withinBounds _mt[203] this[230725]) i[230728]))
      unknown call_tmp[879327] "expr temp" "maybe param" "maybe type" "temp"
      (879330 'move' call_tmp[879327](230761 call ! call_tmp[879322]))
      (695433 'move' tmp[695431](497770 call isTrue call_tmp[879327]))
      (695438 'move' tmp[695423](695435 '_paramFoldLogical' tmp[695424] tmp[695431]))
    }
    {
      (695443 'move' tmp[695423](695440 '_paramFoldLogical' tmp[695424] 0))
    }
    unknown call_tmp[879332] "expr temp" "maybe param" "maybe type" "temp"
    (879335 'move' call_tmp[879332](230766 call _cond_test tmp[695423]))
    if call_tmp[879332]
    {
      unknown call_tmp[879337] "expr temp" "maybe param" "maybe type" "temp"
      (879340 'move' call_tmp[879337](230749 call : i[230728] string[244]))
      unknown call_tmp[879342] "maybe param" "maybe type" "temp"
      (879345 'move' call_tmp[879342](230746 call + "Invalid list index: " call_tmp[879337]))
      const msg[230745] "dead at end of block" "const" "insert auto destroy"
      (650009 'init var' msg[230745] call_tmp[879342])
      (230754 'end of statement')
      (230756 call boundsCheckHalt msg[230745])
      (561426 'end of statement' msg[230745])
    }
    unknown slot[230771] "dead at end of block" "ref var"
    (650014 'init ref decl' slot[230771])
    unknown call_tmp[879349] "expr temp" "maybe param" "maybe type" "temp"
    (879352 'move' call_tmp[879349](230773 call(446619 call (partial) _getRef _mt[203] this[230725]) i[230728]))
    (650012 'move' slot[230771](650011 'addr of' call_tmp[879349]))
    (230776 'end of statement')
    unknown call_tmp[879354] "expr temp" "maybe param" "maybe type" "temp"
    (879357 'move' call_tmp[879354](230824 call canResolveMethod module=[222] Reflection[1804] updater[230731] "this" i[230728] slot[230771]))
    unknown call_tmp[879359] "expr temp" "maybe param" "maybe type" "temp"
    (879362 'move' call_tmp[879359](230818 call ! call_tmp[879354]))
    unknown call_tmp[879364] "expr temp" "maybe param" "maybe type" "temp"
    (879367 'move' call_tmp[879364](230831 call _cond_test call_tmp[879359]))
    if call_tmp[879364]
    {
      unknown call_tmp[879369] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (879372 'move' call_tmp[879369](230800 'typeof' updater[230731]))
      unknown call_tmp[879374] "expr temp" "maybe param" "maybe type" "temp"
      (879377 'move' call_tmp[879374](230797 call : call_tmp[879369] string[244]))
      unknown call_tmp[879379] "expr temp" "maybe param" "maybe type" "temp"
      (879382 'move' call_tmp[879379](230792 call + "`list.update()` failed to resolve method " call_tmp[879374]))
      unknown call_tmp[879384] "expr temp" "maybe param" "maybe type" "temp"
      (879387 'move' call_tmp[879384](230790 call + call_tmp[879379] ".this() for arguments ("))
      unknown call_tmp[879389] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (879392 'move' call_tmp[879389](230808 'typeof' i[230728]))
      unknown call_tmp[879394] "expr temp" "maybe param" "maybe type" "temp"
      (879397 'move' call_tmp[879394](230805 call : call_tmp[879389] string[244]))
      unknown call_tmp[879399] "expr temp" "maybe param" "maybe type" "temp"
      (879402 'move' call_tmp[879399](230788 call + call_tmp[879384] call_tmp[879394]))
      unknown call_tmp[879404] "expr temp" "maybe param" "maybe type" "temp"
      (879407 'move' call_tmp[879404](230786 call + call_tmp[879399] ", "))
      unknown call_tmp[879409] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (879412 'move' call_tmp[879409](230814 'typeof' slot[230771]))
      unknown call_tmp[879414] "expr temp" "maybe param" "maybe type" "temp"
      (879417 'move' call_tmp[879414](230811 call : call_tmp[879409] string[244]))
      unknown call_tmp[879419] "expr temp" "maybe param" "maybe type" "temp"
      (879422 'move' call_tmp[879419](230784 call + call_tmp[879404] call_tmp[879414]))
      unknown call_tmp[879424] "expr temp" "maybe param" "maybe type" "temp"
      (879427 'move' call_tmp[879424](230782 call + call_tmp[879419] ")"))
      (230781 call compilerError call_tmp[879424])
      (561428 'end of statement' slot[230771])
    }
    unknown call_tmp[879429] "expr temp" "maybe param" "maybe type" "temp"
    (879432 'move' call_tmp[879429](230838 call updater[230731] i[230728] slot[230771]))
    (621928 'move' ret[621923](621927 'deref' call_tmp[879429]))
    gotoReturn _end_update[621921] _end_update[621921]
    (561430 'end of statement' slot[230771])
    label _end_update[621921]
    (621925 return ret[621923])
    (396831 'used modules list'(230779 'import' Reflection[1804]))
    (406996 'referenced modules list' Reflection[1804])
  }
  function list[231871](?)._warnForParSafeIndexing[230843](arg _mt[230847]:_MT[201], arg this[230845]:list[231871](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[879436] "expr temp" "maybe param" "maybe type" "temp"
    (879439 'move' call_tmp[879436](446634 call parSafe _mt[203] this[230845]))
    unknown call_tmp[879441] "expr temp" "maybe param" "maybe type" "temp"
    (879444 'move' call_tmp[879441](230868 call _cond_test call_tmp[879436]))
    if call_tmp[879441]
    {
      unknown call_tmp[879446] "expr temp" "maybe param" "maybe type" "temp"
      (879449 'move' call_tmp[879446](230854 call + "Indexing a list initialized with `parSafe=true` " "has been deprecated, consider using `set()` "))
      unknown call_tmp[879451] "expr temp" "maybe param" "maybe type" "temp"
      (879454 'move' call_tmp[879451](230852 call + call_tmp[879446] "or `update()` instead"))
      (230851 call compilerWarning call_tmp[879451] 2)
    }
    (621934 return _void[46])
  }
  function list[231871](?).this[230876](arg _mt[230884]:_MT[201], ref arg this[230878]:list[231871](?), arg i[230881]:int(64)[10]) ref : _unknown[42] "method" "primary method"
  {
    unknown ret[621938] "RVV" "temp"
    (230888 call(446640 call (partial) _warnForParSafeIndexing _mt[203] this[230878]))
    (561434 'end of statement')
    unknown tmp[497787] "maybe param" "temp"
    (497798 'move' tmp[497787] 1)
    unknown call_tmp[879458] "expr temp" "maybe param" "maybe type" "temp"
    (879461 'move' call_tmp[879458](497800 call _cond_invalid tmp[497787]))
    if call_tmp[879458]
    {
      (497803 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695450] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695451] "maybe param" "temp"
    unknown call_tmp[879463] "expr temp" "maybe param" "maybe type" "temp"
    (879466 'move' call_tmp[879463](497788 call isTrue tmp[497787]))
    (695456 'move' tmp[695451](695454 call _cond_test call_tmp[879463]))
    if tmp[695451]
    {
      unknown tmp[695458] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879470] "expr temp" "maybe param" "maybe type" "temp"
      (879473 'move' call_tmp[879470](230910 call(446647 call (partial) _withinBounds _mt[203] this[230878]) i[230881]))
      unknown call_tmp[879475] "expr temp" "maybe param" "maybe type" "temp"
      (879478 'move' call_tmp[879475](230907 call ! call_tmp[879470]))
      (695460 'move' tmp[695458](497791 call isTrue call_tmp[879475]))
      (695465 'move' tmp[695450](695462 '_paramFoldLogical' tmp[695451] tmp[695458]))
    }
    {
      (695470 'move' tmp[695450](695467 '_paramFoldLogical' tmp[695451] 0))
    }
    unknown call_tmp[879480] "expr temp" "maybe param" "maybe type" "temp"
    (879483 'move' call_tmp[879480](230912 call _cond_test tmp[695450]))
    if call_tmp[879480]
    {
      unknown call_tmp[879485] "expr temp" "maybe param" "maybe type" "temp"
      (879488 'move' call_tmp[879485](230895 call : i[230881] string[244]))
      unknown call_tmp[879490] "maybe param" "maybe type" "temp"
      (879493 'move' call_tmp[879490](230892 call + "Invalid list index: " call_tmp[879485]))
      const msg[230891] "dead at end of block" "const" "insert auto destroy"
      (650016 'init var' msg[230891] call_tmp[879490])
      (230900 'end of statement')
      (230902 call boundsCheckHalt msg[230891])
      (561436 'end of statement' msg[230891])
    }
    unknown result[230917] "dead at end of block" "ref var"
    (650021 'init ref decl' result[230917])
    unknown call_tmp[879497] "expr temp" "maybe param" "maybe type" "temp"
    (879500 'move' call_tmp[879497](230919 call(446652 call (partial) _getRef _mt[203] this[230878]) i[230881]))
    (650019 'move' result[230917](650018 'addr of' call_tmp[879497]))
    (230922 'end of statement')
    (621943 'move' ret[621938](621942 'addr of' result[230917]))
    gotoReturn _end_this[621936] _end_this[621936]
    (561438 'end of statement' result[230917])
    label _end_this[621936]
    (621940 return ret[621938])
  }
  function list[231871](?).this[230927](arg _mt[230935]:_MT[201], const  ref arg this[230929]:list[231871](?), arg i[230932]:int(64)[10]) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[621949] "RVV" "temp"
    (230939 call(446658 call (partial) _warnForParSafeIndexing _mt[203] this[230929]))
    (561440 'end of statement')
    unknown tmp[497808] "maybe param" "temp"
    (497819 'move' tmp[497808] 1)
    unknown call_tmp[879504] "expr temp" "maybe param" "maybe type" "temp"
    (879507 'move' call_tmp[879504](497821 call _cond_invalid tmp[497808]))
    if call_tmp[879504]
    {
      (497824 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695477] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695478] "maybe param" "temp"
    unknown call_tmp[879509] "expr temp" "maybe param" "maybe type" "temp"
    (879512 'move' call_tmp[879509](497809 call isTrue tmp[497808]))
    (695483 'move' tmp[695478](695481 call _cond_test call_tmp[879509]))
    if tmp[695478]
    {
      unknown tmp[695485] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879516] "expr temp" "maybe param" "maybe type" "temp"
      (879519 'move' call_tmp[879516](230961 call(446665 call (partial) _withinBounds _mt[203] this[230929]) i[230932]))
      unknown call_tmp[879521] "expr temp" "maybe param" "maybe type" "temp"
      (879524 'move' call_tmp[879521](230958 call ! call_tmp[879516]))
      (695487 'move' tmp[695485](497812 call isTrue call_tmp[879521]))
      (695492 'move' tmp[695477](695489 '_paramFoldLogical' tmp[695478] tmp[695485]))
    }
    {
      (695497 'move' tmp[695477](695494 '_paramFoldLogical' tmp[695478] 0))
    }
    unknown call_tmp[879526] "expr temp" "maybe param" "maybe type" "temp"
    (879529 'move' call_tmp[879526](230963 call _cond_test tmp[695477]))
    if call_tmp[879526]
    {
      unknown call_tmp[879531] "expr temp" "maybe param" "maybe type" "temp"
      (879534 'move' call_tmp[879531](230946 call : i[230932] string[244]))
      unknown call_tmp[879536] "maybe param" "maybe type" "temp"
      (879539 'move' call_tmp[879536](230943 call + "Invalid list index: " call_tmp[879531]))
      const msg[230942] "dead at end of block" "const" "insert auto destroy"
      (650023 'init var' msg[230942] call_tmp[879536])
      (230951 'end of statement')
      (230953 call halt msg[230942])
      (561442 'end of statement' msg[230942])
    }
    const result[230968] "dead at end of block" "const" "ref var"
    (650028 'init ref decl' result[230968])
    unknown call_tmp[879543] "expr temp" "maybe param" "maybe type" "temp"
    (879546 'move' call_tmp[879543](230970 call(446670 call (partial) _getRef _mt[203] this[230929]) i[230932]))
    (650026 'move' result[230968](650025 'addr of' call_tmp[879543]))
    (230973 'end of statement')
    (621954 'move' ret[621949](621953 'addr of' result[230968]))
    gotoReturn _end_this[621947] _end_this[621947]
    (561444 'end of statement' result[230968])
    label _end_this[621947]
    (621951 return ret[621949])
  }
  function list[231871](?).these[230978](arg _mt[230982]:_MT[201], arg this[230980]:list[231871](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[621960] "RVV" "temp"
    {
      unknown _indexOfInterest[231000] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[231001] "expr temp" "temp"
      unknown call_tmp[879550] "expr temp" "maybe param" "maybe type" "temp"
      (879553 'move' call_tmp[879550](446682 call _size _mt[203] this[230980]))
      unknown call_tmp[879555] "expr temp" "maybe param" "maybe type" "temp"
      (879558 'move' call_tmp[879555](231017 call chpl_direct_counted_range_iter 0 call_tmp[879550]))
      (231010 'move' _iterator[231001](231008 call _getIterator call_tmp[879555]))
      Defer
      {
        {
          (231032 call _freeIterator _iterator[231001])
        }
      }
      { scopeless type
        (231022 'move' _indexOfInterest[231000](231019 call iteratorIndex _iterator[231001]))
      }
      ForLoop[231002] order-independent
      {
        unknown i[230985] "index var" "insert auto destroy"
        (561447 'end of statement')
        (231027 'move' i[230985] _indexOfInterest[231000])
        (561448 'end of statement' i[230985])
        ref yret[621964] "YVV" "temp"
        unknown call_tmp[879562] "expr temp" "maybe param" "maybe type" "temp"
        (879565 'move' call_tmp[879562](230995 call(446676 call (partial) _getRef _mt[203] this[230980]) i[230985]))
        (621967 'move' yret[621964](621966 'addr of' call_tmp[879562]))
        (230993 yield yret[621964])
        (561450 'end of statement' i[230985])
        label _continueLabel[231005]
        _indexOfInterest[231000]
        _iterator[231001]
      }
      label _breakLabel[231006]
    }
    (621962 return ret[621960])
  }
  function list[231871](?).these[231041](arg _mt[231049]:_MT[201], arg this[231043]:list[231871](?), param arg tag[231046]:iterKind[52144]) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[621972] "RVV" "temp"
    unknown call_tmp[879569] "maybe param" "maybe type" "temp"
    (879572 'move' call_tmp[879569](446689 call _size _mt[203] this[231043]))
    const osz[231060] "dead at end of block" "const" "insert auto destroy"
    (650030 'init var' osz[231060] call_tmp[879569])
    (231063 'end of statement')
    const minChunkSize[231065] "dead at end of block" "const" "insert auto destroy"
    (650032 'init var' minChunkSize[231065] 64)
    (231068 'end of statement')
    unknown call_tmp[879574] "maybe param" "maybe type" "temp"
    (879577 'move' call_tmp[879574](231071 call <= osz[231060] minChunkSize[231065]))
    const hasOneChunk[231070] "dead at end of block" "const" "insert auto destroy"
    (650034 'init var' hasOneChunk[231070] call_tmp[879574])
    (231076 'end of statement')
    const numTasks[231078] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[695531] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695532] "maybe param" "temp"
    (695537 'move' tmp[695532](695535 call _cond_test hasOneChunk[231070]))
    if tmp[695532]
    {
      (695542 'move' tmp[695531](695539 '_paramFoldLogical' tmp[695532] 1))
    }
    {
      unknown tmp[695504] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[695505] "maybe param" "temp"
      unknown call_tmp[879579] "expr temp" "maybe param" "maybe type" "temp"
      (879582 'move' call_tmp[879579](231081 call > dataParTasksPerLocale[287582] 0))
      (695510 'move' tmp[695505](695508 call _cond_test call_tmp[879579]))
      if tmp[695505]
      {
        (695515 'move' tmp[695504](695512 '_paramFoldLogical' tmp[695505] dataParTasksPerLocale[287582]))
      }
      {
        unknown tmp[695517] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[879584] "expr temp" "maybe param" "maybe type" "temp"
        (879587 'move' call_tmp[879584](407002 call here[135591]))
        (695519 'move' tmp[695517](231087 call maxTaskPar _mt[203] call_tmp[879584]))
        (695524 'move' tmp[695504](695521 '_paramFoldLogical' tmp[695505] tmp[695517]))
      }
      (695547 'move' tmp[695531](695544 '_paramFoldLogical' tmp[695532] tmp[695504]))
    }
    (650036 'init var' numTasks[231078] tmp[695531])
    (231097 'end of statement')
    unknown call_tmp[879591] "expr temp" "maybe param" "maybe type" "temp"
    (879594 'move' call_tmp[879591](231104 call / osz[231060] numTasks[231078]))
    unknown call_tmp[879596] "expr temp" "maybe param" "maybe type" "temp"
    (879599 'move' call_tmp[879596](231103 call floor call_tmp[879591]))
    unknown call_tmp[879601] "maybe param" "maybe type" "temp"
    (879604 'move' call_tmp[879601](231100 call : call_tmp[879596] int(64)[10]))
    const chunkSize[231099] "dead at end of block" "const" "insert auto destroy"
    (650038 'init var' chunkSize[231099] call_tmp[879601])
    (231110 'end of statement')
    unknown call_tmp[879606] "expr temp" "maybe param" "maybe type" "temp"
    (879609 'move' call_tmp[879606](231116 call * chunkSize[231099] numTasks[231078]))
    unknown call_tmp[879611] "maybe param" "maybe type" "temp"
    (879614 'move' call_tmp[879611](231113 call - osz[231060] call_tmp[879606]))
    const trailing[231112] "dead at end of block" "const" "insert auto destroy"
    (650040 'init var' trailing[231112] call_tmp[879611])
    (231121 'end of statement' osz[231060] minChunkSize[231065] hasOneChunk[231070] numTasks[231078] chunkSize[231099] numTasks[231078])
    {
      unknown tmpIter[389126] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[879616] "expr temp" "maybe param" "maybe type" "temp"
      (879619 'move' call_tmp[879616](231127 call chpl_build_low_bounded_range 0))
      (389129 'move' tmpIter[389126](231124 call # call_tmp[879616] numTasks[231078]))
      unknown isBounded[389322] "maybe param" "temp"
      (389328 'move' isBounded[389322](389324 call chpl_supportsBoundedCoforall tmpIter[389126] 0))
      if isBounded[389322]
      {
        const _coforallCount[389191] "const" "end count" "temp"
        (389259 'move' _coforallCount[389191](389256 call _endCountAlloc 1))
        unknown numTasks[389192] "temp"
        (389243 'move' numTasks[389192](389239 call chpl_boundedCoforallSize tmpIter[389126] 0))
        (389234 call _upEndCount _coforallCount[389191] 1 numTasks[389192])
        (561458 'end of statement')
        (389231 call chpl_resetTaskSpawn numTasks[389192])
        (561459 'end of statement')
        unknown _indexOfInterest[389199] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[389200] "expr temp" "temp"
        (389209 'move' _iterator[389200](389207 call _getIterator tmpIter[389126]))
        Defer
        {
          {
            (389224 call _freeIterator _iterator[389200])
          }
        }
        { scopeless type
          (389214 'move' _indexOfInterest[389199](389211 call iteratorIndex _iterator[389200]))
        }
        ForLoop[389201]
        {
          unknown tid[389133] "coforall index var" "index var" "insert auto destroy"
          (561461 'end of statement')
          (389219 'move' tid[389133] _indexOfInterest[389199])
          (561462 'end of statement' tid[389133])
          (1464778 call coforall_fn[1464776] chunkSize[231099] trailing[231112])
          function coforall_fn[1464776](arg chunkSize[1464783], arg trailing[1464786]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[879623] "maybe param" "maybe type" "temp"
              (879626 'move' call_tmp[879623](389139 call(466602 call (partial) _computeChunk _mt[203] this[231043]) tid[389133] chunkSize[1464783] trailing[1464786]))
              unknown chunk[389137] "dead at end of block" "insert auto destroy"
              (650042 'init var' chunk[389137] call_tmp[879623])
              (389144 'end of statement' tid[389133] chunkSize[1464783] trailing[1464786])
              {
                unknown _indexOfInterest[389146] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[389148] "expr temp" "temp"
                unknown call_tmp[879628] "expr temp" "maybe param" "maybe type" "temp"
                (879631 'move' call_tmp[879628](389155 call chunk[389137] 0))
                (389150 'move' _iterator[389148](389153 call _getIterator call_tmp[879628]))
                Defer
                {
                  {
                    (389159 call _freeIterator _iterator[389148])
                  }
                }
                { scopeless type
                  (389163 'move' _indexOfInterest[389146](389166 call iteratorIndex _iterator[389148]))
                }
                ForLoop[389168] order-independent
                {
                  unknown i[389171] "index var" "insert auto destroy"
                  (561468 'end of statement')
                  (389173 'move' i[389171] _indexOfInterest[389146])
                  (561469 'end of statement' i[389171])
                  {
                    unknown result[389178] "dead at end of block" "ref var"
                    (650047 'init ref decl' result[389178])
                    unknown call_tmp[879635] "expr temp" "maybe param" "maybe type" "temp"
                    (879638 'move' call_tmp[879635](389180 call(466610 call (partial) _getRef _mt[203] this[231043]) i[389171]))
                    (650045 'move' result[389178](650044 'addr of' call_tmp[879635]))
                    (389183 'end of statement' i[389171])
                    ref yret[621976] "YVV" "temp"
                    (621979 'move' yret[621976](621978 'addr of' result[389178]))
                    (389184 yield yret[621976])
                    (561472 'end of statement' result[389178])
                  }
                  label _continueLabel[389186]
                  _indexOfInterest[389146]
                  _iterator[389148]
                }
                label _breakLabel[389188]
              }
            }
            (389194 call _downEndCount _coforallCount[389191] nil[32])
            (1464781 return _void[46])
          }
          {
          }
          label _continueLabel[389204]
          _indexOfInterest[389199]
          _iterator[389200]
        }
        label _breakLabel[389205]
        Defer
        {
          {
            (389246 call _endCountFree _coforallCount[389191])
          }
        }
        (389251 call _waitEndCount _coforallCount[389191] 1 numTasks[389192])
      }
      {
        const _coforallCount[389263] "const" "end count" "temp"
        (389319 'move' _coforallCount[389263](389316 call _endCountAlloc 1))
        unknown _indexOfInterest[389271] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[389272] "expr temp" "temp"
        (389281 'move' _iterator[389272](389279 call _getIterator tmpIter[389126]))
        Defer
        {
          {
            (389296 call _freeIterator _iterator[389272])
          }
        }
        { scopeless type
          (389286 'move' _indexOfInterest[389271](389283 call iteratorIndex _iterator[389272]))
        }
        ForLoop[389273]
        {
          unknown tid[231122] "coforall index var" "index var" "insert auto destroy"
          (561478 'end of statement')
          (389291 'move' tid[231122] _indexOfInterest[389271])
          (561479 'end of statement' tid[231122])
          (389303 call _upEndCount _coforallCount[389263] 1)
          (561481 'end of statement')
          (1464791 call coforall_fn[1464789] chunkSize[231099] trailing[231112])
          function coforall_fn[1464789](arg chunkSize[1464796], arg trailing[1464799]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[879642] "maybe param" "maybe type" "temp"
              (879645 'move' call_tmp[879642](231134 call(446706 call (partial) _computeChunk _mt[203] this[231043]) tid[231122] chunkSize[1464796] trailing[1464799]))
              unknown chunk[231132] "dead at end of block" "insert auto destroy"
              (650049 'init var' chunk[231132] call_tmp[879642])
              (231139 'end of statement' tid[231122] chunkSize[1464796] trailing[1464799])
              {
                unknown _indexOfInterest[231157] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[231158] "expr temp" "temp"
                unknown call_tmp[879647] "expr temp" "maybe param" "maybe type" "temp"
                (879650 'move' call_tmp[879647](231143 call chunk[231132] 0))
                (231167 'move' _iterator[231158](231165 call _getIterator call_tmp[879647]))
                Defer
                {
                  {
                    (231182 call _freeIterator _iterator[231158])
                  }
                }
                { scopeless type
                  (231172 'move' _indexOfInterest[231157](231169 call iteratorIndex _iterator[231158]))
                }
                ForLoop[231159] order-independent
                {
                  unknown i[231140] "index var" "insert auto destroy"
                  (561486 'end of statement')
                  (231177 'move' i[231140] _indexOfInterest[231157])
                  (561487 'end of statement' i[231140])
                  {
                    unknown result[231147] "dead at end of block" "ref var"
                    (650054 'init ref decl' result[231147])
                    unknown call_tmp[879654] "expr temp" "maybe param" "maybe type" "temp"
                    (879657 'move' call_tmp[879654](231149 call(446714 call (partial) _getRef _mt[203] this[231043]) i[231140]))
                    (650052 'move' result[231147](650051 'addr of' call_tmp[879654]))
                    (231152 'end of statement' i[231140])
                    ref yret[621982] "YVV" "temp"
                    (621985 'move' yret[621982](621984 'addr of' result[231147]))
                    (231153 yield yret[621982])
                    (561490 'end of statement' result[231147])
                  }
                  label _continueLabel[231162]
                  _indexOfInterest[231157]
                  _iterator[231158]
                }
                label _breakLabel[231163]
              }
            }
            (389266 call _downEndCount _coforallCount[389263] nil[32])
            (1464794 return _void[46])
          }
          {
          }
          label _continueLabel[389276]
          _indexOfInterest[389271]
          _iterator[389272]
        }
        label _breakLabel[389277]
        Defer
        {
          {
            (389307 call _endCountFree _coforallCount[389263])
          }
        }
        (389312 call _waitEndCount _coforallCount[389263] 1)
      }
    }
    (621974 return ret[621972])
  }
  where {
    (231051 call == tag[231046] standalone[52142])
  }
  function list[231871](?)._computeChunk[231193](arg _mt[231203]:_MT[201], arg this[231195]:list[231871](?), arg tid[231197]:_any[141](?), arg chunkSize[231199]:_any[141](?), arg trailing[231201]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[621990] "RVV" "temp"
    unknown lo[231212] "dead at end of block" "insert auto destroy"
    (650056 'init var' lo[231212] 0)
    unknown hi[231208] "dead at end of block" "insert auto destroy"
    (650058 'init var' hi[231208] lo[231212])
    (231215 'end of statement' lo[231212])
    unknown call_tmp[879659] "expr temp" "maybe param" "maybe type" "temp"
    (879662 'move' call_tmp[879659](231252 call <= tid[231197] 0))
    unknown call_tmp[879664] "expr temp" "maybe param" "maybe type" "temp"
    (879667 'move' call_tmp[879664](231256 call _cond_test call_tmp[879659]))
    if call_tmp[879664]
    {
      (231217 call = lo[231212] 0)
      (561496 'end of statement' lo[231212])
      unknown call_tmp[879669] "expr temp" "maybe param" "maybe type" "temp"
      (879672 'move' call_tmp[879669](231226 call + chunkSize[231199] trailing[231201]))
      unknown call_tmp[879674] "expr temp" "maybe param" "maybe type" "temp"
      (879677 'move' call_tmp[879674](231224 call - call_tmp[879669] 1))
      (231221 call = hi[231208] call_tmp[879674])
      (561498 'end of statement' hi[231208])
    }
    {
      unknown call_tmp[879679] "expr temp" "maybe param" "maybe type" "temp"
      (879682 'move' call_tmp[879679](231237 call * chunkSize[231199] tid[231197]))
      unknown call_tmp[879684] "expr temp" "maybe param" "maybe type" "temp"
      (879687 'move' call_tmp[879684](231235 call + call_tmp[879679] trailing[231201]))
      (231232 call = lo[231212] call_tmp[879684])
      (561500 'end of statement' lo[231212])
      unknown call_tmp[879689] "expr temp" "maybe param" "maybe type" "temp"
      (879692 'move' call_tmp[879689](231247 call + lo[231212] chunkSize[231199]))
      unknown call_tmp[879694] "expr temp" "maybe param" "maybe type" "temp"
      (879697 'move' call_tmp[879694](231245 call - call_tmp[879689] 1))
      (231242 call = hi[231208] call_tmp[879694])
      (561502 'end of statement' hi[231208] lo[231212])
    }
    unknown call_tmp[879699] "expr temp" "maybe param" "maybe type" "temp"
    (879702 'move' call_tmp[879699](231264 call chpl_build_bounded_range lo[231212] hi[231208]))
    unknown call_tmp[879704] "expr temp" "maybe param" "maybe type" "temp"
    (879707 'move' call_tmp[879704](231266 call _build_tuple call_tmp[879699]))
    (621995 'move' ret[621990](621994 'deref' call_tmp[879704]))
    gotoReturn _end__computeChunk[621988] _end__computeChunk[621988]
    (561505 'end of statement' lo[231212] hi[231208])
    label _end__computeChunk[621988]
    (621992 return ret[621990])
  }
  function list[231871](?).these[231270](arg _mt[231276]:_MT[201], arg this[231272]:list[231871](?), param arg tag[231274]:_any[141](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[622001] "RVV" "temp"
    unknown call_tmp[879711] "maybe param" "maybe type" "temp"
    (879714 'move' call_tmp[879711](446736 call _size _mt[203] this[231272]))
    const osz[231287] "dead at end of block" "const" "insert auto destroy"
    (650060 'init var' osz[231287] call_tmp[879711])
    (231290 'end of statement')
    const minChunkSize[231292] "dead at end of block" "const" "insert auto destroy"
    (650062 'init var' minChunkSize[231292] 32)
    (231295 'end of statement')
    unknown call_tmp[879716] "maybe param" "maybe type" "temp"
    (879719 'move' call_tmp[879716](231298 call <= osz[231287] minChunkSize[231292]))
    const hasOneChunk[231297] "dead at end of block" "const" "insert auto destroy"
    (650064 'init var' hasOneChunk[231297] call_tmp[879716])
    (231303 'end of statement')
    const numTasks[231305] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[695581] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695582] "maybe param" "temp"
    (695587 'move' tmp[695582](695585 call _cond_test hasOneChunk[231297]))
    if tmp[695582]
    {
      (695592 'move' tmp[695581](695589 '_paramFoldLogical' tmp[695582] 1))
    }
    {
      unknown tmp[695554] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[695555] "maybe param" "temp"
      unknown call_tmp[879721] "expr temp" "maybe param" "maybe type" "temp"
      (879724 'move' call_tmp[879721](231308 call > dataParTasksPerLocale[287582] 0))
      (695560 'move' tmp[695555](695558 call _cond_test call_tmp[879721]))
      if tmp[695555]
      {
        (695565 'move' tmp[695554](695562 '_paramFoldLogical' tmp[695555] dataParTasksPerLocale[287582]))
      }
      {
        unknown tmp[695567] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[879726] "expr temp" "maybe param" "maybe type" "temp"
        (879729 'move' call_tmp[879726](407005 call here[135591]))
        (695569 'move' tmp[695567](231314 call maxTaskPar _mt[203] call_tmp[879726]))
        (695574 'move' tmp[695554](695571 '_paramFoldLogical' tmp[695555] tmp[695567]))
      }
      (695597 'move' tmp[695581](695594 '_paramFoldLogical' tmp[695582] tmp[695554]))
    }
    (650066 'init var' numTasks[231305] tmp[695581])
    (231324 'end of statement')
    unknown call_tmp[879733] "expr temp" "maybe param" "maybe type" "temp"
    (879736 'move' call_tmp[879733](231331 call / osz[231287] numTasks[231305]))
    unknown call_tmp[879738] "expr temp" "maybe param" "maybe type" "temp"
    (879741 'move' call_tmp[879738](231330 call floor call_tmp[879733]))
    unknown call_tmp[879743] "maybe param" "maybe type" "temp"
    (879746 'move' call_tmp[879743](231327 call : call_tmp[879738] int(64)[10]))
    const chunkSize[231326] "dead at end of block" "const" "insert auto destroy"
    (650068 'init var' chunkSize[231326] call_tmp[879743])
    (231337 'end of statement')
    unknown call_tmp[879748] "expr temp" "maybe param" "maybe type" "temp"
    (879751 'move' call_tmp[879748](231343 call * chunkSize[231326] numTasks[231305]))
    unknown call_tmp[879753] "maybe param" "maybe type" "temp"
    (879756 'move' call_tmp[879753](231340 call - osz[231287] call_tmp[879748]))
    const trailing[231339] "dead at end of block" "const" "insert auto destroy"
    (650070 'init var' trailing[231339] call_tmp[879753])
    (231348 'end of statement' osz[231287] minChunkSize[231292] hasOneChunk[231297] numTasks[231305] chunkSize[231326] numTasks[231305])
    {
      unknown tmpIter[389332] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[879758] "expr temp" "maybe param" "maybe type" "temp"
      (879761 'move' call_tmp[879758](231354 call chpl_build_low_bounded_range 0))
      (389335 'move' tmpIter[389332](231351 call # call_tmp[879758] numTasks[231305]))
      unknown isBounded[389485] "maybe param" "temp"
      (389491 'move' isBounded[389485](389487 call chpl_supportsBoundedCoforall tmpIter[389332] 0))
      if isBounded[389485]
      {
        const _coforallCount[389354] "const" "end count" "temp"
        (389422 'move' _coforallCount[389354](389419 call _endCountAlloc 1))
        unknown numTasks[389355] "temp"
        (389406 'move' numTasks[389355](389402 call chpl_boundedCoforallSize tmpIter[389332] 0))
        (389397 call _upEndCount _coforallCount[389354] 1 numTasks[389355])
        (561514 'end of statement')
        (389394 call chpl_resetTaskSpawn numTasks[389355])
        (561515 'end of statement')
        unknown _indexOfInterest[389362] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[389363] "expr temp" "temp"
        (389372 'move' _iterator[389363](389370 call _getIterator tmpIter[389332]))
        Defer
        {
          {
            (389387 call _freeIterator _iterator[389363])
          }
        }
        { scopeless type
          (389377 'move' _indexOfInterest[389362](389374 call iteratorIndex _iterator[389363]))
        }
        ForLoop[389364]
        {
          unknown tid[389339] "coforall index var" "index var" "insert auto destroy"
          (561517 'end of statement')
          (389382 'move' tid[389339] _indexOfInterest[389362])
          (561518 'end of statement' tid[389339])
          (1464804 call coforall_fn[1464802] chunkSize[231326] trailing[231339])
          function coforall_fn[1464802](arg chunkSize[1464809], arg trailing[1464812]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[879765] "maybe param" "maybe type" "temp"
              (879768 'move' call_tmp[879765](389345 call(466616 call (partial) _computeChunk _mt[203] this[231272]) tid[389339] chunkSize[1464809] trailing[1464812]))
              unknown chunk[389343] "dead at end of block" "insert auto destroy"
              (650072 'init var' chunk[389343] call_tmp[879765])
              (389350 'end of statement' tid[389339] chunkSize[1464809] trailing[1464812])
              ref yret[622005] "YVV" "temp"
              (622008 'move' yret[622005](622007 'addr of' chunk[389343]))
              (389351 yield yret[622005])
              (561523 'end of statement' chunk[389343])
            }
            (389357 call _downEndCount _coforallCount[389354] nil[32])
            (1464807 return _void[46])
          }
          {
          }
          label _continueLabel[389367]
          _indexOfInterest[389362]
          _iterator[389363]
        }
        label _breakLabel[389368]
        Defer
        {
          {
            (389409 call _endCountFree _coforallCount[389354])
          }
        }
        (389414 call _waitEndCount _coforallCount[389354] 1 numTasks[389355])
      }
      {
        const _coforallCount[389426] "const" "end count" "temp"
        (389482 'move' _coforallCount[389426](389479 call _endCountAlloc 1))
        unknown _indexOfInterest[389434] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[389435] "expr temp" "temp"
        (389444 'move' _iterator[389435](389442 call _getIterator tmpIter[389332]))
        Defer
        {
          {
            (389459 call _freeIterator _iterator[389435])
          }
        }
        { scopeless type
          (389449 'move' _indexOfInterest[389434](389446 call iteratorIndex _iterator[389435]))
        }
        ForLoop[389436]
        {
          unknown tid[231349] "coforall index var" "index var" "insert auto destroy"
          (561529 'end of statement')
          (389454 'move' tid[231349] _indexOfInterest[389434])
          (561530 'end of statement' tid[231349])
          (389466 call _upEndCount _coforallCount[389426] 1)
          (561532 'end of statement')
          (1464817 call coforall_fn[1464815] chunkSize[231326] trailing[231339])
          function coforall_fn[1464815](arg chunkSize[1464822], arg trailing[1464825]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[879772] "maybe param" "maybe type" "temp"
              (879775 'move' call_tmp[879772](231361 call(446751 call (partial) _computeChunk _mt[203] this[231272]) tid[231349] chunkSize[1464822] trailing[1464825]))
              unknown chunk[231359] "dead at end of block" "insert auto destroy"
              (650074 'init var' chunk[231359] call_tmp[879772])
              (231366 'end of statement' tid[231349] chunkSize[1464822] trailing[1464825])
              ref yret[622011] "YVV" "temp"
              (622014 'move' yret[622011](622013 'addr of' chunk[231359]))
              (231367 yield yret[622011])
              (561536 'end of statement' chunk[231359])
            }
            (389429 call _downEndCount _coforallCount[389426] nil[32])
            (1464820 return _void[46])
          }
          {
          }
          label _continueLabel[389439]
          _indexOfInterest[389434]
          _iterator[389435]
        }
        label _breakLabel[389440]
        Defer
        {
          {
            (389470 call _endCountFree _coforallCount[389426])
          }
        }
        (389475 call _waitEndCount _coforallCount[389426] 1)
      }
    }
    (622003 return ret[622001])
  }
  where {
    (231278 call == tag[231274] leader[52138])
  }
  function list[231871](?).these[231373](arg _mt[231381]:_MT[201], arg this[231375]:list[231871](?), param arg tag[231377]:_any[141](?), arg followThis[231379]:_any[141](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[622019] "RVV" "temp"
    {
      unknown _indexOfInterest[231403] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[231404] "expr temp" "temp"
      unknown call_tmp[879777] "expr temp" "maybe param" "maybe type" "temp"
      (879780 'move' call_tmp[879777](231394 call followThis[231379] 0))
      (231413 'move' _iterator[231404](231411 call _getIterator call_tmp[879777]))
      Defer
      {
        {
          (231428 call _freeIterator _iterator[231404])
        }
      }
      { scopeless type
        (231418 'move' _indexOfInterest[231403](231415 call iteratorIndex _iterator[231404]))
      }
      ForLoop[231405] order-independent
      {
        unknown i[231391] "index var" "insert auto destroy"
        (561542 'end of statement')
        (231423 'move' i[231391] _indexOfInterest[231403])
        (561543 'end of statement' i[231391])
        ref yret[622023] "YVV" "temp"
        unknown call_tmp[879784] "expr temp" "maybe param" "maybe type" "temp"
        (879787 'move' call_tmp[879784](231398 call(446761 call (partial) _getRef _mt[203] this[231375]) i[231391]))
        (622026 'move' yret[622023](622025 'addr of' call_tmp[879784]))
        (231396 yield yret[622023])
        (561545 'end of statement' i[231391])
        label _continueLabel[231408]
        _indexOfInterest[231403]
        _iterator[231404]
      }
      label _breakLabel[231409]
    }
    (622021 return ret[622019])
  }
  where {
    (231383 call == tag[231377] follower[52140])
  }
  function list[231871](?).serialize[231438](arg _mt[231450]:_MT[201], arg this[231440]:list[231871](?), arg writer[231445]:fileWriter[170987](?), ref arg serializer[231448]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (231454 call(446767 call (partial) _enter _mt[203] this[231440]))
    (561547 'end of statement')
    unknown call_tmp[879795] "expr temp" "maybe param" "maybe type" "temp"
    (879798 'move' call_tmp[879795](231466 call _size _mt[203] this[231440]))
    unknown call_tmp[879800] "maybe param" "maybe type" "temp"
    (879803 'move' call_tmp[879800](231461 call(231458 call (partial) startList _mt[203] serializer[231448]) writer[231445] call_tmp[879795]))
    unknown ser[231456] "dead at end of block" "insert auto destroy"
    (650076 'init var' ser[231456] call_tmp[879800])
    (231470 'end of statement')
    {
      unknown _indexOfInterest[231491] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[231492] "expr temp" "temp"
      unknown call_tmp[879807] "expr temp" "maybe param" "maybe type" "temp"
      (879810 'move' call_tmp[879807](231507 call _size _mt[203] this[231440]))
      unknown call_tmp[879812] "expr temp" "maybe param" "maybe type" "temp"
      (879815 'move' call_tmp[879812](231505 call chpl__nudgeHighBound call_tmp[879807]))
      unknown call_tmp[879817] "expr temp" "maybe param" "maybe type" "temp"
      (879820 'move' call_tmp[879817](231510 call chpl_direct_range_iter 0 call_tmp[879812]))
      (231501 'move' _iterator[231492](231499 call _getIterator call_tmp[879817]))
      Defer
      {
        {
          (231525 call _freeIterator _iterator[231492])
        }
      }
      { scopeless type
        (231515 'move' _indexOfInterest[231491](231512 call iteratorIndex _iterator[231492]))
      }
      ForLoop[231493]
      {
        unknown i[231471] "index var" "insert auto destroy"
        (561549 'end of statement')
        (231520 'move' i[231471] _indexOfInterest[231491])
        (561550 'end of statement' i[231471])
        unknown call_tmp[879826] "expr temp" "maybe param" "maybe type" "temp"
        (879829 'move' call_tmp[879826](231488 call(446772 call (partial) _getRef _mt[203] this[231440]) i[231471]))
        (231486 call(231483 call (partial) writeElement _mt[203] ser[231456]) call_tmp[879826])
        (561552 'end of statement' ser[231456] i[231471])
        label _continueLabel[231496]
        _indexOfInterest[231491]
        _iterator[231492]
      }
      label _breakLabel[231497]
    }
    (231536 call(231533 call (partial) endList _mt[203] ser[231456]))
    (561555 'end of statement' ser[231456])
    (231538 call(446777 call (partial) _leave _mt[203] this[231440]))
    (622029 return _void[46])
  }
  function list[231871](?).init[231541](arg _mt[231557]:_MT[201], ref arg this[231543]:list[231871](?), arg eltType[231545]:_any[141](?), param arg parSafe[231548]:bool[19], arg reader[231552]:fileReader[170893](?), ref arg deserializer[231555]:_any[141](?)) : void[4] throws "method" "primary method" "no return value for void"
  {
    (231564 call(231561 call (partial) init _mt[203] this[231543]) eltType[231545] parSafe[231548])
    (561558 'end of statement')
    (231568 call(446787 call (partial) _readHelper _mt[203] this[231543]) reader[231552] deserializer[231555])
    (622031 return _void[46])
  }
  function list[231871](?)._readHelper[231573](arg _mt[231583]:_MT[201], ref arg this[231575]:list[231871](?), arg r[231578]:fileReader[170893](?), ref arg deserializer[231581]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (231587 call(446794 call (partial) _enter _mt[203] this[231575]))
    (561560 'end of statement')
    (231589 call(446798 call (partial) _clearLocked _mt[203] this[231575]))
    (561561 'end of statement')
    unknown call_tmp[879845] "maybe param" "maybe type" "temp"
    (879848 'move' call_tmp[879845](231596 call(231593 call (partial) startList _mt[203] deserializer[231581]) r[231578]))
    unknown des[231591] "dead at end of block" "insert auto destroy"
    (650078 'init var' des[231591] call_tmp[879845])
    (231599 'end of statement')
    unknown done[231601] "dead at end of block" "insert auto destroy"
    (650080 'init var' done[231601] 0)
    (231604 'end of statement')
    {
      unknown tmp[231626] "temp"
      unknown call_tmp[879852] "expr temp" "maybe param" "maybe type" "temp"
      (879855 'move' call_tmp[879852](231651 call(231648 call (partial) hasMore _mt[203] des[231591])))
      (231652 'move' tmp[231626](231646 call _cond_test call_tmp[879852]))
      WhileDo[231631]
      {
        {
          unknown call_tmp[879861] "expr temp" "maybe param" "maybe type" "temp"
          (879864 'move' call_tmp[879861](446804 call eltType _mt[203] this[231575]))
          unknown call_tmp[879866] "maybe param" "maybe type" "temp"
          (879869 'move' call_tmp[879866](231619 call(231616 call (partial) readElement _mt[203] des[231591]) call_tmp[879861]))
          unknown elt[231614] "dead at end of block" "no auto destroy"
          (650082 'init var' elt[231614] call_tmp[879866])
          (231622 'end of statement' des[231591])
          (231624 call(446808 call (partial) _appendByRef _mt[203] this[231575]) elt[231614])
          (561563 'end of statement' elt[231614])
        }
        label _continueLabel[231629]
        unknown call_tmp[879875] "expr temp" "maybe param" "maybe type" "temp"
        (879878 'move' call_tmp[879875](231640 call(231637 call (partial) hasMore _mt[203] des[231591])))
        (231641 'move' tmp[231626](231635 call _cond_test call_tmp[879875]))
        tmp[231626]
      }
      label _breakLabel[231630]
    }
    (231659 call(231656 call (partial) endList _mt[203] des[231591]))
    (561565 'end of statement' des[231591])
    (231661 call(446813 call (partial) _leave _mt[203] this[231575]))
    (622033 return _void[46])
  }
  function list[231871](?).deserialize[231664](arg _mt[231674]:_MT[201], ref arg this[231666]:list[231871](?), arg reader[231669]:fileReader[170893](?), ref arg deserializer[231672]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (231678 call(446818 call (partial) _readHelper _mt[203] this[231666]) reader[231669] deserializer[231672])
    (622035 return _void[46])
  }
  function list[231871](?).isEmpty[231683](arg _mt[231687]:_MT[201], const arg this[231685]:list[231871](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[622039] "RVV" "temp"
    (231692 call(446825 call (partial) _enter _mt[203] this[231685]))
    (561569 'end of statement')
    unknown call_tmp[879890] "expr temp" "maybe param" "maybe type" "temp"
    (879893 'move' call_tmp[879890](446830 call _size _mt[203] this[231685]))
    unknown call_tmp[879895] "maybe param" "maybe type" "temp"
    (879898 'move' call_tmp[879895](231695 call == call_tmp[879890] 0))
    unknown result[231694] "dead at end of block" "insert auto destroy"
    (650084 'init var' result[231694] call_tmp[879895])
    (231700 'end of statement')
    (231702 call(446834 call (partial) _leave _mt[203] this[231685]))
    (561570 'end of statement')
    (622045 'move' ret[622039](622044 'coerce' result[231694] bool[19]))
    gotoReturn _end_isEmpty[622037] _end_isEmpty[622037]
    (561571 'end of statement' result[231694])
    label _end_isEmpty[622037]
    (622041 return ret[622039])
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).size[231708](arg _mt[231712]:_MT[201], const arg this[231710]:list[231871](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[622051] "RVV" "temp"
    unknown result[231716] "dead at end of block" "insert auto destroy"
    (650086 'init var' result[231716] 0)
    (231719 'end of statement')
    {
      const tmp[231733] "const" "temp"
      unknown call_tmp[879902] "expr temp" "maybe param" "maybe type" "temp"
      (879905 'move' call_tmp[879902](231730 '_wide_get_locale' this[231710]))
      (231734 'move' tmp[231733](231731 'deref' call_tmp[879902]))
      {
        (231723 call(446840 call (partial) _enter _mt[203] this[231710]))
        (561573 'end of statement')
        unknown call_tmp[879911] "expr temp" "maybe param" "maybe type" "temp"
        (879914 'move' call_tmp[879911](446846 call _size _mt[203] this[231710]))
        (231724 call = result[231716] call_tmp[879911])
        (561574 'end of statement' result[231716])
        (231729 call(446850 call (partial) _leave _mt[203] this[231710]))
      }
      (231737 'elided on block' 0 tmp[231733])
    }
    (622056 'move' ret[622051](622055 'deref' result[231716]))
    gotoReturn _end_size[622049] _end_size[622049]
    (561577 'end of statement' result[231716])
    label _end_size[622049]
    (622053 return ret[622051])
  }
  function list[231871](?).indices[231745](arg _mt[231749]:_MT[201], arg this[231747]:list[231871](?)) : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[622062] "RVV" "temp"
    unknown call_tmp[879920] "expr temp" "maybe param" "maybe type" "temp"
    (879923 'move' call_tmp[879920](231755 call size _mt[203] this[231747]))
    unknown call_tmp[879925] "expr temp" "maybe param" "maybe type" "temp"
    (879928 'move' call_tmp[879925](231758 call chpl__nudgeHighBound call_tmp[879920]))
    unknown call_tmp[879930] "expr temp" "maybe param" "maybe type" "temp"
    (879933 'move' call_tmp[879930](231760 call chpl_build_bounded_range 0 call_tmp[879925]))
    (622067 'move' ret[622062](622066 'deref' call_tmp[879930]))
    (622064 return ret[622062])
  }
  function list[231871](?).toArray[231764](arg _mt[231768]:_MT[201], const arg this[231766]:list[231871](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[622071] "RVV" "temp"
    unknown tmp[497829] "maybe param" "temp"
    unknown call_tmp[879937] "expr temp" "maybe param" "maybe type" "temp"
    (879940 'move' call_tmp[879937](446866 call eltType _mt[203] this[231766]))
    (497840 'move' tmp[497829](231791 call isNonNilableClass call_tmp[879937]))
    unknown call_tmp[879942] "expr temp" "maybe param" "maybe type" "temp"
    (879945 'move' call_tmp[879942](497842 call _cond_invalid tmp[497829]))
    if call_tmp[879942]
    {
      (497845 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[695604] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[695605] "maybe param" "temp"
    unknown call_tmp[879947] "expr temp" "maybe param" "maybe type" "temp"
    (879950 'move' call_tmp[879947](497830 call isTrue tmp[497829]))
    (695610 'move' tmp[695605](695608 call _cond_test call_tmp[879947]))
    if tmp[695605]
    {
      unknown tmp[695612] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[879954] "expr temp" "maybe param" "maybe type" "temp"
      (879957 'move' call_tmp[879954](446871 call eltType _mt[203] this[231766]))
      unknown call_tmp[879959] "expr temp" "maybe param" "maybe type" "temp"
      (879962 'move' call_tmp[879959](231794 call isOwnedClass call_tmp[879954]))
      (695614 'move' tmp[695612](497833 call isTrue call_tmp[879959]))
      (695619 'move' tmp[695604](695616 '_paramFoldLogical' tmp[695605] tmp[695612]))
    }
    {
      (695624 'move' tmp[695604](695621 '_paramFoldLogical' tmp[695605] 0))
    }
    unknown call_tmp[879964] "expr temp" "maybe param" "maybe type" "temp"
    (879967 'move' call_tmp[879964](231796 call _cond_test tmp[695604]))
    if call_tmp[879964]
    {
      unknown call_tmp[879971] "expr temp" "maybe param" "maybe type" "temp"
      (879974 'move' call_tmp[879971](446861 call eltType _mt[203] this[231766]))
      unknown call_tmp[879976] "expr temp" "maybe param" "maybe type" "temp"
      (879979 'move' call_tmp[879976](231783 call : call_tmp[879971] string[244]))
      (231776 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[879976])
    }
    unknown result[231802] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[879981] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (879984 'move' call_tmp[879981](231806 call chpl_build_low_bounded_range 0))
    unknown call_tmp[879988] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (879991 'move' call_tmp[879988](446876 call _size _mt[203] this[231766]))
    unknown call_tmp[879993] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (879996 'move' call_tmp[879993](231803 call # call_tmp[879981] call_tmp[879988]))
    unknown call_tmp[879998] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (880001 'move' call_tmp[879998](231809 call chpl__ensureDomainExpr call_tmp[879993]))
    unknown call_tmp[880005] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (880008 'move' call_tmp[880005](446881 call eltType _mt[203] this[231766]))
    unknown call_tmp[880010] "expr temp" "maybe param" "maybe type" "temp"
    (880013 'move' call_tmp[880010](231812 call chpl__buildArrayRuntimeType call_tmp[879998] call_tmp[880005]))
    (650088 'default init var' result[231802] call_tmp[880010])
    (231815 'end of statement')
    {
      const tmp[231857] "const" "temp"
      unknown call_tmp[880015] "expr temp" "maybe param" "maybe type" "temp"
      (880018 'move' call_tmp[880015](231854 '_wide_get_locale' this[231766]))
      (231858 'move' tmp[231857](231855 'deref' call_tmp[880015]))
      {
        (231819 call(446886 call (partial) _enter _mt[203] this[231766]))
        (561582 'end of statement')
        unknown tmp[231821] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter6[716461](arg iterator[716463]:_any[141](?), arg this[716598]:list[231871](?)) : _unknown[42] "do not unref for yields" "compiler generated" "iterator fn"
        {
          unknown ret[716609] "RVV" "temp"
          {
            unknown _indexOfInterest[716468] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[716469] "expr temp" "temp"
            (716478 'move' _iterator[716469](716476 call _getIterator iterator[716463]))
            Defer
            {
              {
                (716493 call _freeIterator _iterator[716469])
              }
            }
            { scopeless type
              (716483 'move' _indexOfInterest[716468](716480 call iteratorIndex _iterator[716469]))
            }
            ForLoop[716470] for-expr
            {
              unknown i[231833] "index var" "insert auto destroy"
              (716602 'end of statement')
              (716488 'move' i[231833] _indexOfInterest[716468])
              (716603 'end of statement' i[231833])
              {
                {
                  unknown yret[716613] "YVV" "temp"
                  unknown call_tmp[716621] "expr temp" "maybe param" "maybe type" "temp"
                  (716624 'move' call_tmp[716621](231842 call(446905 call (partial) _getRef _mt[203] this[716598]) i[231833]))
                  (716616 'move' yret[716613](716615 'deref' call_tmp[716621]))
                  (716465 yield yret[716613])
                  (716605 'end of statement' i[231833])
                }
              }
              label _continueLabel[716473]
              _indexOfInterest[716468]
              _iterator[716469]
            }
            label _breakLabel[716474]
          }
          (716611 return ret[716609])
        }
        function chpl__loopexpr_iter6[716500](param arg tag[716504]:iterKind[52144], arg iterator[716507]:_any[141](?), arg this[716528]:list[231871](?)) : _unknown[42] "compiler generated" "fn returns iterator"
        {
          unknown ret[716651] "RVV" "temp"
          const _leaderIterator[716519] "const" "expr temp" "temp"
          (716524 'move' _leaderIterator[716519](716521 call _toLeader iterator[716507]))
          (716656 'move' ret[716651](716655 'deref' _leaderIterator[716519]))
          (716653 return ret[716651])
        }
        where {
          unknown tmp[716627] "maybe param" "temp"
          (716638 'move' tmp[716627](716509 call == tag[716504] leader[52138]))
          unknown call_tmp[716685] "expr temp" "maybe param" "maybe type" "temp"
          (716688 'move' call_tmp[716685](716640 call _cond_invalid tmp[716627]))
          if call_tmp[716685]
          {
            (716643 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[716658] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[716659] "maybe param" "temp"
          unknown call_tmp[716690] "expr temp" "maybe param" "maybe type" "temp"
          (716693 'move' call_tmp[716690](716628 call isTrue tmp[716627]))
          (716664 'move' tmp[716659](716662 call _cond_test call_tmp[716690]))
          if tmp[716659]
          {
            unknown tmp[716666] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[716695] "expr temp" "maybe param" "maybe type" "temp"
            (716698 'move' call_tmp[716695](716513 'call resolves' "_toLeader" iterator[716507]))
            (716668 'move' tmp[716666](716631 call isTrue call_tmp[716695]))
            (716673 'move' tmp[716658](716670 '_paramFoldLogical' tmp[716659] tmp[716666]))
          }
          {
            (716678 'move' tmp[716658](716675 '_paramFoldLogical' tmp[716659] 0))
          }
          (1001690 call chpl_statementLevelSymbol tmp[716658])
        }
        function chpl__loopexpr_iter6[716530](param arg tag[716534]:iterKind[52144], arg followThis[716537]:_any[141](?), arg iterator[716539]:_any[141](?), arg this[716596]:list[231871](?)) : _unknown[42] "do not unref for yields" "compiler generated" "iterator fn"
        {
          unknown ret[716709] "RVV" "temp"
          const _followerIterator[716546] "const" "expr temp" "temp"
          (716552 'move' _followerIterator[716546](716548 call _toFollower iterator[716539] followThis[716537]))
          {
            unknown _indexOfInterest[716564] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[716565] "expr temp" "temp"
            (716574 'move' _iterator[716565](716572 call _getIterator _followerIterator[716546]))
            Defer
            {
              {
                (716589 call _freeIterator _iterator[716565])
              }
            }
            { scopeless type
              (716579 'move' _indexOfInterest[716564](716576 call iteratorIndex _iterator[716565]))
            }
            ForLoop[716566] order-independent lowered-forall for-expr
            {
              unknown i[716459] "index var" "insert auto destroy"
              (716702 'end of statement')
              (716584 'move' i[716459] _indexOfInterest[716564])
              (716703 'end of statement' i[716459])
              {
                {
                  unknown yret[716713] "YVV" "temp"
                  unknown call_tmp[716721] "expr temp" "maybe param" "maybe type" "temp"
                  (716724 'move' call_tmp[716721](716560 call(716557 call (partial) _getRef _mt[203] this[716596]) i[716459]))
                  (716716 'move' yret[716713](716715 'deref' call_tmp[716721]))
                  (716555 yield yret[716713])
                  (716705 'end of statement' i[716459])
                }
              }
              label _continueLabel[716569]
              _indexOfInterest[716564]
              _iterator[716565]
            }
            label _breakLabel[716570]
          }
          (716711 return ret[716709])
        }
        where {
          (716542 call == tag[716534] follower[52140])
        }
        function chpl__forallexpr6[716439](arg iterExpr[716442]:_any[141](?), arg this[716446]:list[231871](?)) : _unknown[42] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[716729] "RVV" "temp"
          unknown _iterator[716449] "expr temp" "maybe ref" "temp"
          (716451 'move' _iterator[716449] iterExpr[716442])
          unknown call_tmp[716736] "expr temp" "maybe param" "maybe type" "temp"
          (716739 'move' call_tmp[716736](716454 call chpl__loopexpr_iter6 _iterator[716449] this[716446]))
          (716734 'move' ret[716729](716733 'deref' call_tmp[716736]))
          (716731 return ret[716729])
        }
        unknown call_tmp[716741] "expr temp" "maybe param" "maybe type" "temp"
        (716744 'move' call_tmp[716741](231838 call chpl_build_low_bounded_range 0))
        unknown call_tmp[716748] "expr temp" "maybe param" "maybe type" "temp"
        (716751 'move' call_tmp[716748](446901 call _size _mt[203] this[231766]))
        unknown call_tmp[716753] "expr temp" "maybe param" "maybe type" "temp"
        (716756 'move' call_tmp[716753](231835 call # call_tmp[716741] call_tmp[716748]))
        unknown call_tmp[716758] "maybe param" "maybe type" "temp"
        (716761 'move' call_tmp[716758](716444 call chpl__forallexpr6 call_tmp[716753] this[231766]))
        (716765 'iterator record set shape' call_tmp[716758] call_tmp[716753] 2)
        unknown call_tmp[880022] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (880025 'move' call_tmp[880022](231825 call chpl_build_low_bounded_range 0))
        unknown call_tmp[880029] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (880032 'move' call_tmp[880029](446891 call _size _mt[203] this[231766]))
        unknown call_tmp[880034] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (880037 'move' call_tmp[880034](231822 call # call_tmp[880022] call_tmp[880029]))
        unknown call_tmp[880039] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (880042 'move' call_tmp[880039](231828 call chpl__ensureDomainExpr call_tmp[880034]))
        unknown call_tmp[880046] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (880049 'move' call_tmp[880046](446896 call eltType _mt[203] this[231766]))
        unknown call_tmp[880051] "maybe param" "maybe type" "temp"
        (880054 'move' call_tmp[880051](231831 call chpl__buildArrayRuntimeType call_tmp[880039] call_tmp[880046]))
        (650090 'init var' tmp[231821] call_tmp[716758] call_tmp[880051])
        (231847 'end of statement')
        (231848 call = result[231802] tmp[231821])
        (561583 'end of statement' result[231802] tmp[231821])
        (231853 call(446912 call (partial) _leave _mt[203] this[231766]))
      }
      (231861 'elided on block' 0 tmp[231857])
    }
    unknown call_tmp[880060] "expr temp" "maybe param" "maybe type" "temp"
    (880063 'move' call_tmp[880060](622077 call eltType _mt[203] this[231766]))
    (622080 call chpl__checkRetEltTypeMatch result[231802] call_tmp[880060])
    (622082 'move' ret[622071] result[231802])
    gotoReturn _end_toArray[622069] _end_toArray[622069]
    (561587 'end of statement' result[231802])
    label _end_toArray[622069]
    (622073 return ret[622071])
  }
  function list[231871](?).eltType[1228234](arg _mt[1228236]:_MT[201], arg this[1228238]:list[231871](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228257] "RVV" "temp" "type variable"
    unknown call_tmp[1228271] "expr temp" "maybe param" "maybe type" "temp"
    (1228274 'move' call_tmp[1228271](1228243 'is bound' this[1228238] c"eltType"))
    if call_tmp[1228271]
    {
      unknown call_tmp[1228276] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1228279 'move' call_tmp[1228276](1228242 '.v' this[1228238] c"eltType"))
      (1228262 'move' ret[1228257](1228261 'deref' call_tmp[1228276]))
      gotoReturn _end_eltType[1228255] _end_eltType[1228255]
    }
    {
      (1228267 'move' ret[1228257](1228266 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1228255] _end_eltType[1228255]
    }
    label _end_eltType[1228255]
    (1228259 return ret[1228257])
  }
  function list[231871](?).eltType[1228281](arg _mt[1228283]:_MT[201], arg this[1228285]:list[231871](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1228304] "RVV" "temp" "type variable"
    unknown call_tmp[1228318] "expr temp" "maybe param" "maybe type" "temp"
    (1228321 'move' call_tmp[1228318](1228290 'is bound' this[1228285] c"eltType"))
    if call_tmp[1228318]
    {
      unknown call_tmp[1228323] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1228326 'move' call_tmp[1228323](1228289 '.v' this[1228285] c"eltType"))
      (1228309 'move' ret[1228304](1228308 'deref' call_tmp[1228323]))
      gotoReturn _end_eltType[1228302] _end_eltType[1228302]
    }
    {
      (1228314 'move' ret[1228304](1228313 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1228302] _end_eltType[1228302]
    }
    label _end_eltType[1228302]
    (1228306 return ret[1228304])
  }
  function list[231871](?).parSafe[1228328](arg _mt[1228330]:_MT[201], arg this[1228332]:list[231871](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "@unstable"
  {
    unknown ret[1228351] "RVV" "param" "temp"
    unknown call_tmp[1228365] "expr temp" "maybe param" "maybe type" "temp"
    (1228368 'move' call_tmp[1228365](1228337 'is bound' this[1228332] c"parSafe"))
    if call_tmp[1228365]
    {
      unknown call_tmp[1228370] "expr temp" "maybe param" "maybe type" "temp"
      (1228373 'move' call_tmp[1228370](1228336 '.' this[1228332] c"parSafe"))
      (1228356 'move' ret[1228351](1228355 'deref' call_tmp[1228370]))
      gotoReturn _end_parSafe[1228349] _end_parSafe[1228349]
    }
    {
      (1228361 'move' ret[1228351](1228360 'deref' ?[227]))
      gotoReturn _end_parSafe[1228349] _end_parSafe[1228349]
    }
    label _end_parSafe[1228349]
    (1228353 return ret[1228351])
  }
  function list[231871](?).parSafe[1228375](arg _mt[1228377]:_MT[201], arg this[1228379]:list[231871](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "@unstable"
  {
    unknown ret[1228398] "RVV" "param" "temp"
    unknown call_tmp[1228412] "expr temp" "maybe param" "maybe type" "temp"
    (1228415 'move' call_tmp[1228412](1228384 'is bound' this[1228379] c"parSafe"))
    if call_tmp[1228412]
    {
      unknown call_tmp[1228417] "expr temp" "maybe param" "maybe type" "temp"
      (1228420 'move' call_tmp[1228417](1228383 '.' this[1228379] c"parSafe"))
      (1228403 'move' ret[1228398](1228402 'deref' call_tmp[1228417]))
      gotoReturn _end_parSafe[1228396] _end_parSafe[1228396]
    }
    {
      (1228408 'move' ret[1228398](1228407 'deref' ?[227]))
      gotoReturn _end_parSafe[1228396] _end_parSafe[1228396]
    }
    label _end_parSafe[1228396]
    (1228400 return ret[1228398])
  }
  function list[231871](?)._size[1228422](arg _mt[1228424]:_MT[201], ref arg this[1228426]:list[231871](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228436] "RVV" "temp"
    unknown call_tmp[1228443] "expr temp" "maybe param" "maybe type" "temp"
    (1228446 'move' call_tmp[1228443](1228430 '.' this[1228426] c"_size"))
    (1228441 'move' ret[1228436](1228440 'addr of' call_tmp[1228443]))
    (1228438 return ret[1228436])
  }
  function list[231871](?)._lock[1228448](arg _mt[1228450]:_MT[201], ref arg this[1228452]:list[231871](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228462] "RVV" "temp"
    unknown call_tmp[1228469] "expr temp" "maybe param" "maybe type" "temp"
    (1228472 'move' call_tmp[1228469](1228456 '.' this[1228452] c"_lock"))
    (1228467 'move' ret[1228462](1228466 'addr of' call_tmp[1228469]))
    (1228464 return ret[1228462])
  }
  function list[231871](?)._arrays[1228474](arg _mt[1228476]:_MT[201], ref arg this[1228478]:list[231871](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228488] "RVV" "temp"
    unknown call_tmp[1228495] "expr temp" "maybe param" "maybe type" "temp"
    (1228498 'move' call_tmp[1228495](1228482 '.' this[1228478] c"_arrays"))
    (1228493 'move' ret[1228488](1228492 'addr of' call_tmp[1228495]))
    (1228490 return ret[1228488])
  }
  function list[231871](?)._arrayCapacity[1228500](arg _mt[1228502]:_MT[201], ref arg this[1228504]:list[231871](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228514] "RVV" "temp"
    unknown call_tmp[1228521] "expr temp" "maybe param" "maybe type" "temp"
    (1228524 'move' call_tmp[1228521](1228508 '.' this[1228504] c"_arrayCapacity"))
    (1228519 'move' ret[1228514](1228518 'addr of' call_tmp[1228521]))
    (1228516 return ret[1228514])
  }
  function list[231871](?)._totalCapacity[1228526](arg _mt[1228528]:_MT[201], ref arg this[1228530]:list[231871](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228540] "RVV" "temp"
    unknown call_tmp[1228547] "expr temp" "maybe param" "maybe type" "temp"
    (1228550 'move' call_tmp[1228547](1228534 '.' this[1228530] c"_totalCapacity"))
    (1228545 'move' ret[1228540](1228544 'addr of' call_tmp[1228547]))
    (1228542 return ret[1228540])
  }
  function list[231871](?)._dummyFieldToForceBorrowChecking[1228552](arg _mt[1228554]:_MT[201], ref arg this[1228556]:list[231871](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1228566] "RVV" "temp"
    unknown call_tmp[1228573] "expr temp" "maybe param" "maybe type" "temp"
    (1228576 'move' call_tmp[1228573](1228560 '.' this[1228556] c"_dummyFieldToForceBorrowChecking"))
    (1228571 'move' ret[1228566](1228570 'addr of' call_tmp[1228573]))
    (1228568 return ret[1228566])
  }
  function chpl_fields_are_comparable[1228594](arg _arg1[1228596]:list[231871](?), arg _arg2[1228597]:list[231871](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1228676]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1228683] "expr temp" "maybe param" "maybe type" "temp"
    (1228686 'move' call_tmp[1228683](1228600 call parSafe _mt[203] _arg1[1228596]))
    unknown call_tmp[1228688] "expr temp" "maybe param" "maybe type" "temp"
    (1228691 'move' call_tmp[1228688](1228604 call parSafe _mt[203] _arg2[1228597]))
    unknown call_tmp[1228693] "expr temp" "maybe param" "maybe type" "temp"
    (1228696 'move' call_tmp[1228693](1228608 'call resolves' c"<" call_tmp[1228683] call_tmp[1228688]))
    unknown call_tmp[1228698] "expr temp" "maybe param" "maybe type" "temp"
    (1228701 'move' call_tmp[1228698](1228610 call _size _mt[203] _arg1[1228596]))
    unknown call_tmp[1228703] "expr temp" "maybe param" "maybe type" "temp"
    (1228706 'move' call_tmp[1228703](1228614 call _size _mt[203] _arg2[1228597]))
    unknown call_tmp[1228708] "expr temp" "maybe param" "maybe type" "temp"
    (1228711 'move' call_tmp[1228708](1228618 'call resolves' c"<" call_tmp[1228698] call_tmp[1228703]))
    unknown call_tmp[1228713] "expr temp" "maybe param" "maybe type" "temp"
    (1228716 'move' call_tmp[1228713](1228620 call _lock _mt[203] _arg1[1228596]))
    unknown call_tmp[1228718] "expr temp" "maybe param" "maybe type" "temp"
    (1228721 'move' call_tmp[1228718](1228624 call _lock _mt[203] _arg2[1228597]))
    unknown call_tmp[1228723] "expr temp" "maybe param" "maybe type" "temp"
    (1228726 'move' call_tmp[1228723](1228628 'call resolves' c"<" call_tmp[1228713] call_tmp[1228718]))
    unknown call_tmp[1228728] "expr temp" "maybe param" "maybe type" "temp"
    (1228731 'move' call_tmp[1228728](1228630 call _arrays _mt[203] _arg1[1228596]))
    unknown call_tmp[1228733] "expr temp" "maybe param" "maybe type" "temp"
    (1228736 'move' call_tmp[1228733](1228634 call _arrays _mt[203] _arg2[1228597]))
    unknown call_tmp[1228738] "expr temp" "maybe param" "maybe type" "temp"
    (1228741 'move' call_tmp[1228738](1228638 'call resolves' c"<" call_tmp[1228728] call_tmp[1228733]))
    unknown call_tmp[1228743] "expr temp" "maybe param" "maybe type" "temp"
    (1228746 'move' call_tmp[1228743](1228640 call _arrayCapacity _mt[203] _arg1[1228596]))
    unknown call_tmp[1228748] "expr temp" "maybe param" "maybe type" "temp"
    (1228751 'move' call_tmp[1228748](1228644 call _arrayCapacity _mt[203] _arg2[1228597]))
    unknown call_tmp[1228753] "expr temp" "maybe param" "maybe type" "temp"
    (1228756 'move' call_tmp[1228753](1228648 'call resolves' c"<" call_tmp[1228743] call_tmp[1228748]))
    unknown call_tmp[1228758] "expr temp" "maybe param" "maybe type" "temp"
    (1228761 'move' call_tmp[1228758](1228650 call _totalCapacity _mt[203] _arg1[1228596]))
    unknown call_tmp[1228763] "expr temp" "maybe param" "maybe type" "temp"
    (1228766 'move' call_tmp[1228763](1228654 call _totalCapacity _mt[203] _arg2[1228597]))
    unknown call_tmp[1228768] "expr temp" "maybe param" "maybe type" "temp"
    (1228771 'move' call_tmp[1228768](1228658 'call resolves' c"<" call_tmp[1228758] call_tmp[1228763]))
    unknown call_tmp[1228773] "expr temp" "maybe param" "maybe type" "temp"
    (1228776 'move' call_tmp[1228773](1228660 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1228596]))
    unknown call_tmp[1228778] "expr temp" "maybe param" "maybe type" "temp"
    (1228781 'move' call_tmp[1228778](1228664 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1228597]))
    unknown call_tmp[1228783] "expr temp" "maybe param" "maybe type" "temp"
    (1228786 'move' call_tmp[1228783](1228668 'call resolves' c"<" call_tmp[1228773] call_tmp[1228778]))
    unknown call_tmp[1228788] "expr temp" "maybe param" "maybe type" "temp"
    (1228791 'move' call_tmp[1228788](1228670 '&' call_tmp[1228693] call_tmp[1228708] call_tmp[1228723] call_tmp[1228738] call_tmp[1228753] call_tmp[1228768] call_tmp[1228783]))
    (1228681 'move' ret[1228676](1228680 'deref' call_tmp[1228788]))
    (1228678 return ret[1228676])
  }
  function list[231871](?).<[1228578](arg _mt[1228580]:_MT[201], arg this[1228582]:list[231871](?), arg _arg1[1228584]:list[231871](?), arg _arg2[1228585]:list[231871](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1229015]:bool[19] "RVV" "temp"
    unknown call_tmp[1229092] "expr temp" "maybe param" "maybe type" "temp"
    (1229095 'move' call_tmp[1229092](1228799 call parSafe _mt[203] _arg1[1228584]))
    unknown call_tmp[1229097] "expr temp" "maybe param" "maybe type" "temp"
    (1229100 'move' call_tmp[1229097](1228803 call parSafe _mt[203] _arg2[1228585]))
    unknown call_tmp[1229102] "expr temp" "maybe param" "maybe type" "temp"
    (1229105 'move' call_tmp[1229102](1228807 call chpl_field_lt call_tmp[1229092] call_tmp[1229097]))
    if call_tmp[1229102]
    {
      (1229020 'move' ret[1229015](1229019 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229107] "expr temp" "maybe param" "maybe type" "temp"
    (1229110 'move' call_tmp[1229107](1228813 call parSafe _mt[203] _arg1[1228584]))
    unknown call_tmp[1229112] "expr temp" "maybe param" "maybe type" "temp"
    (1229115 'move' call_tmp[1229112](1228817 call parSafe _mt[203] _arg2[1228585]))
    unknown call_tmp[1229117] "expr temp" "maybe param" "maybe type" "temp"
    (1229120 'move' call_tmp[1229117](1228821 call chpl_field_gt call_tmp[1229107] call_tmp[1229112]))
    if call_tmp[1229117]
    {
      (1229025 'move' ret[1229015](1229024 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229122] "expr temp" "maybe param" "maybe type" "temp"
    (1229125 'move' call_tmp[1229122](1228827 call _size _mt[203] _arg1[1228584]))
    unknown call_tmp[1229127] "expr temp" "maybe param" "maybe type" "temp"
    (1229130 'move' call_tmp[1229127](1228831 call _size _mt[203] _arg2[1228585]))
    unknown call_tmp[1229132] "expr temp" "maybe param" "maybe type" "temp"
    (1229135 'move' call_tmp[1229132](1228835 call chpl_field_lt call_tmp[1229122] call_tmp[1229127]))
    if call_tmp[1229132]
    {
      (1229030 'move' ret[1229015](1229029 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229137] "expr temp" "maybe param" "maybe type" "temp"
    (1229140 'move' call_tmp[1229137](1228841 call _size _mt[203] _arg1[1228584]))
    unknown call_tmp[1229142] "expr temp" "maybe param" "maybe type" "temp"
    (1229145 'move' call_tmp[1229142](1228845 call _size _mt[203] _arg2[1228585]))
    unknown call_tmp[1229147] "expr temp" "maybe param" "maybe type" "temp"
    (1229150 'move' call_tmp[1229147](1228849 call chpl_field_gt call_tmp[1229137] call_tmp[1229142]))
    if call_tmp[1229147]
    {
      (1229035 'move' ret[1229015](1229034 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229152] "expr temp" "maybe param" "maybe type" "temp"
    (1229155 'move' call_tmp[1229152](1228855 call _lock _mt[203] _arg1[1228584]))
    unknown call_tmp[1229157] "expr temp" "maybe param" "maybe type" "temp"
    (1229160 'move' call_tmp[1229157](1228859 call _lock _mt[203] _arg2[1228585]))
    unknown call_tmp[1229162] "expr temp" "maybe param" "maybe type" "temp"
    (1229165 'move' call_tmp[1229162](1228863 call chpl_field_lt call_tmp[1229152] call_tmp[1229157]))
    if call_tmp[1229162]
    {
      (1229040 'move' ret[1229015](1229039 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229167] "expr temp" "maybe param" "maybe type" "temp"
    (1229170 'move' call_tmp[1229167](1228869 call _lock _mt[203] _arg1[1228584]))
    unknown call_tmp[1229172] "expr temp" "maybe param" "maybe type" "temp"
    (1229175 'move' call_tmp[1229172](1228873 call _lock _mt[203] _arg2[1228585]))
    unknown call_tmp[1229177] "expr temp" "maybe param" "maybe type" "temp"
    (1229180 'move' call_tmp[1229177](1228877 call chpl_field_gt call_tmp[1229167] call_tmp[1229172]))
    if call_tmp[1229177]
    {
      (1229045 'move' ret[1229015](1229044 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229182] "expr temp" "maybe param" "maybe type" "temp"
    (1229185 'move' call_tmp[1229182](1228883 call _arrays _mt[203] _arg1[1228584]))
    unknown call_tmp[1229187] "expr temp" "maybe param" "maybe type" "temp"
    (1229190 'move' call_tmp[1229187](1228887 call _arrays _mt[203] _arg2[1228585]))
    unknown call_tmp[1229192] "expr temp" "maybe param" "maybe type" "temp"
    (1229195 'move' call_tmp[1229192](1228891 call chpl_field_lt call_tmp[1229182] call_tmp[1229187]))
    if call_tmp[1229192]
    {
      (1229050 'move' ret[1229015](1229049 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229197] "expr temp" "maybe param" "maybe type" "temp"
    (1229200 'move' call_tmp[1229197](1228897 call _arrays _mt[203] _arg1[1228584]))
    unknown call_tmp[1229202] "expr temp" "maybe param" "maybe type" "temp"
    (1229205 'move' call_tmp[1229202](1228901 call _arrays _mt[203] _arg2[1228585]))
    unknown call_tmp[1229207] "expr temp" "maybe param" "maybe type" "temp"
    (1229210 'move' call_tmp[1229207](1228905 call chpl_field_gt call_tmp[1229197] call_tmp[1229202]))
    if call_tmp[1229207]
    {
      (1229055 'move' ret[1229015](1229054 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229212] "expr temp" "maybe param" "maybe type" "temp"
    (1229215 'move' call_tmp[1229212](1228911 call _arrayCapacity _mt[203] _arg1[1228584]))
    unknown call_tmp[1229217] "expr temp" "maybe param" "maybe type" "temp"
    (1229220 'move' call_tmp[1229217](1228915 call _arrayCapacity _mt[203] _arg2[1228585]))
    unknown call_tmp[1229222] "expr temp" "maybe param" "maybe type" "temp"
    (1229225 'move' call_tmp[1229222](1228919 call chpl_field_lt call_tmp[1229212] call_tmp[1229217]))
    if call_tmp[1229222]
    {
      (1229060 'move' ret[1229015](1229059 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229227] "expr temp" "maybe param" "maybe type" "temp"
    (1229230 'move' call_tmp[1229227](1228925 call _arrayCapacity _mt[203] _arg1[1228584]))
    unknown call_tmp[1229232] "expr temp" "maybe param" "maybe type" "temp"
    (1229235 'move' call_tmp[1229232](1228929 call _arrayCapacity _mt[203] _arg2[1228585]))
    unknown call_tmp[1229237] "expr temp" "maybe param" "maybe type" "temp"
    (1229240 'move' call_tmp[1229237](1228933 call chpl_field_gt call_tmp[1229227] call_tmp[1229232]))
    if call_tmp[1229237]
    {
      (1229065 'move' ret[1229015](1229064 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229242] "expr temp" "maybe param" "maybe type" "temp"
    (1229245 'move' call_tmp[1229242](1228939 call _totalCapacity _mt[203] _arg1[1228584]))
    unknown call_tmp[1229247] "expr temp" "maybe param" "maybe type" "temp"
    (1229250 'move' call_tmp[1229247](1228943 call _totalCapacity _mt[203] _arg2[1228585]))
    unknown call_tmp[1229252] "expr temp" "maybe param" "maybe type" "temp"
    (1229255 'move' call_tmp[1229252](1228947 call chpl_field_lt call_tmp[1229242] call_tmp[1229247]))
    if call_tmp[1229252]
    {
      (1229070 'move' ret[1229015](1229069 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229257] "expr temp" "maybe param" "maybe type" "temp"
    (1229260 'move' call_tmp[1229257](1228953 call _totalCapacity _mt[203] _arg1[1228584]))
    unknown call_tmp[1229262] "expr temp" "maybe param" "maybe type" "temp"
    (1229265 'move' call_tmp[1229262](1228957 call _totalCapacity _mt[203] _arg2[1228585]))
    unknown call_tmp[1229267] "expr temp" "maybe param" "maybe type" "temp"
    (1229270 'move' call_tmp[1229267](1228961 call chpl_field_gt call_tmp[1229257] call_tmp[1229262]))
    if call_tmp[1229267]
    {
      (1229075 'move' ret[1229015](1229074 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229272] "expr temp" "maybe param" "maybe type" "temp"
    (1229275 'move' call_tmp[1229272](1228967 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1228584]))
    unknown call_tmp[1229277] "expr temp" "maybe param" "maybe type" "temp"
    (1229280 'move' call_tmp[1229277](1228971 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1228585]))
    unknown call_tmp[1229282] "expr temp" "maybe param" "maybe type" "temp"
    (1229285 'move' call_tmp[1229282](1228975 call chpl_field_lt call_tmp[1229272] call_tmp[1229277]))
    if call_tmp[1229282]
    {
      (1229080 'move' ret[1229015](1229079 'deref' 1))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    unknown call_tmp[1229287] "expr temp" "maybe param" "maybe type" "temp"
    (1229290 'move' call_tmp[1229287](1228981 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1228584]))
    unknown call_tmp[1229292] "expr temp" "maybe param" "maybe type" "temp"
    (1229295 'move' call_tmp[1229292](1228985 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1228585]))
    unknown call_tmp[1229297] "expr temp" "maybe param" "maybe type" "temp"
    (1229300 'move' call_tmp[1229297](1228989 call chpl_field_gt call_tmp[1229287] call_tmp[1229292]))
    if call_tmp[1229297]
    {
      (1229085 'move' ret[1229015](1229084 'deref' 0))
      gotoReturn _end_<[1229013] _end_<[1229013]
    }
    (1229090 'move' ret[1229015](1229089 'deref' 0))
    label _end_<[1229013]
    (1229017 return ret[1229015])
  }
  where {
    unknown call_tmp[1229302] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1229305 'move' call_tmp[1229302](1228588 'typeof' _arg1[1228584]))
    unknown call_tmp[1229307] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1229310 'move' call_tmp[1229307](1228590 'typeof' _arg2[1228585]))
    unknown call_tmp[1229312] "expr temp" "maybe param" "maybe type" "temp"
    (1229315 'move' call_tmp[1229312](1228592 call == call_tmp[1229302] call_tmp[1229307]))
    unknown call_tmp[1229317] "expr temp" "maybe param" "maybe type" "temp"
    (1229320 'move' call_tmp[1229317](1228793 call chpl_fields_are_comparable[1228594] _arg1[1228584] _arg2[1228585]))
    (1228797 '&' call_tmp[1229312] call_tmp[1229317])
  }
  function chpl_fields_are_comparable[1229338](arg _arg1[1229340]:list[231871](?), arg _arg2[1229341]:list[231871](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1229420]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1229427] "expr temp" "maybe param" "maybe type" "temp"
    (1229430 'move' call_tmp[1229427](1229344 call parSafe _mt[203] _arg1[1229340]))
    unknown call_tmp[1229432] "expr temp" "maybe param" "maybe type" "temp"
    (1229435 'move' call_tmp[1229432](1229348 call parSafe _mt[203] _arg2[1229341]))
    unknown call_tmp[1229437] "expr temp" "maybe param" "maybe type" "temp"
    (1229440 'move' call_tmp[1229437](1229352 'call resolves' c"<=" call_tmp[1229427] call_tmp[1229432]))
    unknown call_tmp[1229442] "expr temp" "maybe param" "maybe type" "temp"
    (1229445 'move' call_tmp[1229442](1229354 call _size _mt[203] _arg1[1229340]))
    unknown call_tmp[1229447] "expr temp" "maybe param" "maybe type" "temp"
    (1229450 'move' call_tmp[1229447](1229358 call _size _mt[203] _arg2[1229341]))
    unknown call_tmp[1229452] "expr temp" "maybe param" "maybe type" "temp"
    (1229455 'move' call_tmp[1229452](1229362 'call resolves' c"<=" call_tmp[1229442] call_tmp[1229447]))
    unknown call_tmp[1229457] "expr temp" "maybe param" "maybe type" "temp"
    (1229460 'move' call_tmp[1229457](1229364 call _lock _mt[203] _arg1[1229340]))
    unknown call_tmp[1229462] "expr temp" "maybe param" "maybe type" "temp"
    (1229465 'move' call_tmp[1229462](1229368 call _lock _mt[203] _arg2[1229341]))
    unknown call_tmp[1229467] "expr temp" "maybe param" "maybe type" "temp"
    (1229470 'move' call_tmp[1229467](1229372 'call resolves' c"<=" call_tmp[1229457] call_tmp[1229462]))
    unknown call_tmp[1229472] "expr temp" "maybe param" "maybe type" "temp"
    (1229475 'move' call_tmp[1229472](1229374 call _arrays _mt[203] _arg1[1229340]))
    unknown call_tmp[1229477] "expr temp" "maybe param" "maybe type" "temp"
    (1229480 'move' call_tmp[1229477](1229378 call _arrays _mt[203] _arg2[1229341]))
    unknown call_tmp[1229482] "expr temp" "maybe param" "maybe type" "temp"
    (1229485 'move' call_tmp[1229482](1229382 'call resolves' c"<=" call_tmp[1229472] call_tmp[1229477]))
    unknown call_tmp[1229487] "expr temp" "maybe param" "maybe type" "temp"
    (1229490 'move' call_tmp[1229487](1229384 call _arrayCapacity _mt[203] _arg1[1229340]))
    unknown call_tmp[1229492] "expr temp" "maybe param" "maybe type" "temp"
    (1229495 'move' call_tmp[1229492](1229388 call _arrayCapacity _mt[203] _arg2[1229341]))
    unknown call_tmp[1229497] "expr temp" "maybe param" "maybe type" "temp"
    (1229500 'move' call_tmp[1229497](1229392 'call resolves' c"<=" call_tmp[1229487] call_tmp[1229492]))
    unknown call_tmp[1229502] "expr temp" "maybe param" "maybe type" "temp"
    (1229505 'move' call_tmp[1229502](1229394 call _totalCapacity _mt[203] _arg1[1229340]))
    unknown call_tmp[1229507] "expr temp" "maybe param" "maybe type" "temp"
    (1229510 'move' call_tmp[1229507](1229398 call _totalCapacity _mt[203] _arg2[1229341]))
    unknown call_tmp[1229512] "expr temp" "maybe param" "maybe type" "temp"
    (1229515 'move' call_tmp[1229512](1229402 'call resolves' c"<=" call_tmp[1229502] call_tmp[1229507]))
    unknown call_tmp[1229517] "expr temp" "maybe param" "maybe type" "temp"
    (1229520 'move' call_tmp[1229517](1229404 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1229340]))
    unknown call_tmp[1229522] "expr temp" "maybe param" "maybe type" "temp"
    (1229525 'move' call_tmp[1229522](1229408 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1229341]))
    unknown call_tmp[1229527] "expr temp" "maybe param" "maybe type" "temp"
    (1229530 'move' call_tmp[1229527](1229412 'call resolves' c"<=" call_tmp[1229517] call_tmp[1229522]))
    unknown call_tmp[1229532] "expr temp" "maybe param" "maybe type" "temp"
    (1229535 'move' call_tmp[1229532](1229414 '&' call_tmp[1229437] call_tmp[1229452] call_tmp[1229467] call_tmp[1229482] call_tmp[1229497] call_tmp[1229512] call_tmp[1229527]))
    (1229425 'move' ret[1229420](1229424 'deref' call_tmp[1229532]))
    (1229422 return ret[1229420])
  }
  function list[231871](?).<=[1229322](arg _mt[1229324]:_MT[201], arg this[1229326]:list[231871](?), arg _arg1[1229328]:list[231871](?), arg _arg2[1229329]:list[231871](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1229759]:bool[19] "RVV" "temp"
    unknown call_tmp[1229836] "expr temp" "maybe param" "maybe type" "temp"
    (1229839 'move' call_tmp[1229836](1229543 call parSafe _mt[203] _arg1[1229328]))
    unknown call_tmp[1229841] "expr temp" "maybe param" "maybe type" "temp"
    (1229844 'move' call_tmp[1229841](1229547 call parSafe _mt[203] _arg2[1229329]))
    unknown call_tmp[1229846] "expr temp" "maybe param" "maybe type" "temp"
    (1229849 'move' call_tmp[1229846](1229551 call chpl_field_lt call_tmp[1229836] call_tmp[1229841]))
    if call_tmp[1229846]
    {
      (1229764 'move' ret[1229759](1229763 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229851] "expr temp" "maybe param" "maybe type" "temp"
    (1229854 'move' call_tmp[1229851](1229557 call parSafe _mt[203] _arg1[1229328]))
    unknown call_tmp[1229856] "expr temp" "maybe param" "maybe type" "temp"
    (1229859 'move' call_tmp[1229856](1229561 call parSafe _mt[203] _arg2[1229329]))
    unknown call_tmp[1229861] "expr temp" "maybe param" "maybe type" "temp"
    (1229864 'move' call_tmp[1229861](1229565 call chpl_field_gt call_tmp[1229851] call_tmp[1229856]))
    if call_tmp[1229861]
    {
      (1229769 'move' ret[1229759](1229768 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229866] "expr temp" "maybe param" "maybe type" "temp"
    (1229869 'move' call_tmp[1229866](1229571 call _size _mt[203] _arg1[1229328]))
    unknown call_tmp[1229871] "expr temp" "maybe param" "maybe type" "temp"
    (1229874 'move' call_tmp[1229871](1229575 call _size _mt[203] _arg2[1229329]))
    unknown call_tmp[1229876] "expr temp" "maybe param" "maybe type" "temp"
    (1229879 'move' call_tmp[1229876](1229579 call chpl_field_lt call_tmp[1229866] call_tmp[1229871]))
    if call_tmp[1229876]
    {
      (1229774 'move' ret[1229759](1229773 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229881] "expr temp" "maybe param" "maybe type" "temp"
    (1229884 'move' call_tmp[1229881](1229585 call _size _mt[203] _arg1[1229328]))
    unknown call_tmp[1229886] "expr temp" "maybe param" "maybe type" "temp"
    (1229889 'move' call_tmp[1229886](1229589 call _size _mt[203] _arg2[1229329]))
    unknown call_tmp[1229891] "expr temp" "maybe param" "maybe type" "temp"
    (1229894 'move' call_tmp[1229891](1229593 call chpl_field_gt call_tmp[1229881] call_tmp[1229886]))
    if call_tmp[1229891]
    {
      (1229779 'move' ret[1229759](1229778 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229896] "expr temp" "maybe param" "maybe type" "temp"
    (1229899 'move' call_tmp[1229896](1229599 call _lock _mt[203] _arg1[1229328]))
    unknown call_tmp[1229901] "expr temp" "maybe param" "maybe type" "temp"
    (1229904 'move' call_tmp[1229901](1229603 call _lock _mt[203] _arg2[1229329]))
    unknown call_tmp[1229906] "expr temp" "maybe param" "maybe type" "temp"
    (1229909 'move' call_tmp[1229906](1229607 call chpl_field_lt call_tmp[1229896] call_tmp[1229901]))
    if call_tmp[1229906]
    {
      (1229784 'move' ret[1229759](1229783 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229911] "expr temp" "maybe param" "maybe type" "temp"
    (1229914 'move' call_tmp[1229911](1229613 call _lock _mt[203] _arg1[1229328]))
    unknown call_tmp[1229916] "expr temp" "maybe param" "maybe type" "temp"
    (1229919 'move' call_tmp[1229916](1229617 call _lock _mt[203] _arg2[1229329]))
    unknown call_tmp[1229921] "expr temp" "maybe param" "maybe type" "temp"
    (1229924 'move' call_tmp[1229921](1229621 call chpl_field_gt call_tmp[1229911] call_tmp[1229916]))
    if call_tmp[1229921]
    {
      (1229789 'move' ret[1229759](1229788 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229926] "expr temp" "maybe param" "maybe type" "temp"
    (1229929 'move' call_tmp[1229926](1229627 call _arrays _mt[203] _arg1[1229328]))
    unknown call_tmp[1229931] "expr temp" "maybe param" "maybe type" "temp"
    (1229934 'move' call_tmp[1229931](1229631 call _arrays _mt[203] _arg2[1229329]))
    unknown call_tmp[1229936] "expr temp" "maybe param" "maybe type" "temp"
    (1229939 'move' call_tmp[1229936](1229635 call chpl_field_lt call_tmp[1229926] call_tmp[1229931]))
    if call_tmp[1229936]
    {
      (1229794 'move' ret[1229759](1229793 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229941] "expr temp" "maybe param" "maybe type" "temp"
    (1229944 'move' call_tmp[1229941](1229641 call _arrays _mt[203] _arg1[1229328]))
    unknown call_tmp[1229946] "expr temp" "maybe param" "maybe type" "temp"
    (1229949 'move' call_tmp[1229946](1229645 call _arrays _mt[203] _arg2[1229329]))
    unknown call_tmp[1229951] "expr temp" "maybe param" "maybe type" "temp"
    (1229954 'move' call_tmp[1229951](1229649 call chpl_field_gt call_tmp[1229941] call_tmp[1229946]))
    if call_tmp[1229951]
    {
      (1229799 'move' ret[1229759](1229798 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229956] "expr temp" "maybe param" "maybe type" "temp"
    (1229959 'move' call_tmp[1229956](1229655 call _arrayCapacity _mt[203] _arg1[1229328]))
    unknown call_tmp[1229961] "expr temp" "maybe param" "maybe type" "temp"
    (1229964 'move' call_tmp[1229961](1229659 call _arrayCapacity _mt[203] _arg2[1229329]))
    unknown call_tmp[1229966] "expr temp" "maybe param" "maybe type" "temp"
    (1229969 'move' call_tmp[1229966](1229663 call chpl_field_lt call_tmp[1229956] call_tmp[1229961]))
    if call_tmp[1229966]
    {
      (1229804 'move' ret[1229759](1229803 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229971] "expr temp" "maybe param" "maybe type" "temp"
    (1229974 'move' call_tmp[1229971](1229669 call _arrayCapacity _mt[203] _arg1[1229328]))
    unknown call_tmp[1229976] "expr temp" "maybe param" "maybe type" "temp"
    (1229979 'move' call_tmp[1229976](1229673 call _arrayCapacity _mt[203] _arg2[1229329]))
    unknown call_tmp[1229981] "expr temp" "maybe param" "maybe type" "temp"
    (1229984 'move' call_tmp[1229981](1229677 call chpl_field_gt call_tmp[1229971] call_tmp[1229976]))
    if call_tmp[1229981]
    {
      (1229809 'move' ret[1229759](1229808 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1229986] "expr temp" "maybe param" "maybe type" "temp"
    (1229989 'move' call_tmp[1229986](1229683 call _totalCapacity _mt[203] _arg1[1229328]))
    unknown call_tmp[1229991] "expr temp" "maybe param" "maybe type" "temp"
    (1229994 'move' call_tmp[1229991](1229687 call _totalCapacity _mt[203] _arg2[1229329]))
    unknown call_tmp[1229996] "expr temp" "maybe param" "maybe type" "temp"
    (1229999 'move' call_tmp[1229996](1229691 call chpl_field_lt call_tmp[1229986] call_tmp[1229991]))
    if call_tmp[1229996]
    {
      (1229814 'move' ret[1229759](1229813 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1230001] "expr temp" "maybe param" "maybe type" "temp"
    (1230004 'move' call_tmp[1230001](1229697 call _totalCapacity _mt[203] _arg1[1229328]))
    unknown call_tmp[1230006] "expr temp" "maybe param" "maybe type" "temp"
    (1230009 'move' call_tmp[1230006](1229701 call _totalCapacity _mt[203] _arg2[1229329]))
    unknown call_tmp[1230011] "expr temp" "maybe param" "maybe type" "temp"
    (1230014 'move' call_tmp[1230011](1229705 call chpl_field_gt call_tmp[1230001] call_tmp[1230006]))
    if call_tmp[1230011]
    {
      (1229819 'move' ret[1229759](1229818 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1230016] "expr temp" "maybe param" "maybe type" "temp"
    (1230019 'move' call_tmp[1230016](1229711 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1229328]))
    unknown call_tmp[1230021] "expr temp" "maybe param" "maybe type" "temp"
    (1230024 'move' call_tmp[1230021](1229715 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1229329]))
    unknown call_tmp[1230026] "expr temp" "maybe param" "maybe type" "temp"
    (1230029 'move' call_tmp[1230026](1229719 call chpl_field_lt call_tmp[1230016] call_tmp[1230021]))
    if call_tmp[1230026]
    {
      (1229824 'move' ret[1229759](1229823 'deref' 1))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    unknown call_tmp[1230031] "expr temp" "maybe param" "maybe type" "temp"
    (1230034 'move' call_tmp[1230031](1229725 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1229328]))
    unknown call_tmp[1230036] "expr temp" "maybe param" "maybe type" "temp"
    (1230039 'move' call_tmp[1230036](1229729 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1229329]))
    unknown call_tmp[1230041] "expr temp" "maybe param" "maybe type" "temp"
    (1230044 'move' call_tmp[1230041](1229733 call chpl_field_gt call_tmp[1230031] call_tmp[1230036]))
    if call_tmp[1230041]
    {
      (1229829 'move' ret[1229759](1229828 'deref' 0))
      gotoReturn _end_<=[1229757] _end_<=[1229757]
    }
    (1229834 'move' ret[1229759](1229833 'deref' 1))
    label _end_<=[1229757]
    (1229761 return ret[1229759])
  }
  where {
    unknown call_tmp[1230046] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1230049 'move' call_tmp[1230046](1229332 'typeof' _arg1[1229328]))
    unknown call_tmp[1230051] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1230054 'move' call_tmp[1230051](1229334 'typeof' _arg2[1229329]))
    unknown call_tmp[1230056] "expr temp" "maybe param" "maybe type" "temp"
    (1230059 'move' call_tmp[1230056](1229336 call == call_tmp[1230046] call_tmp[1230051]))
    unknown call_tmp[1230061] "expr temp" "maybe param" "maybe type" "temp"
    (1230064 'move' call_tmp[1230061](1229537 call chpl_fields_are_comparable[1229338] _arg1[1229328] _arg2[1229329]))
    (1229541 '&' call_tmp[1230056] call_tmp[1230061])
  }
  function chpl_fields_are_comparable[1230082](arg _arg1[1230084]:list[231871](?), arg _arg2[1230085]:list[231871](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1230164]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1230171] "expr temp" "maybe param" "maybe type" "temp"
    (1230174 'move' call_tmp[1230171](1230088 call parSafe _mt[203] _arg1[1230084]))
    unknown call_tmp[1230176] "expr temp" "maybe param" "maybe type" "temp"
    (1230179 'move' call_tmp[1230176](1230092 call parSafe _mt[203] _arg2[1230085]))
    unknown call_tmp[1230181] "expr temp" "maybe param" "maybe type" "temp"
    (1230184 'move' call_tmp[1230181](1230096 'call resolves' c">" call_tmp[1230171] call_tmp[1230176]))
    unknown call_tmp[1230186] "expr temp" "maybe param" "maybe type" "temp"
    (1230189 'move' call_tmp[1230186](1230098 call _size _mt[203] _arg1[1230084]))
    unknown call_tmp[1230191] "expr temp" "maybe param" "maybe type" "temp"
    (1230194 'move' call_tmp[1230191](1230102 call _size _mt[203] _arg2[1230085]))
    unknown call_tmp[1230196] "expr temp" "maybe param" "maybe type" "temp"
    (1230199 'move' call_tmp[1230196](1230106 'call resolves' c">" call_tmp[1230186] call_tmp[1230191]))
    unknown call_tmp[1230201] "expr temp" "maybe param" "maybe type" "temp"
    (1230204 'move' call_tmp[1230201](1230108 call _lock _mt[203] _arg1[1230084]))
    unknown call_tmp[1230206] "expr temp" "maybe param" "maybe type" "temp"
    (1230209 'move' call_tmp[1230206](1230112 call _lock _mt[203] _arg2[1230085]))
    unknown call_tmp[1230211] "expr temp" "maybe param" "maybe type" "temp"
    (1230214 'move' call_tmp[1230211](1230116 'call resolves' c">" call_tmp[1230201] call_tmp[1230206]))
    unknown call_tmp[1230216] "expr temp" "maybe param" "maybe type" "temp"
    (1230219 'move' call_tmp[1230216](1230118 call _arrays _mt[203] _arg1[1230084]))
    unknown call_tmp[1230221] "expr temp" "maybe param" "maybe type" "temp"
    (1230224 'move' call_tmp[1230221](1230122 call _arrays _mt[203] _arg2[1230085]))
    unknown call_tmp[1230226] "expr temp" "maybe param" "maybe type" "temp"
    (1230229 'move' call_tmp[1230226](1230126 'call resolves' c">" call_tmp[1230216] call_tmp[1230221]))
    unknown call_tmp[1230231] "expr temp" "maybe param" "maybe type" "temp"
    (1230234 'move' call_tmp[1230231](1230128 call _arrayCapacity _mt[203] _arg1[1230084]))
    unknown call_tmp[1230236] "expr temp" "maybe param" "maybe type" "temp"
    (1230239 'move' call_tmp[1230236](1230132 call _arrayCapacity _mt[203] _arg2[1230085]))
    unknown call_tmp[1230241] "expr temp" "maybe param" "maybe type" "temp"
    (1230244 'move' call_tmp[1230241](1230136 'call resolves' c">" call_tmp[1230231] call_tmp[1230236]))
    unknown call_tmp[1230246] "expr temp" "maybe param" "maybe type" "temp"
    (1230249 'move' call_tmp[1230246](1230138 call _totalCapacity _mt[203] _arg1[1230084]))
    unknown call_tmp[1230251] "expr temp" "maybe param" "maybe type" "temp"
    (1230254 'move' call_tmp[1230251](1230142 call _totalCapacity _mt[203] _arg2[1230085]))
    unknown call_tmp[1230256] "expr temp" "maybe param" "maybe type" "temp"
    (1230259 'move' call_tmp[1230256](1230146 'call resolves' c">" call_tmp[1230246] call_tmp[1230251]))
    unknown call_tmp[1230261] "expr temp" "maybe param" "maybe type" "temp"
    (1230264 'move' call_tmp[1230261](1230148 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1230084]))
    unknown call_tmp[1230266] "expr temp" "maybe param" "maybe type" "temp"
    (1230269 'move' call_tmp[1230266](1230152 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1230085]))
    unknown call_tmp[1230271] "expr temp" "maybe param" "maybe type" "temp"
    (1230274 'move' call_tmp[1230271](1230156 'call resolves' c">" call_tmp[1230261] call_tmp[1230266]))
    unknown call_tmp[1230276] "expr temp" "maybe param" "maybe type" "temp"
    (1230279 'move' call_tmp[1230276](1230158 '&' call_tmp[1230181] call_tmp[1230196] call_tmp[1230211] call_tmp[1230226] call_tmp[1230241] call_tmp[1230256] call_tmp[1230271]))
    (1230169 'move' ret[1230164](1230168 'deref' call_tmp[1230276]))
    (1230166 return ret[1230164])
  }
  function list[231871](?).>[1230066](arg _mt[1230068]:_MT[201], arg this[1230070]:list[231871](?), arg _arg1[1230072]:list[231871](?), arg _arg2[1230073]:list[231871](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1230503]:bool[19] "RVV" "temp"
    unknown call_tmp[1230580] "expr temp" "maybe param" "maybe type" "temp"
    (1230583 'move' call_tmp[1230580](1230287 call parSafe _mt[203] _arg1[1230072]))
    unknown call_tmp[1230585] "expr temp" "maybe param" "maybe type" "temp"
    (1230588 'move' call_tmp[1230585](1230291 call parSafe _mt[203] _arg2[1230073]))
    unknown call_tmp[1230590] "expr temp" "maybe param" "maybe type" "temp"
    (1230593 'move' call_tmp[1230590](1230295 call chpl_field_gt call_tmp[1230580] call_tmp[1230585]))
    if call_tmp[1230590]
    {
      (1230508 'move' ret[1230503](1230507 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230595] "expr temp" "maybe param" "maybe type" "temp"
    (1230598 'move' call_tmp[1230595](1230301 call parSafe _mt[203] _arg1[1230072]))
    unknown call_tmp[1230600] "expr temp" "maybe param" "maybe type" "temp"
    (1230603 'move' call_tmp[1230600](1230305 call parSafe _mt[203] _arg2[1230073]))
    unknown call_tmp[1230605] "expr temp" "maybe param" "maybe type" "temp"
    (1230608 'move' call_tmp[1230605](1230309 call chpl_field_lt call_tmp[1230595] call_tmp[1230600]))
    if call_tmp[1230605]
    {
      (1230513 'move' ret[1230503](1230512 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230610] "expr temp" "maybe param" "maybe type" "temp"
    (1230613 'move' call_tmp[1230610](1230315 call _size _mt[203] _arg1[1230072]))
    unknown call_tmp[1230615] "expr temp" "maybe param" "maybe type" "temp"
    (1230618 'move' call_tmp[1230615](1230319 call _size _mt[203] _arg2[1230073]))
    unknown call_tmp[1230620] "expr temp" "maybe param" "maybe type" "temp"
    (1230623 'move' call_tmp[1230620](1230323 call chpl_field_gt call_tmp[1230610] call_tmp[1230615]))
    if call_tmp[1230620]
    {
      (1230518 'move' ret[1230503](1230517 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230625] "expr temp" "maybe param" "maybe type" "temp"
    (1230628 'move' call_tmp[1230625](1230329 call _size _mt[203] _arg1[1230072]))
    unknown call_tmp[1230630] "expr temp" "maybe param" "maybe type" "temp"
    (1230633 'move' call_tmp[1230630](1230333 call _size _mt[203] _arg2[1230073]))
    unknown call_tmp[1230635] "expr temp" "maybe param" "maybe type" "temp"
    (1230638 'move' call_tmp[1230635](1230337 call chpl_field_lt call_tmp[1230625] call_tmp[1230630]))
    if call_tmp[1230635]
    {
      (1230523 'move' ret[1230503](1230522 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230640] "expr temp" "maybe param" "maybe type" "temp"
    (1230643 'move' call_tmp[1230640](1230343 call _lock _mt[203] _arg1[1230072]))
    unknown call_tmp[1230645] "expr temp" "maybe param" "maybe type" "temp"
    (1230648 'move' call_tmp[1230645](1230347 call _lock _mt[203] _arg2[1230073]))
    unknown call_tmp[1230650] "expr temp" "maybe param" "maybe type" "temp"
    (1230653 'move' call_tmp[1230650](1230351 call chpl_field_gt call_tmp[1230640] call_tmp[1230645]))
    if call_tmp[1230650]
    {
      (1230528 'move' ret[1230503](1230527 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230655] "expr temp" "maybe param" "maybe type" "temp"
    (1230658 'move' call_tmp[1230655](1230357 call _lock _mt[203] _arg1[1230072]))
    unknown call_tmp[1230660] "expr temp" "maybe param" "maybe type" "temp"
    (1230663 'move' call_tmp[1230660](1230361 call _lock _mt[203] _arg2[1230073]))
    unknown call_tmp[1230665] "expr temp" "maybe param" "maybe type" "temp"
    (1230668 'move' call_tmp[1230665](1230365 call chpl_field_lt call_tmp[1230655] call_tmp[1230660]))
    if call_tmp[1230665]
    {
      (1230533 'move' ret[1230503](1230532 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230670] "expr temp" "maybe param" "maybe type" "temp"
    (1230673 'move' call_tmp[1230670](1230371 call _arrays _mt[203] _arg1[1230072]))
    unknown call_tmp[1230675] "expr temp" "maybe param" "maybe type" "temp"
    (1230678 'move' call_tmp[1230675](1230375 call _arrays _mt[203] _arg2[1230073]))
    unknown call_tmp[1230680] "expr temp" "maybe param" "maybe type" "temp"
    (1230683 'move' call_tmp[1230680](1230379 call chpl_field_gt call_tmp[1230670] call_tmp[1230675]))
    if call_tmp[1230680]
    {
      (1230538 'move' ret[1230503](1230537 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230685] "expr temp" "maybe param" "maybe type" "temp"
    (1230688 'move' call_tmp[1230685](1230385 call _arrays _mt[203] _arg1[1230072]))
    unknown call_tmp[1230690] "expr temp" "maybe param" "maybe type" "temp"
    (1230693 'move' call_tmp[1230690](1230389 call _arrays _mt[203] _arg2[1230073]))
    unknown call_tmp[1230695] "expr temp" "maybe param" "maybe type" "temp"
    (1230698 'move' call_tmp[1230695](1230393 call chpl_field_lt call_tmp[1230685] call_tmp[1230690]))
    if call_tmp[1230695]
    {
      (1230543 'move' ret[1230503](1230542 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230700] "expr temp" "maybe param" "maybe type" "temp"
    (1230703 'move' call_tmp[1230700](1230399 call _arrayCapacity _mt[203] _arg1[1230072]))
    unknown call_tmp[1230705] "expr temp" "maybe param" "maybe type" "temp"
    (1230708 'move' call_tmp[1230705](1230403 call _arrayCapacity _mt[203] _arg2[1230073]))
    unknown call_tmp[1230710] "expr temp" "maybe param" "maybe type" "temp"
    (1230713 'move' call_tmp[1230710](1230407 call chpl_field_gt call_tmp[1230700] call_tmp[1230705]))
    if call_tmp[1230710]
    {
      (1230548 'move' ret[1230503](1230547 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230715] "expr temp" "maybe param" "maybe type" "temp"
    (1230718 'move' call_tmp[1230715](1230413 call _arrayCapacity _mt[203] _arg1[1230072]))
    unknown call_tmp[1230720] "expr temp" "maybe param" "maybe type" "temp"
    (1230723 'move' call_tmp[1230720](1230417 call _arrayCapacity _mt[203] _arg2[1230073]))
    unknown call_tmp[1230725] "expr temp" "maybe param" "maybe type" "temp"
    (1230728 'move' call_tmp[1230725](1230421 call chpl_field_lt call_tmp[1230715] call_tmp[1230720]))
    if call_tmp[1230725]
    {
      (1230553 'move' ret[1230503](1230552 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230730] "expr temp" "maybe param" "maybe type" "temp"
    (1230733 'move' call_tmp[1230730](1230427 call _totalCapacity _mt[203] _arg1[1230072]))
    unknown call_tmp[1230735] "expr temp" "maybe param" "maybe type" "temp"
    (1230738 'move' call_tmp[1230735](1230431 call _totalCapacity _mt[203] _arg2[1230073]))
    unknown call_tmp[1230740] "expr temp" "maybe param" "maybe type" "temp"
    (1230743 'move' call_tmp[1230740](1230435 call chpl_field_gt call_tmp[1230730] call_tmp[1230735]))
    if call_tmp[1230740]
    {
      (1230558 'move' ret[1230503](1230557 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230745] "expr temp" "maybe param" "maybe type" "temp"
    (1230748 'move' call_tmp[1230745](1230441 call _totalCapacity _mt[203] _arg1[1230072]))
    unknown call_tmp[1230750] "expr temp" "maybe param" "maybe type" "temp"
    (1230753 'move' call_tmp[1230750](1230445 call _totalCapacity _mt[203] _arg2[1230073]))
    unknown call_tmp[1230755] "expr temp" "maybe param" "maybe type" "temp"
    (1230758 'move' call_tmp[1230755](1230449 call chpl_field_lt call_tmp[1230745] call_tmp[1230750]))
    if call_tmp[1230755]
    {
      (1230563 'move' ret[1230503](1230562 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230760] "expr temp" "maybe param" "maybe type" "temp"
    (1230763 'move' call_tmp[1230760](1230455 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1230072]))
    unknown call_tmp[1230765] "expr temp" "maybe param" "maybe type" "temp"
    (1230768 'move' call_tmp[1230765](1230459 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1230073]))
    unknown call_tmp[1230770] "expr temp" "maybe param" "maybe type" "temp"
    (1230773 'move' call_tmp[1230770](1230463 call chpl_field_gt call_tmp[1230760] call_tmp[1230765]))
    if call_tmp[1230770]
    {
      (1230568 'move' ret[1230503](1230567 'deref' 1))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    unknown call_tmp[1230775] "expr temp" "maybe param" "maybe type" "temp"
    (1230778 'move' call_tmp[1230775](1230469 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1230072]))
    unknown call_tmp[1230780] "expr temp" "maybe param" "maybe type" "temp"
    (1230783 'move' call_tmp[1230780](1230473 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1230073]))
    unknown call_tmp[1230785] "expr temp" "maybe param" "maybe type" "temp"
    (1230788 'move' call_tmp[1230785](1230477 call chpl_field_lt call_tmp[1230775] call_tmp[1230780]))
    if call_tmp[1230785]
    {
      (1230573 'move' ret[1230503](1230572 'deref' 0))
      gotoReturn _end_>[1230501] _end_>[1230501]
    }
    (1230578 'move' ret[1230503](1230577 'deref' 0))
    label _end_>[1230501]
    (1230505 return ret[1230503])
  }
  where {
    unknown call_tmp[1230790] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1230793 'move' call_tmp[1230790](1230076 'typeof' _arg1[1230072]))
    unknown call_tmp[1230795] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1230798 'move' call_tmp[1230795](1230078 'typeof' _arg2[1230073]))
    unknown call_tmp[1230800] "expr temp" "maybe param" "maybe type" "temp"
    (1230803 'move' call_tmp[1230800](1230080 call == call_tmp[1230790] call_tmp[1230795]))
    unknown call_tmp[1230805] "expr temp" "maybe param" "maybe type" "temp"
    (1230808 'move' call_tmp[1230805](1230281 call chpl_fields_are_comparable[1230082] _arg1[1230072] _arg2[1230073]))
    (1230285 '&' call_tmp[1230800] call_tmp[1230805])
  }
  function chpl_fields_are_comparable[1230826](arg _arg1[1230828]:list[231871](?), arg _arg2[1230829]:list[231871](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1230908]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1230915] "expr temp" "maybe param" "maybe type" "temp"
    (1230918 'move' call_tmp[1230915](1230832 call parSafe _mt[203] _arg1[1230828]))
    unknown call_tmp[1230920] "expr temp" "maybe param" "maybe type" "temp"
    (1230923 'move' call_tmp[1230920](1230836 call parSafe _mt[203] _arg2[1230829]))
    unknown call_tmp[1230925] "expr temp" "maybe param" "maybe type" "temp"
    (1230928 'move' call_tmp[1230925](1230840 'call resolves' c">=" call_tmp[1230915] call_tmp[1230920]))
    unknown call_tmp[1230930] "expr temp" "maybe param" "maybe type" "temp"
    (1230933 'move' call_tmp[1230930](1230842 call _size _mt[203] _arg1[1230828]))
    unknown call_tmp[1230935] "expr temp" "maybe param" "maybe type" "temp"
    (1230938 'move' call_tmp[1230935](1230846 call _size _mt[203] _arg2[1230829]))
    unknown call_tmp[1230940] "expr temp" "maybe param" "maybe type" "temp"
    (1230943 'move' call_tmp[1230940](1230850 'call resolves' c">=" call_tmp[1230930] call_tmp[1230935]))
    unknown call_tmp[1230945] "expr temp" "maybe param" "maybe type" "temp"
    (1230948 'move' call_tmp[1230945](1230852 call _lock _mt[203] _arg1[1230828]))
    unknown call_tmp[1230950] "expr temp" "maybe param" "maybe type" "temp"
    (1230953 'move' call_tmp[1230950](1230856 call _lock _mt[203] _arg2[1230829]))
    unknown call_tmp[1230955] "expr temp" "maybe param" "maybe type" "temp"
    (1230958 'move' call_tmp[1230955](1230860 'call resolves' c">=" call_tmp[1230945] call_tmp[1230950]))
    unknown call_tmp[1230960] "expr temp" "maybe param" "maybe type" "temp"
    (1230963 'move' call_tmp[1230960](1230862 call _arrays _mt[203] _arg1[1230828]))
    unknown call_tmp[1230965] "expr temp" "maybe param" "maybe type" "temp"
    (1230968 'move' call_tmp[1230965](1230866 call _arrays _mt[203] _arg2[1230829]))
    unknown call_tmp[1230970] "expr temp" "maybe param" "maybe type" "temp"
    (1230973 'move' call_tmp[1230970](1230870 'call resolves' c">=" call_tmp[1230960] call_tmp[1230965]))
    unknown call_tmp[1230975] "expr temp" "maybe param" "maybe type" "temp"
    (1230978 'move' call_tmp[1230975](1230872 call _arrayCapacity _mt[203] _arg1[1230828]))
    unknown call_tmp[1230980] "expr temp" "maybe param" "maybe type" "temp"
    (1230983 'move' call_tmp[1230980](1230876 call _arrayCapacity _mt[203] _arg2[1230829]))
    unknown call_tmp[1230985] "expr temp" "maybe param" "maybe type" "temp"
    (1230988 'move' call_tmp[1230985](1230880 'call resolves' c">=" call_tmp[1230975] call_tmp[1230980]))
    unknown call_tmp[1230990] "expr temp" "maybe param" "maybe type" "temp"
    (1230993 'move' call_tmp[1230990](1230882 call _totalCapacity _mt[203] _arg1[1230828]))
    unknown call_tmp[1230995] "expr temp" "maybe param" "maybe type" "temp"
    (1230998 'move' call_tmp[1230995](1230886 call _totalCapacity _mt[203] _arg2[1230829]))
    unknown call_tmp[1231000] "expr temp" "maybe param" "maybe type" "temp"
    (1231003 'move' call_tmp[1231000](1230890 'call resolves' c">=" call_tmp[1230990] call_tmp[1230995]))
    unknown call_tmp[1231005] "expr temp" "maybe param" "maybe type" "temp"
    (1231008 'move' call_tmp[1231005](1230892 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1230828]))
    unknown call_tmp[1231010] "expr temp" "maybe param" "maybe type" "temp"
    (1231013 'move' call_tmp[1231010](1230896 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1230829]))
    unknown call_tmp[1231015] "expr temp" "maybe param" "maybe type" "temp"
    (1231018 'move' call_tmp[1231015](1230900 'call resolves' c">=" call_tmp[1231005] call_tmp[1231010]))
    unknown call_tmp[1231020] "expr temp" "maybe param" "maybe type" "temp"
    (1231023 'move' call_tmp[1231020](1230902 '&' call_tmp[1230925] call_tmp[1230940] call_tmp[1230955] call_tmp[1230970] call_tmp[1230985] call_tmp[1231000] call_tmp[1231015]))
    (1230913 'move' ret[1230908](1230912 'deref' call_tmp[1231020]))
    (1230910 return ret[1230908])
  }
  function list[231871](?).>=[1230810](arg _mt[1230812]:_MT[201], arg this[1230814]:list[231871](?), arg _arg1[1230816]:list[231871](?), arg _arg2[1230817]:list[231871](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1231247]:bool[19] "RVV" "temp"
    unknown call_tmp[1231324] "expr temp" "maybe param" "maybe type" "temp"
    (1231327 'move' call_tmp[1231324](1231031 call parSafe _mt[203] _arg1[1230816]))
    unknown call_tmp[1231329] "expr temp" "maybe param" "maybe type" "temp"
    (1231332 'move' call_tmp[1231329](1231035 call parSafe _mt[203] _arg2[1230817]))
    unknown call_tmp[1231334] "expr temp" "maybe param" "maybe type" "temp"
    (1231337 'move' call_tmp[1231334](1231039 call chpl_field_gt call_tmp[1231324] call_tmp[1231329]))
    if call_tmp[1231334]
    {
      (1231252 'move' ret[1231247](1231251 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231339] "expr temp" "maybe param" "maybe type" "temp"
    (1231342 'move' call_tmp[1231339](1231045 call parSafe _mt[203] _arg1[1230816]))
    unknown call_tmp[1231344] "expr temp" "maybe param" "maybe type" "temp"
    (1231347 'move' call_tmp[1231344](1231049 call parSafe _mt[203] _arg2[1230817]))
    unknown call_tmp[1231349] "expr temp" "maybe param" "maybe type" "temp"
    (1231352 'move' call_tmp[1231349](1231053 call chpl_field_lt call_tmp[1231339] call_tmp[1231344]))
    if call_tmp[1231349]
    {
      (1231257 'move' ret[1231247](1231256 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231354] "expr temp" "maybe param" "maybe type" "temp"
    (1231357 'move' call_tmp[1231354](1231059 call _size _mt[203] _arg1[1230816]))
    unknown call_tmp[1231359] "expr temp" "maybe param" "maybe type" "temp"
    (1231362 'move' call_tmp[1231359](1231063 call _size _mt[203] _arg2[1230817]))
    unknown call_tmp[1231364] "expr temp" "maybe param" "maybe type" "temp"
    (1231367 'move' call_tmp[1231364](1231067 call chpl_field_gt call_tmp[1231354] call_tmp[1231359]))
    if call_tmp[1231364]
    {
      (1231262 'move' ret[1231247](1231261 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231369] "expr temp" "maybe param" "maybe type" "temp"
    (1231372 'move' call_tmp[1231369](1231073 call _size _mt[203] _arg1[1230816]))
    unknown call_tmp[1231374] "expr temp" "maybe param" "maybe type" "temp"
    (1231377 'move' call_tmp[1231374](1231077 call _size _mt[203] _arg2[1230817]))
    unknown call_tmp[1231379] "expr temp" "maybe param" "maybe type" "temp"
    (1231382 'move' call_tmp[1231379](1231081 call chpl_field_lt call_tmp[1231369] call_tmp[1231374]))
    if call_tmp[1231379]
    {
      (1231267 'move' ret[1231247](1231266 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231384] "expr temp" "maybe param" "maybe type" "temp"
    (1231387 'move' call_tmp[1231384](1231087 call _lock _mt[203] _arg1[1230816]))
    unknown call_tmp[1231389] "expr temp" "maybe param" "maybe type" "temp"
    (1231392 'move' call_tmp[1231389](1231091 call _lock _mt[203] _arg2[1230817]))
    unknown call_tmp[1231394] "expr temp" "maybe param" "maybe type" "temp"
    (1231397 'move' call_tmp[1231394](1231095 call chpl_field_gt call_tmp[1231384] call_tmp[1231389]))
    if call_tmp[1231394]
    {
      (1231272 'move' ret[1231247](1231271 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231399] "expr temp" "maybe param" "maybe type" "temp"
    (1231402 'move' call_tmp[1231399](1231101 call _lock _mt[203] _arg1[1230816]))
    unknown call_tmp[1231404] "expr temp" "maybe param" "maybe type" "temp"
    (1231407 'move' call_tmp[1231404](1231105 call _lock _mt[203] _arg2[1230817]))
    unknown call_tmp[1231409] "expr temp" "maybe param" "maybe type" "temp"
    (1231412 'move' call_tmp[1231409](1231109 call chpl_field_lt call_tmp[1231399] call_tmp[1231404]))
    if call_tmp[1231409]
    {
      (1231277 'move' ret[1231247](1231276 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231414] "expr temp" "maybe param" "maybe type" "temp"
    (1231417 'move' call_tmp[1231414](1231115 call _arrays _mt[203] _arg1[1230816]))
    unknown call_tmp[1231419] "expr temp" "maybe param" "maybe type" "temp"
    (1231422 'move' call_tmp[1231419](1231119 call _arrays _mt[203] _arg2[1230817]))
    unknown call_tmp[1231424] "expr temp" "maybe param" "maybe type" "temp"
    (1231427 'move' call_tmp[1231424](1231123 call chpl_field_gt call_tmp[1231414] call_tmp[1231419]))
    if call_tmp[1231424]
    {
      (1231282 'move' ret[1231247](1231281 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231429] "expr temp" "maybe param" "maybe type" "temp"
    (1231432 'move' call_tmp[1231429](1231129 call _arrays _mt[203] _arg1[1230816]))
    unknown call_tmp[1231434] "expr temp" "maybe param" "maybe type" "temp"
    (1231437 'move' call_tmp[1231434](1231133 call _arrays _mt[203] _arg2[1230817]))
    unknown call_tmp[1231439] "expr temp" "maybe param" "maybe type" "temp"
    (1231442 'move' call_tmp[1231439](1231137 call chpl_field_lt call_tmp[1231429] call_tmp[1231434]))
    if call_tmp[1231439]
    {
      (1231287 'move' ret[1231247](1231286 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231444] "expr temp" "maybe param" "maybe type" "temp"
    (1231447 'move' call_tmp[1231444](1231143 call _arrayCapacity _mt[203] _arg1[1230816]))
    unknown call_tmp[1231449] "expr temp" "maybe param" "maybe type" "temp"
    (1231452 'move' call_tmp[1231449](1231147 call _arrayCapacity _mt[203] _arg2[1230817]))
    unknown call_tmp[1231454] "expr temp" "maybe param" "maybe type" "temp"
    (1231457 'move' call_tmp[1231454](1231151 call chpl_field_gt call_tmp[1231444] call_tmp[1231449]))
    if call_tmp[1231454]
    {
      (1231292 'move' ret[1231247](1231291 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231459] "expr temp" "maybe param" "maybe type" "temp"
    (1231462 'move' call_tmp[1231459](1231157 call _arrayCapacity _mt[203] _arg1[1230816]))
    unknown call_tmp[1231464] "expr temp" "maybe param" "maybe type" "temp"
    (1231467 'move' call_tmp[1231464](1231161 call _arrayCapacity _mt[203] _arg2[1230817]))
    unknown call_tmp[1231469] "expr temp" "maybe param" "maybe type" "temp"
    (1231472 'move' call_tmp[1231469](1231165 call chpl_field_lt call_tmp[1231459] call_tmp[1231464]))
    if call_tmp[1231469]
    {
      (1231297 'move' ret[1231247](1231296 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231474] "expr temp" "maybe param" "maybe type" "temp"
    (1231477 'move' call_tmp[1231474](1231171 call _totalCapacity _mt[203] _arg1[1230816]))
    unknown call_tmp[1231479] "expr temp" "maybe param" "maybe type" "temp"
    (1231482 'move' call_tmp[1231479](1231175 call _totalCapacity _mt[203] _arg2[1230817]))
    unknown call_tmp[1231484] "expr temp" "maybe param" "maybe type" "temp"
    (1231487 'move' call_tmp[1231484](1231179 call chpl_field_gt call_tmp[1231474] call_tmp[1231479]))
    if call_tmp[1231484]
    {
      (1231302 'move' ret[1231247](1231301 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231489] "expr temp" "maybe param" "maybe type" "temp"
    (1231492 'move' call_tmp[1231489](1231185 call _totalCapacity _mt[203] _arg1[1230816]))
    unknown call_tmp[1231494] "expr temp" "maybe param" "maybe type" "temp"
    (1231497 'move' call_tmp[1231494](1231189 call _totalCapacity _mt[203] _arg2[1230817]))
    unknown call_tmp[1231499] "expr temp" "maybe param" "maybe type" "temp"
    (1231502 'move' call_tmp[1231499](1231193 call chpl_field_lt call_tmp[1231489] call_tmp[1231494]))
    if call_tmp[1231499]
    {
      (1231307 'move' ret[1231247](1231306 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231504] "expr temp" "maybe param" "maybe type" "temp"
    (1231507 'move' call_tmp[1231504](1231199 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1230816]))
    unknown call_tmp[1231509] "expr temp" "maybe param" "maybe type" "temp"
    (1231512 'move' call_tmp[1231509](1231203 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1230817]))
    unknown call_tmp[1231514] "expr temp" "maybe param" "maybe type" "temp"
    (1231517 'move' call_tmp[1231514](1231207 call chpl_field_gt call_tmp[1231504] call_tmp[1231509]))
    if call_tmp[1231514]
    {
      (1231312 'move' ret[1231247](1231311 'deref' 1))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    unknown call_tmp[1231519] "expr temp" "maybe param" "maybe type" "temp"
    (1231522 'move' call_tmp[1231519](1231213 call _dummyFieldToForceBorrowChecking _mt[203] _arg1[1230816]))
    unknown call_tmp[1231524] "expr temp" "maybe param" "maybe type" "temp"
    (1231527 'move' call_tmp[1231524](1231217 call _dummyFieldToForceBorrowChecking _mt[203] _arg2[1230817]))
    unknown call_tmp[1231529] "expr temp" "maybe param" "maybe type" "temp"
    (1231532 'move' call_tmp[1231529](1231221 call chpl_field_lt call_tmp[1231519] call_tmp[1231524]))
    if call_tmp[1231529]
    {
      (1231317 'move' ret[1231247](1231316 'deref' 0))
      gotoReturn _end_>=[1231245] _end_>=[1231245]
    }
    (1231322 'move' ret[1231247](1231321 'deref' 1))
    label _end_>=[1231245]
    (1231249 return ret[1231247])
  }
  where {
    unknown call_tmp[1231534] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1231537 'move' call_tmp[1231534](1230820 'typeof' _arg1[1230816]))
    unknown call_tmp[1231539] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1231542 'move' call_tmp[1231539](1230822 'typeof' _arg2[1230817]))
    unknown call_tmp[1231544] "expr temp" "maybe param" "maybe type" "temp"
    (1231547 'move' call_tmp[1231544](1230824 call == call_tmp[1231534] call_tmp[1231539]))
    unknown call_tmp[1231549] "expr temp" "maybe param" "maybe type" "temp"
    (1231552 'move' call_tmp[1231549](1231025 call chpl_fields_are_comparable[1230826] _arg1[1230816] _arg2[1230817]))
    (1231029 '&' call_tmp[1231544] call_tmp[1231549])
  }
  type list[231871](?) unknown eltType[226047] "type variable" unknown parSafe[226050] "param" "@unstable" 0 val _size[226055]:int(64)[10] 0 unknown _lock[226060](226066 IfExpr  parSafe[226050] then
  { scopeless
    (1000383 'new' _LockWrapper[445043](?))
  } else
  { scopeless
    none[48]
  } ) unknown _arrays[226072] nil[32](226074 call _ddata[67573](?)(226076 call _ddata[67573](?) eltType[226047])) val _arrayCapacity[226082]:int(64)[10] 0 val _totalCapacity[226087]:int(64)[10] 0 unknown _dummyFieldToForceBorrowChecking[226092](226094 call _dummyFieldType eltType[226047])
  function list[231871](?).=[231873](arg _mt[231894]:_MT[201], arg this[231876]:list[231871](?) :
  list[231871](?), ref arg lhs[231884]:list[231871](?), arg rhs[231891]:list[231871](?)) : _unknown[42] "assignop" "compiler added where" "method" "operator" "no return value for void"
  {
    (231901 call(231898 call (partial) clear _mt[203] lhs[231884]))
    (561589 'end of statement')
    (231908 call(231905 call (partial) pushBack _mt[203] lhs[231884]) rhs[231891])
    (622086 return _void[46])
  }
  where {
    unknown call_tmp[880069] "expr temp" "maybe param" "maybe type" "temp"
    (880072 'move' call_tmp[880069](530391 'query' lhs[231884] 1))
    unknown call_tmp[880074] "expr temp" "maybe param" "maybe type" "temp"
    (880077 'move' call_tmp[880074](530388 'query' rhs[231891] 1))
    unknown call_tmp[880079] "expr temp" "maybe param" "maybe type" "temp"
    (880082 'move' call_tmp[880079](530394 call == call_tmp[880069] call_tmp[880074]))
    (530398 call & 1 call_tmp[880079])
  }
  function list[231871](?).==[231912](arg _mt[231933]:_MT[201], arg this[231915]:list[231871](?) :
  list[231871](?), arg a[231923]:list[231871](?), arg b[231930]:list[231871](?)) : _unknown[42] "compiler added where" "method" "operator"
  {
    unknown ret[622090] "RVV" "temp"
    unknown call_tmp[880086] "expr temp" "maybe param" "maybe type" "temp"
    (880089 'move' call_tmp[880086](231943 call size _mt[203] a[231923]))
    unknown call_tmp[880093] "expr temp" "maybe param" "maybe type" "temp"
    (880096 'move' call_tmp[880093](231947 call size _mt[203] b[231930]))
    unknown call_tmp[880098] "expr temp" "maybe param" "maybe type" "temp"
    (880101 'move' call_tmp[880098](231940 call != call_tmp[880086] call_tmp[880093]))
    unknown call_tmp[880103] "expr temp" "maybe param" "maybe type" "temp"
    (880106 'move' call_tmp[880103](231950 call _cond_test call_tmp[880098]))
    if call_tmp[880103]
    {
      (622096 'move' ret[622090](622095 'coerce' 0 bool[19]))
      gotoReturn _end_==[622088] _end_==[622088]
    }
    {
      unknown _indexOfInterest[231991] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[231992] "expr temp" "temp"
      unknown call_tmp[880110] "expr temp" "maybe param" "maybe type" "temp"
      (880113 'move' call_tmp[880110](232007 call size _mt[203] a[231923]))
      unknown call_tmp[880115] "expr temp" "maybe param" "maybe type" "temp"
      (880118 'move' call_tmp[880115](232011 call chpl_direct_counted_range_iter 0 call_tmp[880110]))
      (232001 'move' _iterator[231992](231999 call _getIterator call_tmp[880115]))
      Defer
      {
        {
          (232026 call _freeIterator _iterator[231992])
        }
      }
      { scopeless type
        (232016 'move' _indexOfInterest[231991](232013 call iteratorIndex _iterator[231992]))
      }
      ForLoop[231993]
      {
        unknown i[231955] "index var" "insert auto destroy"
        (561593 'end of statement')
        (232021 'move' i[231955] _indexOfInterest[231991])
        (561594 'end of statement' i[231955])
        {
          unknown call_tmp[880122] "expr temp" "maybe param" "maybe type" "temp"
          (880125 'move' call_tmp[880122](231978 call(231975 call (partial) _getRef _mt[203] a[231923]) i[231955]))
          unknown call_tmp[880129] "expr temp" "maybe param" "maybe type" "temp"
          (880132 'move' call_tmp[880129](231984 call(231981 call (partial) _getRef _mt[203] b[231930]) i[231955]))
          unknown call_tmp[880134] "expr temp" "maybe param" "maybe type" "temp"
          (880137 'move' call_tmp[880134](231970 call != call_tmp[880122] call_tmp[880129]))
          unknown call_tmp[880139] "expr temp" "maybe param" "maybe type" "temp"
          (880142 'move' call_tmp[880139](231986 call _cond_test call_tmp[880134]))
          if call_tmp[880139]
          {
            (622102 'move' ret[622090](622101 'coerce' 0 bool[19]))
            gotoReturn _end_==[622088] _end_==[622088]
          }
        }
        label _continueLabel[231996]
        _indexOfInterest[231991]
        _iterator[231992]
      }
      label _breakLabel[231997]
    }
    (622108 'move' ret[622090](622107 'coerce' 1 bool[19]))
    label _end_==[622088]
    (622092 return ret[622090])
  }
  where {
    unknown call_tmp[880144] "expr temp" "maybe param" "maybe type" "temp"
    (880147 'move' call_tmp[880144](530423 'query' a[231923] 1))
    unknown call_tmp[880149] "expr temp" "maybe param" "maybe type" "temp"
    (880152 'move' call_tmp[880149](530420 'query' b[231930] 1))
    unknown call_tmp[880154] "expr temp" "maybe param" "maybe type" "temp"
    (880157 'move' call_tmp[880154](530426 call == call_tmp[880144] call_tmp[880149]))
    (530430 call & 1 call_tmp[880154])
  }
  { scopeless type
    bool[19]
  }
  function list[231871](?).!=[232038](arg _mt[232059]:_MT[201], arg this[232041]:list[231871](?) :
  list[231871](?), arg a[232049]:list[231871](?), arg b[232056]:list[231871](?)) : _unknown[42] "compiler added where" "method" "operator"
  {
    unknown ret[622112] "RVV" "temp"
    unknown call_tmp[880159] "expr temp" "maybe param" "maybe type" "temp"
    (880162 'move' call_tmp[880159](232066 call == a[232049] b[232056]))
    unknown call_tmp[880164] "expr temp" "maybe param" "maybe type" "temp"
    (880167 'move' call_tmp[880164](232064 call ! call_tmp[880159]))
    (622118 'move' ret[622112](622117 'coerce' call_tmp[880164] bool[19]))
    (622114 return ret[622112])
  }
  where {
    unknown call_tmp[880169] "expr temp" "maybe param" "maybe type" "temp"
    (880172 'move' call_tmp[880169](530455 'query' a[232049] 1))
    unknown call_tmp[880174] "expr temp" "maybe param" "maybe type" "temp"
    (880177 'move' call_tmp[880174](530452 'query' b[232056] 1))
    unknown call_tmp[880179] "expr temp" "maybe param" "maybe type" "temp"
    (880182 'move' call_tmp[880179](530458 call == call_tmp[880169] call_tmp[880174]))
    (530462 call & 1 call_tmp[880179])
  }
  { scopeless type
    bool[19]
  }
  function :[232073](arg rhs[232076]:list[231871](?), arg t[232080]:list[231871](?)) : _unknown[42] "operator"
  {
    unknown ret[622122] "RVV" "temp"
    unknown lst[232085] "dead at end of block" "insert auto destroy"
    (650092 'init var' lst[232085] rhs[232076] list[231871](?))
    (232089 'end of statement')
    (622127 'move' ret[622122](622126 'deref' lst[232085]))
    gotoReturn _end_:[622120] _end_:[622120]
    (561599 'end of statement' lst[232085])
    label _end_:[622120]
    (622124 return ret[622122])
  }
  function :[232094](arg rhs[232099]:_array[255540](?), arg t[232103]:list[231871](?)) : _unknown[42] "operator"
  {
    unknown ret[622133] "RVV" "temp"
    unknown lst[232108] "dead at end of block" "insert auto destroy"
    (650094 'init var' lst[232108] rhs[232099] list[231871](?))
    (232112 'end of statement')
    (622138 'move' ret[622133](622137 'deref' lst[232108]))
    gotoReturn _end_:[622131] _end_:[622131]
    (561601 'end of statement' lst[232108])
    label _end_:[622131]
    (622135 return ret[622133])
  }
  function :[232117](arg rhs[232122]:range[240](?), arg t[232126]:list[231871](?)) : _unknown[42] "operator"
  {
    unknown ret[622144] "RVV" "temp"
    unknown lst[232131] "dead at end of block" "insert auto destroy"
    (650096 'init var' lst[232131] rhs[232122] list[231871](?))
    (232135 'end of statement')
    (622149 'move' ret[622144](622148 'deref' lst[232131]))
    gotoReturn _end_:[622142] _end_:[622142]
    (561603 'end of statement' lst[232131])
    label _end_:[622142]
    (622146 return ret[622144])
  }
  function :[232140](arg rhs[232143]:_iteratorRecord[165](?), arg t[232147]:list[231871](?)) : _unknown[42] "operator"
  {
    unknown ret[622155] "RVV" "temp"
    unknown lst[232152] "dead at end of block" "insert auto destroy"
    (650098 'init var' lst[232152] rhs[232143] list[231871](?))
    (232156 'end of statement')
    (622160 'move' ret[622155](622159 'deref' lst[232152]))
    gotoReturn _end_:[622153] _end_:[622153]
    (561605 'end of statement' lst[232152])
    label _end_:[622153]
    (622157 return ret[622155])
  }
  function |serializable[475277]() : _unknown[42] "ImplementsStmt wrapper"
  { serializable[310094] list[231871](?)
    {
    }
    (622166 return _void[46])
  }
  (396824 'used modules list'(387032 'use' ChapelStandard[315387])(225838 'import' ChapelLocks[85420])(225840 'use' HaltWrappers[518])(225843 'use' Math[10521])(225846 'use' Sort[247204])(226037 'use' IO[208303]))
  (406888 'referenced modules list' ChapelLocks[85420] Sort[247204])
}
AST dump for Bytes after pass codegen.
Module use list: ChapelStandard ByteBufferHelpers BytesStringCommon CTypes POSIX String 

{
  function chpl__init_Bytes[468354](const in arg _ln[9365287]:int(64)[10], in arg _fn[9365289]:int(32)[66]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_Bytes_p[9306633]
    {
      goto _exit_chpl__init_Bytes[9306670] _exit_chpl__init_Bytes[9306670]
    }
    ref refIndentLevel[9306656]:_ref(int(32))[1465743] "temp"
    (9306654 call printModuleInit[386886] c"%*s\n" c"Bytes" 5 _ln[9365287] _fn[9365289])
    (9306660 'move' refIndentLevel[9306656](9306659 'addr of' moduleInitLevel[386877]))
    (9306663 '+=' refIndentLevel[9306656] 1)
    (9306639 'move' chpl__init_Bytes_p[9306633] 1)
    {
      (9305051 call chpl__init_ByteBufferHelpers[468348] _ln[9365287] _fn[9365289])
      (9305053 call chpl__init_BytesStringCommon[468357] _ln[9365287] _fn[9365289])
      (9305055 call chpl__init_CTypes[468360] _ln[9365287] _fn[9365289])
      (9305057 call chpl__init_POSIX[468324] _ln[9365287] _fn[9365289])
      (9305059 call chpl__init_String[468339] _ln[9365287] _fn[9365289])
    }
    (9306666 '-=' refIndentLevel[9306656] 1)
    label _exit_chpl__init_Bytes[9306670]
    (596728 return _void[46])
  }
  function chpl_createBytesWithLiteral[33107](const in arg buffer[33110]:chpl_c_string[16], const in arg offset[33114]:int(64)[10], const in arg x[33118]:chpl_c_string[16], const in arg length[33122]:int(64)[10], const in arg _ln[9363317]:int(64)[10], in arg _fn[9363319]:int(32)[66]) : bytes[232] "resolved"
  {
    val call_tmp[7481740]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7481742 'move' call_tmp[7481740](7481744 'cast' c_ptr(uint(8))[1466369](7362164 'cast' c_ptr(void)[1465614] buffer[33110] _ln[9363317] _fn[9363319]) _ln[9363317] _fn[9363319]))
    val buf[33127]:c_ptr(uint(8))[1466369] "dead at end of block" "insert auto destroy"
    (643724 'move' buf[33127] call_tmp[7481740])
    val call_tmp[7482569]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7482571 'move' call_tmp[7482569](7482573 '+' call_tmp[7481740] offset[33114]))
    (7396080 '=' buf[33127] call_tmp[7482569])
    val call_tmp[753000]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (753003 'move' call_tmp[753000](33161 'cast' c_ptr(void)[1465614] call_tmp[7482569] _ln[9363317] _fn[9363319]))
    val call_tmp[7362170]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (7362172 'move' call_tmp[7362170](7362174 'cast' c_ptr(void)[1465614] x[33118] _ln[9363317] _fn[9363319]))
    const-val call_tmp[7408565]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7408567]:owned IllegalArgumentError?[1471812] "temp"
    (7408570 call chpl_checkValue[1471704] length[33122] ret_tmp[7408567] _ln[9363317] _fn[9363319])
    (7408573 'move' call_tmp[7408565] ret_tmp[7408567])
    ref i_arg[7408578]:_ref(owned IllegalArgumentError?)[1471821] "temp"
    (7408580 'move' i_arg[7408578](7408582 'set reference' call_tmp[7408565]))
    val call_tmp[7408584]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7408586 'move' call_tmp[7408584](7408589 call borrow[1479886] i_arg[7408578]))
    if(7408605 '!='(7408598 'cast' RootClass[236] call_tmp[7408584] _ln[9363317] _fn[9363319]) nil[32])
    {
      const-val call_tmp[7408610]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7408612]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7408614 'move' coerce_tmp[7408612](7408616 'cast' Error[85511] call_tmp[7408584] _ln[9363317] _fn[9363319]))
      (9338834 '_check_nil' coerce_tmp[7408612] _ln[9363317] _fn[9363319])
      val ret_tmp[7408625]:string[244] "temp"
      (7408627 'virtual method call' message[85497](7408623 'getcid' coerce_tmp[7408612]) coerce_tmp[7408612] ret_tmp[7408625] _ln[9363317] _fn[9363319])
      (7408632 'move' call_tmp[7408610] ret_tmp[7408625])
      (7408636 call safeCastCheckHalt[440] call_tmp[7408610] _ln[9363317] _fn[9363319])
      ref i_x[7408638]:_ref(string)[1466327] "temp"
      (7408640 'move' i_x[7408638](7408642 'set reference' call_tmp[7408610]))
      (7408645 call deinit[21354] i_x[7408638] _ln[9363317] _fn[9363319])
    }
    (7408649 call chpl__autoDestroy[3929258] call_tmp[7408565] _ln[9363317] _fn[9363319])
    (7322789 call memcpy[12686] call_tmp[753000] call_tmp[7362170](7408655 'cast' uint(64)[86] length[33122] _ln[9363317] _fn[9363319]))
    ref call_tmp[7472546]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
    (7472548 'move' call_tmp[7472546](7472550 'array_get' buf[33127] length[33122]))
    (7483594 '=' call_tmp[7472546](4346524 'cast' uint(8)[71] 0 _ln[9363317] _fn[9363319]))
    const-val call_tmp[8625732]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8625734 'move' call_tmp[8625732](8625736 '+' length[33122] 1))
    const-val ret[8625739]:bytes[232] "dead after last mention" "RVV" "temp"
    val ret[8625741]:bytes[232] "dead at end of block" "insert auto destroy"
    (8625744 call init[33649] ret[8625741] _ln[9363317] _fn[9363319])
    (8625747 call initWithBorrowedBuffer[3976788] ret[8625741] call_tmp[7482569] length[33122] call_tmp[8625732])
    (8625752 '=' ret[8625739] ret[8625741])
    (595689 return ret[8625739])
  }
  function _ref(bytes)[1466360].init[33649](ref arg this[33651]:_ref(bytes)[1466360], const in arg _ln[9363339]:int(64)[10], in arg _fn[9363341]:int(32)[66]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (514646 '.=' this[33651] buffLen[33621] 0)
    (514656 '.=' this[33651] buffSize[33627] 0)
    val init_coerce_tmp[3097956]:c_ptr(uint(8))[1466369] "dead after last mention" "temp"
    (3097970 '=' init_coerce_tmp[3097956](3097966 'cast' c_ptr(uint(8))[1466369] nil[32] _ln[9363339] _fn[9363341]))
    (514666 '.=' this[33651] buff[33633] init_coerce_tmp[3097956])
    (514676 '.=' this[33651] isOwned[33639] 1)
    const-val call_tmp[753278]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (753281 'move' call_tmp[753278](514681 call chpl_nodeID[305038]))
    (514686 '.=' this[33651] locale_id[33645] call_tmp[753278])
    (595782 return _void[46])
  }
  function _ref(bytes)[1466360].deinit[33658](ref arg this[33660]:_ref(bytes)[1466360], const in arg _ln[9363345]:int(64)[10], in arg _fn[9363347]:int(32)[66]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[666060]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(9195572 '.v' this[33660] isOwned[33639])
    {
      (666075 'move' tmp[666060](7637367 'ptr_neq'(9195578 '.v' this[33660] buff[33633]) nil[32]))
    }
    {
      (666080 'move' tmp[666060] 0)
    }
    if tmp[666060]
    {
      (33668 call chpl_buildLocaleID[306518](9195584 '.v' this[33660] locale_id[33645]) c_sublocid_any[135202] _ln[9363345] _fn[9363347])
      (33676 call chpl_here_free[308686](1467075 'cast' c_ptr(void)[1465614](9195590 '.v' this[33660] buff[33633]) _ln[9363345] _fn[9363347]) _ln[9363345] _fn[9363347])
    }
    (595784 return _void[46])
  }
  function _ref(bytes)[1466360].init=[33890](ref arg this[33892]:_ref(bytes)[1466360], const  ref arg b[33895]:_ref(bytes)[1466360], const in arg _ln[9363351]:int(64)[10], in arg _fn[9363353]:int(32)[66]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (514696 '.=' this[33892] buffLen[33621] 0)
    (514706 '.=' this[33892] buffSize[33627] 0)
    val init_coerce_tmp[3092043]:c_ptr(uint(8))[1466369] "dead after last mention" "temp"
    (3092680 '=' init_coerce_tmp[3092043](3092676 'cast' c_ptr(uint(8))[1466369] nil[32] _ln[9363351] _fn[9363353]))
    (514716 '.=' this[33892] buff[33633] init_coerce_tmp[3092043])
    (514726 '.=' this[33892] isOwned[33639] 1)
    const-val call_tmp[753566]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (753569 'move' call_tmp[753566](514731 call chpl_nodeID[305038]))
    (514736 '.=' this[33892] locale_id[33645] call_tmp[753566])
    (8357135 call chpl_nodeID[305038])
    val ret[8357143]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8357145 '=' ret[8357143](8357147 '.v' b[33895] buffLen[33621]))
    const-val otherLen[8357150]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (8357152 'move' otherLen[8357150] ret[8357143])
    (8357155 '.=' this[33892] isOwned[33639] 1)
    if(8357163 '>' ret[8357143] 0)
    {
      (8357168 '.=' this[33892] buffLen[33621] ret[8357143])
      val coerce_tmp[8357172]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8357174 'move' coerce_tmp[8357172](8357176 '.v' b[33895] buff[33633]))
      const-val call_tmp[8357186]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8357188 'move' call_tmp[8357186](8357191 call chpl_here_good_alloc_size[1471515](9529931 'cast' int(64)[10](8357183 '+' ret[8357143] 1)) _ln[9363351] _fn[9363353]))
      val tmp[8357198]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(8357204 '>' call_tmp[8357186] 0)
      {
        (8357209 'move' tmp[8357198] call_tmp[8357186])
      }
      {
        (8357213 'move' tmp[8357198] 0)
      }
      const-val call_tmp[8357217]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
      (8357219 'move' call_tmp[8357217](8357222 call offset_STR_COPY_DATA[30235]))
      val cast_tmp[8357223]:c_ptr(void)[1465614] "dead after last mention" "temp"
      (8357225 'move' cast_tmp[8357223](8357228 call chpl_here_alloc[308303] tmp[8357198] call_tmp[8357217] _ln[9363351] _fn[9363353]))
      val call_tmp[8357231]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
      (8357233 'move' call_tmp[8357231](8357235 'cast' c_ptr(uint(8))[1466369] cast_tmp[8357223] _ln[9363351] _fn[9363353]))
      const dst[8357253]:c_ptr(uint(8))[1466369] "dead at end of block" "const" "insert auto destroy"
      (8357262 '=' dst[8357253] call_tmp[8357231])
      (8357265 'noop')
      (8357278 'noop')
      val call_tmp[8357281]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
      (8357283 'move' call_tmp[8357281](8357285 '+' call_tmp[8357231] 0))
      val call_tmp[8357293]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
      (8357295 'move' call_tmp[8357293](8357297 '+' coerce_tmp[8357172] 0))
      const-val call_tmp[8357303]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8357305]:owned IllegalArgumentError?[1471812] "temp"
      (8357308 call chpl_checkValue[1471704] ret[8357143] ret_tmp[8357305] _ln[9363351] _fn[9363353])
      (8357311 'move' call_tmp[8357303] ret_tmp[8357305])
      ref i_arg[8357316]:_ref(owned IllegalArgumentError?)[1471821] "temp"
      (8357318 'move' i_arg[8357316](8357320 'set reference' call_tmp[8357303]))
      val call_tmp[8357322]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
      (8357324 'move' call_tmp[8357322](8357327 call borrow[1479886] i_arg[8357316]))
      if(8357343 '!='(8357336 'cast' RootClass[236] call_tmp[8357322] _ln[9363351] _fn[9363353]) nil[32])
      {
        const-val call_tmp[8357348]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val coerce_tmp[8357350]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8357352 'move' coerce_tmp[8357350](8357354 'cast' Error[85511] call_tmp[8357322] _ln[9363351] _fn[9363353]))
        (9349988 '_check_nil' coerce_tmp[8357350] _ln[9363351] _fn[9363353])
        val ret_tmp[8357363]:string[244] "temp"
        (8357365 'virtual method call' message[85497](8357361 'getcid' coerce_tmp[8357350]) coerce_tmp[8357350] ret_tmp[8357363] _ln[9363351] _fn[9363353])
        (8357370 'move' call_tmp[8357348] ret_tmp[8357363])
        (8357374 call safeCastCheckHalt[440] call_tmp[8357348] _ln[9363351] _fn[9363353])
        ref i_x[8357376]:_ref(string)[1466327] "temp"
        (8357378 'move' i_x[8357376](8357380 'set reference' call_tmp[8357348]))
        (8357383 call deinit[21354] i_x[8357376] _ln[9363351] _fn[9363353])
      }
      (8357387 call chpl__autoDestroy[3929258] call_tmp[8357303] _ln[9363351] _fn[9363353])
      (8357411 call memcpy[12686](8357400 'cast' c_ptr(void)[1465614] call_tmp[8357281] _ln[9363351] _fn[9363353])(8357407 'cast' c_ptr(void)[1465614] call_tmp[8357293] _ln[9363351] _fn[9363353])(8357393 'cast' uint(64)[86] otherLen[8357150] _ln[9363351] _fn[9363353]))
      ref call_tmp[8357415]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
      (8357417 'move' call_tmp[8357415](8357419 'array_get' dst[8357253] otherLen[8357150]))
      (8357429 '=' call_tmp[8357415](8357426 'cast' uint(8)[71] 0 _ln[9363351] _fn[9363353]))
      (8357454 'noop')
      (8357462 'noop')
      (8357463 '.=' this[33892] buff[33633] call_tmp[8357231])
      val coerce_tmp[8357467]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8357469 'move' coerce_tmp[8357467](8357471 '.v' this[33892] buff[33633]))
      const-val coerce_tmp[8357474]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8357476 'move' coerce_tmp[8357474](8357478 '.v' this[33892] buffLen[33621]))
      ref call_tmp[8357481]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
      (8357483 'move' call_tmp[8357481](8357485 'array_get' coerce_tmp[8357467] coerce_tmp[8357474]))
      (8357495 '=' call_tmp[8357481](8357492 'cast' uint(8)[71] 0 _ln[9363351] _fn[9363353]))
      (8357498 '.=' this[33892] buffSize[33627] tmp[8357198])
    }
    (595822 return _void[46])
  }
  type bytes[232] val buffLen[33621]:int(64)[10] val buffSize[33627]:int(64)[10] val buff[33633]:c_ptr(uint(8))[1466369] val isOwned[33639]:bool[19] val locale_id[33645]:int(32)[66]
}
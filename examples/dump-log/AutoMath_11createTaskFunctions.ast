AST dump for AutoMath after pass createTaskFunctions.
Module use list: ChapelStandard HaltWrappers CTypes 

{
  function chpl__init_AutoMath[468318]() : void[4] "insert line file info" "module init"
  {
    (589634 return _void[46])
  }
  function chpl_macro_double_isinf[1813](arg x[1818] :
  (1816 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_float_isinf[1825](arg x[1830] :
  (1828 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_double_isfinite[1837](arg x[1842] :
  (1840 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_float_isfinite[1849](arg x[1854] :
  (1852 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_double_isnan[1861](arg x[1866] :
  (1864 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_float_isnan[1873](arg x[1878] :
  (1876 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    c_int[522]
  }
  function abs[510394](arg x[510401] :
  (510398 call int(64)[10] 64)) : _unknown[42] "inline"
  {
    unknown ret[588344] "RVV" "temp"
    unknown tmp[661458] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661459] "maybe param" "temp"
    unknown call_tmp[735167] "expr temp" "maybe param" "maybe type" "temp"
    (735170 'move' call_tmp[735167](510406 call < x[510401] 0))
    (661464 'move' tmp[661459](661462 call _cond_test call_tmp[735167]))
    if tmp[661459]
    {
      unknown tmp[661466] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (661468 'move' tmp[661466](510411 call - x[510401]))
      (661473 'move' tmp[661458](661470 '_paramFoldLogical' tmp[661459] tmp[661466]))
    }
    {
      (661478 'move' tmp[661458](661475 '_paramFoldLogical' tmp[661459] x[510401]))
    }
    (588349 'move' ret[588344](588348 'deref' tmp[661458]))
    (588346 return ret[588344])
  }
  function abs[510370](arg x[510377] :
  (510374 call int(64)[10] 32)) : _unknown[42] "inline"
  {
    unknown ret[588353] "RVV" "temp"
    unknown tmp[661485] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661486] "maybe param" "temp"
    unknown call_tmp[735172] "expr temp" "maybe param" "maybe type" "temp"
    (735175 'move' call_tmp[735172](510382 call < x[510377] 0))
    (661491 'move' tmp[661486](661489 call _cond_test call_tmp[735172]))
    if tmp[661486]
    {
      unknown tmp[661493] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (661495 'move' tmp[661493](510387 call - x[510377]))
      (661500 'move' tmp[661485](661497 '_paramFoldLogical' tmp[661486] tmp[661493]))
    }
    {
      (661505 'move' tmp[661485](661502 '_paramFoldLogical' tmp[661486] x[510377]))
    }
    (588358 'move' ret[588353](588357 'deref' tmp[661485]))
    (588355 return ret[588353])
  }
  function abs[510346](arg x[510353] :
  (510350 call int(64)[10] 16)) : _unknown[42] "inline"
  {
    unknown ret[588362] "RVV" "temp"
    unknown tmp[661512] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661513] "maybe param" "temp"
    unknown call_tmp[735177] "expr temp" "maybe param" "maybe type" "temp"
    (735180 'move' call_tmp[735177](510358 call < x[510353] 0))
    (661518 'move' tmp[661513](661516 call _cond_test call_tmp[735177]))
    if tmp[661513]
    {
      unknown tmp[661520] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (661522 'move' tmp[661520](510363 call - x[510353]))
      (661527 'move' tmp[661512](661524 '_paramFoldLogical' tmp[661513] tmp[661520]))
    }
    {
      (661532 'move' tmp[661512](661529 '_paramFoldLogical' tmp[661513] x[510353]))
    }
    (588367 'move' ret[588362](588366 'deref' tmp[661512]))
    (588364 return ret[588362])
  }
  function abs[510322](arg x[510329] :
  (510326 call int(64)[10] 8)) : _unknown[42] "inline"
  {
    unknown ret[588371] "RVV" "temp"
    unknown tmp[661539] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661540] "maybe param" "temp"
    unknown call_tmp[735182] "expr temp" "maybe param" "maybe type" "temp"
    (735185 'move' call_tmp[735182](510334 call < x[510329] 0))
    (661545 'move' tmp[661540](661543 call _cond_test call_tmp[735182]))
    if tmp[661540]
    {
      unknown tmp[661547] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (661549 'move' tmp[661547](510339 call - x[510329]))
      (661554 'move' tmp[661539](661551 '_paramFoldLogical' tmp[661540] tmp[661547]))
    }
    {
      (661559 'move' tmp[661539](661556 '_paramFoldLogical' tmp[661540] x[510329]))
    }
    (588376 'move' ret[588371](588375 'deref' tmp[661539]))
    (588373 return ret[588371])
  }
  function abs[510460](arg x[510467] :
  (510464 call uint(64)[86] 64)) : _unknown[42] "inline"
  {
    unknown ret[588380] "RVV" "temp"
    (588385 'move' ret[588380](588384 'deref' x[510467]))
    (588382 return ret[588380])
  }
  function abs[510446](arg x[510453] :
  (510450 call uint(64)[86] 32)) : _unknown[42] "inline"
  {
    unknown ret[588389] "RVV" "temp"
    (588394 'move' ret[588389](588393 'deref' x[510453]))
    (588391 return ret[588389])
  }
  function abs[510432](arg x[510439] :
  (510436 call uint(64)[86] 16)) : _unknown[42] "inline"
  {
    unknown ret[588398] "RVV" "temp"
    (588403 'move' ret[588398](588402 'deref' x[510439]))
    (588400 return ret[588398])
  }
  function abs[510418](arg x[510425] :
  (510422 call uint(64)[86] 8)) : _unknown[42] "inline"
  {
    unknown ret[588407] "RVV" "temp"
    (588412 'move' ret[588407](588411 'deref' x[510425]))
    (588409 return ret[588407])
  }
  function abs[1923](param arg x[1926]:integral[159](?)) param : _unknown[42]
  {
    unknown ret[588416] "RVV" "param" "temp"
    unknown tmp[661566] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661567] "maybe param" "temp"
    unknown call_tmp[735187] "expr temp" "maybe param" "maybe type" "temp"
    (735190 'move' call_tmp[735187](1931 call < x[1926] 0))
    (661572 'move' tmp[661567](661570 call _cond_test call_tmp[735187]))
    if tmp[661567]
    {
      unknown tmp[661574] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (661576 'move' tmp[661574](1935 call - x[1926]))
      (661581 'move' tmp[661566](661578 '_paramFoldLogical' tmp[661567] tmp[661574]))
    }
    {
      (661586 'move' tmp[661566](661583 '_paramFoldLogical' tmp[661567] x[1926]))
    }
    (588421 'move' ret[588416](588420 'deref' tmp[661566]))
    (588418 return ret[588416])
  }
  function abs[1944](arg x[1949] :
  (1947 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[588425] "RVV" "temp"
    unknown call_tmp[735192] "expr temp" "maybe param" "maybe type" "temp"
    (735195 'move' call_tmp[735192](1957 'abs' x[1949]))
    unknown call_tmp[735197] "expr temp" "maybe param" "maybe type" "temp"
    (735200 'move' call_tmp[735197](588430 call real(64)[13] 64))
    (588433 'move' ret[588425](588432 'coerce' call_tmp[735192] call_tmp[735197]))
    (588427 return ret[588425])
  }
  { scopeless type
    (1953 call real(64)[13] 64)
  }
  function abs[1962](param arg x[1967] :
  (1965 call real(64)[13] 64)) param : _unknown[42]
  {
    unknown ret[588437] "RVV" "param" "temp"
    unknown call_tmp[735202] "expr temp" "maybe param" "maybe type" "temp"
    (735205 'move' call_tmp[735202](1975 'abs' x[1967]))
    unknown call_tmp[735207] "expr temp" "maybe param" "maybe type" "temp"
    (735210 'move' call_tmp[735207](588442 call real(64)[13] 64))
    (588445 'move' ret[588437](588444 'coerce' call_tmp[735202] call_tmp[735207]))
    (588439 return ret[588437])
  }
  { scopeless type
    (1971 call real(64)[13] 64)
  }
  function abs[1980](arg x[1985] :
  (1983 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588449] "RVV" "temp"
    unknown call_tmp[735212] "expr temp" "maybe param" "maybe type" "temp"
    (735215 'move' call_tmp[735212](1993 'abs' x[1985]))
    unknown call_tmp[735217] "expr temp" "maybe param" "maybe type" "temp"
    (735220 'move' call_tmp[735217](588454 call real(64)[13] 32))
    (588457 'move' ret[588449](588456 'coerce' call_tmp[735212] call_tmp[735217]))
    (588451 return ret[588449])
  }
  { scopeless type
    (1989 call real(64)[13] 32)
  }
  function abs[1998](param arg x[2003] :
  (2001 call real(64)[13] 32)) param : _unknown[42]
  {
    unknown ret[588461] "RVV" "param" "temp"
    unknown call_tmp[735222] "expr temp" "maybe param" "maybe type" "temp"
    (735225 'move' call_tmp[735222](2011 'abs' x[2003]))
    unknown call_tmp[735227] "expr temp" "maybe param" "maybe type" "temp"
    (735230 'move' call_tmp[735227](588466 call real(64)[13] 32))
    (588469 'move' ret[588461](588468 'coerce' call_tmp[735222] call_tmp[735227]))
    (588463 return ret[588461])
  }
  { scopeless type
    (2007 call real(64)[13] 32)
  }
  function abs[2016](arg x[2021] :
  (2019 call imag(64)[101] 64)) : _unknown[42] "inline"
  {
    unknown ret[588473] "RVV" "temp"
    unknown call_tmp[735232] "expr temp" "maybe param" "maybe type" "temp"
    (735235 'move' call_tmp[735232](2031 call _i2r x[2021]))
    unknown call_tmp[735237] "expr temp" "maybe param" "maybe type" "temp"
    (735240 'move' call_tmp[735237](2029 'abs' call_tmp[735232]))
    unknown call_tmp[735242] "expr temp" "maybe param" "maybe type" "temp"
    (735245 'move' call_tmp[735242](588478 call real(64)[13] 64))
    (588481 'move' ret[588473](588480 'coerce' call_tmp[735237] call_tmp[735242]))
    (588475 return ret[588473])
  }
  { scopeless type
    (2025 call real(64)[13] 64)
  }
  function abs[2036](param arg x[2041] :
  (2039 call imag(64)[101] 64)) param : _unknown[42]
  {
    unknown ret[588485] "RVV" "param" "temp"
    unknown call_tmp[735247] "expr temp" "maybe param" "maybe type" "temp"
    (735250 'move' call_tmp[735247](2055 call real(64)[13] 64))
    unknown call_tmp[735252] "expr temp" "maybe param" "maybe type" "temp"
    (735255 'move' call_tmp[735252](2051 call : x[2041] call_tmp[735247]))
    unknown call_tmp[735257] "expr temp" "maybe param" "maybe type" "temp"
    (735260 'move' call_tmp[735257](2050 call abs call_tmp[735252]))
    unknown call_tmp[735262] "expr temp" "maybe param" "maybe type" "temp"
    (735265 'move' call_tmp[735262](588490 call real(64)[13] 64))
    (588493 'move' ret[588485](588492 'coerce' call_tmp[735257] call_tmp[735262]))
    (588487 return ret[588485])
  }
  { scopeless type
    (2045 call real(64)[13] 64)
  }
  function abs[2060](arg x[2065] :
  (2063 call imag(64)[101] 32)) : _unknown[42] "inline"
  {
    unknown ret[588497] "RVV" "temp"
    unknown call_tmp[735267] "expr temp" "maybe param" "maybe type" "temp"
    (735270 'move' call_tmp[735267](2075 call _i2r x[2065]))
    unknown call_tmp[735272] "expr temp" "maybe param" "maybe type" "temp"
    (735275 'move' call_tmp[735272](2073 'abs' call_tmp[735267]))
    unknown call_tmp[735277] "expr temp" "maybe param" "maybe type" "temp"
    (735280 'move' call_tmp[735277](588502 call real(64)[13] 32))
    (588505 'move' ret[588497](588504 'coerce' call_tmp[735272] call_tmp[735277]))
    (588499 return ret[588497])
  }
  { scopeless type
    (2069 call real(64)[13] 32)
  }
  function abs[2080](param arg x[2085] :
  (2083 call imag(64)[101] 32)) param : _unknown[42]
  {
    unknown ret[588509] "RVV" "param" "temp"
    unknown call_tmp[735282] "expr temp" "maybe param" "maybe type" "temp"
    (735285 'move' call_tmp[735282](2099 call real(64)[13] 32))
    unknown call_tmp[735287] "expr temp" "maybe param" "maybe type" "temp"
    (735290 'move' call_tmp[735287](2095 call : x[2085] call_tmp[735282]))
    unknown call_tmp[735292] "expr temp" "maybe param" "maybe type" "temp"
    (735295 'move' call_tmp[735292](2094 call abs call_tmp[735287]))
    unknown call_tmp[735297] "expr temp" "maybe param" "maybe type" "temp"
    (735300 'move' call_tmp[735297](588514 call real(64)[13] 32))
    (588517 'move' ret[588509](588516 'coerce' call_tmp[735292] call_tmp[735297]))
    (588511 return ret[588509])
  }
  { scopeless type
    (2089 call real(64)[13] 32)
  }
  function abs[2104](arg x[2111] :
  (2107 call complex(128)[111] 128)) : _unknown[42] "inline"
  {
    unknown ret[588521] "RVV" "temp"
    function cabs[2118](arg x[2123] :
    (2121 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (2127 call real(64)[13] 64)
    }
    unknown call_tmp[735302] "expr temp" "maybe param" "maybe type" "temp"
    (735305 'move' call_tmp[735302](2134 call cabs x[2111]))
    unknown call_tmp[735307] "expr temp" "maybe param" "maybe type" "temp"
    (735310 'move' call_tmp[735307](588526 call real(64)[13] 64))
    (588529 'move' ret[588521](588528 'coerce' call_tmp[735302] call_tmp[735307]))
    (588523 return ret[588521])
  }
  { scopeless type
    (2115 call real(64)[13] 64)
  }
  function abs[2139](param arg x[2144] :
  (2142 call complex(128)[111] 128)) param : _unknown[42]
  {
    unknown ret[588533] "RVV" "param" "temp"
    unknown call_tmp[735312] "expr temp" "maybe param" "maybe type" "temp"
    (735315 'move' call_tmp[735312](2152 'abs' x[2144]))
    unknown call_tmp[735317] "expr temp" "maybe param" "maybe type" "temp"
    (735320 'move' call_tmp[735317](588538 call real(64)[13] 64))
    (588541 'move' ret[588533](588540 'coerce' call_tmp[735312] call_tmp[735317]))
    (588535 return ret[588533])
  }
  { scopeless type
    (2148 call real(64)[13] 64)
  }
  function abs[2157](arg x[2162] :
  (2160 call complex(128)[111] 64)) : _unknown[42] "inline"
  {
    unknown ret[588545] "RVV" "temp"
    function cabsf[2169](arg x[2174] :
    (2172 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (2178 call real(64)[13] 32)
    }
    unknown call_tmp[735322] "expr temp" "maybe param" "maybe type" "temp"
    (735325 'move' call_tmp[735322](2185 call cabsf x[2162]))
    unknown call_tmp[735327] "expr temp" "maybe param" "maybe type" "temp"
    (735330 'move' call_tmp[735327](588550 call real(64)[13] 32))
    (588553 'move' ret[588545](588552 'coerce' call_tmp[735322] call_tmp[735327]))
    (588547 return ret[588545])
  }
  { scopeless type
    (2166 call real(64)[13] 32)
  }
  function abs[2190](param arg x[2195] :
  (2193 call complex(128)[111] 64)) param : _unknown[42]
  {
    unknown ret[588557] "RVV" "param" "temp"
    unknown call_tmp[735332] "expr temp" "maybe param" "maybe type" "temp"
    (735335 'move' call_tmp[735332](2203 'abs' x[2195]))
    unknown call_tmp[735337] "expr temp" "maybe param" "maybe type" "temp"
    (735340 'move' call_tmp[735337](588562 call real(64)[13] 32))
    (588565 'move' ret[588557](588564 'coerce' call_tmp[735332] call_tmp[735337]))
    (588559 return ret[588557])
  }
  { scopeless type
    (2199 call real(64)[13] 32)
  }
  function cbrt[2208](arg x[2213] :
  (2211 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    (2217 call real(64)[13] 64)
  }
  function cbrt[2222](arg x[2227] :
  (2225 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588569] "RVV" "temp"
    function cbrtf[2234](arg x[2239] :
    (2237 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (2243 call real(64)[13] 32)
    }
    unknown call_tmp[735342] "expr temp" "maybe param" "maybe type" "temp"
    (735345 'move' call_tmp[735342](2250 call cbrtf x[2227]))
    unknown call_tmp[735347] "expr temp" "maybe param" "maybe type" "temp"
    (735350 'move' call_tmp[735347](588574 call real(64)[13] 32))
    (588577 'move' ret[588569](588576 'coerce' call_tmp[735342] call_tmp[735347]))
    (588571 return ret[588569])
  }
  { scopeless type
    (2231 call real(64)[13] 32)
  }
  function ceil[2255](arg x[2260] :
  (2258 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    (2264 call real(64)[13] 64)
  }
  function ceil[2269](arg x[2274] :
  (2272 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588581] "RVV" "temp"
    function ceilf[2281](arg x[2286] :
    (2284 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (2290 call real(64)[13] 32)
    }
    unknown call_tmp[735352] "expr temp" "maybe param" "maybe type" "temp"
    (735355 'move' call_tmp[735352](2297 call ceilf x[2274]))
    unknown call_tmp[735357] "expr temp" "maybe param" "maybe type" "temp"
    (735360 'move' call_tmp[735357](588586 call real(64)[13] 32))
    (588589 'move' ret[588581](588588 'coerce' call_tmp[735352] call_tmp[735357]))
    (588583 return ret[588581])
  }
  { scopeless type
    (2278 call real(64)[13] 32)
  }
  function conj[510531](arg x[510538] :
  (510535 call complex(128)[111] 128)) : _unknown[42] "inline"
  {
    unknown ret[588593] "RVV" "temp"
    function conjf[510541](arg x[510547] :
    (510545 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510552 call complex(128)[111] 64)
    }
    function conj[510555](arg x[510561] :
    (510559 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510566 call complex(128)[111] 128)
    }
    unknown call_tmp[735362] "expr temp" "maybe param" "maybe type" "temp"
    (735365 'move' call_tmp[735362](510572 call == 128 64))
    unknown call_tmp[735367] "expr temp" "maybe param" "maybe type" "temp"
    (735370 'move' call_tmp[735367](510570 call _cond_test call_tmp[735362]))
    if call_tmp[735367]
    {
      unknown call_tmp[735372] "expr temp" "maybe param" "maybe type" "temp"
      (735375 'move' call_tmp[735372](510578 call conjf x[510538]))
      (588598 'move' ret[588593](588597 'deref' call_tmp[735372]))
      gotoReturn _end_conj[588591] _end_conj[588591]
    }
    {
      unknown call_tmp[735377] "expr temp" "maybe param" "maybe type" "temp"
      (735380 'move' call_tmp[735377](510583 call conj x[510538]))
      (588603 'move' ret[588593](588602 'deref' call_tmp[735377]))
      gotoReturn _end_conj[588591] _end_conj[588591]
    }
    label _end_conj[588591]
    (588595 return ret[588593])
  }
  function conj[510474](arg x[510481] :
  (510478 call complex(128)[111] 64)) : _unknown[42] "inline"
  {
    unknown ret[588609] "RVV" "temp"
    function conjf[510484](arg x[510490] :
    (510488 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510495 call complex(128)[111] 64)
    }
    function conj[510498](arg x[510504] :
    (510502 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510509 call complex(128)[111] 128)
    }
    unknown call_tmp[735382] "expr temp" "maybe param" "maybe type" "temp"
    (735385 'move' call_tmp[735382](510515 call == 64 64))
    unknown call_tmp[735387] "expr temp" "maybe param" "maybe type" "temp"
    (735390 'move' call_tmp[735387](510513 call _cond_test call_tmp[735382]))
    if call_tmp[735387]
    {
      unknown call_tmp[735392] "expr temp" "maybe param" "maybe type" "temp"
      (735395 'move' call_tmp[735392](510521 call conjf x[510481]))
      (588614 'move' ret[588609](588613 'deref' call_tmp[735392]))
      gotoReturn _end_conj[588607] _end_conj[588607]
    }
    {
      unknown call_tmp[735397] "expr temp" "maybe param" "maybe type" "temp"
      (735400 'move' call_tmp[735397](510526 call conj x[510481]))
      (588619 'move' ret[588609](588618 'deref' call_tmp[735397]))
      gotoReturn _end_conj[588607] _end_conj[588607]
    }
    label _end_conj[588607]
    (588611 return ret[588609])
  }
  function conj[510604](arg x[510611] :
  (510608 call imag(64)[101] 64)) : _unknown[42] "inline"
  {
    unknown ret[588625] "RVV" "temp"
    unknown call_tmp[735402] "expr temp" "maybe param" "maybe type" "temp"
    (735405 'move' call_tmp[735402](510616 call - x[510611]))
    (588630 'move' ret[588625](588629 'deref' call_tmp[735402]))
    (588627 return ret[588625])
  }
  function conj[510588](arg x[510595] :
  (510592 call imag(64)[101] 32)) : _unknown[42] "inline"
  {
    unknown ret[588634] "RVV" "temp"
    unknown call_tmp[735407] "expr temp" "maybe param" "maybe type" "temp"
    (735410 'move' call_tmp[735407](510600 call - x[510595]))
    (588639 'move' ret[588634](588638 'deref' call_tmp[735407]))
    (588636 return ret[588634])
  }
  function conj[510662](arg x[510669] :
  (510666 call int(64)[10] 64)) : _unknown[42] "inline"
  {
    unknown ret[588643] "RVV" "temp"
    (588648 'move' ret[588643](588647 'deref' x[510669]))
    (588645 return ret[588643])
  }
  function conj[510648](arg x[510655] :
  (510652 call int(64)[10] 32)) : _unknown[42] "inline"
  {
    unknown ret[588652] "RVV" "temp"
    (588657 'move' ret[588652](588656 'deref' x[510655]))
    (588654 return ret[588652])
  }
  function conj[510634](arg x[510641] :
  (510638 call int(64)[10] 16)) : _unknown[42] "inline"
  {
    unknown ret[588661] "RVV" "temp"
    (588666 'move' ret[588661](588665 'deref' x[510641]))
    (588663 return ret[588661])
  }
  function conj[510620](arg x[510627] :
  (510624 call int(64)[10] 8)) : _unknown[42] "inline"
  {
    unknown ret[588670] "RVV" "temp"
    (588675 'move' ret[588670](588674 'deref' x[510627]))
    (588672 return ret[588670])
  }
  function conj[510718](arg x[510725] :
  (510722 call uint(64)[86] 64)) : _unknown[42] "inline"
  {
    unknown ret[588679] "RVV" "temp"
    (588684 'move' ret[588679](588683 'deref' x[510725]))
    (588681 return ret[588679])
  }
  function conj[510704](arg x[510711] :
  (510708 call uint(64)[86] 32)) : _unknown[42] "inline"
  {
    unknown ret[588688] "RVV" "temp"
    (588693 'move' ret[588688](588692 'deref' x[510711]))
    (588690 return ret[588688])
  }
  function conj[510690](arg x[510697] :
  (510694 call uint(64)[86] 16)) : _unknown[42] "inline"
  {
    unknown ret[588697] "RVV" "temp"
    (588702 'move' ret[588697](588701 'deref' x[510697]))
    (588699 return ret[588697])
  }
  function conj[510676](arg x[510683] :
  (510680 call uint(64)[86] 8)) : _unknown[42] "inline"
  {
    unknown ret[588706] "RVV" "temp"
    (588711 'move' ret[588706](588710 'deref' x[510683]))
    (588708 return ret[588706])
  }
  function conj[510746](arg x[510753] :
  (510750 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[588715] "RVV" "temp"
    (588720 'move' ret[588715](588719 'deref' x[510753]))
    (588717 return ret[588715])
  }
  function conj[510732](arg x[510739] :
  (510736 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588724] "RVV" "temp"
    (588729 'move' ret[588724](588728 'deref' x[510739]))
    (588726 return ret[588724])
  }
  function floor[2420](arg x[2425] :
  (2423 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    (2429 call real(64)[13] 64)
  }
  function floor[2434](arg x[2439] :
  (2437 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588733] "RVV" "temp"
    function floorf[2446](arg x[2451] :
    (2449 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (2455 call real(64)[13] 32)
    }
    unknown call_tmp[735412] "expr temp" "maybe param" "maybe type" "temp"
    (735415 'move' call_tmp[735412](2462 call floorf x[2439]))
    unknown call_tmp[735417] "expr temp" "maybe param" "maybe type" "temp"
    (735420 'move' call_tmp[735417](588738 call real(64)[13] 32))
    (588741 'move' ret[588733](588740 'coerce' call_tmp[735412] call_tmp[735417]))
    (588735 return ret[588733])
  }
  { scopeless type
    (2443 call real(64)[13] 32)
  }
  function inf[2467]() param : _unknown[42] "inline" "no parens"
  {
    unknown ret[588745] "RVV" "param" "temp"
    unknown call_tmp[735422] "expr temp" "maybe param" "maybe type" "temp"
    (735425 'move' call_tmp[735422](588750 call real(64)[13] 64))
    (588753 'move' ret[588745](588752 'coerce' inf call_tmp[735422]))
    (588747 return ret[588745])
  }
  { scopeless type
    (2470 call real(64)[13] 64)
  }
  function isFinite[2478](arg x[2483] :
  (2481 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[588757] "RVV" "temp"
    unknown call_tmp[735427] "expr temp" "maybe param" "maybe type" "temp"
    (735430 'move' call_tmp[735427](2492 call chpl_macro_double_isfinite x[2483]))
    unknown call_tmp[735432] "expr temp" "maybe param" "maybe type" "temp"
    (735435 'move' call_tmp[735432](2489 call : call_tmp[735427] bool[19]))
    (588763 'move' ret[588757](588762 'coerce' call_tmp[735432] bool[19]))
    (588759 return ret[588757])
  }
  { scopeless type
    bool[19]
  }
  function isFinite[2498](arg x[2503] :
  (2501 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588767] "RVV" "temp"
    unknown call_tmp[735437] "expr temp" "maybe param" "maybe type" "temp"
    (735440 'move' call_tmp[735437](2512 call chpl_macro_float_isfinite x[2503]))
    unknown call_tmp[735442] "expr temp" "maybe param" "maybe type" "temp"
    (735445 'move' call_tmp[735442](2509 call : call_tmp[735437] bool[19]))
    (588773 'move' ret[588767](588772 'coerce' call_tmp[735442] bool[19]))
    (588769 return ret[588767])
  }
  { scopeless type
    bool[19]
  }
  function isInf[2518](arg x[2523] :
  (2521 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[588777] "RVV" "temp"
    unknown call_tmp[735447] "expr temp" "maybe param" "maybe type" "temp"
    (735450 'move' call_tmp[735447](2532 call chpl_macro_double_isinf x[2523]))
    unknown call_tmp[735452] "expr temp" "maybe param" "maybe type" "temp"
    (735455 'move' call_tmp[735452](2529 call : call_tmp[735447] bool[19]))
    (588783 'move' ret[588777](588782 'coerce' call_tmp[735452] bool[19]))
    (588779 return ret[588777])
  }
  { scopeless type
    bool[19]
  }
  function isInf[2538](arg x[2543] :
  (2541 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588787] "RVV" "temp"
    unknown call_tmp[735457] "expr temp" "maybe param" "maybe type" "temp"
    (735460 'move' call_tmp[735457](2552 call chpl_macro_float_isinf x[2543]))
    unknown call_tmp[735462] "expr temp" "maybe param" "maybe type" "temp"
    (735465 'move' call_tmp[735462](2549 call : call_tmp[735457] bool[19]))
    (588793 'move' ret[588787](588792 'coerce' call_tmp[735462] bool[19]))
    (588789 return ret[588787])
  }
  { scopeless type
    bool[19]
  }
  function isNan[2558](arg x[2563] :
  (2561 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[588797] "RVV" "temp"
    unknown call_tmp[735467] "expr temp" "maybe param" "maybe type" "temp"
    (735470 'move' call_tmp[735467](2572 call chpl_macro_double_isnan x[2563]))
    unknown call_tmp[735472] "expr temp" "maybe param" "maybe type" "temp"
    (735475 'move' call_tmp[735472](2569 call : call_tmp[735467] bool[19]))
    (588803 'move' ret[588797](588802 'coerce' call_tmp[735472] bool[19]))
    (588799 return ret[588797])
  }
  { scopeless type
    bool[19]
  }
  function isNan[2578](arg x[2583] :
  (2581 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588807] "RVV" "temp"
    unknown call_tmp[735477] "expr temp" "maybe param" "maybe type" "temp"
    (735480 'move' call_tmp[735477](2592 call chpl_macro_float_isnan x[2583]))
    unknown call_tmp[735482] "expr temp" "maybe param" "maybe type" "temp"
    (735485 'move' call_tmp[735482](2589 call : call_tmp[735477] bool[19]))
    (588813 'move' ret[588807](588812 'coerce' call_tmp[735482] bool[19]))
    (588809 return ret[588807])
  }
  { scopeless type
    bool[19]
  }
  function max[2598](arg x[2603] :
  (2601 call int(64)[10] 8), arg y[2609] :
  (2607 call int(64)[10] 8)) : _unknown[42] "inline"
  {
    unknown ret[588817] "RVV" "temp"
    unknown tmp[661593] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661594] "maybe param" "temp"
    unknown call_tmp[735487] "expr temp" "maybe param" "maybe type" "temp"
    (735490 'move' call_tmp[735487](2614 call > x[2603] y[2609]))
    (661599 'move' tmp[661594](661597 call _cond_test call_tmp[735487]))
    if tmp[661594]
    {
      (661604 'move' tmp[661593](661601 '_paramFoldLogical' tmp[661594] x[2603]))
    }
    {
      (661609 'move' tmp[661593](661606 '_paramFoldLogical' tmp[661594] y[2609]))
    }
    (588822 'move' ret[588817](588821 'deref' tmp[661593]))
    (588819 return ret[588817])
  }
  function max[2625](arg x[2630] :
  (2628 call int(64)[10] 16), arg y[2636] :
  (2634 call int(64)[10] 16)) : _unknown[42] "inline"
  {
    unknown ret[588826] "RVV" "temp"
    unknown tmp[661616] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661617] "maybe param" "temp"
    unknown call_tmp[735492] "expr temp" "maybe param" "maybe type" "temp"
    (735495 'move' call_tmp[735492](2641 call > x[2630] y[2636]))
    (661622 'move' tmp[661617](661620 call _cond_test call_tmp[735492]))
    if tmp[661617]
    {
      (661627 'move' tmp[661616](661624 '_paramFoldLogical' tmp[661617] x[2630]))
    }
    {
      (661632 'move' tmp[661616](661629 '_paramFoldLogical' tmp[661617] y[2636]))
    }
    (588831 'move' ret[588826](588830 'deref' tmp[661616]))
    (588828 return ret[588826])
  }
  function max[2652](arg x[2657] :
  (2655 call int(64)[10] 32), arg y[2663] :
  (2661 call int(64)[10] 32)) : _unknown[42] "inline"
  {
    unknown ret[588835] "RVV" "temp"
    unknown tmp[661639] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661640] "maybe param" "temp"
    unknown call_tmp[735497] "expr temp" "maybe param" "maybe type" "temp"
    (735500 'move' call_tmp[735497](2668 call > x[2657] y[2663]))
    (661645 'move' tmp[661640](661643 call _cond_test call_tmp[735497]))
    if tmp[661640]
    {
      (661650 'move' tmp[661639](661647 '_paramFoldLogical' tmp[661640] x[2657]))
    }
    {
      (661655 'move' tmp[661639](661652 '_paramFoldLogical' tmp[661640] y[2663]))
    }
    (588840 'move' ret[588835](588839 'deref' tmp[661639]))
    (588837 return ret[588835])
  }
  function max[2679](arg x[2684] :
  (2682 call int(64)[10] 64), arg y[2690] :
  (2688 call int(64)[10] 64)) : _unknown[42] "inline"
  {
    unknown ret[588844] "RVV" "temp"
    unknown tmp[661662] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661663] "maybe param" "temp"
    unknown call_tmp[735502] "expr temp" "maybe param" "maybe type" "temp"
    (735505 'move' call_tmp[735502](2695 call > x[2684] y[2690]))
    (661668 'move' tmp[661663](661666 call _cond_test call_tmp[735502]))
    if tmp[661663]
    {
      (661673 'move' tmp[661662](661670 '_paramFoldLogical' tmp[661663] x[2684]))
    }
    {
      (661678 'move' tmp[661662](661675 '_paramFoldLogical' tmp[661663] y[2690]))
    }
    (588849 'move' ret[588844](588848 'deref' tmp[661662]))
    (588846 return ret[588844])
  }
  function max[2706](arg x[2711] :
  (2709 call uint(64)[86] 8), arg y[2717] :
  (2715 call uint(64)[86] 8)) : _unknown[42] "inline"
  {
    unknown ret[588853] "RVV" "temp"
    unknown tmp[661685] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661686] "maybe param" "temp"
    unknown call_tmp[735507] "expr temp" "maybe param" "maybe type" "temp"
    (735510 'move' call_tmp[735507](2722 call > x[2711] y[2717]))
    (661691 'move' tmp[661686](661689 call _cond_test call_tmp[735507]))
    if tmp[661686]
    {
      (661696 'move' tmp[661685](661693 '_paramFoldLogical' tmp[661686] x[2711]))
    }
    {
      (661701 'move' tmp[661685](661698 '_paramFoldLogical' tmp[661686] y[2717]))
    }
    (588858 'move' ret[588853](588857 'deref' tmp[661685]))
    (588855 return ret[588853])
  }
  function max[2733](arg x[2738] :
  (2736 call uint(64)[86] 16), arg y[2744] :
  (2742 call uint(64)[86] 16)) : _unknown[42] "inline"
  {
    unknown ret[588862] "RVV" "temp"
    unknown tmp[661708] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661709] "maybe param" "temp"
    unknown call_tmp[735512] "expr temp" "maybe param" "maybe type" "temp"
    (735515 'move' call_tmp[735512](2749 call > x[2738] y[2744]))
    (661714 'move' tmp[661709](661712 call _cond_test call_tmp[735512]))
    if tmp[661709]
    {
      (661719 'move' tmp[661708](661716 '_paramFoldLogical' tmp[661709] x[2738]))
    }
    {
      (661724 'move' tmp[661708](661721 '_paramFoldLogical' tmp[661709] y[2744]))
    }
    (588867 'move' ret[588862](588866 'deref' tmp[661708]))
    (588864 return ret[588862])
  }
  function max[2760](arg x[2765] :
  (2763 call uint(64)[86] 32), arg y[2771] :
  (2769 call uint(64)[86] 32)) : _unknown[42] "inline"
  {
    unknown ret[588871] "RVV" "temp"
    unknown tmp[661731] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661732] "maybe param" "temp"
    unknown call_tmp[735517] "expr temp" "maybe param" "maybe type" "temp"
    (735520 'move' call_tmp[735517](2776 call > x[2765] y[2771]))
    (661737 'move' tmp[661732](661735 call _cond_test call_tmp[735517]))
    if tmp[661732]
    {
      (661742 'move' tmp[661731](661739 '_paramFoldLogical' tmp[661732] x[2765]))
    }
    {
      (661747 'move' tmp[661731](661744 '_paramFoldLogical' tmp[661732] y[2771]))
    }
    (588876 'move' ret[588871](588875 'deref' tmp[661731]))
    (588873 return ret[588871])
  }
  function max[2787](arg x[2792] :
  (2790 call uint(64)[86] 64), arg y[2798] :
  (2796 call uint(64)[86] 64)) : _unknown[42] "inline"
  {
    unknown ret[588880] "RVV" "temp"
    unknown tmp[661754] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661755] "maybe param" "temp"
    unknown call_tmp[735522] "expr temp" "maybe param" "maybe type" "temp"
    (735525 'move' call_tmp[735522](2803 call > x[2792] y[2798]))
    (661760 'move' tmp[661755](661758 call _cond_test call_tmp[735522]))
    if tmp[661755]
    {
      (661765 'move' tmp[661754](661762 '_paramFoldLogical' tmp[661755] x[2792]))
    }
    {
      (661770 'move' tmp[661754](661767 '_paramFoldLogical' tmp[661755] y[2798]))
    }
    (588885 'move' ret[588880](588884 'deref' tmp[661754]))
    (588882 return ret[588880])
  }
  function max[2814](arg x[2819] :
  (2817 call real(64)[13] 32), arg y[2825] :
  (2823 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[588889] "RVV" "temp"
    unknown tmp[475758] "maybe param" "temp"
    (475769 'move' tmp[475758](2832 call > x[2819] y[2825]))
    unknown call_tmp[735527] "expr temp" "maybe param" "maybe type" "temp"
    (735530 'move' call_tmp[735527](475771 call _cond_invalid tmp[475758]))
    if call_tmp[735527]
    {
      (475774 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[661777] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661778] "maybe param" "temp"
    unknown call_tmp[735532] "expr temp" "maybe param" "maybe type" "temp"
    (735535 'move' call_tmp[735532](475759 call isTrue tmp[475758]))
    (661783 'move' tmp[661778](661781 call _cond_test call_tmp[735532]))
    if tmp[661778]
    {
      (661788 'move' tmp[661777](661785 '_paramFoldLogical' tmp[661778] 1))
    }
    {
      unknown tmp[661790] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735537] "expr temp" "maybe param" "maybe type" "temp"
      (735540 'move' call_tmp[735537](2837 call isNan x[2819]))
      (661792 'move' tmp[661790](475763 call isTrue call_tmp[735537]))
      (661797 'move' tmp[661777](661794 '_paramFoldLogical' tmp[661778] tmp[661790]))
    }
    unknown tmp[661804] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661805] "maybe param" "temp"
    (661810 'move' tmp[661805](661808 call _cond_test tmp[661777]))
    if tmp[661805]
    {
      (661815 'move' tmp[661804](661812 '_paramFoldLogical' tmp[661805] x[2819]))
    }
    {
      (661820 'move' tmp[661804](661817 '_paramFoldLogical' tmp[661805] y[2825]))
    }
    (588894 'move' ret[588889](588893 'deref' tmp[661804]))
    (588891 return ret[588889])
  }
  function max[2846](arg x[2851] :
  (2849 call real(64)[13] 64), arg y[2857] :
  (2855 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[588898] "RVV" "temp"
    unknown tmp[475779] "maybe param" "temp"
    (475790 'move' tmp[475779](2864 call > x[2851] y[2857]))
    unknown call_tmp[735542] "expr temp" "maybe param" "maybe type" "temp"
    (735545 'move' call_tmp[735542](475792 call _cond_invalid tmp[475779]))
    if call_tmp[735542]
    {
      (475795 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[661827] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661828] "maybe param" "temp"
    unknown call_tmp[735547] "expr temp" "maybe param" "maybe type" "temp"
    (735550 'move' call_tmp[735547](475780 call isTrue tmp[475779]))
    (661833 'move' tmp[661828](661831 call _cond_test call_tmp[735547]))
    if tmp[661828]
    {
      (661838 'move' tmp[661827](661835 '_paramFoldLogical' tmp[661828] 1))
    }
    {
      unknown tmp[661840] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735552] "expr temp" "maybe param" "maybe type" "temp"
      (735555 'move' call_tmp[735552](2869 call isNan x[2851]))
      (661842 'move' tmp[661840](475784 call isTrue call_tmp[735552]))
      (661847 'move' tmp[661827](661844 '_paramFoldLogical' tmp[661828] tmp[661840]))
    }
    unknown tmp[661854] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661855] "maybe param" "temp"
    (661860 'move' tmp[661855](661858 call _cond_test tmp[661827]))
    if tmp[661855]
    {
      (661865 'move' tmp[661854](661862 '_paramFoldLogical' tmp[661855] x[2851]))
    }
    {
      (661870 'move' tmp[661854](661867 '_paramFoldLogical' tmp[661855] y[2857]))
    }
    (588903 'move' ret[588898](588902 'deref' tmp[661854]))
    (588900 return ret[588898])
  }
  function max[2878](arg x[2883] :
  (2881 call int(64)[10] 8), arg y[2889] :
  (2887 call uint(64)[86] 8)) : _unknown[42] "inline"
  {
    unknown ret[588907] "RVV" "temp"
    unknown tmp[661877] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661878] "maybe param" "temp"
    unknown call_tmp[735557] "expr temp" "maybe param" "maybe type" "temp"
    (735560 'move' call_tmp[735557](2894 call > x[2883] y[2889]))
    (661883 'move' tmp[661878](661881 call _cond_test call_tmp[735557]))
    if tmp[661878]
    {
      unknown tmp[661885] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735562] "expr temp" "maybe param" "maybe type" "temp"
      (735565 'move' call_tmp[735562](2902 call uint(64)[86] 8))
      (661887 'move' tmp[661885](2898 call : x[2883] call_tmp[735562]))
      (661892 'move' tmp[661877](661889 '_paramFoldLogical' tmp[661878] tmp[661885]))
    }
    {
      (661897 'move' tmp[661877](661894 '_paramFoldLogical' tmp[661878] y[2889]))
    }
    (588912 'move' ret[588907](588911 'deref' tmp[661877]))
    (588909 return ret[588907])
  }
  function max[2910](arg x[2915] :
  (2913 call int(64)[10] 16), arg y[2921] :
  (2919 call uint(64)[86] 16)) : _unknown[42] "inline"
  {
    unknown ret[588916] "RVV" "temp"
    unknown tmp[661904] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661905] "maybe param" "temp"
    unknown call_tmp[735567] "expr temp" "maybe param" "maybe type" "temp"
    (735570 'move' call_tmp[735567](2926 call > x[2915] y[2921]))
    (661910 'move' tmp[661905](661908 call _cond_test call_tmp[735567]))
    if tmp[661905]
    {
      unknown tmp[661912] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735572] "expr temp" "maybe param" "maybe type" "temp"
      (735575 'move' call_tmp[735572](2934 call uint(64)[86] 16))
      (661914 'move' tmp[661912](2930 call : x[2915] call_tmp[735572]))
      (661919 'move' tmp[661904](661916 '_paramFoldLogical' tmp[661905] tmp[661912]))
    }
    {
      (661924 'move' tmp[661904](661921 '_paramFoldLogical' tmp[661905] y[2921]))
    }
    (588921 'move' ret[588916](588920 'deref' tmp[661904]))
    (588918 return ret[588916])
  }
  function max[2942](arg x[2947] :
  (2945 call int(64)[10] 32), arg y[2953] :
  (2951 call uint(64)[86] 32)) : _unknown[42] "inline"
  {
    unknown ret[588925] "RVV" "temp"
    unknown tmp[661931] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661932] "maybe param" "temp"
    unknown call_tmp[735577] "expr temp" "maybe param" "maybe type" "temp"
    (735580 'move' call_tmp[735577](2958 call > x[2947] y[2953]))
    (661937 'move' tmp[661932](661935 call _cond_test call_tmp[735577]))
    if tmp[661932]
    {
      unknown tmp[661939] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735582] "expr temp" "maybe param" "maybe type" "temp"
      (735585 'move' call_tmp[735582](2966 call uint(64)[86] 32))
      (661941 'move' tmp[661939](2962 call : x[2947] call_tmp[735582]))
      (661946 'move' tmp[661931](661943 '_paramFoldLogical' tmp[661932] tmp[661939]))
    }
    {
      (661951 'move' tmp[661931](661948 '_paramFoldLogical' tmp[661932] y[2953]))
    }
    (588930 'move' ret[588925](588929 'deref' tmp[661931]))
    (588927 return ret[588925])
  }
  function max[2974](arg x[2979] :
  (2977 call int(64)[10] 64), arg y[2985] :
  (2983 call uint(64)[86] 64)) : _unknown[42] "inline"
  {
    unknown ret[588934] "RVV" "temp"
    unknown tmp[661958] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661959] "maybe param" "temp"
    unknown call_tmp[735587] "expr temp" "maybe param" "maybe type" "temp"
    (735590 'move' call_tmp[735587](2990 call > x[2979] y[2985]))
    (661964 'move' tmp[661959](661962 call _cond_test call_tmp[735587]))
    if tmp[661959]
    {
      unknown tmp[661966] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735592] "expr temp" "maybe param" "maybe type" "temp"
      (735595 'move' call_tmp[735592](2998 call uint(64)[86] 64))
      (661968 'move' tmp[661966](2994 call : x[2979] call_tmp[735592]))
      (661973 'move' tmp[661958](661970 '_paramFoldLogical' tmp[661959] tmp[661966]))
    }
    {
      (661978 'move' tmp[661958](661975 '_paramFoldLogical' tmp[661959] y[2985]))
    }
    (588939 'move' ret[588934](588938 'deref' tmp[661958]))
    (588936 return ret[588934])
  }
  function max[3006](arg x[3011] :
  (3009 call uint(64)[86] 8), arg y[3017] :
  (3015 call int(64)[10] 8)) : _unknown[42] "inline"
  {
    unknown ret[588943] "RVV" "temp"
    unknown tmp[661985] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[661986] "maybe param" "temp"
    unknown call_tmp[735597] "expr temp" "maybe param" "maybe type" "temp"
    (735600 'move' call_tmp[735597](3022 call > x[3011] y[3017]))
    (661991 'move' tmp[661986](661989 call _cond_test call_tmp[735597]))
    if tmp[661986]
    {
      (661996 'move' tmp[661985](661993 '_paramFoldLogical' tmp[661986] x[3011]))
    }
    {
      unknown tmp[661998] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735602] "expr temp" "maybe param" "maybe type" "temp"
      (735605 'move' call_tmp[735602](3031 call uint(64)[86] 8))
      (662000 'move' tmp[661998](3027 call : y[3017] call_tmp[735602]))
      (662005 'move' tmp[661985](662002 '_paramFoldLogical' tmp[661986] tmp[661998]))
    }
    (588948 'move' ret[588943](588947 'deref' tmp[661985]))
    (588945 return ret[588943])
  }
  function max[3038](arg x[3043] :
  (3041 call uint(64)[86] 16), arg y[3049] :
  (3047 call int(64)[10] 16)) : _unknown[42] "inline"
  {
    unknown ret[588952] "RVV" "temp"
    unknown tmp[662012] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662013] "maybe param" "temp"
    unknown call_tmp[735607] "expr temp" "maybe param" "maybe type" "temp"
    (735610 'move' call_tmp[735607](3054 call > x[3043] y[3049]))
    (662018 'move' tmp[662013](662016 call _cond_test call_tmp[735607]))
    if tmp[662013]
    {
      (662023 'move' tmp[662012](662020 '_paramFoldLogical' tmp[662013] x[3043]))
    }
    {
      unknown tmp[662025] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735612] "expr temp" "maybe param" "maybe type" "temp"
      (735615 'move' call_tmp[735612](3063 call uint(64)[86] 16))
      (662027 'move' tmp[662025](3059 call : y[3049] call_tmp[735612]))
      (662032 'move' tmp[662012](662029 '_paramFoldLogical' tmp[662013] tmp[662025]))
    }
    (588957 'move' ret[588952](588956 'deref' tmp[662012]))
    (588954 return ret[588952])
  }
  function max[3070](arg x[3075] :
  (3073 call uint(64)[86] 32), arg y[3081] :
  (3079 call int(64)[10] 32)) : _unknown[42] "inline"
  {
    unknown ret[588961] "RVV" "temp"
    unknown tmp[662039] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662040] "maybe param" "temp"
    unknown call_tmp[735617] "expr temp" "maybe param" "maybe type" "temp"
    (735620 'move' call_tmp[735617](3086 call > x[3075] y[3081]))
    (662045 'move' tmp[662040](662043 call _cond_test call_tmp[735617]))
    if tmp[662040]
    {
      (662050 'move' tmp[662039](662047 '_paramFoldLogical' tmp[662040] x[3075]))
    }
    {
      unknown tmp[662052] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735622] "expr temp" "maybe param" "maybe type" "temp"
      (735625 'move' call_tmp[735622](3095 call uint(64)[86] 32))
      (662054 'move' tmp[662052](3091 call : y[3081] call_tmp[735622]))
      (662059 'move' tmp[662039](662056 '_paramFoldLogical' tmp[662040] tmp[662052]))
    }
    (588966 'move' ret[588961](588965 'deref' tmp[662039]))
    (588963 return ret[588961])
  }
  function max[3102](arg x[3107] :
  (3105 call uint(64)[86] 64), arg y[3113] :
  (3111 call int(64)[10] 64)) : _unknown[42] "inline"
  {
    unknown ret[588970] "RVV" "temp"
    unknown tmp[662066] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662067] "maybe param" "temp"
    unknown call_tmp[735627] "expr temp" "maybe param" "maybe type" "temp"
    (735630 'move' call_tmp[735627](3118 call > x[3107] y[3113]))
    (662072 'move' tmp[662067](662070 call _cond_test call_tmp[735627]))
    if tmp[662067]
    {
      (662077 'move' tmp[662066](662074 '_paramFoldLogical' tmp[662067] x[3107]))
    }
    {
      unknown tmp[662079] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735632] "expr temp" "maybe param" "maybe type" "temp"
      (735635 'move' call_tmp[735632](3127 call uint(64)[86] 64))
      (662081 'move' tmp[662079](3123 call : y[3113] call_tmp[735632]))
      (662086 'move' tmp[662066](662083 '_paramFoldLogical' tmp[662067] tmp[662079]))
    }
    (588975 'move' ret[588970](588974 'deref' tmp[662066]))
    (588972 return ret[588970])
  }
  function max[3134](arg x[3136]:_any[141](?), arg y[3138]:_any[141](?)) : _unknown[42] "last resort" "no return value for void"
  {
    (3152 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
    (588977 return _void[46])
  }
  where {
    unknown tmp[475800] "maybe param" "temp"
    unknown call_tmp[735637] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735640 'move' call_tmp[735637](3145 'typeof' x[3136]))
    (475811 'move' tmp[475800](3143 call isAtomicType call_tmp[735637]))
    unknown call_tmp[735642] "expr temp" "maybe param" "maybe type" "temp"
    (735645 'move' call_tmp[735642](475813 call _cond_invalid tmp[475800]))
    if call_tmp[735642]
    {
      (475816 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[662093] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662094] "maybe param" "temp"
    unknown call_tmp[735647] "expr temp" "maybe param" "maybe type" "temp"
    (735650 'move' call_tmp[735647](475801 call isTrue tmp[475800]))
    (662099 'move' tmp[662094](662097 call _cond_test call_tmp[735647]))
    if tmp[662094]
    {
      (662104 'move' tmp[662093](662101 '_paramFoldLogical' tmp[662094] 1))
    }
    {
      unknown tmp[662106] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735652] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735655 'move' call_tmp[735652](3149 'typeof' y[3138]))
      unknown call_tmp[735657] "expr temp" "maybe param" "maybe type" "temp"
      (735660 'move' call_tmp[735657](3147 call isAtomicType call_tmp[735652]))
      (662108 'move' tmp[662106](475805 call isTrue call_tmp[735657]))
      (662113 'move' tmp[662093](662110 '_paramFoldLogical' tmp[662094] tmp[662106]))
    }
    (1001322 call chpl_statementLevelSymbol tmp[662093])
  }
  function max[3159](arg x[3161]:_any[141](?), arg y[3163]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[588981] "RVV" "temp"
    unknown tmp[662120] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662121] "maybe param" "temp"
    unknown call_tmp[735662] "expr temp" "maybe param" "maybe type" "temp"
    (735665 'move' call_tmp[735662](3197 call > x[3161] y[3163]))
    (662126 'move' tmp[662121](662124 call _cond_test call_tmp[735662]))
    if tmp[662121]
    {
      (662131 'move' tmp[662120](662128 '_paramFoldLogical' tmp[662121] x[3161]))
    }
    {
      (662136 'move' tmp[662120](662133 '_paramFoldLogical' tmp[662121] y[3163]))
    }
    (588986 'move' ret[588981](588985 'deref' tmp[662120]))
    (588983 return ret[588981])
  }
  where {
    unknown tmp[475821] "maybe param" "temp"
    unknown tmp[475842] "maybe param" "temp"
    unknown call_tmp[735667] "expr temp" "maybe param" "maybe type" "temp"
    (735670 'move' call_tmp[735667](3172 call isArray x[3161]))
    (475853 'move' tmp[475842](3169 call ! call_tmp[735667]))
    unknown call_tmp[735672] "expr temp" "maybe param" "maybe type" "temp"
    (735675 'move' call_tmp[735672](475855 call _cond_invalid tmp[475842]))
    if call_tmp[735672]
    {
      (475858 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[662143] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662144] "maybe param" "temp"
    unknown call_tmp[735677] "expr temp" "maybe param" "maybe type" "temp"
    (735680 'move' call_tmp[735677](475843 call isTrue tmp[475842]))
    (662149 'move' tmp[662144](662147 call _cond_test call_tmp[735677]))
    if tmp[662144]
    {
      unknown tmp[662151] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735682] "expr temp" "maybe param" "maybe type" "temp"
      (735685 'move' call_tmp[735682](3177 call isArray y[3163]))
      unknown call_tmp[735687] "expr temp" "maybe param" "maybe type" "temp"
      (735690 'move' call_tmp[735687](3174 call ! call_tmp[735682]))
      (662153 'move' tmp[662151](475846 call isTrue call_tmp[735687]))
      (662158 'move' tmp[662143](662155 '_paramFoldLogical' tmp[662144] tmp[662151]))
    }
    {
      (662163 'move' tmp[662143](662160 '_paramFoldLogical' tmp[662144] 0))
    }
    (475832 'move' tmp[475821] tmp[662143])
    unknown call_tmp[735692] "expr temp" "maybe param" "maybe type" "temp"
    (735695 'move' call_tmp[735692](475834 call _cond_invalid tmp[475821]))
    if call_tmp[735692]
    {
      (475837 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[662197] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662198] "maybe param" "temp"
    unknown call_tmp[735697] "expr temp" "maybe param" "maybe type" "temp"
    (735700 'move' call_tmp[735697](475822 call isTrue tmp[475821]))
    (662203 'move' tmp[662198](662201 call _cond_test call_tmp[735697]))
    if tmp[662198]
    {
      unknown tmp[475863] "maybe param" "temp"
      unknown call_tmp[735702] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735705 'move' call_tmp[735702](3188 'typeof' x[3161]))
      unknown call_tmp[735707] "expr temp" "maybe param" "maybe type" "temp"
      (735710 'move' call_tmp[735707](3186 call _desync call_tmp[735702]))
      (475874 'move' tmp[475863](3184 call isNumeric call_tmp[735707]))
      unknown call_tmp[735712] "expr temp" "maybe param" "maybe type" "temp"
      (735715 'move' call_tmp[735712](475876 call _cond_invalid tmp[475863]))
      if call_tmp[735712]
      {
        (475879 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[662170] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[662171] "maybe param" "temp"
      unknown call_tmp[735717] "expr temp" "maybe param" "maybe type" "temp"
      (735720 'move' call_tmp[735717](475864 call isTrue tmp[475863]))
      (662176 'move' tmp[662171](662174 call _cond_test call_tmp[735717]))
      if tmp[662171]
      {
        unknown tmp[662178] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[735722] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (735725 'move' call_tmp[735722](3194 'typeof' y[3163]))
        unknown call_tmp[735727] "expr temp" "maybe param" "maybe type" "temp"
        (735730 'move' call_tmp[735727](3192 call _desync call_tmp[735722]))
        unknown call_tmp[735732] "expr temp" "maybe param" "maybe type" "temp"
        (735735 'move' call_tmp[735732](3190 call isNumeric call_tmp[735727]))
        (662180 'move' tmp[662178](475867 call isTrue call_tmp[735732]))
        (662185 'move' tmp[662170](662182 '_paramFoldLogical' tmp[662171] tmp[662178]))
      }
      {
        (662190 'move' tmp[662170](662187 '_paramFoldLogical' tmp[662171] 0))
      }
      unknown tmp[662205] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735737] "expr temp" "maybe param" "maybe type" "temp"
      (735740 'move' call_tmp[735737](3179 call ! tmp[662170]))
      (662207 'move' tmp[662205](475825 call isTrue call_tmp[735737]))
      (662212 'move' tmp[662197](662209 '_paramFoldLogical' tmp[662198] tmp[662205]))
    }
    {
      (662217 'move' tmp[662197](662214 '_paramFoldLogical' tmp[662198] 0))
    }
    (1001324 call chpl_statementLevelSymbol tmp[662197])
  }
  function max[3209](arg x[3211]:_any[141](?), arg y[3213]:_any[141](?), arg z[3217]:_any[141](?) ...) : _unknown[42] "inline"
  {
    unknown ret[588990] "RVV" "temp"
    unknown call_tmp[735742] "expr temp" "maybe param" "maybe type" "temp"
    (735745 'move' call_tmp[735742](3225 call max x[3211] y[3213]))
    unknown call_tmp[735747] "expr temp" "maybe param" "maybe type" "temp"
    (735750 'move' call_tmp[735747](3223 call max call_tmp[735742](3229 'expand_tuple' z[3217])))
    (588995 'move' ret[588990](588994 'deref' call_tmp[735747]))
    (588992 return ret[588990])
  }
  function max[3232](param arg x[3235]:numeric[162](?), param arg y[3239]:numeric[162](?)) param : _unknown[42] "inline"
  {
    unknown ret[588999] "RVV" "param" "temp"
    unknown tmp[662224] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662225] "maybe param" "temp"
    unknown call_tmp[735752] "expr temp" "maybe param" "maybe type" "temp"
    (735755 'move' call_tmp[735752](3254 call > x[3235] y[3239]))
    (662230 'move' tmp[662225](662228 call _cond_test call_tmp[735752]))
    if tmp[662225]
    {
      (662235 'move' tmp[662224](662232 '_paramFoldLogical' tmp[662225] x[3235]))
    }
    {
      (662240 'move' tmp[662224](662237 '_paramFoldLogical' tmp[662225] y[3239]))
    }
    (589004 'move' ret[588999](589003 'deref' tmp[662224]))
    (589001 return ret[588999])
  }
  where {
    unknown tmp[475884] "maybe param" "temp"
    (475895 'move' tmp[475884](3247 call isComplex x[3235]))
    unknown call_tmp[735757] "expr temp" "maybe param" "maybe type" "temp"
    (735760 'move' call_tmp[735757](475897 call _cond_invalid tmp[475884]))
    if call_tmp[735757]
    {
      (475900 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[662247] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662248] "maybe param" "temp"
    unknown call_tmp[735762] "expr temp" "maybe param" "maybe type" "temp"
    (735765 'move' call_tmp[735762](475885 call isTrue tmp[475884]))
    (662253 'move' tmp[662248](662251 call _cond_test call_tmp[735762]))
    if tmp[662248]
    {
      (662258 'move' tmp[662247](662255 '_paramFoldLogical' tmp[662248] 1))
    }
    {
      unknown tmp[662260] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735767] "expr temp" "maybe param" "maybe type" "temp"
      (735770 'move' call_tmp[735767](3250 call isComplex y[3239]))
      (662262 'move' tmp[662260](475889 call isTrue call_tmp[735767]))
      (662267 'move' tmp[662247](662264 '_paramFoldLogical' tmp[662248] tmp[662260]))
    }
    (3242 call ! tmp[662247])
  }
  function min[3266](arg x[3271] :
  (3269 call int(64)[10] 8), arg y[3277] :
  (3275 call int(64)[10] 8)) : _unknown[42] "inline"
  {
    unknown ret[589008] "RVV" "temp"
    unknown tmp[662274] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662275] "maybe param" "temp"
    unknown call_tmp[735772] "expr temp" "maybe param" "maybe type" "temp"
    (735775 'move' call_tmp[735772](3282 call < x[3271] y[3277]))
    (662280 'move' tmp[662275](662278 call _cond_test call_tmp[735772]))
    if tmp[662275]
    {
      (662285 'move' tmp[662274](662282 '_paramFoldLogical' tmp[662275] x[3271]))
    }
    {
      (662290 'move' tmp[662274](662287 '_paramFoldLogical' tmp[662275] y[3277]))
    }
    (589013 'move' ret[589008](589012 'deref' tmp[662274]))
    (589010 return ret[589008])
  }
  function min[3293](arg x[3298] :
  (3296 call int(64)[10] 16), arg y[3304] :
  (3302 call int(64)[10] 16)) : _unknown[42] "inline"
  {
    unknown ret[589017] "RVV" "temp"
    unknown tmp[662297] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662298] "maybe param" "temp"
    unknown call_tmp[735777] "expr temp" "maybe param" "maybe type" "temp"
    (735780 'move' call_tmp[735777](3309 call < x[3298] y[3304]))
    (662303 'move' tmp[662298](662301 call _cond_test call_tmp[735777]))
    if tmp[662298]
    {
      (662308 'move' tmp[662297](662305 '_paramFoldLogical' tmp[662298] x[3298]))
    }
    {
      (662313 'move' tmp[662297](662310 '_paramFoldLogical' tmp[662298] y[3304]))
    }
    (589022 'move' ret[589017](589021 'deref' tmp[662297]))
    (589019 return ret[589017])
  }
  function min[3320](arg x[3325] :
  (3323 call int(64)[10] 32), arg y[3331] :
  (3329 call int(64)[10] 32)) : _unknown[42] "inline"
  {
    unknown ret[589026] "RVV" "temp"
    unknown tmp[662320] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662321] "maybe param" "temp"
    unknown call_tmp[735782] "expr temp" "maybe param" "maybe type" "temp"
    (735785 'move' call_tmp[735782](3336 call < x[3325] y[3331]))
    (662326 'move' tmp[662321](662324 call _cond_test call_tmp[735782]))
    if tmp[662321]
    {
      (662331 'move' tmp[662320](662328 '_paramFoldLogical' tmp[662321] x[3325]))
    }
    {
      (662336 'move' tmp[662320](662333 '_paramFoldLogical' tmp[662321] y[3331]))
    }
    (589031 'move' ret[589026](589030 'deref' tmp[662320]))
    (589028 return ret[589026])
  }
  function min[3347](arg x[3352] :
  (3350 call int(64)[10] 64), arg y[3358] :
  (3356 call int(64)[10] 64)) : _unknown[42] "inline"
  {
    unknown ret[589035] "RVV" "temp"
    unknown tmp[662343] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662344] "maybe param" "temp"
    unknown call_tmp[735787] "expr temp" "maybe param" "maybe type" "temp"
    (735790 'move' call_tmp[735787](3363 call < x[3352] y[3358]))
    (662349 'move' tmp[662344](662347 call _cond_test call_tmp[735787]))
    if tmp[662344]
    {
      (662354 'move' tmp[662343](662351 '_paramFoldLogical' tmp[662344] x[3352]))
    }
    {
      (662359 'move' tmp[662343](662356 '_paramFoldLogical' tmp[662344] y[3358]))
    }
    (589040 'move' ret[589035](589039 'deref' tmp[662343]))
    (589037 return ret[589035])
  }
  function min[3374](arg x[3379] :
  (3377 call uint(64)[86] 8), arg y[3385] :
  (3383 call uint(64)[86] 8)) : _unknown[42] "inline"
  {
    unknown ret[589044] "RVV" "temp"
    unknown tmp[662366] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662367] "maybe param" "temp"
    unknown call_tmp[735792] "expr temp" "maybe param" "maybe type" "temp"
    (735795 'move' call_tmp[735792](3390 call < x[3379] y[3385]))
    (662372 'move' tmp[662367](662370 call _cond_test call_tmp[735792]))
    if tmp[662367]
    {
      (662377 'move' tmp[662366](662374 '_paramFoldLogical' tmp[662367] x[3379]))
    }
    {
      (662382 'move' tmp[662366](662379 '_paramFoldLogical' tmp[662367] y[3385]))
    }
    (589049 'move' ret[589044](589048 'deref' tmp[662366]))
    (589046 return ret[589044])
  }
  function min[3401](arg x[3406] :
  (3404 call uint(64)[86] 16), arg y[3412] :
  (3410 call uint(64)[86] 16)) : _unknown[42] "inline"
  {
    unknown ret[589053] "RVV" "temp"
    unknown tmp[662389] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662390] "maybe param" "temp"
    unknown call_tmp[735797] "expr temp" "maybe param" "maybe type" "temp"
    (735800 'move' call_tmp[735797](3417 call < x[3406] y[3412]))
    (662395 'move' tmp[662390](662393 call _cond_test call_tmp[735797]))
    if tmp[662390]
    {
      (662400 'move' tmp[662389](662397 '_paramFoldLogical' tmp[662390] x[3406]))
    }
    {
      (662405 'move' tmp[662389](662402 '_paramFoldLogical' tmp[662390] y[3412]))
    }
    (589058 'move' ret[589053](589057 'deref' tmp[662389]))
    (589055 return ret[589053])
  }
  function min[3428](arg x[3433] :
  (3431 call uint(64)[86] 32), arg y[3439] :
  (3437 call uint(64)[86] 32)) : _unknown[42] "inline"
  {
    unknown ret[589062] "RVV" "temp"
    unknown tmp[662412] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662413] "maybe param" "temp"
    unknown call_tmp[735802] "expr temp" "maybe param" "maybe type" "temp"
    (735805 'move' call_tmp[735802](3444 call < x[3433] y[3439]))
    (662418 'move' tmp[662413](662416 call _cond_test call_tmp[735802]))
    if tmp[662413]
    {
      (662423 'move' tmp[662412](662420 '_paramFoldLogical' tmp[662413] x[3433]))
    }
    {
      (662428 'move' tmp[662412](662425 '_paramFoldLogical' tmp[662413] y[3439]))
    }
    (589067 'move' ret[589062](589066 'deref' tmp[662412]))
    (589064 return ret[589062])
  }
  function min[3455](arg x[3460] :
  (3458 call uint(64)[86] 64), arg y[3466] :
  (3464 call uint(64)[86] 64)) : _unknown[42] "inline"
  {
    unknown ret[589071] "RVV" "temp"
    unknown tmp[662435] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662436] "maybe param" "temp"
    unknown call_tmp[735807] "expr temp" "maybe param" "maybe type" "temp"
    (735810 'move' call_tmp[735807](3471 call < x[3460] y[3466]))
    (662441 'move' tmp[662436](662439 call _cond_test call_tmp[735807]))
    if tmp[662436]
    {
      (662446 'move' tmp[662435](662443 '_paramFoldLogical' tmp[662436] x[3460]))
    }
    {
      (662451 'move' tmp[662435](662448 '_paramFoldLogical' tmp[662436] y[3466]))
    }
    (589076 'move' ret[589071](589075 'deref' tmp[662435]))
    (589073 return ret[589071])
  }
  function min[3482](arg x[3487] :
  (3485 call real(64)[13] 32), arg y[3493] :
  (3491 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[589080] "RVV" "temp"
    unknown tmp[475905] "maybe param" "temp"
    (475916 'move' tmp[475905](3500 call < x[3487] y[3493]))
    unknown call_tmp[735812] "expr temp" "maybe param" "maybe type" "temp"
    (735815 'move' call_tmp[735812](475918 call _cond_invalid tmp[475905]))
    if call_tmp[735812]
    {
      (475921 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[662458] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662459] "maybe param" "temp"
    unknown call_tmp[735817] "expr temp" "maybe param" "maybe type" "temp"
    (735820 'move' call_tmp[735817](475906 call isTrue tmp[475905]))
    (662464 'move' tmp[662459](662462 call _cond_test call_tmp[735817]))
    if tmp[662459]
    {
      (662469 'move' tmp[662458](662466 '_paramFoldLogical' tmp[662459] 1))
    }
    {
      unknown tmp[662471] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735822] "expr temp" "maybe param" "maybe type" "temp"
      (735825 'move' call_tmp[735822](3505 call isNan x[3487]))
      (662473 'move' tmp[662471](475910 call isTrue call_tmp[735822]))
      (662478 'move' tmp[662458](662475 '_paramFoldLogical' tmp[662459] tmp[662471]))
    }
    unknown tmp[662485] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662486] "maybe param" "temp"
    (662491 'move' tmp[662486](662489 call _cond_test tmp[662458]))
    if tmp[662486]
    {
      (662496 'move' tmp[662485](662493 '_paramFoldLogical' tmp[662486] x[3487]))
    }
    {
      (662501 'move' tmp[662485](662498 '_paramFoldLogical' tmp[662486] y[3493]))
    }
    (589085 'move' ret[589080](589084 'deref' tmp[662485]))
    (589082 return ret[589080])
  }
  function min[3514](arg x[3519] :
  (3517 call real(64)[13] 64), arg y[3525] :
  (3523 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[589089] "RVV" "temp"
    unknown tmp[475926] "maybe param" "temp"
    (475937 'move' tmp[475926](3532 call < x[3519] y[3525]))
    unknown call_tmp[735827] "expr temp" "maybe param" "maybe type" "temp"
    (735830 'move' call_tmp[735827](475939 call _cond_invalid tmp[475926]))
    if call_tmp[735827]
    {
      (475942 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[662508] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662509] "maybe param" "temp"
    unknown call_tmp[735832] "expr temp" "maybe param" "maybe type" "temp"
    (735835 'move' call_tmp[735832](475927 call isTrue tmp[475926]))
    (662514 'move' tmp[662509](662512 call _cond_test call_tmp[735832]))
    if tmp[662509]
    {
      (662519 'move' tmp[662508](662516 '_paramFoldLogical' tmp[662509] 1))
    }
    {
      unknown tmp[662521] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735837] "expr temp" "maybe param" "maybe type" "temp"
      (735840 'move' call_tmp[735837](3537 call isNan x[3519]))
      (662523 'move' tmp[662521](475931 call isTrue call_tmp[735837]))
      (662528 'move' tmp[662508](662525 '_paramFoldLogical' tmp[662509] tmp[662521]))
    }
    unknown tmp[662535] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662536] "maybe param" "temp"
    (662541 'move' tmp[662536](662539 call _cond_test tmp[662508]))
    if tmp[662536]
    {
      (662546 'move' tmp[662535](662543 '_paramFoldLogical' tmp[662536] x[3519]))
    }
    {
      (662551 'move' tmp[662535](662548 '_paramFoldLogical' tmp[662536] y[3525]))
    }
    (589094 'move' ret[589089](589093 'deref' tmp[662535]))
    (589091 return ret[589089])
  }
  function min[3546](arg x[3551] :
  (3549 call int(64)[10] 8), arg y[3557] :
  (3555 call uint(64)[86] 8)) : _unknown[42] "inline"
  {
    unknown ret[589098] "RVV" "temp"
    unknown tmp[662558] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662559] "maybe param" "temp"
    unknown call_tmp[735842] "expr temp" "maybe param" "maybe type" "temp"
    (735845 'move' call_tmp[735842](3562 call < x[3551] y[3557]))
    (662564 'move' tmp[662559](662562 call _cond_test call_tmp[735842]))
    if tmp[662559]
    {
      (662569 'move' tmp[662558](662566 '_paramFoldLogical' tmp[662559] x[3551]))
    }
    {
      unknown tmp[662571] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735847] "expr temp" "maybe param" "maybe type" "temp"
      (735850 'move' call_tmp[735847](3571 call int(64)[10] 8))
      (662573 'move' tmp[662571](3567 call : y[3557] call_tmp[735847]))
      (662578 'move' tmp[662558](662575 '_paramFoldLogical' tmp[662559] tmp[662571]))
    }
    (589103 'move' ret[589098](589102 'deref' tmp[662558]))
    (589100 return ret[589098])
  }
  function min[3578](arg x[3583] :
  (3581 call int(64)[10] 16), arg y[3589] :
  (3587 call uint(64)[86] 16)) : _unknown[42] "inline"
  {
    unknown ret[589107] "RVV" "temp"
    unknown tmp[662585] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662586] "maybe param" "temp"
    unknown call_tmp[735852] "expr temp" "maybe param" "maybe type" "temp"
    (735855 'move' call_tmp[735852](3594 call < x[3583] y[3589]))
    (662591 'move' tmp[662586](662589 call _cond_test call_tmp[735852]))
    if tmp[662586]
    {
      (662596 'move' tmp[662585](662593 '_paramFoldLogical' tmp[662586] x[3583]))
    }
    {
      unknown tmp[662598] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735857] "expr temp" "maybe param" "maybe type" "temp"
      (735860 'move' call_tmp[735857](3603 call int(64)[10] 16))
      (662600 'move' tmp[662598](3599 call : y[3589] call_tmp[735857]))
      (662605 'move' tmp[662585](662602 '_paramFoldLogical' tmp[662586] tmp[662598]))
    }
    (589112 'move' ret[589107](589111 'deref' tmp[662585]))
    (589109 return ret[589107])
  }
  function min[3610](arg x[3615] :
  (3613 call int(64)[10] 32), arg y[3621] :
  (3619 call uint(64)[86] 32)) : _unknown[42] "inline"
  {
    unknown ret[589116] "RVV" "temp"
    unknown tmp[662612] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662613] "maybe param" "temp"
    unknown call_tmp[735862] "expr temp" "maybe param" "maybe type" "temp"
    (735865 'move' call_tmp[735862](3626 call < x[3615] y[3621]))
    (662618 'move' tmp[662613](662616 call _cond_test call_tmp[735862]))
    if tmp[662613]
    {
      (662623 'move' tmp[662612](662620 '_paramFoldLogical' tmp[662613] x[3615]))
    }
    {
      unknown tmp[662625] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735867] "expr temp" "maybe param" "maybe type" "temp"
      (735870 'move' call_tmp[735867](3635 call int(64)[10] 32))
      (662627 'move' tmp[662625](3631 call : y[3621] call_tmp[735867]))
      (662632 'move' tmp[662612](662629 '_paramFoldLogical' tmp[662613] tmp[662625]))
    }
    (589121 'move' ret[589116](589120 'deref' tmp[662612]))
    (589118 return ret[589116])
  }
  function min[3642](arg x[3647] :
  (3645 call int(64)[10] 64), arg y[3653] :
  (3651 call uint(64)[86] 64)) : _unknown[42] "inline"
  {
    unknown ret[589125] "RVV" "temp"
    unknown tmp[662639] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662640] "maybe param" "temp"
    unknown call_tmp[735872] "expr temp" "maybe param" "maybe type" "temp"
    (735875 'move' call_tmp[735872](3658 call < x[3647] y[3653]))
    (662645 'move' tmp[662640](662643 call _cond_test call_tmp[735872]))
    if tmp[662640]
    {
      (662650 'move' tmp[662639](662647 '_paramFoldLogical' tmp[662640] x[3647]))
    }
    {
      unknown tmp[662652] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735877] "expr temp" "maybe param" "maybe type" "temp"
      (735880 'move' call_tmp[735877](3667 call int(64)[10] 64))
      (662654 'move' tmp[662652](3663 call : y[3653] call_tmp[735877]))
      (662659 'move' tmp[662639](662656 '_paramFoldLogical' tmp[662640] tmp[662652]))
    }
    (589130 'move' ret[589125](589129 'deref' tmp[662639]))
    (589127 return ret[589125])
  }
  function min[3674](arg x[3679] :
  (3677 call uint(64)[86] 8), arg y[3685] :
  (3683 call int(64)[10] 8)) : _unknown[42] "inline"
  {
    unknown ret[589134] "RVV" "temp"
    unknown tmp[662666] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662667] "maybe param" "temp"
    unknown call_tmp[735882] "expr temp" "maybe param" "maybe type" "temp"
    (735885 'move' call_tmp[735882](3690 call < x[3679] y[3685]))
    (662672 'move' tmp[662667](662670 call _cond_test call_tmp[735882]))
    if tmp[662667]
    {
      unknown tmp[662674] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735887] "expr temp" "maybe param" "maybe type" "temp"
      (735890 'move' call_tmp[735887](3698 call int(64)[10] 8))
      (662676 'move' tmp[662674](3694 call : x[3679] call_tmp[735887]))
      (662681 'move' tmp[662666](662678 '_paramFoldLogical' tmp[662667] tmp[662674]))
    }
    {
      (662686 'move' tmp[662666](662683 '_paramFoldLogical' tmp[662667] y[3685]))
    }
    (589139 'move' ret[589134](589138 'deref' tmp[662666]))
    (589136 return ret[589134])
  }
  function min[3706](arg x[3711] :
  (3709 call uint(64)[86] 16), arg y[3717] :
  (3715 call int(64)[10] 16)) : _unknown[42] "inline"
  {
    unknown ret[589143] "RVV" "temp"
    unknown tmp[662693] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662694] "maybe param" "temp"
    unknown call_tmp[735892] "expr temp" "maybe param" "maybe type" "temp"
    (735895 'move' call_tmp[735892](3722 call < x[3711] y[3717]))
    (662699 'move' tmp[662694](662697 call _cond_test call_tmp[735892]))
    if tmp[662694]
    {
      unknown tmp[662701] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735897] "expr temp" "maybe param" "maybe type" "temp"
      (735900 'move' call_tmp[735897](3730 call int(64)[10] 16))
      (662703 'move' tmp[662701](3726 call : x[3711] call_tmp[735897]))
      (662708 'move' tmp[662693](662705 '_paramFoldLogical' tmp[662694] tmp[662701]))
    }
    {
      (662713 'move' tmp[662693](662710 '_paramFoldLogical' tmp[662694] y[3717]))
    }
    (589148 'move' ret[589143](589147 'deref' tmp[662693]))
    (589145 return ret[589143])
  }
  function min[3738](arg x[3743] :
  (3741 call uint(64)[86] 32), arg y[3749] :
  (3747 call int(64)[10] 32)) : _unknown[42] "inline"
  {
    unknown ret[589152] "RVV" "temp"
    unknown tmp[662720] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662721] "maybe param" "temp"
    unknown call_tmp[735902] "expr temp" "maybe param" "maybe type" "temp"
    (735905 'move' call_tmp[735902](3754 call < x[3743] y[3749]))
    (662726 'move' tmp[662721](662724 call _cond_test call_tmp[735902]))
    if tmp[662721]
    {
      unknown tmp[662728] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735907] "expr temp" "maybe param" "maybe type" "temp"
      (735910 'move' call_tmp[735907](3762 call int(64)[10] 32))
      (662730 'move' tmp[662728](3758 call : x[3743] call_tmp[735907]))
      (662735 'move' tmp[662720](662732 '_paramFoldLogical' tmp[662721] tmp[662728]))
    }
    {
      (662740 'move' tmp[662720](662737 '_paramFoldLogical' tmp[662721] y[3749]))
    }
    (589157 'move' ret[589152](589156 'deref' tmp[662720]))
    (589154 return ret[589152])
  }
  function min[3770](arg x[3775] :
  (3773 call uint(64)[86] 64), arg y[3781] :
  (3779 call int(64)[10] 64)) : _unknown[42] "inline"
  {
    unknown ret[589161] "RVV" "temp"
    unknown tmp[662747] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662748] "maybe param" "temp"
    unknown call_tmp[735912] "expr temp" "maybe param" "maybe type" "temp"
    (735915 'move' call_tmp[735912](3786 call < x[3775] y[3781]))
    (662753 'move' tmp[662748](662751 call _cond_test call_tmp[735912]))
    if tmp[662748]
    {
      unknown tmp[662755] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735917] "expr temp" "maybe param" "maybe type" "temp"
      (735920 'move' call_tmp[735917](3794 call int(64)[10] 64))
      (662757 'move' tmp[662755](3790 call : x[3775] call_tmp[735917]))
      (662762 'move' tmp[662747](662759 '_paramFoldLogical' tmp[662748] tmp[662755]))
    }
    {
      (662767 'move' tmp[662747](662764 '_paramFoldLogical' tmp[662748] y[3781]))
    }
    (589166 'move' ret[589161](589165 'deref' tmp[662747]))
    (589163 return ret[589161])
  }
  function min[3802](arg x[3804]:_any[141](?), arg y[3806]:_any[141](?)) : _unknown[42] "last resort" "no return value for void"
  {
    (3820 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
    (589168 return _void[46])
  }
  where {
    unknown tmp[475947] "maybe param" "temp"
    unknown call_tmp[735922] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735925 'move' call_tmp[735922](3813 'typeof' x[3804]))
    (475958 'move' tmp[475947](3811 call isAtomicType call_tmp[735922]))
    unknown call_tmp[735927] "expr temp" "maybe param" "maybe type" "temp"
    (735930 'move' call_tmp[735927](475960 call _cond_invalid tmp[475947]))
    if call_tmp[735927]
    {
      (475963 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[662774] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662775] "maybe param" "temp"
    unknown call_tmp[735932] "expr temp" "maybe param" "maybe type" "temp"
    (735935 'move' call_tmp[735932](475948 call isTrue tmp[475947]))
    (662780 'move' tmp[662775](662778 call _cond_test call_tmp[735932]))
    if tmp[662775]
    {
      (662785 'move' tmp[662774](662782 '_paramFoldLogical' tmp[662775] 1))
    }
    {
      unknown tmp[662787] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735937] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735940 'move' call_tmp[735937](3817 'typeof' y[3806]))
      unknown call_tmp[735942] "expr temp" "maybe param" "maybe type" "temp"
      (735945 'move' call_tmp[735942](3815 call isAtomicType call_tmp[735937]))
      (662789 'move' tmp[662787](475952 call isTrue call_tmp[735942]))
      (662794 'move' tmp[662774](662791 '_paramFoldLogical' tmp[662775] tmp[662787]))
    }
    (1001326 call chpl_statementLevelSymbol tmp[662774])
  }
  function min[3825](arg x[3827]:_any[141](?), arg y[3829]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[589172] "RVV" "temp"
    unknown tmp[662801] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662802] "maybe param" "temp"
    unknown call_tmp[735947] "expr temp" "maybe param" "maybe type" "temp"
    (735950 'move' call_tmp[735947](3863 call < x[3827] y[3829]))
    (662807 'move' tmp[662802](662805 call _cond_test call_tmp[735947]))
    if tmp[662802]
    {
      (662812 'move' tmp[662801](662809 '_paramFoldLogical' tmp[662802] x[3827]))
    }
    {
      (662817 'move' tmp[662801](662814 '_paramFoldLogical' tmp[662802] y[3829]))
    }
    (589177 'move' ret[589172](589176 'deref' tmp[662801]))
    (589174 return ret[589172])
  }
  where {
    unknown tmp[475968] "maybe param" "temp"
    unknown tmp[475989] "maybe param" "temp"
    unknown call_tmp[735952] "expr temp" "maybe param" "maybe type" "temp"
    (735955 'move' call_tmp[735952](3838 call isArray x[3827]))
    (476000 'move' tmp[475989](3835 call ! call_tmp[735952]))
    unknown call_tmp[735957] "expr temp" "maybe param" "maybe type" "temp"
    (735960 'move' call_tmp[735957](476002 call _cond_invalid tmp[475989]))
    if call_tmp[735957]
    {
      (476005 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[662824] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662825] "maybe param" "temp"
    unknown call_tmp[735962] "expr temp" "maybe param" "maybe type" "temp"
    (735965 'move' call_tmp[735962](475990 call isTrue tmp[475989]))
    (662830 'move' tmp[662825](662828 call _cond_test call_tmp[735962]))
    if tmp[662825]
    {
      unknown tmp[662832] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735967] "expr temp" "maybe param" "maybe type" "temp"
      (735970 'move' call_tmp[735967](3843 call isArray y[3829]))
      unknown call_tmp[735972] "expr temp" "maybe param" "maybe type" "temp"
      (735975 'move' call_tmp[735972](3840 call ! call_tmp[735967]))
      (662834 'move' tmp[662832](475993 call isTrue call_tmp[735972]))
      (662839 'move' tmp[662824](662836 '_paramFoldLogical' tmp[662825] tmp[662832]))
    }
    {
      (662844 'move' tmp[662824](662841 '_paramFoldLogical' tmp[662825] 0))
    }
    (475979 'move' tmp[475968] tmp[662824])
    unknown call_tmp[735977] "expr temp" "maybe param" "maybe type" "temp"
    (735980 'move' call_tmp[735977](475981 call _cond_invalid tmp[475968]))
    if call_tmp[735977]
    {
      (475984 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[662878] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662879] "maybe param" "temp"
    unknown call_tmp[735982] "expr temp" "maybe param" "maybe type" "temp"
    (735985 'move' call_tmp[735982](475969 call isTrue tmp[475968]))
    (662884 'move' tmp[662879](662882 call _cond_test call_tmp[735982]))
    if tmp[662879]
    {
      unknown tmp[476010] "maybe param" "temp"
      unknown call_tmp[735987] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735990 'move' call_tmp[735987](3854 'typeof' x[3827]))
      unknown call_tmp[735992] "expr temp" "maybe param" "maybe type" "temp"
      (735995 'move' call_tmp[735992](3852 call _desync call_tmp[735987]))
      (476021 'move' tmp[476010](3850 call isNumeric call_tmp[735992]))
      unknown call_tmp[735997] "expr temp" "maybe param" "maybe type" "temp"
      (736000 'move' call_tmp[735997](476023 call _cond_invalid tmp[476010]))
      if call_tmp[735997]
      {
        (476026 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[662851] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[662852] "maybe param" "temp"
      unknown call_tmp[736002] "expr temp" "maybe param" "maybe type" "temp"
      (736005 'move' call_tmp[736002](476011 call isTrue tmp[476010]))
      (662857 'move' tmp[662852](662855 call _cond_test call_tmp[736002]))
      if tmp[662852]
      {
        unknown tmp[662859] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[736007] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (736010 'move' call_tmp[736007](3860 'typeof' y[3829]))
        unknown call_tmp[736012] "expr temp" "maybe param" "maybe type" "temp"
        (736015 'move' call_tmp[736012](3858 call _desync call_tmp[736007]))
        unknown call_tmp[736017] "expr temp" "maybe param" "maybe type" "temp"
        (736020 'move' call_tmp[736017](3856 call isNumeric call_tmp[736012]))
        (662861 'move' tmp[662859](476014 call isTrue call_tmp[736017]))
        (662866 'move' tmp[662851](662863 '_paramFoldLogical' tmp[662852] tmp[662859]))
      }
      {
        (662871 'move' tmp[662851](662868 '_paramFoldLogical' tmp[662852] 0))
      }
      unknown tmp[662886] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[736022] "expr temp" "maybe param" "maybe type" "temp"
      (736025 'move' call_tmp[736022](3845 call ! tmp[662851]))
      (662888 'move' tmp[662886](475972 call isTrue call_tmp[736022]))
      (662893 'move' tmp[662878](662890 '_paramFoldLogical' tmp[662879] tmp[662886]))
    }
    {
      (662898 'move' tmp[662878](662895 '_paramFoldLogical' tmp[662879] 0))
    }
    (1001328 call chpl_statementLevelSymbol tmp[662878])
  }
  function min[3875](arg x[3877]:_any[141](?), arg y[3879]:_any[141](?), arg z[3883]:_any[141](?) ...) : _unknown[42] "inline"
  {
    unknown ret[589181] "RVV" "temp"
    unknown call_tmp[736027] "expr temp" "maybe param" "maybe type" "temp"
    (736030 'move' call_tmp[736027](3891 call min x[3877] y[3879]))
    unknown call_tmp[736032] "expr temp" "maybe param" "maybe type" "temp"
    (736035 'move' call_tmp[736032](3889 call min call_tmp[736027](3895 'expand_tuple' z[3883])))
    (589186 'move' ret[589181](589185 'deref' call_tmp[736032]))
    (589183 return ret[589181])
  }
  function min[3898](param arg x[3901]:numeric[162](?), param arg y[3905]:numeric[162](?)) param : _unknown[42] "inline"
  {
    unknown ret[589190] "RVV" "param" "temp"
    unknown tmp[662905] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662906] "maybe param" "temp"
    unknown call_tmp[736037] "expr temp" "maybe param" "maybe type" "temp"
    (736040 'move' call_tmp[736037](3920 call < x[3901] y[3905]))
    (662911 'move' tmp[662906](662909 call _cond_test call_tmp[736037]))
    if tmp[662906]
    {
      (662916 'move' tmp[662905](662913 '_paramFoldLogical' tmp[662906] x[3901]))
    }
    {
      (662921 'move' tmp[662905](662918 '_paramFoldLogical' tmp[662906] y[3905]))
    }
    (589195 'move' ret[589190](589194 'deref' tmp[662905]))
    (589192 return ret[589190])
  }
  where {
    unknown tmp[476031] "maybe param" "temp"
    (476042 'move' tmp[476031](3913 call isComplex x[3901]))
    unknown call_tmp[736042] "expr temp" "maybe param" "maybe type" "temp"
    (736045 'move' call_tmp[736042](476044 call _cond_invalid tmp[476031]))
    if call_tmp[736042]
    {
      (476047 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[662928] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[662929] "maybe param" "temp"
    unknown call_tmp[736047] "expr temp" "maybe param" "maybe type" "temp"
    (736050 'move' call_tmp[736047](476032 call isTrue tmp[476031]))
    (662934 'move' tmp[662929](662932 call _cond_test call_tmp[736047]))
    if tmp[662929]
    {
      (662939 'move' tmp[662928](662936 '_paramFoldLogical' tmp[662929] 1))
    }
    {
      unknown tmp[662941] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[736052] "expr temp" "maybe param" "maybe type" "temp"
      (736055 'move' call_tmp[736052](3916 call isComplex y[3905]))
      (662943 'move' tmp[662941](476036 call isTrue call_tmp[736052]))
      (662948 'move' tmp[662928](662945 '_paramFoldLogical' tmp[662929] tmp[662941]))
    }
    (3908 call ! tmp[662928])
  }
  function mod[3932](param arg x[3935]:integral[159](?), param arg y[3939]:integral[159](?)) param : _unknown[42]
  {
    unknown ret[589199] "RVV" "param" "temp"
    unknown call_tmp[736057] "maybe param" "maybe type" "temp"
    (736060 'move' call_tmp[736057](3945 call % x[3935] y[3939]))
    unknown temp[3944] "dead at end of block" "param"
    (642204 'init var' temp[3944] call_tmp[736057])
    (3950 'end of statement')
    unknown tmp[663032] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663033] "maybe param" "temp"
    unknown call_tmp[736062] "expr temp" "maybe param" "maybe type" "temp"
    (736065 'move' call_tmp[736062](3953 call isNonnegative y[3939]))
    (663038 'move' tmp[663033](663036 call _cond_test call_tmp[736062]))
    if tmp[663033]
    {
      unknown tmp[662982] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[662983] "maybe param" "temp"
      unknown call_tmp[736067] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (736070 'move' call_tmp[736067](3958 'typeof' x[3935]))
      unknown call_tmp[736072] "expr temp" "maybe param" "maybe type" "temp"
      (736075 'move' call_tmp[736072](3956 call isUintType call_tmp[736067]))
      (662988 'move' tmp[662983](662986 call _cond_test call_tmp[736072]))
      if tmp[662983]
      {
        (662993 'move' tmp[662982](662990 '_paramFoldLogical' tmp[662983] temp[3944]))
      }
      {
        unknown tmp[662955] "expr temp" "if-expr result" "maybe type" "temp"
        unknown tmp[662956] "maybe param" "temp"
        unknown call_tmp[736077] "expr temp" "maybe param" "maybe type" "temp"
        (736080 'move' call_tmp[736077](3960 call >= temp[3944] 0))
        (662961 'move' tmp[662956](662959 call _cond_test call_tmp[736077]))
        if tmp[662956]
        {
          (662966 'move' tmp[662955](662963 '_paramFoldLogical' tmp[662956] temp[3944]))
        }
        {
          unknown tmp[662968] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (662970 'move' tmp[662968](3965 call + temp[3944] y[3939]))
          (662975 'move' tmp[662955](662972 '_paramFoldLogical' tmp[662956] tmp[662968]))
        }
        (662998 'move' tmp[662982](662995 '_paramFoldLogical' tmp[662983] tmp[662955]))
      }
      (663043 'move' tmp[663032](663040 '_paramFoldLogical' tmp[663033] tmp[662982]))
    }
    {
      unknown tmp[663005] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[663006] "maybe param" "temp"
      unknown call_tmp[736082] "expr temp" "maybe param" "maybe type" "temp"
      (736085 'move' call_tmp[736082](3975 call <= temp[3944] 0))
      (663011 'move' tmp[663006](663009 call _cond_test call_tmp[736082]))
      if tmp[663006]
      {
        (663016 'move' tmp[663005](663013 '_paramFoldLogical' tmp[663006] temp[3944]))
      }
      {
        unknown tmp[663018] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (663020 'move' tmp[663018](3980 call + temp[3944] y[3939]))
        (663025 'move' tmp[663005](663022 '_paramFoldLogical' tmp[663006] tmp[663018]))
      }
      (663048 'move' tmp[663032](663045 '_paramFoldLogical' tmp[663033] tmp[663005]))
    }
    (589204 'move' ret[589199](589203 'deref' tmp[663032]))
    (589201 return ret[589199])
  }
  function mod[3992](arg x[3995]:integral[159](?), arg y[3999]:integral[159](?)) : _unknown[42]
  {
    unknown ret[589208] "RVV" "temp"
    unknown call_tmp[736087] "maybe param" "maybe type" "temp"
    (736090 'move' call_tmp[736087](4005 call % x[3995] y[3999]))
    const temp[4004] "dead at end of block" "const" "insert auto destroy"
    (642206 'init var' temp[4004] call_tmp[736087])
    (4010 'end of statement')
    unknown tmp[663132] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663133] "maybe param" "temp"
    unknown call_tmp[736092] "expr temp" "maybe param" "maybe type" "temp"
    (736095 'move' call_tmp[736092](4013 call isNonnegative y[3999]))
    (663138 'move' tmp[663133](663136 call _cond_test call_tmp[736092]))
    if tmp[663133]
    {
      unknown tmp[663082] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[663083] "maybe param" "temp"
      unknown call_tmp[736097] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (736100 'move' call_tmp[736097](4018 'typeof' x[3995]))
      unknown call_tmp[736102] "expr temp" "maybe param" "maybe type" "temp"
      (736105 'move' call_tmp[736102](4016 call isUintType call_tmp[736097]))
      (663088 'move' tmp[663083](663086 call _cond_test call_tmp[736102]))
      if tmp[663083]
      {
        (663093 'move' tmp[663082](663090 '_paramFoldLogical' tmp[663083] temp[4004]))
      }
      {
        unknown tmp[663055] "expr temp" "if-expr result" "maybe type" "temp"
        unknown tmp[663056] "maybe param" "temp"
        unknown call_tmp[736107] "expr temp" "maybe param" "maybe type" "temp"
        (736110 'move' call_tmp[736107](4020 call >= temp[4004] 0))
        (663061 'move' tmp[663056](663059 call _cond_test call_tmp[736107]))
        if tmp[663056]
        {
          (663066 'move' tmp[663055](663063 '_paramFoldLogical' tmp[663056] temp[4004]))
        }
        {
          unknown tmp[663068] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (663070 'move' tmp[663068](4025 call + temp[4004] y[3999]))
          (663075 'move' tmp[663055](663072 '_paramFoldLogical' tmp[663056] tmp[663068]))
        }
        (663098 'move' tmp[663082](663095 '_paramFoldLogical' tmp[663083] tmp[663055]))
      }
      (663143 'move' tmp[663132](663140 '_paramFoldLogical' tmp[663133] tmp[663082]))
    }
    {
      unknown tmp[663105] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[663106] "maybe param" "temp"
      unknown call_tmp[736112] "expr temp" "maybe param" "maybe type" "temp"
      (736115 'move' call_tmp[736112](4035 call <= temp[4004] 0))
      (663111 'move' tmp[663106](663109 call _cond_test call_tmp[736112]))
      if tmp[663106]
      {
        (663116 'move' tmp[663105](663113 '_paramFoldLogical' tmp[663106] temp[4004]))
      }
      {
        unknown tmp[663118] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (663120 'move' tmp[663118](4040 call + temp[4004] y[3999]))
        (663125 'move' tmp[663105](663122 '_paramFoldLogical' tmp[663106] tmp[663118]))
      }
      (663148 'move' tmp[663132](663145 '_paramFoldLogical' tmp[663133] tmp[663105]))
    }
    (589213 'move' ret[589208](589212 'deref' tmp[663132]))
    gotoReturn _end_mod[589206] _end_mod[589206]
    (546508 'end of statement' temp[4004])
    label _end_mod[589206]
    (589210 return ret[589208])
  }
  function mod[4052](arg x[4057] :
  (4055 call real(64)[13] 32), arg y[4063] :
  (4061 call real(64)[13] 32)) : _unknown[42]
  {
    unknown ret[589219] "RVV" "temp"
    unknown call_tmp[736117] "expr temp" "maybe param" "maybe type" "temp"
    (736120 'move' call_tmp[736117](4079 call / x[4057] y[4063]))
    unknown call_tmp[736122] "expr temp" "maybe param" "maybe type" "temp"
    (736125 'move' call_tmp[736122](4078 call floor call_tmp[736117]))
    unknown call_tmp[736127] "expr temp" "maybe param" "maybe type" "temp"
    (736130 'move' call_tmp[736127](4074 call * y[4063] call_tmp[736122]))
    unknown call_tmp[736132] "expr temp" "maybe param" "maybe type" "temp"
    (736135 'move' call_tmp[736132](4071 call - x[4057] call_tmp[736127]))
    unknown call_tmp[736137] "expr temp" "maybe param" "maybe type" "temp"
    (736140 'move' call_tmp[736137](589224 call real(64)[13] 32))
    (589227 'move' ret[589219](589226 'coerce' call_tmp[736132] call_tmp[736137]))
    (589221 return ret[589219])
  }
  { scopeless type
    (4067 call real(64)[13] 32)
  }
  function mod[4086](arg x[4091] :
  (4089 call real(64)[13] 64), arg y[4097] :
  (4095 call real(64)[13] 64)) : _unknown[42]
  {
    unknown ret[589231] "RVV" "temp"
    unknown call_tmp[736142] "expr temp" "maybe param" "maybe type" "temp"
    (736145 'move' call_tmp[736142](4113 call / x[4091] y[4097]))
    unknown call_tmp[736147] "expr temp" "maybe param" "maybe type" "temp"
    (736150 'move' call_tmp[736147](4112 call floor call_tmp[736142]))
    unknown call_tmp[736152] "expr temp" "maybe param" "maybe type" "temp"
    (736155 'move' call_tmp[736152](4108 call * y[4097] call_tmp[736147]))
    unknown call_tmp[736157] "expr temp" "maybe param" "maybe type" "temp"
    (736160 'move' call_tmp[736157](4105 call - x[4091] call_tmp[736152]))
    unknown call_tmp[736162] "expr temp" "maybe param" "maybe type" "temp"
    (736165 'move' call_tmp[736162](589236 call real(64)[13] 64))
    (589239 'move' ret[589231](589238 'coerce' call_tmp[736157] call_tmp[736162]))
    (589233 return ret[589231])
  }
  { scopeless type
    (4101 call real(64)[13] 64)
  }
  function nan[4120]() param : _unknown[42] "inline" "no parens"
  {
    unknown ret[589243] "RVV" "param" "temp"
    unknown call_tmp[736167] "expr temp" "maybe param" "maybe type" "temp"
    (736170 'move' call_tmp[736167](589248 call real(64)[13] 64))
    (589251 'move' ret[589243](589250 'coerce' nan call_tmp[736167]))
    (589245 return ret[589243])
  }
  { scopeless type
    (4123 call real(64)[13] 64)
  }
  function phase[510824](arg x[510831] :
  (510828 call complex(128)[111] 128)) : _unknown[42] "inline"
  {
    unknown ret[589255] "RVV" "temp"
    function cargf[510834](arg x[510840] :
    (510838 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510845 call real(64)[13] 32)
    }
    function carg[510848](arg x[510854] :
    (510852 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510859 call real(64)[13] 64)
    }
    unknown call_tmp[736172] "expr temp" "maybe param" "maybe type" "temp"
    (736175 'move' call_tmp[736172](510865 call == 128 64))
    unknown call_tmp[736177] "expr temp" "maybe param" "maybe type" "temp"
    (736180 'move' call_tmp[736177](510863 call _cond_test call_tmp[736172]))
    if call_tmp[736177]
    {
      unknown call_tmp[736182] "expr temp" "maybe param" "maybe type" "temp"
      (736185 'move' call_tmp[736182](510871 call cargf x[510831]))
      unknown call_tmp[736187] "expr temp" "maybe param" "maybe type" "temp"
      (736190 'move' call_tmp[736187](589262 call / 128 2))
      unknown call_tmp[736192] "expr temp" "maybe param" "maybe type" "temp"
      (736195 'move' call_tmp[736192](589260 call real(64)[13] call_tmp[736187]))
      (589266 'move' ret[589255](589265 'coerce' call_tmp[736182] call_tmp[736192]))
      gotoReturn _end_phase[589253] _end_phase[589253]
    }
    {
      unknown call_tmp[736197] "expr temp" "maybe param" "maybe type" "temp"
      (736200 'move' call_tmp[736197](510876 call carg x[510831]))
      unknown call_tmp[736202] "expr temp" "maybe param" "maybe type" "temp"
      (736205 'move' call_tmp[736202](589273 call / 128 2))
      unknown call_tmp[736207] "expr temp" "maybe param" "maybe type" "temp"
      (736210 'move' call_tmp[736207](589271 call real(64)[13] call_tmp[736202]))
      (589277 'move' ret[589255](589276 'coerce' call_tmp[736197] call_tmp[736207]))
      gotoReturn _end_phase[589253] _end_phase[589253]
    }
    label _end_phase[589253]
    (589257 return ret[589255])
  }
  { scopeless type
    unknown call_tmp[736212] "expr temp" "maybe param" "maybe type" "temp"
    (736215 'move' call_tmp[736212](510883 call / 128 2))
    (510881 call real(64)[13] call_tmp[736212])
  }
  function phase[510760](arg x[510767] :
  (510764 call complex(128)[111] 64)) : _unknown[42] "inline"
  {
    unknown ret[589283] "RVV" "temp"
    function cargf[510770](arg x[510776] :
    (510774 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510781 call real(64)[13] 32)
    }
    function carg[510784](arg x[510790] :
    (510788 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510795 call real(64)[13] 64)
    }
    unknown call_tmp[736217] "expr temp" "maybe param" "maybe type" "temp"
    (736220 'move' call_tmp[736217](510801 call == 64 64))
    unknown call_tmp[736222] "expr temp" "maybe param" "maybe type" "temp"
    (736225 'move' call_tmp[736222](510799 call _cond_test call_tmp[736217]))
    if call_tmp[736222]
    {
      unknown call_tmp[736227] "expr temp" "maybe param" "maybe type" "temp"
      (736230 'move' call_tmp[736227](510807 call cargf x[510767]))
      unknown call_tmp[736232] "expr temp" "maybe param" "maybe type" "temp"
      (736235 'move' call_tmp[736232](589290 call / 64 2))
      unknown call_tmp[736237] "expr temp" "maybe param" "maybe type" "temp"
      (736240 'move' call_tmp[736237](589288 call real(64)[13] call_tmp[736232]))
      (589294 'move' ret[589283](589293 'coerce' call_tmp[736227] call_tmp[736237]))
      gotoReturn _end_phase[589281] _end_phase[589281]
    }
    {
      unknown call_tmp[736242] "expr temp" "maybe param" "maybe type" "temp"
      (736245 'move' call_tmp[736242](510812 call carg x[510767]))
      unknown call_tmp[736247] "expr temp" "maybe param" "maybe type" "temp"
      (736250 'move' call_tmp[736247](589301 call / 64 2))
      unknown call_tmp[736252] "expr temp" "maybe param" "maybe type" "temp"
      (736255 'move' call_tmp[736252](589299 call real(64)[13] call_tmp[736247]))
      (589305 'move' ret[589283](589304 'coerce' call_tmp[736242] call_tmp[736252]))
      gotoReturn _end_phase[589281] _end_phase[589281]
    }
    label _end_phase[589281]
    (589285 return ret[589283])
  }
  { scopeless type
    unknown call_tmp[736257] "expr temp" "maybe param" "maybe type" "temp"
    (736260 'move' call_tmp[736257](510819 call / 64 2))
    (510817 call real(64)[13] call_tmp[736257])
  }
  function riemProj[510949](arg x[510956] :
  (510953 call complex(128)[111] 128)) : _unknown[42] "inline"
  {
    unknown ret[589311] "RVV" "temp"
    function cprojf[510959](arg x[510965] :
    (510963 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510970 call complex(128)[111] 64)
    }
    function cproj[510973](arg x[510979] :
    (510977 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510984 call complex(128)[111] 128)
    }
    unknown call_tmp[736262] "expr temp" "maybe param" "maybe type" "temp"
    (736265 'move' call_tmp[736262](510990 call == 128 64))
    unknown call_tmp[736267] "expr temp" "maybe param" "maybe type" "temp"
    (736270 'move' call_tmp[736267](510988 call _cond_test call_tmp[736262]))
    if call_tmp[736267]
    {
      unknown call_tmp[736272] "expr temp" "maybe param" "maybe type" "temp"
      (736275 'move' call_tmp[736272](510996 call cprojf x[510956]))
      unknown call_tmp[736277] "expr temp" "maybe param" "maybe type" "temp"
      (736280 'move' call_tmp[736277](589316 call complex(128)[111] 128))
      (589319 'move' ret[589311](589318 'coerce' call_tmp[736272] call_tmp[736277]))
      gotoReturn _end_riemProj[589309] _end_riemProj[589309]
    }
    {
      unknown call_tmp[736282] "expr temp" "maybe param" "maybe type" "temp"
      (736285 'move' call_tmp[736282](511001 call cproj x[510956]))
      unknown call_tmp[736287] "expr temp" "maybe param" "maybe type" "temp"
      (736290 'move' call_tmp[736287](589324 call complex(128)[111] 128))
      (589327 'move' ret[589311](589326 'coerce' call_tmp[736282] call_tmp[736287]))
      gotoReturn _end_riemProj[589309] _end_riemProj[589309]
    }
    label _end_riemProj[589309]
    (589313 return ret[589311])
  }
  { scopeless type
    (511006 call complex(128)[111] 128)
  }
  function riemProj[510888](arg x[510895] :
  (510892 call complex(128)[111] 64)) : _unknown[42] "inline"
  {
    unknown ret[589333] "RVV" "temp"
    function cprojf[510898](arg x[510904] :
    (510902 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510909 call complex(128)[111] 64)
    }
    function cproj[510912](arg x[510918] :
    (510916 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (510923 call complex(128)[111] 128)
    }
    unknown call_tmp[736292] "expr temp" "maybe param" "maybe type" "temp"
    (736295 'move' call_tmp[736292](510929 call == 64 64))
    unknown call_tmp[736297] "expr temp" "maybe param" "maybe type" "temp"
    (736300 'move' call_tmp[736297](510927 call _cond_test call_tmp[736292]))
    if call_tmp[736297]
    {
      unknown call_tmp[736302] "expr temp" "maybe param" "maybe type" "temp"
      (736305 'move' call_tmp[736302](510935 call cprojf x[510895]))
      unknown call_tmp[736307] "expr temp" "maybe param" "maybe type" "temp"
      (736310 'move' call_tmp[736307](589338 call complex(128)[111] 64))
      (589341 'move' ret[589333](589340 'coerce' call_tmp[736302] call_tmp[736307]))
      gotoReturn _end_riemProj[589331] _end_riemProj[589331]
    }
    {
      unknown call_tmp[736312] "expr temp" "maybe param" "maybe type" "temp"
      (736315 'move' call_tmp[736312](510940 call cproj x[510895]))
      unknown call_tmp[736317] "expr temp" "maybe param" "maybe type" "temp"
      (736320 'move' call_tmp[736317](589346 call complex(128)[111] 64))
      (589349 'move' ret[589333](589348 'coerce' call_tmp[736312] call_tmp[736317]))
      gotoReturn _end_riemProj[589331] _end_riemProj[589331]
    }
    label _end_riemProj[589331]
    (589335 return ret[589333])
  }
  { scopeless type
    (510945 call complex(128)[111] 64)
  }
  function round[4262](arg x[4267] :
  (4265 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    (4271 call real(64)[13] 64)
  }
  function round[4276](arg x[4281] :
  (4279 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[589355] "RVV" "temp"
    function roundf[4288](arg x[4293] :
    (4291 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (4297 call real(64)[13] 32)
    }
    unknown call_tmp[736322] "expr temp" "maybe param" "maybe type" "temp"
    (736325 'move' call_tmp[736322](4304 call roundf x[4281]))
    unknown call_tmp[736327] "expr temp" "maybe param" "maybe type" "temp"
    (736330 'move' call_tmp[736327](589360 call real(64)[13] 32))
    (589363 'move' ret[589355](589362 'coerce' call_tmp[736322] call_tmp[736327]))
    (589357 return ret[589355])
  }
  { scopeless type
    (4285 call real(64)[13] 32)
  }
  function sgn[511136](arg x[511143] :
  (511140 call int(64)[10] 64)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589367] "RVV" "temp"
    unknown call_tmp[736332] "expr temp" "maybe param" "maybe type" "temp"
    (736335 'move' call_tmp[736332](511154 call > x[511143] 0))
    unknown call_tmp[736337] "expr temp" "maybe param" "maybe type" "temp"
    (736340 'move' call_tmp[736337](511158 call int(64)[10] 8))
    unknown call_tmp[736342] "expr temp" "maybe param" "maybe type" "temp"
    (736345 'move' call_tmp[736342](511152 call : call_tmp[736332] call_tmp[736337]))
    unknown call_tmp[736347] "expr temp" "maybe param" "maybe type" "temp"
    (736350 'move' call_tmp[736347](511163 call < x[511143] 0))
    unknown call_tmp[736352] "expr temp" "maybe param" "maybe type" "temp"
    (736355 'move' call_tmp[736352](511167 call int(64)[10] 8))
    unknown call_tmp[736357] "expr temp" "maybe param" "maybe type" "temp"
    (736360 'move' call_tmp[736357](511161 call : call_tmp[736347] call_tmp[736352]))
    unknown call_tmp[736362] "expr temp" "maybe param" "maybe type" "temp"
    (736365 'move' call_tmp[736362](511150 call - call_tmp[736342] call_tmp[736357]))
    unknown call_tmp[736367] "expr temp" "maybe param" "maybe type" "temp"
    (736370 'move' call_tmp[736367](511170 call int(64)[10] 8))
    unknown call_tmp[736372] "expr temp" "maybe param" "maybe type" "temp"
    (736375 'move' call_tmp[736372](511148 call : call_tmp[736362] call_tmp[736367]))
    unknown call_tmp[736377] "expr temp" "maybe param" "maybe type" "temp"
    (736380 'move' call_tmp[736377](589372 call int(64)[10] 8))
    (589375 'move' ret[589367](589374 'coerce' call_tmp[736372] call_tmp[736377]))
    (589369 return ret[589367])
  }
  { scopeless type
    (511174 call int(64)[10] 8)
  }
  function sgn[511094](arg x[511101] :
  (511098 call int(64)[10] 32)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589379] "RVV" "temp"
    unknown call_tmp[736382] "expr temp" "maybe param" "maybe type" "temp"
    (736385 'move' call_tmp[736382](511112 call > x[511101] 0))
    unknown call_tmp[736387] "expr temp" "maybe param" "maybe type" "temp"
    (736390 'move' call_tmp[736387](511116 call int(64)[10] 8))
    unknown call_tmp[736392] "expr temp" "maybe param" "maybe type" "temp"
    (736395 'move' call_tmp[736392](511110 call : call_tmp[736382] call_tmp[736387]))
    unknown call_tmp[736397] "expr temp" "maybe param" "maybe type" "temp"
    (736400 'move' call_tmp[736397](511121 call < x[511101] 0))
    unknown call_tmp[736402] "expr temp" "maybe param" "maybe type" "temp"
    (736405 'move' call_tmp[736402](511125 call int(64)[10] 8))
    unknown call_tmp[736407] "expr temp" "maybe param" "maybe type" "temp"
    (736410 'move' call_tmp[736407](511119 call : call_tmp[736397] call_tmp[736402]))
    unknown call_tmp[736412] "expr temp" "maybe param" "maybe type" "temp"
    (736415 'move' call_tmp[736412](511108 call - call_tmp[736392] call_tmp[736407]))
    unknown call_tmp[736417] "expr temp" "maybe param" "maybe type" "temp"
    (736420 'move' call_tmp[736417](511128 call int(64)[10] 8))
    unknown call_tmp[736422] "expr temp" "maybe param" "maybe type" "temp"
    (736425 'move' call_tmp[736422](511106 call : call_tmp[736412] call_tmp[736417]))
    unknown call_tmp[736427] "expr temp" "maybe param" "maybe type" "temp"
    (736430 'move' call_tmp[736427](589384 call int(64)[10] 8))
    (589387 'move' ret[589379](589386 'coerce' call_tmp[736422] call_tmp[736427]))
    (589381 return ret[589379])
  }
  { scopeless type
    (511132 call int(64)[10] 8)
  }
  function sgn[511052](arg x[511059] :
  (511056 call int(64)[10] 16)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589391] "RVV" "temp"
    unknown call_tmp[736432] "expr temp" "maybe param" "maybe type" "temp"
    (736435 'move' call_tmp[736432](511070 call > x[511059] 0))
    unknown call_tmp[736437] "expr temp" "maybe param" "maybe type" "temp"
    (736440 'move' call_tmp[736437](511074 call int(64)[10] 8))
    unknown call_tmp[736442] "expr temp" "maybe param" "maybe type" "temp"
    (736445 'move' call_tmp[736442](511068 call : call_tmp[736432] call_tmp[736437]))
    unknown call_tmp[736447] "expr temp" "maybe param" "maybe type" "temp"
    (736450 'move' call_tmp[736447](511079 call < x[511059] 0))
    unknown call_tmp[736452] "expr temp" "maybe param" "maybe type" "temp"
    (736455 'move' call_tmp[736452](511083 call int(64)[10] 8))
    unknown call_tmp[736457] "expr temp" "maybe param" "maybe type" "temp"
    (736460 'move' call_tmp[736457](511077 call : call_tmp[736447] call_tmp[736452]))
    unknown call_tmp[736462] "expr temp" "maybe param" "maybe type" "temp"
    (736465 'move' call_tmp[736462](511066 call - call_tmp[736442] call_tmp[736457]))
    unknown call_tmp[736467] "expr temp" "maybe param" "maybe type" "temp"
    (736470 'move' call_tmp[736467](511086 call int(64)[10] 8))
    unknown call_tmp[736472] "expr temp" "maybe param" "maybe type" "temp"
    (736475 'move' call_tmp[736472](511064 call : call_tmp[736462] call_tmp[736467]))
    unknown call_tmp[736477] "expr temp" "maybe param" "maybe type" "temp"
    (736480 'move' call_tmp[736477](589396 call int(64)[10] 8))
    (589399 'move' ret[589391](589398 'coerce' call_tmp[736472] call_tmp[736477]))
    (589393 return ret[589391])
  }
  { scopeless type
    (511090 call int(64)[10] 8)
  }
  function sgn[511010](arg x[511017] :
  (511014 call int(64)[10] 8)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589403] "RVV" "temp"
    unknown call_tmp[736482] "expr temp" "maybe param" "maybe type" "temp"
    (736485 'move' call_tmp[736482](511028 call > x[511017] 0))
    unknown call_tmp[736487] "expr temp" "maybe param" "maybe type" "temp"
    (736490 'move' call_tmp[736487](511032 call int(64)[10] 8))
    unknown call_tmp[736492] "expr temp" "maybe param" "maybe type" "temp"
    (736495 'move' call_tmp[736492](511026 call : call_tmp[736482] call_tmp[736487]))
    unknown call_tmp[736497] "expr temp" "maybe param" "maybe type" "temp"
    (736500 'move' call_tmp[736497](511037 call < x[511017] 0))
    unknown call_tmp[736502] "expr temp" "maybe param" "maybe type" "temp"
    (736505 'move' call_tmp[736502](511041 call int(64)[10] 8))
    unknown call_tmp[736507] "expr temp" "maybe param" "maybe type" "temp"
    (736510 'move' call_tmp[736507](511035 call : call_tmp[736497] call_tmp[736502]))
    unknown call_tmp[736512] "expr temp" "maybe param" "maybe type" "temp"
    (736515 'move' call_tmp[736512](511024 call - call_tmp[736492] call_tmp[736507]))
    unknown call_tmp[736517] "expr temp" "maybe param" "maybe type" "temp"
    (736520 'move' call_tmp[736517](511044 call int(64)[10] 8))
    unknown call_tmp[736522] "expr temp" "maybe param" "maybe type" "temp"
    (736525 'move' call_tmp[736522](511022 call : call_tmp[736512] call_tmp[736517]))
    unknown call_tmp[736527] "expr temp" "maybe param" "maybe type" "temp"
    (736530 'move' call_tmp[736527](589408 call int(64)[10] 8))
    (589411 'move' ret[589403](589410 'coerce' call_tmp[736522] call_tmp[736527]))
    (589405 return ret[589403])
  }
  { scopeless type
    (511048 call int(64)[10] 8)
  }
  function sgn[511256](arg x[511263] :
  (511260 call uint(64)[86] 64)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589415] "RVV" "temp"
    unknown call_tmp[736532] "expr temp" "maybe param" "maybe type" "temp"
    (736535 'move' call_tmp[736532](511270 call > x[511263] 0))
    unknown call_tmp[736537] "expr temp" "maybe param" "maybe type" "temp"
    (736540 'move' call_tmp[736537](511274 call uint(64)[86] 8))
    unknown call_tmp[736542] "expr temp" "maybe param" "maybe type" "temp"
    (736545 'move' call_tmp[736542](511268 call : call_tmp[736532] call_tmp[736537]))
    unknown call_tmp[736547] "expr temp" "maybe param" "maybe type" "temp"
    (736550 'move' call_tmp[736547](589420 call uint(64)[86] 8))
    (589423 'move' ret[589415](589422 'coerce' call_tmp[736542] call_tmp[736547]))
    (589417 return ret[589415])
  }
  { scopeless type
    (511278 call uint(64)[86] 8)
  }
  function sgn[511230](arg x[511237] :
  (511234 call uint(64)[86] 32)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589427] "RVV" "temp"
    unknown call_tmp[736552] "expr temp" "maybe param" "maybe type" "temp"
    (736555 'move' call_tmp[736552](511244 call > x[511237] 0))
    unknown call_tmp[736557] "expr temp" "maybe param" "maybe type" "temp"
    (736560 'move' call_tmp[736557](511248 call uint(64)[86] 8))
    unknown call_tmp[736562] "expr temp" "maybe param" "maybe type" "temp"
    (736565 'move' call_tmp[736562](511242 call : call_tmp[736552] call_tmp[736557]))
    unknown call_tmp[736567] "expr temp" "maybe param" "maybe type" "temp"
    (736570 'move' call_tmp[736567](589432 call uint(64)[86] 8))
    (589435 'move' ret[589427](589434 'coerce' call_tmp[736562] call_tmp[736567]))
    (589429 return ret[589427])
  }
  { scopeless type
    (511252 call uint(64)[86] 8)
  }
  function sgn[511204](arg x[511211] :
  (511208 call uint(64)[86] 16)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589439] "RVV" "temp"
    unknown call_tmp[736572] "expr temp" "maybe param" "maybe type" "temp"
    (736575 'move' call_tmp[736572](511218 call > x[511211] 0))
    unknown call_tmp[736577] "expr temp" "maybe param" "maybe type" "temp"
    (736580 'move' call_tmp[736577](511222 call uint(64)[86] 8))
    unknown call_tmp[736582] "expr temp" "maybe param" "maybe type" "temp"
    (736585 'move' call_tmp[736582](511216 call : call_tmp[736572] call_tmp[736577]))
    unknown call_tmp[736587] "expr temp" "maybe param" "maybe type" "temp"
    (736590 'move' call_tmp[736587](589444 call uint(64)[86] 8))
    (589447 'move' ret[589439](589446 'coerce' call_tmp[736582] call_tmp[736587]))
    (589441 return ret[589439])
  }
  { scopeless type
    (511226 call uint(64)[86] 8)
  }
  function sgn[511178](arg x[511185] :
  (511182 call uint(64)[86] 8)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589451] "RVV" "temp"
    unknown call_tmp[736592] "expr temp" "maybe param" "maybe type" "temp"
    (736595 'move' call_tmp[736592](511192 call > x[511185] 0))
    unknown call_tmp[736597] "expr temp" "maybe param" "maybe type" "temp"
    (736600 'move' call_tmp[736597](511196 call uint(64)[86] 8))
    unknown call_tmp[736602] "expr temp" "maybe param" "maybe type" "temp"
    (736605 'move' call_tmp[736602](511190 call : call_tmp[736592] call_tmp[736597]))
    unknown call_tmp[736607] "expr temp" "maybe param" "maybe type" "temp"
    (736610 'move' call_tmp[736607](589456 call uint(64)[86] 8))
    (589459 'move' ret[589451](589458 'coerce' call_tmp[736602] call_tmp[736607]))
    (589453 return ret[589451])
  }
  { scopeless type
    (511200 call uint(64)[86] 8)
  }
  function sgn[4377](param arg x[4380]:integral[159](?)) param : _unknown[42] "@unstable"
  {
    unknown ret[589463] "RVV" "param" "temp"
    unknown tmp[663182] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663183] "maybe param" "temp"
    unknown call_tmp[736612] "expr temp" "maybe param" "maybe type" "temp"
    (736615 'move' call_tmp[736612](4385 call > x[4380] 0))
    (663188 'move' tmp[663183](663186 call _cond_test call_tmp[736612]))
    if tmp[663183]
    {
      (663193 'move' tmp[663182](663190 '_paramFoldLogical' tmp[663183] 1))
    }
    {
      unknown tmp[663155] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[663156] "maybe param" "temp"
      unknown call_tmp[736617] "expr temp" "maybe param" "maybe type" "temp"
      (736620 'move' call_tmp[736617](4390 call == x[4380] 0))
      (663161 'move' tmp[663156](663159 call _cond_test call_tmp[736617]))
      if tmp[663156]
      {
        (663166 'move' tmp[663155](663163 '_paramFoldLogical' tmp[663156] 0))
      }
      {
        unknown tmp[663168] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (663170 'move' tmp[663168](4395 call - 1))
        (663175 'move' tmp[663155](663172 '_paramFoldLogical' tmp[663156] tmp[663168]))
      }
      (663198 'move' tmp[663182](663195 '_paramFoldLogical' tmp[663183] tmp[663155]))
    }
    (589468 'move' ret[589463](589467 'deref' tmp[663182]))
    (589465 return ret[589463])
  }
  function sgn[511324](arg x[511331] :
  (511328 call real(64)[13] 64)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589472] "RVV" "temp"
    unknown call_tmp[736622] "expr temp" "maybe param" "maybe type" "temp"
    (736625 'move' call_tmp[736622](511342 call > x[511331] 0.0))
    unknown call_tmp[736627] "expr temp" "maybe param" "maybe type" "temp"
    (736630 'move' call_tmp[736627](511346 call int(64)[10] 8))
    unknown call_tmp[736632] "expr temp" "maybe param" "maybe type" "temp"
    (736635 'move' call_tmp[736632](511340 call : call_tmp[736622] call_tmp[736627]))
    unknown call_tmp[736637] "expr temp" "maybe param" "maybe type" "temp"
    (736640 'move' call_tmp[736637](511351 call < x[511331] 0.0))
    unknown call_tmp[736642] "expr temp" "maybe param" "maybe type" "temp"
    (736645 'move' call_tmp[736642](511355 call int(64)[10] 8))
    unknown call_tmp[736647] "expr temp" "maybe param" "maybe type" "temp"
    (736650 'move' call_tmp[736647](511349 call : call_tmp[736637] call_tmp[736642]))
    unknown call_tmp[736652] "expr temp" "maybe param" "maybe type" "temp"
    (736655 'move' call_tmp[736652](511338 call - call_tmp[736632] call_tmp[736647]))
    unknown call_tmp[736657] "expr temp" "maybe param" "maybe type" "temp"
    (736660 'move' call_tmp[736657](511358 call int(64)[10] 8))
    unknown call_tmp[736662] "expr temp" "maybe param" "maybe type" "temp"
    (736665 'move' call_tmp[736662](511336 call : call_tmp[736652] call_tmp[736657]))
    unknown call_tmp[736667] "expr temp" "maybe param" "maybe type" "temp"
    (736670 'move' call_tmp[736667](589477 call int(64)[10] 8))
    (589480 'move' ret[589472](589479 'coerce' call_tmp[736662] call_tmp[736667]))
    (589474 return ret[589472])
  }
  { scopeless type
    (511362 call int(64)[10] 8)
  }
  function sgn[511282](arg x[511289] :
  (511286 call real(64)[13] 32)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589484] "RVV" "temp"
    unknown call_tmp[736672] "expr temp" "maybe param" "maybe type" "temp"
    (736675 'move' call_tmp[736672](511300 call > x[511289] 0.0))
    unknown call_tmp[736677] "expr temp" "maybe param" "maybe type" "temp"
    (736680 'move' call_tmp[736677](511304 call int(64)[10] 8))
    unknown call_tmp[736682] "expr temp" "maybe param" "maybe type" "temp"
    (736685 'move' call_tmp[736682](511298 call : call_tmp[736672] call_tmp[736677]))
    unknown call_tmp[736687] "expr temp" "maybe param" "maybe type" "temp"
    (736690 'move' call_tmp[736687](511309 call < x[511289] 0.0))
    unknown call_tmp[736692] "expr temp" "maybe param" "maybe type" "temp"
    (736695 'move' call_tmp[736692](511313 call int(64)[10] 8))
    unknown call_tmp[736697] "expr temp" "maybe param" "maybe type" "temp"
    (736700 'move' call_tmp[736697](511307 call : call_tmp[736687] call_tmp[736692]))
    unknown call_tmp[736702] "expr temp" "maybe param" "maybe type" "temp"
    (736705 'move' call_tmp[736702](511296 call - call_tmp[736682] call_tmp[736697]))
    unknown call_tmp[736707] "expr temp" "maybe param" "maybe type" "temp"
    (736710 'move' call_tmp[736707](511316 call int(64)[10] 8))
    unknown call_tmp[736712] "expr temp" "maybe param" "maybe type" "temp"
    (736715 'move' call_tmp[736712](511294 call : call_tmp[736702] call_tmp[736707]))
    unknown call_tmp[736717] "expr temp" "maybe param" "maybe type" "temp"
    (736720 'move' call_tmp[736717](589489 call int(64)[10] 8))
    (589492 'move' ret[589484](589491 'coerce' call_tmp[736712] call_tmp[736717]))
    (589486 return ret[589484])
  }
  { scopeless type
    (511320 call int(64)[10] 8)
  }
  function sqrt[4448](arg x[4453] :
  (4451 call real(64)[13] 64)) : _unknown[42] "inline"
  {
    unknown ret[589496] "RVV" "temp"
    unknown call_tmp[736722] "expr temp" "maybe param" "maybe type" "temp"
    (736725 'move' call_tmp[736722](4461 'sqrt' x[4453]))
    unknown call_tmp[736727] "expr temp" "maybe param" "maybe type" "temp"
    (736730 'move' call_tmp[736727](589501 call real(64)[13] 64))
    (589504 'move' ret[589496](589503 'coerce' call_tmp[736722] call_tmp[736727]))
    (589498 return ret[589496])
  }
  { scopeless type
    (4457 call real(64)[13] 64)
  }
  function sqrt[4466](param arg x[4471] :
  (4469 call real(64)[13] 64)) param : _unknown[42]
  {
    unknown ret[589508] "RVV" "param" "temp"
    unknown call_tmp[736732] "expr temp" "maybe param" "maybe type" "temp"
    (736735 'move' call_tmp[736732](4484 call < x[4471] 0))
    unknown call_tmp[736737] "expr temp" "maybe param" "maybe type" "temp"
    (736740 'move' call_tmp[736737](4488 call _cond_test call_tmp[736732]))
    if call_tmp[736737]
    {
      (4480 call compilerError "sqrt of a negative number -- cast to complex if a complex result is desired")
    }
    unknown call_tmp[736742] "expr temp" "maybe param" "maybe type" "temp"
    (736745 'move' call_tmp[736742](4493 'sqrt' x[4471]))
    unknown call_tmp[736747] "expr temp" "maybe param" "maybe type" "temp"
    (736750 'move' call_tmp[736747](589513 call real(64)[13] 64))
    (589516 'move' ret[589508](589515 'coerce' call_tmp[736742] call_tmp[736747]))
    (589510 return ret[589508])
  }
  { scopeless type
    (4475 call real(64)[13] 64)
  }
  function sqrt[4498](arg x[4503] :
  (4501 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[589520] "RVV" "temp"
    unknown call_tmp[736752] "expr temp" "maybe param" "maybe type" "temp"
    (736755 'move' call_tmp[736752](4511 'sqrt' x[4503]))
    unknown call_tmp[736757] "expr temp" "maybe param" "maybe type" "temp"
    (736760 'move' call_tmp[736757](589525 call real(64)[13] 32))
    (589528 'move' ret[589520](589527 'coerce' call_tmp[736752] call_tmp[736757]))
    (589522 return ret[589520])
  }
  { scopeless type
    (4507 call real(64)[13] 32)
  }
  function sqrt[4516](param arg x[4521] :
  (4519 call real(64)[13] 32)) param : _unknown[42]
  {
    unknown ret[589532] "RVV" "param" "temp"
    unknown call_tmp[736762] "expr temp" "maybe param" "maybe type" "temp"
    (736765 'move' call_tmp[736762](4532 call < x[4521] 0))
    unknown call_tmp[736767] "expr temp" "maybe param" "maybe type" "temp"
    (736770 'move' call_tmp[736767](4536 call _cond_test call_tmp[736762]))
    if call_tmp[736767]
    {
      (4530 call compilerError "sqrt of a negative number -- cast to complex if a complex result is desired")
    }
    unknown call_tmp[736772] "expr temp" "maybe param" "maybe type" "temp"
    (736775 'move' call_tmp[736772](4541 'sqrt' x[4521]))
    unknown call_tmp[736777] "expr temp" "maybe param" "maybe type" "temp"
    (736780 'move' call_tmp[736777](589537 call real(64)[13] 32))
    (589540 'move' ret[589532](589539 'coerce' call_tmp[736772] call_tmp[736777]))
    (589534 return ret[589532])
  }
  { scopeless type
    (4525 call real(64)[13] 32)
  }
  function sqrt[4546](arg x[4551] :
  (4549 call complex(128)[111] 64)) : _unknown[42] "inline"
  {
    unknown ret[589544] "RVV" "temp"
    function csqrtf[4558](arg x[4563] :
    (4561 call complex(128)[111] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (4567 call complex(128)[111] 64)
    }
    unknown call_tmp[736782] "expr temp" "maybe param" "maybe type" "temp"
    (736785 'move' call_tmp[736782](4574 call csqrtf x[4551]))
    unknown call_tmp[736787] "expr temp" "maybe param" "maybe type" "temp"
    (736790 'move' call_tmp[736787](589549 call complex(128)[111] 64))
    (589552 'move' ret[589544](589551 'coerce' call_tmp[736782] call_tmp[736787]))
    (589546 return ret[589544])
  }
  { scopeless type
    (4555 call complex(128)[111] 64)
  }
  function sqrt[4579](param arg x[4584] :
  (4582 call complex(128)[111] 64)) param : _unknown[42]
  {
    unknown ret[589556] "RVV" "param" "temp"
    unknown call_tmp[736792] "expr temp" "maybe param" "maybe type" "temp"
    (736795 'move' call_tmp[736792](4592 'sqrt' x[4584]))
    unknown call_tmp[736797] "expr temp" "maybe param" "maybe type" "temp"
    (736800 'move' call_tmp[736797](589561 call complex(128)[111] 64))
    (589564 'move' ret[589556](589563 'coerce' call_tmp[736792] call_tmp[736797]))
    (589558 return ret[589556])
  }
  { scopeless type
    (4588 call complex(128)[111] 64)
  }
  function sqrt[4597](arg x[4602] :
  (4600 call complex(128)[111] 128)) : _unknown[42] "inline"
  {
    unknown ret[589568] "RVV" "temp"
    function csqrt[4609](arg x[4614] :
    (4612 call complex(128)[111] 128)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (4618 call complex(128)[111] 128)
    }
    unknown call_tmp[736802] "expr temp" "maybe param" "maybe type" "temp"
    (736805 'move' call_tmp[736802](4625 call csqrt x[4602]))
    unknown call_tmp[736807] "expr temp" "maybe param" "maybe type" "temp"
    (736810 'move' call_tmp[736807](589573 call complex(128)[111] 128))
    (589576 'move' ret[589568](589575 'coerce' call_tmp[736802] call_tmp[736807]))
    (589570 return ret[589568])
  }
  { scopeless type
    (4606 call complex(128)[111] 128)
  }
  function sqrt[4630](param arg x[4635] :
  (4633 call complex(128)[111] 128)) param : _unknown[42]
  {
    unknown ret[589580] "RVV" "param" "temp"
    unknown call_tmp[736812] "expr temp" "maybe param" "maybe type" "temp"
    (736815 'move' call_tmp[736812](4643 'sqrt' x[4635]))
    unknown call_tmp[736817] "expr temp" "maybe param" "maybe type" "temp"
    (736820 'move' call_tmp[736817](589585 call complex(128)[111] 128))
    (589588 'move' ret[589580](589587 'coerce' call_tmp[736812] call_tmp[736817]))
    (589582 return ret[589580])
  }
  { scopeless type
    (4639 call complex(128)[111] 128)
  }
  function trunc[4648](arg x[4653] :
  (4651 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    (4657 call real(64)[13] 64)
  }
  function trunc[4662](arg x[4667] :
  (4665 call real(64)[13] 32)) : _unknown[42] "inline"
  {
    unknown ret[589592] "RVV" "temp"
    function truncf[4674](arg x[4679] :
    (4677 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (4683 call real(64)[13] 32)
    }
    unknown call_tmp[736822] "expr temp" "maybe param" "maybe type" "temp"
    (736825 'move' call_tmp[736822](4690 call truncf x[4667]))
    unknown call_tmp[736827] "expr temp" "maybe param" "maybe type" "temp"
    (736830 'move' call_tmp[736827](589597 call real(64)[13] 32))
    (589600 'move' ret[589592](589599 'coerce' call_tmp[736822] call_tmp[736827]))
    (589594 return ret[589592])
  }
  { scopeless type
    (4671 call real(64)[13] 32)
  }
  function isClose[4695](arg x[4697]:_any[141](?), arg y[4699]:_any[141](?), arg relTol[4704] :
  1e-05 =
  1e-05, arg absTol[4708] :
  0.0 =
  0.0) : _unknown[42] "inline"
  {
    unknown ret[589604] "RVV" "temp"
    unknown tmp[476073] "maybe param" "temp"
    unknown tmp[476094] "maybe param" "temp"
    unknown tmp[476115] "maybe param" "temp"
    (476126 'move' tmp[476115](4769 call isRealValue x[4697]))
    unknown call_tmp[736832] "expr temp" "maybe param" "maybe type" "temp"
    (736835 'move' call_tmp[736832](476128 call _cond_invalid tmp[476115]))
    if call_tmp[736832]
    {
      (476131 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[663205] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663206] "maybe param" "temp"
    unknown call_tmp[736837] "expr temp" "maybe param" "maybe type" "temp"
    (736840 'move' call_tmp[736837](476116 call isTrue tmp[476115]))
    (663211 'move' tmp[663206](663209 call _cond_test call_tmp[736837]))
    if tmp[663206]
    {
      (663216 'move' tmp[663205](663213 '_paramFoldLogical' tmp[663206] 1))
    }
    {
      unknown tmp[663218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[736842] "expr temp" "maybe param" "maybe type" "temp"
      (736845 'move' call_tmp[736842](4772 call isImagValue x[4697]))
      (663220 'move' tmp[663218](476120 call isTrue call_tmp[736842]))
      (663225 'move' tmp[663205](663222 '_paramFoldLogical' tmp[663206] tmp[663218]))
    }
    (476105 'move' tmp[476094] tmp[663205])
    unknown call_tmp[736847] "expr temp" "maybe param" "maybe type" "temp"
    (736850 'move' call_tmp[736847](476107 call _cond_invalid tmp[476094]))
    if call_tmp[736847]
    {
      (476110 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[663232] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663233] "maybe param" "temp"
    unknown call_tmp[736852] "expr temp" "maybe param" "maybe type" "temp"
    (736855 'move' call_tmp[736852](476095 call isTrue tmp[476094]))
    (663238 'move' tmp[663233](663236 call _cond_test call_tmp[736852]))
    if tmp[663233]
    {
      (663243 'move' tmp[663232](663240 '_paramFoldLogical' tmp[663233] 1))
    }
    {
      unknown tmp[663245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[736857] "expr temp" "maybe param" "maybe type" "temp"
      (736860 'move' call_tmp[736857](4775 call isComplexValue x[4697]))
      (663247 'move' tmp[663245](476099 call isTrue call_tmp[736857]))
      (663252 'move' tmp[663232](663249 '_paramFoldLogical' tmp[663233] tmp[663245]))
    }
    (476084 'move' tmp[476073] tmp[663232])
    unknown call_tmp[736862] "expr temp" "maybe param" "maybe type" "temp"
    (736865 'move' call_tmp[736862](476086 call _cond_invalid tmp[476073]))
    if call_tmp[736862]
    {
      (476089 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[663313] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663314] "maybe param" "temp"
    unknown call_tmp[736867] "expr temp" "maybe param" "maybe type" "temp"
    (736870 'move' call_tmp[736867](476074 call isTrue tmp[476073]))
    (663319 'move' tmp[663314](663317 call _cond_test call_tmp[736867]))
    if tmp[663314]
    {
      unknown tmp[476136] "maybe param" "temp"
      unknown tmp[476157] "maybe param" "temp"
      (476168 'move' tmp[476157](4782 call isRealValue y[4699]))
      unknown call_tmp[736872] "expr temp" "maybe param" "maybe type" "temp"
      (736875 'move' call_tmp[736872](476170 call _cond_invalid tmp[476157]))
      if call_tmp[736872]
      {
        (476173 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[663259] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[663260] "maybe param" "temp"
      unknown call_tmp[736877] "expr temp" "maybe param" "maybe type" "temp"
      (736880 'move' call_tmp[736877](476158 call isTrue tmp[476157]))
      (663265 'move' tmp[663260](663263 call _cond_test call_tmp[736877]))
      if tmp[663260]
      {
        (663270 'move' tmp[663259](663267 '_paramFoldLogical' tmp[663260] 1))
      }
      {
        unknown tmp[663272] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[736882] "expr temp" "maybe param" "maybe type" "temp"
        (736885 'move' call_tmp[736882](4785 call isImagValue y[4699]))
        (663274 'move' tmp[663272](476162 call isTrue call_tmp[736882]))
        (663279 'move' tmp[663259](663276 '_paramFoldLogical' tmp[663260] tmp[663272]))
      }
      (476147 'move' tmp[476136] tmp[663259])
      unknown call_tmp[736887] "expr temp" "maybe param" "maybe type" "temp"
      (736890 'move' call_tmp[736887](476149 call _cond_invalid tmp[476136]))
      if call_tmp[736887]
      {
        (476152 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[663286] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[663287] "maybe param" "temp"
      unknown call_tmp[736892] "expr temp" "maybe param" "maybe type" "temp"
      (736895 'move' call_tmp[736892](476137 call isTrue tmp[476136]))
      (663292 'move' tmp[663287](663290 call _cond_test call_tmp[736892]))
      if tmp[663287]
      {
        (663297 'move' tmp[663286](663294 '_paramFoldLogical' tmp[663287] 1))
      }
      {
        unknown tmp[663299] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[736897] "expr temp" "maybe param" "maybe type" "temp"
        (736900 'move' call_tmp[736897](4788 call isComplexValue y[4699]))
        (663301 'move' tmp[663299](476141 call isTrue call_tmp[736897]))
        (663306 'move' tmp[663286](663303 '_paramFoldLogical' tmp[663287] tmp[663299]))
      }
      unknown tmp[663321] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (663323 'move' tmp[663321](476077 call isTrue tmp[663286]))
      (663328 'move' tmp[663313](663325 '_paramFoldLogical' tmp[663314] tmp[663321]))
    }
    {
      (663333 'move' tmp[663313](663330 '_paramFoldLogical' tmp[663314] 0))
    }
    unknown call_tmp[736902] "expr temp" "maybe param" "maybe type" "temp"
    (736905 'move' call_tmp[736902](4760 call ! tmp[663313]))
    unknown call_tmp[736907] "expr temp" "maybe param" "maybe type" "temp"
    (736910 'move' call_tmp[736907](4790 call _cond_test call_tmp[736902]))
    if call_tmp[736907]
    {
      unknown tmp[476052] "maybe param" "temp"
      (476063 'move' tmp[476052](4751 call isArrayValue x[4697]))
      unknown call_tmp[736912] "expr temp" "maybe param" "maybe type" "temp"
      (736915 'move' call_tmp[736912](476065 call _cond_invalid tmp[476052]))
      if call_tmp[736912]
      {
        (476068 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[663340] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[663341] "maybe param" "temp"
      unknown call_tmp[736917] "expr temp" "maybe param" "maybe type" "temp"
      (736920 'move' call_tmp[736917](476053 call isTrue tmp[476052]))
      (663346 'move' tmp[663341](663344 call _cond_test call_tmp[736917]))
      if tmp[663341]
      {
        (663351 'move' tmp[663340](663348 '_paramFoldLogical' tmp[663341] 1))
      }
      {
        unknown tmp[663353] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[736922] "expr temp" "maybe param" "maybe type" "temp"
        (736925 'move' call_tmp[736922](4754 call isArrayValue y[4699]))
        (663355 'move' tmp[663353](476057 call isTrue call_tmp[736922]))
        (663360 'move' tmp[663340](663357 '_paramFoldLogical' tmp[663341] tmp[663353]))
      }
      unknown call_tmp[736927] "expr temp" "maybe param" "maybe type" "temp"
      (736930 'move' call_tmp[736927](4756 call _cond_test tmp[663340]))
      if call_tmp[736927]
      {
        (4716 call compilerError "'isClose' does not support promotion, please call it with the individual values")
      }
      {
        unknown call_tmp[736932] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (736935 'move' call_tmp[736932](4737 'typeof' x[4697]))
        unknown call_tmp[736937] "expr temp" "maybe param" "maybe type" "temp"
        (736940 'move' call_tmp[736937](4734 call : call_tmp[736932] string[244]))
        unknown call_tmp[736942] "expr temp" "maybe param" "maybe type" "temp"
        (736945 'move' call_tmp[736942](4729 call + "x and y must be either 'real', 'imag', or 'complex', x was '" call_tmp[736937]))
        unknown call_tmp[736947] "expr temp" "maybe param" "maybe type" "temp"
        (736950 'move' call_tmp[736947](4727 call + call_tmp[736942] "' and y was '"))
        unknown call_tmp[736952] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (736955 'move' call_tmp[736952](4745 'typeof' y[4699]))
        unknown call_tmp[736957] "expr temp" "maybe param" "maybe type" "temp"
        (736960 'move' call_tmp[736957](4742 call : call_tmp[736952] string[244]))
        unknown call_tmp[736962] "expr temp" "maybe param" "maybe type" "temp"
        (736965 'move' call_tmp[736962](4725 call + call_tmp[736947] call_tmp[736957]))
        unknown call_tmp[736967] "expr temp" "maybe param" "maybe type" "temp"
        (736970 'move' call_tmp[736967](4723 call + call_tmp[736962] "'"))
        (4722 call compilerError call_tmp[736967])
      }
    }
    unknown tmp[476178] "maybe param" "temp"
    (476189 'move' tmp[476178] 1)
    unknown call_tmp[736972] "expr temp" "maybe param" "maybe type" "temp"
    (736975 'move' call_tmp[736972](476191 call _cond_invalid tmp[476178]))
    if call_tmp[736972]
    {
      (476194 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[663367] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663368] "maybe param" "temp"
    unknown call_tmp[736977] "expr temp" "maybe param" "maybe type" "temp"
    (736980 'move' call_tmp[736977](476179 call isTrue tmp[476178]))
    (663373 'move' tmp[663368](663371 call _cond_test call_tmp[736977]))
    if tmp[663368]
    {
      unknown tmp[663375] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[736982] "expr temp" "maybe param" "maybe type" "temp"
      (736985 'move' call_tmp[736982](4808 call < relTol[4704] 0))
      (663377 'move' tmp[663375](476182 call isTrue call_tmp[736982]))
      (663382 'move' tmp[663367](663379 '_paramFoldLogical' tmp[663368] tmp[663375]))
    }
    {
      (663387 'move' tmp[663367](663384 '_paramFoldLogical' tmp[663368] 0))
    }
    unknown call_tmp[736987] "expr temp" "maybe param" "maybe type" "temp"
    (736990 'move' call_tmp[736987](4812 call _cond_test tmp[663367]))
    if call_tmp[736987]
    {
      (4800 call boundsCheckHalt module=[222] HaltWrappers[518] "Input value for relTol must be positive")
      (398846 'referenced modules list' HaltWrappers[518])
    }
    unknown tmp[476199] "maybe param" "temp"
    (476210 'move' tmp[476199] 1)
    unknown call_tmp[736992] "expr temp" "maybe param" "maybe type" "temp"
    (736995 'move' call_tmp[736992](476212 call _cond_invalid tmp[476199]))
    if call_tmp[736992]
    {
      (476215 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[663394] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663395] "maybe param" "temp"
    unknown call_tmp[736997] "expr temp" "maybe param" "maybe type" "temp"
    (737000 'move' call_tmp[736997](476200 call isTrue tmp[476199]))
    (663400 'move' tmp[663395](663398 call _cond_test call_tmp[736997]))
    if tmp[663395]
    {
      unknown tmp[663402] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[737002] "expr temp" "maybe param" "maybe type" "temp"
      (737005 'move' call_tmp[737002](4829 call < absTol[4708] 0))
      (663404 'move' tmp[663402](476203 call isTrue call_tmp[737002]))
      (663409 'move' tmp[663394](663406 '_paramFoldLogical' tmp[663395] tmp[663402]))
    }
    {
      (663414 'move' tmp[663394](663411 '_paramFoldLogical' tmp[663395] 0))
    }
    unknown call_tmp[737007] "expr temp" "maybe param" "maybe type" "temp"
    (737010 'move' call_tmp[737007](4833 call _cond_test tmp[663394]))
    if call_tmp[737007]
    {
      (4821 call boundsCheckHalt module=[222] HaltWrappers[518] "Input value for absTol must be positive")
      (398852 'referenced modules list' HaltWrappers[518])
    }
    unknown call_tmp[737012] "expr temp" "maybe param" "maybe type" "temp"
    (737015 'move' call_tmp[737012](4843 call - x[4697] y[4699]))
    unknown call_tmp[737017] "maybe param" "maybe type" "temp"
    (737020 'move' call_tmp[737017](4842 call abs call_tmp[737012]))
    unknown diff[4839] "dead at end of block" "insert auto destroy"
    (642208 'init var' diff[4839] call_tmp[737017] real(64)[13])
    (4848 'end of statement')
    unknown tmp[476220] "maybe param" "temp"
    unknown tmp[476241] "maybe param" "temp"
    unknown call_tmp[737022] "expr temp" "maybe param" "maybe type" "temp"
    (737025 'move' call_tmp[737022](4859 call * relTol[4704] y[4699]))
    unknown call_tmp[737027] "expr temp" "maybe param" "maybe type" "temp"
    (737030 'move' call_tmp[737027](4858 call abs call_tmp[737022]))
    (476252 'move' tmp[476241](4854 call <= diff[4839] call_tmp[737027]))
    unknown call_tmp[737032] "expr temp" "maybe param" "maybe type" "temp"
    (737035 'move' call_tmp[737032](476254 call _cond_invalid tmp[476241]))
    if call_tmp[737032]
    {
      (476257 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[663421] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663422] "maybe param" "temp"
    unknown call_tmp[737037] "expr temp" "maybe param" "maybe type" "temp"
    (737040 'move' call_tmp[737037](476242 call isTrue tmp[476241]))
    (663427 'move' tmp[663422](663425 call _cond_test call_tmp[737037]))
    if tmp[663422]
    {
      (663432 'move' tmp[663421](663429 '_paramFoldLogical' tmp[663422] 1))
    }
    {
      unknown tmp[663434] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[737042] "expr temp" "maybe param" "maybe type" "temp"
      (737045 'move' call_tmp[737042](4868 call * relTol[4704] x[4697]))
      unknown call_tmp[737047] "expr temp" "maybe param" "maybe type" "temp"
      (737050 'move' call_tmp[737047](4867 call abs call_tmp[737042]))
      unknown call_tmp[737052] "expr temp" "maybe param" "maybe type" "temp"
      (737055 'move' call_tmp[737052](4863 call <= diff[4839] call_tmp[737047]))
      (663436 'move' tmp[663434](476246 call isTrue call_tmp[737052]))
      (663441 'move' tmp[663421](663438 '_paramFoldLogical' tmp[663422] tmp[663434]))
    }
    (476231 'move' tmp[476220] tmp[663421])
    unknown call_tmp[737057] "expr temp" "maybe param" "maybe type" "temp"
    (737060 'move' call_tmp[737057](476233 call _cond_invalid tmp[476220]))
    if call_tmp[737057]
    {
      (476236 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[663448] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[663449] "maybe param" "temp"
    unknown call_tmp[737062] "expr temp" "maybe param" "maybe type" "temp"
    (737065 'move' call_tmp[737062](476221 call isTrue tmp[476220]))
    (663454 'move' tmp[663449](663452 call _cond_test call_tmp[737062]))
    if tmp[663449]
    {
      (663459 'move' tmp[663448](663456 '_paramFoldLogical' tmp[663449] 1))
    }
    {
      unknown tmp[663461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[737067] "expr temp" "maybe param" "maybe type" "temp"
      (737070 'move' call_tmp[737067](4872 call <= diff[4839] absTol[4708]))
      (663463 'move' tmp[663461](476225 call isTrue call_tmp[737067]))
      (663468 'move' tmp[663448](663465 '_paramFoldLogical' tmp[663449] tmp[663461]))
    }
    (589610 'move' ret[589604](589609 'coerce' tmp[663448] bool[19]))
    gotoReturn _end_isClose[589602] _end_isClose[589602]
    (546556 'end of statement' diff[4839])
    label _end_isClose[589602]
    (589606 return ret[589604])
  }
  { scopeless type
    bool[19]
  }
  function signbit[4879](arg x[4884] :
  (4882 call real(64)[13] 32)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589616] "RVV" "temp"
    function chpl_macro_float_signbit[4889](arg x[4894] :
    (4892 call real(64)[13] 32)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_int[522]
    }
    unknown call_tmp[737072] "expr temp" "maybe param" "maybe type" "temp"
    (737075 'move' call_tmp[737072](4905 call chpl_macro_float_signbit x[4884]))
    unknown call_tmp[737077] "expr temp" "maybe param" "maybe type" "temp"
    (737080 'move' call_tmp[737077](4902 call : call_tmp[737072] bool[19]))
    (589622 'move' ret[589616](589621 'coerce' call_tmp[737077] bool[19]))
    (589618 return ret[589616])
  }
  { scopeless type
    bool[19]
  }
  function signbit[4911](arg x[4916] :
  (4914 call real(64)[13] 64)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[589626] "RVV" "temp"
    function chpl_macro_double_signbit[4921](arg x[4926] :
    (4924 call real(64)[13] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_int[522]
    }
    unknown call_tmp[737082] "expr temp" "maybe param" "maybe type" "temp"
    (737085 'move' call_tmp[737082](4937 call chpl_macro_double_signbit x[4916]))
    unknown call_tmp[737087] "expr temp" "maybe param" "maybe type" "temp"
    (737090 'move' call_tmp[737087](4934 call : call_tmp[737082] bool[19]))
    (589632 'move' ret[589626](589631 'coerce' call_tmp[737087] bool[19]))
    (589628 return ret[589626])
  }
  { scopeless type
    bool[19]
  }
  (395950 'used modules list'(386996 'use' ChapelStandard[315387])(1809 'import' HaltWrappers[518])(1811 'use' CTypes[51217]))
}
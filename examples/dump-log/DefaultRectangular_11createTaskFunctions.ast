AST dump for DefaultRectangular after pass createTaskFunctions.
Module use list: HaltWrappers DSIUtil ChapelArray ChapelDistribution ChapelRange OS CTypes ChapelDebugPrint ChapelLocks OwnedObject IO DefaultSparse DefaultAssociative ExternalArray Reflection ChplConfig RangeChunk 

{
  function chpl__init_DefaultRectangular[468549]() : void[4] "insert line file info" "module init"
  {
    unknown tmp[652642] "temp"
    unknown call_tmp[919446] "expr temp" "maybe param" "maybe type" "temp"
    (919449 'move' call_tmp[919446](652651 call chpl_config_has_value c"dataParTasksPerLocale" c"Built-in"))
    unknown call_tmp[919451] "expr temp" "maybe param" "maybe type" "temp"
    (919454 'move' call_tmp[919451](652654 call ! call_tmp[919446]))
    if call_tmp[919451]
    {
      (652647 'noop')
      (652670 'init var' tmp[652642] 0)
    }
    {
      unknown call_tmp[919456] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (919459 'move' call_tmp[919456](652658 'typeof' tmp[652642]))
      unknown call_tmp[919461] "expr temp" "maybe param" "maybe type" "temp"
      (919464 'move' call_tmp[919461](652661 call chpl_config_get_value c"dataParTasksPerLocale" c"Built-in"))
      (652666 'move' tmp[652642](652664 call _command_line_cast c"dataParTasksPerLocale" call_tmp[919456] call_tmp[919461]))
    }
    (652644 'move' dataParTasksPerLocale[287582] tmp[652642])
    (287585 'end of statement')
    unknown tmp[652672] "temp"
    unknown call_tmp[919466] "expr temp" "maybe param" "maybe type" "temp"
    (919469 'move' call_tmp[919466](652681 call chpl_config_has_value c"dataParIgnoreRunningTasks" c"Built-in"))
    unknown call_tmp[919471] "expr temp" "maybe param" "maybe type" "temp"
    (919474 'move' call_tmp[919471](652684 call ! call_tmp[919466]))
    if call_tmp[919471]
    {
      (652677 'noop')
      (652700 'init var' tmp[652672] 0)
    }
    {
      unknown call_tmp[919476] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (919479 'move' call_tmp[919476](652688 'typeof' tmp[652672]))
      unknown call_tmp[919481] "expr temp" "maybe param" "maybe type" "temp"
      (919484 'move' call_tmp[919481](652691 call chpl_config_get_value c"dataParIgnoreRunningTasks" c"Built-in"))
      (652696 'move' tmp[652672](652694 call _command_line_cast c"dataParIgnoreRunningTasks" call_tmp[919476] call_tmp[919481]))
    }
    (652674 'move' dataParIgnoreRunningTasks[287587] tmp[652672])
    (287590 'end of statement')
    unknown tmp[652702] "temp"
    unknown call_tmp[919486] "expr temp" "maybe param" "maybe type" "temp"
    (919489 'move' call_tmp[919486](652711 call chpl_config_has_value c"dataParMinGranularity" c"Built-in"))
    unknown call_tmp[919491] "expr temp" "maybe param" "maybe type" "temp"
    (919494 'move' call_tmp[919491](652714 call ! call_tmp[919486]))
    if call_tmp[919491]
    {
      (652707 'noop')
      (652730 'init var' tmp[652702] 1 int(64)[10])
    }
    {
      unknown call_tmp[919496] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (919499 'move' call_tmp[919496](652718 'typeof' tmp[652702]))
      unknown call_tmp[919501] "expr temp" "maybe param" "maybe type" "temp"
      (919504 'move' call_tmp[919501](652721 call chpl_config_get_value c"dataParMinGranularity" c"Built-in"))
      (652726 'move' tmp[652702](652724 call _command_line_cast c"dataParMinGranularity" call_tmp[919496] call_tmp[919501]))
    }
    (652704 'move' dataParMinGranularity[287592] tmp[652702])
    (287596 'end of statement')
    unknown call_tmp[919506] "expr temp" "maybe param" "maybe type" "temp"
    (919509 'move' call_tmp[919506](287603 call < dataParTasksPerLocale[287582] 0))
    unknown call_tmp[919511] "expr temp" "maybe param" "maybe type" "temp"
    (919514 'move' call_tmp[919511](287607 call _cond_test call_tmp[919506]))
    if call_tmp[919511]
    {
      (287598 call halt "dataParTasksPerLocale must be >= 0")
    }
    unknown call_tmp[919516] "expr temp" "maybe param" "maybe type" "temp"
    (919519 'move' call_tmp[919516](287618 call <= dataParMinGranularity[287592] 0))
    unknown call_tmp[919521] "expr temp" "maybe param" "maybe type" "temp"
    (919524 'move' call_tmp[919521](287622 call _cond_test call_tmp[919516]))
    if call_tmp[919521]
    {
      (287613 call halt "dataParMinGranularity must be > 0")
    }
    (652732 'init var' debugDefaultDist[287662] 0)
    (287665 'end of statement')
    (652734 'init var' debugDefaultDistBulkTransfer[287667] 0)
    (287670 'end of statement')
    (652736 'init var' debugDataPar[287672] 0)
    (287675 'end of statement')
    (652738 'init var' debugDataParNuma[287677] 0)
    (287680 'end of statement')
    (652740 'init var' disableArrRealloc[287682] 0)
    (287685 'end of statement')
    (652742 'init var' reportInPlaceRealloc[287687] 0)
    (287690 'end of statement')
    unknown call_tmp[919526] "expr temp" "maybe param" "maybe type" "temp"
    (919529 'move' call_tmp[919526](287695 call * 2 1024))
    unknown call_tmp[919531] "maybe param" "maybe type" "temp"
    (919534 'move' call_tmp[919531](287693 call * call_tmp[919526] 1024))
    (652744 'init var' parallelAssignThreshold[287692] call_tmp[919531])
    (287701 'end of statement')
    (652746 'init var' enableParallelGetsInAssignment[287703] 0)
    (287706 'end of statement')
    (652748 'init var' enableParallelPutsInAssignment[287708] 0)
    (287711 'end of statement')
    (652750 'init var' defaultDoRADOpt[287713] 1)
    (287716 'end of statement')
    (652752 'init var' defaultDisableLazyRADOpt[287718] 0)
    (287721 'end of statement')
    (652754 'init var' earlyShiftData[287723] 1)
    (287726 'end of statement')
    (652756 'init var' usePollyArrayIndex[287728] 0)
    (287731 'end of statement')
    (652758 'init var' defaultRectangularSupportsAutoLocalAccess[287733] 1)
    (287736 'end of statement')
    (652760 'init var' defaultStorageOrder[287746] RMO[287738])
    (287754 'end of statement')
    (652762 'init var' storageOrder[287756] defaultStorageOrder[287746])
    (287759 'end of statement')
    unknown call_tmp[919760] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (919763 'move' call_tmp[919760](1000479 'new' DefaultDist[450033](?)(_chpl_manager = unmanaged[183](?))))
    unknown call_tmp[919765] "maybe param" "maybe type" "temp"
    (919768 'move' call_tmp[919765](288290 call chpl__buildDistDMapValue call_tmp[919760]))
    (652790 'init var' defaultDist[288287] call_tmp[919765])
    (288297 'end of statement')
    (653605 'init var' debugDRScan[303965] 0)
    (303968 'end of statement')
    (630542 return _void[46])
  }
  const dataParTasksPerLocale[287582] "config" "const" "insert auto destroy" "@unstable"
  const dataParIgnoreRunningTasks[287587] "config" "const" "insert auto destroy" "@unstable"
  const dataParMinGranularity[287592] "config" "const" "insert auto destroy" "@unstable"
  unknown debugDefaultDist[287662] "config" "param"
  unknown debugDefaultDistBulkTransfer[287667] "config" "param"
  unknown debugDataPar[287672] "config" "param"
  unknown debugDataParNuma[287677] "config" "param"
  unknown disableArrRealloc[287682] "config" "param"
  unknown reportInPlaceRealloc[287687] "config" "param"
  unknown parallelAssignThreshold[287692] "config" "param"
  unknown enableParallelGetsInAssignment[287703] "config" "param"
  unknown enableParallelPutsInAssignment[287708] "config" "param"
  unknown defaultDoRADOpt[287713] "config" "param"
  unknown defaultDisableLazyRADOpt[287718] "config" "param"
  unknown earlyShiftData[287723] "config" "param"
  unknown usePollyArrayIndex[287728] "config" "param"
  unknown defaultRectangularSupportsAutoLocalAccess[287733] "config" "param"
  type ArrayStorageOrder[287742] def RMO[287738]:ArrayStorageOrder[287742] def CMO[287740]:ArrayStorageOrder[287742]
  unknown defaultStorageOrder[287746] "config" "param"
  unknown storageOrder[287756] "dead at end of block" "param"
  function polly_array_index[287760](arg arguments[287764]:int(64)[10] ...) : _unknown[42] "lineno ok" "llvm readnone"
  {
    unknown ret[629023] "RVV" "temp"
    unknown call_tmp[919538] "expr temp" "maybe param" "maybe type" "temp"
    (919541 'move' call_tmp[919538](287777 call size _mt[203] arguments[287764]))
    unknown call_tmp[919543] "expr temp" "maybe param" "maybe type" "temp"
    (919546 'move' call_tmp[919543](287774 call - call_tmp[919538] 1))
    unknown call_tmp[919548] "maybe param" "maybe type" "temp"
    (919551 'move' call_tmp[919548](287772 call / call_tmp[919543] 2))
    unknown rank[287771] "dead at end of block" "param"
    (652764 'init var' rank[287771] call_tmp[919548])
    (287783 'end of statement')
    unknown blkStart[287785] "dead at end of block" "param"
    (652766 'init var' blkStart[287785] 2)
    (287788 'end of statement')
    unknown call_tmp[919553] "expr temp" "maybe param" "maybe type" "temp"
    (919556 'move' call_tmp[919553](287793 call + 2 rank[287771]))
    unknown call_tmp[919558] "maybe param" "maybe type" "temp"
    (919561 'move' call_tmp[919558](287791 call - call_tmp[919553] 1))
    unknown blkEnd[287790] "dead at end of block" "param"
    (652768 'init var' blkEnd[287790] call_tmp[919558])
    (287799 'end of statement')
    unknown call_tmp[919563] "maybe param" "maybe type" "temp"
    (919566 'move' call_tmp[919563](287802 call + blkEnd[287790] 1))
    unknown indStart[287801] "dead at end of block" "param"
    (652770 'init var' indStart[287801] call_tmp[919563])
    (287807 'end of statement')
    unknown call_tmp[919568] "expr temp" "maybe param" "maybe type" "temp"
    (919571 'move' call_tmp[919568](287812 call + indStart[287801] rank[287771]))
    unknown call_tmp[919573] "maybe param" "maybe type" "temp"
    (919576 'move' call_tmp[919573](287810 call - call_tmp[919568] 1))
    unknown indEnd[287809] "dead at end of block" "param"
    (652772 'init var' indEnd[287809] call_tmp[919573])
    (287818 'end of statement')
    unknown call_tmp[919578] "maybe param" "maybe type" "temp"
    (919581 'move' call_tmp[919578](287822 call arguments[287764] 0))
    unknown offset[287820] "dead at end of block" "insert auto destroy"
    (652774 'init var' offset[287820] call_tmp[919578])
    (287825 'end of statement')
    unknown blk[287827] "dead at end of block" "insert auto destroy"
    unknown call_tmp[919583] "expr temp" "maybe param" "maybe type" "temp"
    (919586 'move' call_tmp[919583](287828 call * rank[287771] int(64)[10]))
    (652776 'default init var' blk[287827] call_tmp[919583])
    (287833 'end of statement')
    unknown ind[287835] "dead at end of block" "insert auto destroy"
    unknown call_tmp[919588] "expr temp" "maybe param" "maybe type" "temp"
    (919591 'move' call_tmp[919588](287836 call * rank[287771] int(64)[10]))
    (652778 'default init var' ind[287835] call_tmp[919588])
    (287841 'end of statement')
    unknown call_tmp[919593] "expr temp" "maybe param" "maybe type" "temp"
    (919596 'move' call_tmp[919593](287846 call - rank[287771] 1))
    unknown call_tmp[919598] "expr temp" "maybe param" "maybe type" "temp"
    (919601 'move' call_tmp[919598](287845 call blk[287827] call_tmp[919593]))
    (287842 call = call_tmp[919598] 1)
    (566719 'end of statement' blk[287827])
    {
      unknown i[287851] "dead at end of block" "index var" "insert auto destroy"
      (652780 'init var' i[287851] 0)
      (566721 'end of statement')
      unknown tmp[287885] "maybe param" "temp"
      unknown call_tmp[919603] "expr temp" "maybe param" "maybe type" "temp"
      (919606 'move' call_tmp[919603](287856 call - rank[287771] 2))
      (287896 'move' tmp[287885](287894 call chpl_compute_low_param_loop_bound 0 call_tmp[919603]))
      unknown tmp[287886] "maybe param" "temp"
      unknown call_tmp[919608] "expr temp" "maybe param" "maybe type" "temp"
      (919611 'move' call_tmp[919608](287901 call - rank[287771] 2))
      (287906 'move' tmp[287886](287904 call chpl_compute_high_param_loop_bound 0 call_tmp[919608]))
      unknown tmp[287887] "maybe param" "temp"
      (287909 'move' tmp[287887](287862 call - 1))
      ParamForLoop[287911]
      { i[287851] tmp[287885] tmp[287886] tmp[287887]
        unknown call_tmp[919613] "expr temp" "maybe param" "maybe type" "temp"
        (919616 'move' call_tmp[919613](287868 call blk[287827] i[287851]))
        unknown call_tmp[919618] "expr temp" "maybe param" "maybe type" "temp"
        (919621 'move' call_tmp[919618](287874 call + i[287851] 1))
        unknown call_tmp[919623] "expr temp" "maybe param" "maybe type" "temp"
        (919626 'move' call_tmp[919623](287873 call blk[287827] call_tmp[919618]))
        unknown call_tmp[919628] "expr temp" "maybe param" "maybe type" "temp"
        (919631 'move' call_tmp[919628](287880 call + blkStart[287785] i[287851]))
        unknown call_tmp[919633] "expr temp" "maybe param" "maybe type" "temp"
        (919636 'move' call_tmp[919633](287879 call arguments[287764] call_tmp[919628]))
        unknown call_tmp[919638] "expr temp" "maybe param" "maybe type" "temp"
        (919641 'move' call_tmp[919638](287870 call * call_tmp[919623] call_tmp[919633]))
        (287865 call = call_tmp[919613] call_tmp[919638])
        (566722 'end of statement' blk[287827] i[287851])
      }
      label _unused_continueLabel[287889]
      label _breakLabel[287888]
    }
    {
      unknown j[287920] "dead at end of block" "index var" "insert auto destroy"
      (652782 'init var' j[287920] 0)
      (566725 'end of statement')
      unknown tmp[287944] "maybe param" "temp"
      unknown call_tmp[919643] "expr temp" "maybe param" "maybe type" "temp"
      (919646 'move' call_tmp[919643](287923 call - rank[287771] 1))
      (287956 'move' tmp[287944](287954 call chpl_compute_low_param_loop_bound 0 call_tmp[919643]))
      unknown tmp[287945] "maybe param" "temp"
      unknown call_tmp[919648] "expr temp" "maybe param" "maybe type" "temp"
      (919651 'move' call_tmp[919648](287961 call - rank[287771] 1))
      (287966 'move' tmp[287945](287964 call chpl_compute_high_param_loop_bound 0 call_tmp[919648]))
      unknown tmp[287946] "maybe param" "temp"
      (287969 'move' tmp[287946] 1)
      ParamForLoop[287971]
      { j[287920] tmp[287944] tmp[287945] tmp[287946]
        {
          unknown call_tmp[919653] "expr temp" "maybe param" "maybe type" "temp"
          (919656 'move' call_tmp[919653](287933 call ind[287835] j[287920]))
          unknown call_tmp[919658] "expr temp" "maybe param" "maybe type" "temp"
          (919661 'move' call_tmp[919658](287939 call + indStart[287801] j[287920]))
          unknown call_tmp[919663] "expr temp" "maybe param" "maybe type" "temp"
          (919666 'move' call_tmp[919663](287937 call - call_tmp[919658] 1))
          unknown call_tmp[919668] "expr temp" "maybe param" "maybe type" "temp"
          (919671 'move' call_tmp[919668](287936 call arguments[287764] call_tmp[919663]))
          (287930 call = call_tmp[919653] call_tmp[919668])
          (566726 'end of statement' ind[287835] j[287920])
        }
      }
      label _unused_continueLabel[287948]
      label _breakLabel[287947]
    }
    unknown ret[287981] "dead at end of block" "insert auto destroy"
    (652784 'init var' ret[287981] offset[287820] int(64)[10])
    (287985 'end of statement' offset[287820])
    {
      unknown i[287986] "dead at end of block" "index var" "insert auto destroy"
      (652786 'init var' i[287986] 0)
      (566730 'end of statement')
      unknown tmp[288007] "maybe param" "temp"
      unknown call_tmp[919673] "expr temp" "maybe param" "maybe type" "temp"
      (919676 'move' call_tmp[919673](287989 call - rank[287771] 1))
      (288019 'move' tmp[288007](288017 call chpl_compute_low_param_loop_bound 0 call_tmp[919673]))
      unknown tmp[288008] "maybe param" "temp"
      unknown call_tmp[919678] "expr temp" "maybe param" "maybe type" "temp"
      (919681 'move' call_tmp[919678](288024 call - rank[287771] 1))
      (288029 'move' tmp[288008](288027 call chpl_compute_high_param_loop_bound 0 call_tmp[919678]))
      unknown tmp[288009] "maybe param" "temp"
      (288032 'move' tmp[288009] 1)
      ParamForLoop[288034]
      { i[287986] tmp[288007] tmp[288008] tmp[288009]
        {
          unknown call_tmp[919683] "expr temp" "maybe param" "maybe type" "temp"
          (919686 'move' call_tmp[919683](288002 call ind[287835] i[287986]))
          unknown call_tmp[919688] "expr temp" "maybe param" "maybe type" "temp"
          (919691 'move' call_tmp[919688](288005 call blk[287827] i[287986]))
          unknown call_tmp[919693] "expr temp" "maybe param" "maybe type" "temp"
          (919696 'move' call_tmp[919693](287999 call * call_tmp[919683] call_tmp[919688]))
          (287996 call += ret[287981] call_tmp[919693])
          (566731 'end of statement' ret[287981] ind[287835] i[287986] blk[287827] i[287986])
        }
      }
      label _unused_continueLabel[288011]
      label _breakLabel[288010]
    }
    (629029 'move' ret[629023](629028 'coerce' ret[287981] int(64)[10]))
    gotoReturn _end_polly_array_index[629021] _end_polly_array_index[629021]
    (566737 'end of statement' ret[287981])
    label _end_polly_array_index[629021]
    (629025 return ret[629023])
  }
  { scopeless type
    int(64)[10]
  }
  function DefaultDist[288284].dsiNewRectangularDom[288050](arg _mt[288066]:_MT[201], arg this[288052]:DefaultDist[288284], param arg rank[288055]:int(64)[10], arg idxType[288058]:_any[141](?), param arg strides[288061]:strideKind[107137], arg inds[288064]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629035] "RVV" "temp"
    unknown call_tmp[919698] "expr temp" "maybe param" "maybe type" "temp"
    (919701 'move' call_tmp[919698](288080 call _to_unmanaged this[288052]))
    unknown call_tmp[919703] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (919706 'move' call_tmp[919703](1000476 'new' DefaultRectangularDom[424162](?) rank[288055] idxType[288058] strides[288061] call_tmp[919698](_chpl_manager = unmanaged[183](?))))
    const dom[288070] "dead at end of block" "const" "insert auto destroy"
    (652788 'init var' dom[288070] call_tmp[919703])
    (288083 'end of statement')
    (288088 call(288085 call (partial) dsiSetIndices _mt[203] dom[288070]) inds[288064])
    (566739 'end of statement' dom[288070])
    (629040 'move' ret[629035](629039 'deref' dom[288070]))
    gotoReturn _end_dsiNewRectangularDom[629033] _end_dsiNewRectangularDom[629033]
    (566741 'end of statement' dom[288070])
    label _end_dsiNewRectangularDom[629033]
    (629037 return ret[629035])
  }
  function DefaultDist[288284].dsiNewAssociativeDom[288094](arg _mt[288104]:_MT[201], arg this[288096]:DefaultDist[288284], arg idxType[288098]:_any[141](?), param arg parSafe[288101]:bool[19]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629046] "RVV" "temp"
    unknown call_tmp[919710] "expr temp" "maybe param" "maybe type" "temp"
    (919713 'move' call_tmp[919710](288116 call _to_unmanaged this[288096]))
    unknown call_tmp[919715] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (919718 'move' call_tmp[919715](1000477 'new' DefaultAssociativeDom[454152](?) idxType[288098] parSafe[288101] call_tmp[919710](_chpl_manager = unmanaged[183](?))))
    (629051 'move' ret[629046](629050 'deref' call_tmp[919715]))
    (629048 return ret[629046])
  }
  function DefaultDist[288284].dsiNewSparseDom[288120](arg _mt[288134]:_MT[201], arg this[288122]:DefaultDist[288284], param arg rank[288125]:int(64)[10], arg idxType[288128]:_any[141](?), arg dom[288131]:_domain[225034](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629055] "RVV" "temp"
    unknown call_tmp[919720] "expr temp" "maybe param" "maybe type" "temp"
    (919723 'move' call_tmp[919720](288146 call _to_unmanaged this[288122]))
    unknown call_tmp[919725] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (919728 'move' call_tmp[919725](1000478 'new' DefaultSparseDom[453758](?) rank[288125] idxType[288128] call_tmp[919720] dom[288131](_chpl_manager = unmanaged[183](?))))
    (629060 'move' ret[629055](629059 'deref' call_tmp[919725]))
    (629057 return ret[629055])
  }
  function DefaultDist[288284].dsiTargetLocales[288151](arg _mt[288155]:_MT[201], arg this[288153]:DefaultDist[288284]) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[629064] "RVV" "temp"
    unknown call_tmp[919730] "expr temp" "maybe param" "maybe type" "temp"
    (919733 'move' call_tmp[919730](288162 '_wide_get_locale' this[288153]))
    unknown call_tmp[919735] "expr temp" "maybe param" "maybe type" "temp"
    (919738 'move' call_tmp[919735](288163 call chpl_localeID_to_locale call_tmp[919730]))
    unknown call_tmp[919740] "expr temp" "maybe param" "maybe type" "temp"
    (919743 'move' call_tmp[919740](288160 call chpl_getSingletonLocaleArray call_tmp[919735]))
    (629069 'move' ret[629064](629068 'addr of' call_tmp[919740]))
    (629066 return ret[629064])
  }
  function DefaultDist[288284].dsiIndexToLocale[288167](arg _mt[288173]:_MT[201], arg this[288169]:DefaultDist[288284], arg ind[288171]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[629073] "RVV" "temp"
    unknown call_tmp[919745] "expr temp" "maybe param" "maybe type" "temp"
    (919748 'move' call_tmp[919745](288178 '_wide_get_locale' this[288169]))
    unknown call_tmp[919750] "expr temp" "maybe param" "maybe type" "temp"
    (919753 'move' call_tmp[919750](288179 call chpl_localeID_to_locale call_tmp[919745]))
    (629078 'move' ret[629073](629077 'deref' call_tmp[919750]))
    (629075 return ret[629073])
  }
  function DefaultDist[288284].dsiClone[288183](arg _mt[288187]:_MT[201], arg this[288185]:DefaultDist[288284]) : _unknown[42] "method" "primary method"
  {
    unknown ret[629082] "RVV" "temp"
    unknown call_tmp[919755] "expr temp" "maybe param" "maybe type" "temp"
    (919758 'move' call_tmp[919755](288192 call _to_unmanaged this[288185]))
    (629087 'move' ret[629082](629086 'deref' call_tmp[919755]))
    (629084 return ret[629082])
  }
  function DefaultDist[288284].dsiAssign[288196](arg _mt[288205]:_MT[201], arg this[288198]:DefaultDist[288284], arg other[288202]:DefaultDist[288284]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (629089 return _void[46])
  }
  function DefaultDist[288284].dsiEqualDMaps[288210](arg _mt[288219]:_MT[201], arg this[288212]:DefaultDist[288284], arg d[288216]:unmanaged DefaultDist[468151]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[629093] "RVV" "param" "temp"
    (629098 'move' ret[629093](629097 'deref' 1))
    (629095 return ret[629093])
  }
  function DefaultDist[288284].dsiEqualDMaps[288226](arg _mt[288232]:_MT[201], arg this[288228]:DefaultDist[288284], arg d[288230]:_any[141](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[629102] "RVV" "param" "temp"
    (629107 'move' ret[629102](629106 'deref' 0))
    (629104 return ret[629102])
  }
  function DefaultDist[288284].trackDomains[288239](arg _mt[288243]:_MT[201], arg this[288241]:DefaultDist[288284]) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629111] "RVV" "param" "temp"
    (629116 'move' ret[629111](629115 'deref' 0))
    (629113 return ret[629111])
  }
  function DefaultDist[288284].dsiTrackDomains[288250](arg _mt[288254]:_MT[201], arg this[288252]:DefaultDist[288284]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629120] "RVV" "temp"
    (629125 'move' ret[629120](629124 'deref' 0))
    (629122 return ret[629120])
  }
  function DefaultDist[288284].singleton[288261](arg _mt[288265]:_MT[201], arg this[288263]:DefaultDist[288284]) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629129] "RVV" "param" "temp"
    (629134 'move' ret[629129](629133 'deref' 1))
    (629131 return ret[629129])
  }
  function DefaultDist[288284].dsiIsLayout[288272](arg _mt[288276]:_MT[201], arg this[288274]:DefaultDist[288284]) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629138] "RVV" "param" "temp"
    (629143 'move' ret[629138](629142 'deref' 1))
    (629140 return ret[629138])
  }
  function DefaultDist[288284].super[1280747](arg _mt[1280749]:_MT[201], arg this[1280751]:DefaultDist[288284]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1280761] "RVV" "temp"
    unknown call_tmp[1280768] "expr temp" "maybe param" "maybe type" "temp"
    (1280771 'move' call_tmp[1280768](1280755 '.v' this[1280751] c"super"))
    (1280766 'move' ret[1280761](1280765 'deref' call_tmp[1280768]))
    (1280763 return ret[1280761])
  }
  function DefaultDist[288284].init[1280773](arg _mt[1280775]:_MT[201], arg this[1280776]:DefaultDist[288284], in arg _doms_containing_dist[1280789]:int(64)[10] =
  _typeDefaultT[217], in arg _domsLock[1280794]:chpl_LocalSpinlock[85418] =
  _typeDefaultT[217], in arg _free_when_no_doms[1280799]:bool[19] =
  _typeDefaultT[217], in arg pid[1280806]:int(64)[10] :
  int(64)[10] =
  nullPid[247489]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1280811] "temporary of super field" "temp"
    (1280813 'move' super_tmp[1280811](1280810 '.v' this[1280776] c"super"))
    (1280786 call(1280784 call (partial) init _mt[203] super_tmp[1280811]) _doms_containing_dist[1280789] _domsLock[1280794] _free_when_no_doms[1280799] pid[1280806])
    (1280834 'end of statement')
    unknown tmp[1280816] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1280837] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1280849] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1280852 'move' call_tmp[1280849](1280818 '.v' this[1280776] c"super"))
      (1280841 'move' call_type_tmp[1280837](1280821 'typeof' call_tmp[1280849]))
    }
    (1280822 'move' tmp[1280816] call_type_tmp[1280837])
    unknown call_tmp[1280854] "maybe param" "maybe type" "temp"
    (1280857 'move' call_tmp[1280854](1280827 'cast' tmp[1280816] this[1280776]))
    unknown chpl__thisAsParent[1280824] "dead at end of block" "insert auto destroy" "temp"
    (1280845 'init var' chpl__thisAsParent[1280824] call_tmp[1280854] tmp[1280816])
    (1280830 'setcid' chpl__thisAsParent[1280824])
    (1280835 'end of statement')
    (1280832 'setcid' this[1280776])
    (1280843 return _void[46])
  }
  function DefaultDist[288284].deinit[1280859](arg _mt[1280861]:_MT[201], arg this[1280863]:DefaultDist[288284]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1280871 return _void[46])
  }
  function DefaultDist[288284].serialize[1280873](arg _mt[1280877]:_MT[201], arg this[1280875]:DefaultDist[288284], arg writer[1280876]:_any[141](?), ref arg serializer[1280881]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1280884 call serializeDefaultImpl writer[1280876] serializer[1280881] this[1280875])
    (1280890 return _void[46])
  }
  function DefaultDist[288284].deserialize[1280892](arg _mt[1280896]:_MT[201], arg this[1280894]:DefaultDist[288284], arg reader[1280895]:_any[141](?), ref arg deserializer[1280901]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1280903] "temp"
    (1280905 'move' _deser_temp[1280903] this[1280894])
    (1280908 call deserializeDefaultImpl reader[1280895] deserializer[1280901] _deser_temp[1280903])
    (1280914 return _void[46])
  }
  type DefaultDist[288284] val super[397685]:BaseDist[268671] "super class"
  type unmanaged DefaultDist[468151]
  type DefaultDist[450033](?)
  unknown defaultDist[288287] "dead at end of block" "insert auto destroy" "locale private"
  function chpl_defaultDistInitPrivate[288298]() : _unknown[42] "no return value for void"
  {
    unknown call_tmp[919772] "expr temp" "maybe param" "maybe type" "temp"
    (919775 'move' call_tmp[919772](288328 call _value _mt[203] defaultDist[288287]))
    unknown call_tmp[919777] "expr temp" "maybe param" "maybe type" "temp"
    (919780 'move' call_tmp[919777](288325 call == call_tmp[919772] nil[32]))
    unknown call_tmp[919782] "expr temp" "maybe param" "maybe type" "temp"
    (919785 'move' call_tmp[919782](288332 call _cond_test call_tmp[919777]))
    if call_tmp[919782]
    {
      unknown call_tmp[919787] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (919790 'move' call_tmp[919787](1000480 'new' DefaultDist[450033](?)(_chpl_manager = unmanaged[183](?))))
      unknown call_tmp[919792] "maybe param" "maybe type" "temp"
      (919795 'move' call_tmp[919792](288306 call chpl__buildDistDMapValue call_tmp[919787]))
      const nd[288303] "dead at end of block" "const" "insert auto destroy"
      (652792 'init var' nd[288303] call_tmp[919792])
      (288313 'end of statement')
      unknown call_tmp[919799] "expr temp" "maybe param" "maybe type" "temp"
      (919802 'move' call_tmp[919799](288322 call(288319 call (partial) clone _mt[203] nd[288303])))
      (288314 'move' defaultDist[288287](288317 call chpl__autoCopy call_tmp[919799](definedConst = 0)))
      (566754 'end of statement' nd[288303])
    }
    (629145 return _void[46])
  }
  function DefaultRectangularDom[292740](?).linksDistribution[288361](arg _mt[288365]:_MT[201], arg this[288363]:DefaultRectangularDom[292740](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629149] "RVV" "param" "temp"
    (629154 'move' ret[629149](629153 'deref' 0))
    (629151 return ret[629149])
  }
  function DefaultRectangularDom[292740](?).dsiLinksDistribution[288372](arg _mt[288376]:_MT[201], arg this[288374]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629158] "RVV" "temp"
    (629163 'move' ret[629158](629162 'deref' 0))
    (629160 return ret[629158])
  }
  function DefaultRectangularDom[467912](?).isDefaultRectangular[288383](arg _mt[288387]:_MT[201], arg this[288385]:DefaultRectangularDom[467912](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629167] "RVV" "param" "temp"
    (629172 'move' ret[629167](629171 'deref' 1))
    (629169 return ret[629167])
  }
  function DefaultRectangularDom[292740](?).isDefaultRectangular[288394](arg _mt[288398]:_MT[201], arg this[288396]:DefaultRectangularDom[292740](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629176] "RVV" "param" "temp"
    (629181 'move' ret[629176](629180 'deref' 1))
    (629178 return ret[629176])
  }
  function DefaultRectangularDom[292740](?).init[288405](arg _mt[288417]:_MT[201], arg this[288407]:DefaultRectangularDom[292740](?), param arg rank[288409]:_any[141](?), arg idxType[288411]:_any[141](?), param arg strides[288413]:_any[141](?), arg dist[288415]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[533180] "temporary of super field" "temp"
    (533182 'move' super_tmp[533180](533179 '.v' this[288407] c"super"))
    (288424 call(288421 call (partial) init _mt[203] super_tmp[533180]) rank[288409] idxType[288411] strides[288413])
    (566760 'end of statement')
    unknown tmp[533185] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578955] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[919806] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (919809 'move' call_tmp[919806](533187 '.v' this[288407] c"super"))
      (578959 'move' call_type_tmp[578955](533190 'typeof' call_tmp[919806]))
    }
    (533191 'move' tmp[533185] call_type_tmp[578955])
    unknown call_tmp[919811] "maybe param" "maybe type" "temp"
    (919814 'move' call_tmp[919811](533196 'cast' tmp[533185] this[288407]))
    unknown chpl__thisAsParent[533193] "dead at end of block" "insert auto destroy" "temp"
    (652794 'init var' chpl__thisAsParent[533193] call_tmp[919811] tmp[533185])
    (533199 'setcid' chpl__thisAsParent[533193])
    (566761 'end of statement')
    unknown dist[533201] "temp"
    (533204 'init var' dist[533201] dist[288415] unmanaged DefaultDist[468151])
    (533206 'init field' this[288407] c"dist" dist[533201])
    (566762 'end of statement')
    unknown ranges[533211] "temp"
    unknown call_tmp[919816] "expr temp" "maybe param" "maybe type" "temp"
    (919819 'move' call_tmp[919816](533227 '.v' this[288407] c"rank"))
    unknown call_tmp[919821] "expr temp" "maybe param" "maybe type" "temp"
    (919824 'move' call_tmp[919821](533230 '.v' this[288407] c"idxType"))
    unknown call_tmp[919826] "expr temp" "maybe param" "maybe type" "temp"
    (919829 'move' call_tmp[919826](533233 '.v' this[288407] c"strides"))
    unknown call_tmp[919831] "expr temp" "maybe param" "maybe type" "temp"
    (919834 'move' call_tmp[919831](533217 call range[240](?) call_tmp[919821] both[107114] call_tmp[919826]))
    unknown call_tmp[919836] "expr temp" "maybe param" "maybe type" "temp"
    (919839 'move' call_tmp[919836](533214 call * call_tmp[919816] call_tmp[919831]))
    (533221 'default init var' ranges[533211] call_tmp[919836])
    (533223 '.=' this[288407] c"ranges" ranges[533211])
    (566763 'end of statement')
    (533236 'setcid' this[288407])
    (629183 return _void[46])
  }
  function DefaultRectangularDom[467912](?).chpl_integralIdxType[288437](arg _mt[288441]:_MT[201], arg this[288439]:DefaultRectangularDom[467912](?)) type : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[629187] "RVV" "temp" "type variable"
    unknown call_tmp[919843] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (919846 'move' call_tmp[919843](455141 call idxType _mt[203] this[288439]))
    unknown call_tmp[919848] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (919851 'move' call_tmp[919848](288446 call chpl__idxTypeToIntIdxType call_tmp[919843]))
    (629192 'move' ret[629187](629191 'deref' call_tmp[919848]))
    (629189 return ret[629187])
  }
  function DefaultRectangularDom[292740](?).dsiMyDist[288450](arg _mt[288454]:_MT[201], arg this[288452]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629196] "RVV" "temp"
    unknown call_tmp[919855] "expr temp" "maybe param" "maybe type" "temp"
    (919858 'move' call_tmp[919855](455146 call dist _mt[203] this[288452]))
    (629201 'move' ret[629196](629200 'deref' call_tmp[919855]))
    (629198 return ret[629196])
  }
  function DefaultRectangularDom[292740](?).chpl__serialize[288484](arg _mt[288488]:_MT[201], arg this[288486]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[629205] "RVV" "temp"
    unknown call_tmp[919862] "expr temp" "maybe param" "maybe type" "temp"
    (919865 'move' call_tmp[919862](455154 call rank _mt[203] this[288486]))
    unknown call_tmp[919869] "expr temp" "maybe param" "maybe type" "temp"
    (919872 'move' call_tmp[919869](455159 call idxType _mt[203] this[288486]))
    unknown call_tmp[919876] "expr temp" "maybe param" "maybe type" "temp"
    (919879 'move' call_tmp[919876](455164 call strides _mt[203] this[288486]))
    unknown call_tmp[919883] "expr temp" "maybe param" "maybe type" "temp"
    (919886 'move' call_tmp[919883](288499 call(455168 call (partial) dsiDims _mt[203] this[288486])))
    unknown call_tmp[919888] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (919891 'move' call_tmp[919888](1000481 'new' _serialized_domain[288482](?) call_tmp[919862] call_tmp[919869] call_tmp[919876] call_tmp[919883] 1))
    (629210 'move' ret[629205](629209 'deref' call_tmp[919888]))
    (629207 return ret[629205])
  }
  function DefaultRectangularDom[467912](?).chpl__deserialize[288503](arg _mt[288509]:_MT[201], arg this[288505]:DefaultRectangularDom[467912](?), arg data[288507]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[629214] "RVV" "temp"
    unknown call_tmp[919897] "expr temp" "maybe param" "maybe type" "temp"
    (919900 'move' call_tmp[919897](288519 call rank _mt[203] data[288507]))
    unknown call_tmp[919904] "expr temp" "maybe param" "maybe type" "temp"
    (919907 'move' call_tmp[919904](288523 call idxType _mt[203] data[288507]))
    unknown call_tmp[919911] "expr temp" "maybe param" "maybe type" "temp"
    (919914 'move' call_tmp[919911](288527 call strides _mt[203] data[288507]))
    unknown call_tmp[919918] "expr temp" "maybe param" "maybe type" "temp"
    (919921 'move' call_tmp[919918](288531 call dims _mt[203] data[288507]))
    unknown call_tmp[919923] "expr temp" "maybe param" "maybe type" "temp"
    (919926 'move' call_tmp[919923](288517 call(288514 call (partial) newRectangularDom _mt[203] defaultDist[288287]) call_tmp[919897] call_tmp[919904] call_tmp[919911] call_tmp[919918]))
    (629219 'move' ret[629214](629218 'deref' call_tmp[919923]))
    (629216 return ret[629214])
  }
  function DefaultRectangularDom[292740](?).dsiDisplayRepresentation[288536](arg _mt[288540]:_MT[201], arg this[288538]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[919930] "expr temp" "maybe param" "maybe type" "temp"
    (919933 'move' call_tmp[919930](455173 call ranges _mt[203] this[288538]))
    (288544 call writeln "ranges = " call_tmp[919930])
    (629221 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiGetIndices[288551](arg _mt[288555]:_MT[201], arg this[288553]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[629225] "RVV" "temp"
    unknown call_tmp[919937] "expr temp" "maybe param" "maybe type" "temp"
    (919940 'move' call_tmp[919937](455178 call ranges _mt[203] this[288553]))
    (629230 'move' ret[629225](629229 'deref' call_tmp[919937]))
    (629227 return ret[629225])
  }
  function DefaultRectangularDom[292740](?).dsiSetIndices[288562](arg _mt[288568]:_MT[201], arg this[288564]:DefaultRectangularDom[292740](?), arg x[288566]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[919944] "expr temp" "maybe param" "maybe type" "temp"
    (919947 'move' call_tmp[919944](455183 call ranges _mt[203] this[288564]))
    (288571 call = call_tmp[919944] x[288566])
    (629232 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiAssignDomain[288577](arg _mt[288589]:_MT[201], arg this[288579]:DefaultRectangularDom[292740](?), arg rhs[288582]:_domain[225034](?), arg lhsPrivate[288586]:bool[19]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (288593 call chpl_assignDomainWithGetSetIndices this[288579] rhs[288582])
    (629234 return _void[46])
  }
  function DefaultRectangularDom[292740](?).these_help[288598](arg _mt[288606]:_MT[201], arg this[288600]:DefaultRectangularDom[292740](?), param arg d[288603]:int(64)[10]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629238] "RVV" "temp"
    unknown call_tmp[919951] "expr temp" "maybe param" "maybe type" "temp"
    (919954 'move' call_tmp[919951](455239 call rank _mt[203] this[288600]))
    unknown call_tmp[919956] "expr temp" "maybe param" "maybe type" "temp"
    (919959 'move' call_tmp[919956](288845 call - call_tmp[919951] 1))
    unknown call_tmp[919961] "expr temp" "maybe param" "maybe type" "temp"
    (919964 'move' call_tmp[919961](288842 call == d[288603] call_tmp[919956]))
    unknown call_tmp[919966] "expr temp" "maybe param" "maybe type" "temp"
    (919969 'move' call_tmp[919966](288849 call _cond_test call_tmp[919961]))
    if call_tmp[919966]
    {
      {
        unknown _indexOfInterest[288620] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288621] "expr temp" "temp"
        unknown call_tmp[919973] "expr temp" "maybe param" "maybe type" "temp"
        (919976 'move' call_tmp[919973](288613 call(455193 call (partial) ranges _mt[203] this[288600]) d[288603]))
        (288630 'move' _iterator[288621](288628 call _getIterator call_tmp[919973]))
        Defer
        {
          {
            (288645 call _freeIterator _iterator[288621])
          }
        }
        { scopeless type
          (288635 'move' _indexOfInterest[288620](288632 call iteratorIndex _iterator[288621]))
        }
        ForLoop[288622] order-independent
        {
          unknown i[288610] "index var" "insert auto destroy"
          (566774 'end of statement')
          (288640 'move' i[288610] _indexOfInterest[288620])
          (566775 'end of statement' i[288610])
          unknown yret[629242] "YVV" "temp"
          (629245 'move' yret[629242](629244 'deref' i[288610]))
          (288615 yield yret[629242])
          (566777 'end of statement' i[288610])
          label _continueLabel[288625]
          _indexOfInterest[288620]
          _iterator[288621]
        }
        label _breakLabel[288626]
      }
    }
    {
      unknown call_tmp[919980] "expr temp" "maybe param" "maybe type" "temp"
      (919983 'move' call_tmp[919980](455233 call rank _mt[203] this[288600]))
      unknown call_tmp[919985] "expr temp" "maybe param" "maybe type" "temp"
      (919988 'move' call_tmp[919985](288834 call - call_tmp[919980] 2))
      unknown call_tmp[919990] "expr temp" "maybe param" "maybe type" "temp"
      (919993 'move' call_tmp[919990](288831 call == d[288603] call_tmp[919985]))
      unknown call_tmp[919995] "expr temp" "maybe param" "maybe type" "temp"
      (919998 'move' call_tmp[919995](288838 call _cond_test call_tmp[919990]))
      if call_tmp[919995]
      {
        {
          unknown _indexOfInterest[288709] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[288710] "expr temp" "temp"
          unknown call_tmp[920002] "expr temp" "maybe param" "maybe type" "temp"
          (920005 'move' call_tmp[920002](288656 call(455200 call (partial) ranges _mt[203] this[288600]) d[288603]))
          (288719 'move' _iterator[288710](288717 call _getIterator call_tmp[920002]))
          Defer
          {
            {
              (288734 call _freeIterator _iterator[288710])
            }
          }
          { scopeless type
            (288724 'move' _indexOfInterest[288709](288721 call iteratorIndex _iterator[288710]))
          }
          ForLoop[288711] order-independent
          {
            unknown i[288653] "index var" "insert auto destroy"
            (566780 'end of statement')
            (288729 'move' i[288653] _indexOfInterest[288709])
            (566781 'end of statement' i[288653])
            {
              unknown _indexOfInterest[288675] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[288676] "expr temp" "temp"
              unknown call_tmp[920011] "expr temp" "maybe param" "maybe type" "temp"
              (920014 'move' call_tmp[920011](455212 call rank _mt[203] this[288600]))
              unknown call_tmp[920016] "expr temp" "maybe param" "maybe type" "temp"
              (920019 'move' call_tmp[920016](288662 call - call_tmp[920011] 1))
              unknown call_tmp[920021] "expr temp" "maybe param" "maybe type" "temp"
              (920024 'move' call_tmp[920021](288661 call(455207 call (partial) these_help _mt[203] this[288600]) call_tmp[920016]))
              (288685 'move' _iterator[288676](288683 call _getIterator call_tmp[920021]))
              Defer
              {
                {
                  (288700 call _freeIterator _iterator[288676])
                }
              }
              { scopeless type
                (288690 'move' _indexOfInterest[288675](288687 call iteratorIndex _iterator[288676]))
              }
              ForLoop[288677] order-independent
              {
                unknown j[288658] "index var" "insert auto destroy"
                (566784 'end of statement')
                (288695 'move' j[288658] _indexOfInterest[288675])
                (566785 'end of statement' j[288658])
                unknown yret[629248] "YVV" "temp"
                unknown call_tmp[920026] "expr temp" "maybe param" "maybe type" "temp"
                (920029 'move' call_tmp[920026](288670 call _build_tuple i[288653] j[288658]))
                (629251 'move' yret[629248](629250 'deref' call_tmp[920026]))
                (288666 yield yret[629248])
                (566787 'end of statement' i[288653] j[288658])
                label _continueLabel[288680]
                _indexOfInterest[288675]
                _iterator[288676]
              }
              label _breakLabel[288681]
            }
            label _continueLabel[288714]
            _indexOfInterest[288709]
            _iterator[288710]
          }
          label _breakLabel[288715]
        }
      }
      {
        {
          unknown _indexOfInterest[288799] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[288800] "expr temp" "temp"
          unknown call_tmp[920033] "expr temp" "maybe param" "maybe type" "temp"
          (920036 'move' call_tmp[920033](288745 call(455219 call (partial) ranges _mt[203] this[288600]) d[288603]))
          (288809 'move' _iterator[288800](288807 call _getIterator call_tmp[920033]))
          Defer
          {
            {
              (288824 call _freeIterator _iterator[288800])
            }
          }
          { scopeless type
            (288814 'move' _indexOfInterest[288799](288811 call iteratorIndex _iterator[288800]))
          }
          ForLoop[288801] order-independent
          {
            unknown i[288742] "index var" "insert auto destroy"
            (566791 'end of statement')
            (288819 'move' i[288742] _indexOfInterest[288799])
            (566792 'end of statement' i[288742])
            {
              unknown _indexOfInterest[288765] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[288766] "expr temp" "temp"
              unknown call_tmp[920040] "expr temp" "maybe param" "maybe type" "temp"
              (920043 'move' call_tmp[920040](288751 call + d[288603] 1))
              unknown call_tmp[920045] "expr temp" "maybe param" "maybe type" "temp"
              (920048 'move' call_tmp[920045](288750 call(455224 call (partial) these_help _mt[203] this[288600]) call_tmp[920040]))
              (288775 'move' _iterator[288766](288773 call _getIterator call_tmp[920045]))
              Defer
              {
                {
                  (288790 call _freeIterator _iterator[288766])
                }
              }
              { scopeless type
                (288780 'move' _indexOfInterest[288765](288777 call iteratorIndex _iterator[288766]))
              }
              ForLoop[288767] order-independent
              {
                unknown j[288747] "index var" "insert auto destroy"
                (566795 'end of statement')
                (288785 'move' j[288747] _indexOfInterest[288765])
                (566796 'end of statement' j[288747])
                unknown yret[629254] "YVV" "temp"
                unknown call_tmp[920050] "expr temp" "maybe param" "maybe type" "temp"
                (920053 'move' call_tmp[920050](288760 call _build_tuple i[288742](288759 'expand_tuple' j[288747])))
                (629257 'move' yret[629254](629256 'deref' call_tmp[920050]))
                (288755 yield yret[629254])
                (566798 'end of statement' i[288742] j[288747])
                label _continueLabel[288770]
                _indexOfInterest[288765]
                _iterator[288766]
              }
              label _breakLabel[288771]
            }
            label _continueLabel[288804]
            _indexOfInterest[288799]
            _iterator[288800]
          }
          label _breakLabel[288805]
        }
      }
    }
    (629240 return ret[629238])
  }
  function DefaultRectangularDom[292740](?).these_help[288856](arg _mt[288866]:_MT[201], arg this[288858]:DefaultRectangularDom[292740](?), param arg d[288861]:int(64)[10], arg block[288864]:_any[141](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629262] "RVV" "temp"
    unknown call_tmp[920057] "expr temp" "maybe param" "maybe type" "temp"
    (920060 'move' call_tmp[920057](289116 call size _mt[203] block[288864]))
    unknown call_tmp[920062] "expr temp" "maybe param" "maybe type" "temp"
    (920065 'move' call_tmp[920062](289113 call - call_tmp[920057] 1))
    unknown call_tmp[920067] "expr temp" "maybe param" "maybe type" "temp"
    (920070 'move' call_tmp[920067](289110 call == d[288861] call_tmp[920062]))
    unknown call_tmp[920072] "expr temp" "maybe param" "maybe type" "temp"
    (920075 'move' call_tmp[920072](289120 call _cond_test call_tmp[920067]))
    if call_tmp[920072]
    {
      {
        unknown _indexOfInterest[288880] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288881] "expr temp" "temp"
        unknown call_tmp[920077] "expr temp" "maybe param" "maybe type" "temp"
        (920080 'move' call_tmp[920077](288873 call block[288864] d[288861]))
        (288890 'move' _iterator[288881](288888 call _getIterator call_tmp[920077]))
        Defer
        {
          {
            (288905 call _freeIterator _iterator[288881])
          }
        }
        { scopeless type
          (288895 'move' _indexOfInterest[288880](288892 call iteratorIndex _iterator[288881]))
        }
        ForLoop[288882] order-independent
        {
          unknown i[288870] "index var" "insert auto destroy"
          (566802 'end of statement')
          (288900 'move' i[288870] _indexOfInterest[288880])
          (566803 'end of statement' i[288870])
          unknown yret[629266] "YVV" "temp"
          (629269 'move' yret[629266](629268 'deref' i[288870]))
          (288875 yield yret[629266])
          (566805 'end of statement' i[288870])
          label _continueLabel[288885]
          _indexOfInterest[288880]
          _iterator[288881]
        }
        label _breakLabel[288886]
      }
    }
    {
      unknown call_tmp[920084] "expr temp" "maybe param" "maybe type" "temp"
      (920087 'move' call_tmp[920084](289102 call size _mt[203] block[288864]))
      unknown call_tmp[920089] "expr temp" "maybe param" "maybe type" "temp"
      (920092 'move' call_tmp[920089](289099 call - call_tmp[920084] 2))
      unknown call_tmp[920094] "expr temp" "maybe param" "maybe type" "temp"
      (920097 'move' call_tmp[920094](289096 call == d[288861] call_tmp[920089]))
      unknown call_tmp[920099] "expr temp" "maybe param" "maybe type" "temp"
      (920102 'move' call_tmp[920099](289106 call _cond_test call_tmp[920094]))
      if call_tmp[920099]
      {
        {
          unknown _indexOfInterest[288973] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[288974] "expr temp" "temp"
          unknown call_tmp[920104] "expr temp" "maybe param" "maybe type" "temp"
          (920107 'move' call_tmp[920104](288916 call block[288864] d[288861]))
          (288983 'move' _iterator[288974](288981 call _getIterator call_tmp[920104]))
          Defer
          {
            {
              (288998 call _freeIterator _iterator[288974])
            }
          }
          { scopeless type
            (288988 'move' _indexOfInterest[288973](288985 call iteratorIndex _iterator[288974]))
          }
          ForLoop[288975] order-independent
          {
            unknown i[288913] "index var" "insert auto destroy"
            (566808 'end of statement')
            (288993 'move' i[288913] _indexOfInterest[288973])
            (566809 'end of statement' i[288913])
            {
              unknown _indexOfInterest[288939] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[288940] "expr temp" "temp"
              unknown call_tmp[920113] "expr temp" "maybe param" "maybe type" "temp"
              (920116 'move' call_tmp[920113](288925 call size _mt[203] block[288864]))
              unknown call_tmp[920118] "expr temp" "maybe param" "maybe type" "temp"
              (920121 'move' call_tmp[920118](288922 call - call_tmp[920113] 1))
              unknown call_tmp[920123] "expr temp" "maybe param" "maybe type" "temp"
              (920126 'move' call_tmp[920123](288921 call(455248 call (partial) these_help _mt[203] this[288858]) call_tmp[920118] block[288864]))
              (288949 'move' _iterator[288940](288947 call _getIterator call_tmp[920123]))
              Defer
              {
                {
                  (288964 call _freeIterator _iterator[288940])
                }
              }
              { scopeless type
                (288954 'move' _indexOfInterest[288939](288951 call iteratorIndex _iterator[288940]))
              }
              ForLoop[288941] order-independent
              {
                unknown j[288918] "index var" "insert auto destroy"
                (566812 'end of statement')
                (288959 'move' j[288918] _indexOfInterest[288939])
                (566813 'end of statement' j[288918])
                unknown yret[629272] "YVV" "temp"
                unknown call_tmp[920128] "expr temp" "maybe param" "maybe type" "temp"
                (920131 'move' call_tmp[920128](288934 call _build_tuple i[288913] j[288918]))
                (629275 'move' yret[629272](629274 'deref' call_tmp[920128]))
                (288930 yield yret[629272])
                (566815 'end of statement' i[288913] j[288918])
                label _continueLabel[288944]
                _indexOfInterest[288939]
                _iterator[288940]
              }
              label _breakLabel[288945]
            }
            label _continueLabel[288978]
            _indexOfInterest[288973]
            _iterator[288974]
          }
          label _breakLabel[288979]
        }
      }
      {
        {
          unknown _indexOfInterest[289064] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[289065] "expr temp" "temp"
          unknown call_tmp[920133] "expr temp" "maybe param" "maybe type" "temp"
          (920136 'move' call_tmp[920133](289009 call block[288864] d[288861]))
          (289074 'move' _iterator[289065](289072 call _getIterator call_tmp[920133]))
          Defer
          {
            {
              (289089 call _freeIterator _iterator[289065])
            }
          }
          { scopeless type
            (289079 'move' _indexOfInterest[289064](289076 call iteratorIndex _iterator[289065]))
          }
          ForLoop[289066] order-independent
          {
            unknown i[289006] "index var" "insert auto destroy"
            (566819 'end of statement')
            (289084 'move' i[289006] _indexOfInterest[289064])
            (566820 'end of statement' i[289006])
            {
              unknown _indexOfInterest[289030] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[289031] "expr temp" "temp"
              unknown call_tmp[920140] "expr temp" "maybe param" "maybe type" "temp"
              (920143 'move' call_tmp[920140](289015 call + d[288861] 1))
              unknown call_tmp[920145] "expr temp" "maybe param" "maybe type" "temp"
              (920148 'move' call_tmp[920145](289014 call(455257 call (partial) these_help _mt[203] this[288858]) call_tmp[920140] block[288864]))
              (289040 'move' _iterator[289031](289038 call _getIterator call_tmp[920145]))
              Defer
              {
                {
                  (289055 call _freeIterator _iterator[289031])
                }
              }
              { scopeless type
                (289045 'move' _indexOfInterest[289030](289042 call iteratorIndex _iterator[289031]))
              }
              ForLoop[289032] order-independent
              {
                unknown j[289011] "index var" "insert auto destroy"
                (566823 'end of statement')
                (289050 'move' j[289011] _indexOfInterest[289030])
                (566824 'end of statement' j[289011])
                unknown yret[629278] "YVV" "temp"
                unknown call_tmp[920150] "expr temp" "maybe param" "maybe type" "temp"
                (920153 'move' call_tmp[920150](289025 call _build_tuple i[289006](289024 'expand_tuple' j[289011])))
                (629281 'move' yret[629278](629280 'deref' call_tmp[920150]))
                (289020 yield yret[629278])
                (566826 'end of statement' i[289006] j[289011])
                label _continueLabel[289035]
                _indexOfInterest[289030]
                _iterator[289031]
              }
              label _breakLabel[289036]
            }
            label _continueLabel[289069]
            _indexOfInterest[289064]
            _iterator[289065]
          }
          label _breakLabel[289070]
        }
      }
    }
    (629264 return ret[629262])
  }
  function DefaultRectangularDom[292740](?).these[289127](arg _mt[289154]:_MT[201], arg this[289129]:DefaultRectangularDom[292740](?), arg tasksPerLocale[289132] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[289136] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[289140] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592], arg offset[289151] :
  unknown call_tmp[1002684] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[920157] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629286] "RVV" "temp"
    unknown call_tmp[920183] "expr temp" "maybe param" "maybe type" "temp"
    (920186 'move' call_tmp[920183](455295 call rank _mt[203] this[289129]))
    unknown call_tmp[920188] "expr temp" "maybe param" "maybe type" "temp"
    (920191 'move' call_tmp[920188](289239 call == call_tmp[920183] 1))
    unknown call_tmp[920193] "expr temp" "maybe param" "maybe type" "temp"
    (920196 'move' call_tmp[920193](289243 call _cond_test call_tmp[920188]))
    if call_tmp[920193]
    {
      {
        unknown _indexOfInterest[289166] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289167] "expr temp" "temp"
        unknown call_tmp[920200] "expr temp" "maybe param" "maybe type" "temp"
        (920203 'move' call_tmp[920200](289161 call(455284 call (partial) ranges _mt[203] this[289129]) 0))
        (289176 'move' _iterator[289167](289174 call _getIterator call_tmp[920200]))
        Defer
        {
          {
            (289191 call _freeIterator _iterator[289167])
          }
        }
        { scopeless type
          (289181 'move' _indexOfInterest[289166](289178 call iteratorIndex _iterator[289167]))
        }
        ForLoop[289168]
        {
          unknown i[289158] "index var" "insert auto destroy"
          (566830 'end of statement')
          (289186 'move' i[289158] _indexOfInterest[289166])
          (566831 'end of statement' i[289158])
          unknown yret[629290] "YVV" "temp"
          (629293 'move' yret[629290](629292 'deref' i[289158]))
          (289163 yield yret[629290])
          (566833 'end of statement' i[289158])
          label _continueLabel[289171]
          _indexOfInterest[289166]
          _iterator[289167]
        }
        label _breakLabel[289172]
      }
    }
    {
      {
        unknown _indexOfInterest[289207] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289208] "expr temp" "temp"
        unknown call_tmp[920207] "expr temp" "maybe param" "maybe type" "temp"
        (920210 'move' call_tmp[920207](289202 call(455289 call (partial) these_help _mt[203] this[289129]) 0))
        (289217 'move' _iterator[289208](289215 call _getIterator call_tmp[920207]))
        Defer
        {
          {
            (289232 call _freeIterator _iterator[289208])
          }
        }
        { scopeless type
          (289222 'move' _indexOfInterest[289207](289219 call iteratorIndex _iterator[289208]))
        }
        ForLoop[289209]
        {
          unknown i[289199] "index var" "insert auto destroy"
          (566836 'end of statement')
          (289227 'move' i[289199] _indexOfInterest[289207])
          (566837 'end of statement' i[289199])
          unknown yret[629296] "YVV" "temp"
          (629299 'move' yret[629296](629298 'deref' i[289199]))
          (289204 yield yret[629296])
          (566839 'end of statement' i[289199])
          label _continueLabel[289212]
          _indexOfInterest[289207]
          _iterator[289208]
        }
        label _breakLabel[289213]
      }
    }
    (629288 return ret[629286])
  }
  function DefaultRectangularDom[292740](?).these[289249](arg _mt[289280]:_MT[201], arg this[289251]:DefaultRectangularDom[292740](?), param arg tag[289254]:iterKind[52144], arg tasksPerLocale[289258] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[289262] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[289266] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592], arg offset[289277] :
  unknown call_tmp[1002728] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[920214] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629304] "RVV" "temp"
    unknown call_tmp[920238] "expr temp" "maybe param" "maybe type" "temp"
    (920241 'move' call_tmp[920238](289298 call _cond_test chpl__testParFlag[106873]))
    if call_tmp[920238]
    {
      unknown call_tmp[920245] "expr temp" "maybe param" "maybe type" "temp"
      (920248 'move' call_tmp[920245](455318 call ranges _mt[203] this[289251]))
      (289291 call chpl__testPar "default rectangular domain standalone invoked on " call_tmp[920245])
    }
    unknown call_tmp[920250] "expr temp" "maybe param" "maybe type" "temp"
    (920253 'move' call_tmp[920250](289310 call _cond_test debugDefaultDist[287662]))
    if call_tmp[920250]
    {
      (289304 call chpl_debug_writeln "*** In domain standalone code:")
    }
    const numTasks[289316] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[704202] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704203] "maybe param" "temp"
    unknown call_tmp[920255] "expr temp" "maybe param" "maybe type" "temp"
    (920258 'move' call_tmp[920255](289317 call == tasksPerLocale[289258] 0))
    (704208 'move' tmp[704203](704206 call _cond_test call_tmp[920255]))
    if tmp[704203]
    {
      unknown tmp[704210] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[920260] "expr temp" "maybe param" "maybe type" "temp"
      (920263 'move' call_tmp[920260](409633 call here[135591]))
      (704212 'move' tmp[704210](289322 call maxTaskPar _mt[203] call_tmp[920260]))
      (704217 'move' tmp[704202](704214 '_paramFoldLogical' tmp[704203] tmp[704210]))
    }
    {
      (704222 'move' tmp[704202](704219 '_paramFoldLogical' tmp[704203] tasksPerLocale[289258]))
    }
    (652796 'init var' numTasks[289316] tmp[704202])
    (289330 'end of statement')
    unknown call_tmp[920267] "expr temp" "maybe param" "maybe type" "temp"
    (920270 'move' call_tmp[920267](289345 call _cond_test debugDefaultDist[287662]))
    if call_tmp[920267]
    {
      (289333 call chpl_debug_writeln "    numTasks=" numTasks[289316] " (" ignoreRunning[289262] "), minIndicesPerTask=" minIndicesPerTask[289266])
      (566843 'end of statement' numTasks[289316])
    }
    const tmp[289369] "dead at end of block" "const" "insert auto destroy" "temp"
    unknown tmp[704229] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704230] "maybe param" "temp"
    unknown call_tmp[920272] "expr temp" "maybe param" "maybe type" "temp"
    (920275 'move' call_tmp[920272](289354 'task_get_serial'))
    (704235 'move' tmp[704230](704233 call _cond_test call_tmp[920272]))
    if tmp[704230]
    {
      unknown tmp[704237] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704239 'move' tmp[704237](289358 call _build_tuple 1 0))
      (704244 'move' tmp[704229](704241 '_paramFoldLogical' tmp[704230] tmp[704237]))
    }
    {
      unknown tmp[704246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[920279] "expr temp" "maybe param" "maybe type" "temp"
      (920282 'move' call_tmp[920279](455334 call ranges _mt[203] this[289251]))
      (704248 'move' tmp[704246](289361 call _computeChunkStuff numTasks[289316] ignoreRunning[289262] minIndicesPerTask[289266] call_tmp[920279]))
      (704253 'move' tmp[704229](704250 '_paramFoldLogical' tmp[704230] tmp[704246]))
    }
    (652798 'init var' tmp[289369] tmp[704229])
    (289376 call _check_tuple_var_decl tmp[289369] 2)
    (566845 'end of statement')
    unknown call_tmp[920284] "maybe param" "maybe type" "temp"
    (920287 'move' call_tmp[920284](289370 call tmp[289369] 0))
    const numChunks[289350] "dead at end of block" "const" "insert auto destroy"
    (652800 'init var' numChunks[289350] call_tmp[920284])
    unknown call_tmp[920289] "maybe param" "maybe type" "temp"
    (920292 'move' call_tmp[920289](289373 call tmp[289369] 1))
    const parDim[289352] "dead at end of block" "const" "insert auto destroy"
    (652802 'init var' parDim[289352] call_tmp[920289])
    (289381 'end of statement')
    unknown call_tmp[920294] "expr temp" "maybe param" "maybe type" "temp"
    (920297 'move' call_tmp[920294](289409 call _cond_test debugDefaultDist[287662]))
    if call_tmp[920294]
    {
      unknown call_tmp[920301] "expr temp" "maybe param" "maybe type" "temp"
      (920304 'move' call_tmp[920301](289401 call(455342 call (partial) ranges _mt[203] this[289251]) parDim[289352]))
      unknown call_tmp[920308] "expr temp" "maybe param" "maybe type" "temp"
      (920311 'move' call_tmp[920308](289406 call(289403 call (partial) sizeAs _mt[203] call_tmp[920301]) uint(64)[86]))
      (289384 call chpl_debug_writeln "    numChunks=" numChunks[289350] " parDim=" parDim[289352] " ranges(" parDim[289352] ").size=" call_tmp[920308])
      (566846 'end of statement' numChunks[289350] parDim[289352])
    }
    unknown call_tmp[920313] "expr temp" "maybe param" "maybe type" "temp"
    (920316 'move' call_tmp[920313](289439 call _cond_test debugDataPar[287672]))
    if call_tmp[920313]
    {
      unknown call_tmp[920320] "expr temp" "maybe param" "maybe type" "temp"
      (920323 'move' call_tmp[920320](455354 call ranges _mt[203] this[289251]))
      (289415 call chpl_debug_writeln "### numTasksPerLoc = " numTasks[289316] "\n" "### ignoreRunning = " ignoreRunning[289262] "\n" "### minIndicesPerTask = " minIndicesPerTask[289266] "\n" "### numChunks = " numChunks[289350] " (parDim = " parDim[289352] ")\n" "### nranges = " call_tmp[920320])
      (566849 'end of statement' numTasks[289316] numChunks[289350] parDim[289352])
    }
    unknown call_tmp[920325] "expr temp" "maybe param" "maybe type" "temp"
    (920328 'move' call_tmp[920325](289451 call _cond_test debugDefaultDist[287662]))
    if call_tmp[920325]
    {
      unknown call_tmp[920332] "expr temp" "maybe param" "maybe type" "temp"
      (920335 'move' call_tmp[920332](455360 call ranges _mt[203] this[289251]))
      (289445 call chpl_debug_writeln "*** DI: ranges = " call_tmp[920332])
    }
    {
      unknown tmpIter[391860] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[920337] "expr temp" "maybe param" "maybe type" "temp"
      (920340 'move' call_tmp[920337](289460 call chpl_build_low_bounded_range 0))
      (391863 'move' tmpIter[391860](289457 call # call_tmp[920337] numChunks[289350]))
      unknown isBounded[392149] "maybe param" "temp"
      (392155 'move' isBounded[392149](392151 call chpl_supportsBoundedCoforall tmpIter[391860] 0))
      if isBounded[392149]
      {
        const _coforallCount[392018] "const" "end count" "temp"
        (392086 'move' _coforallCount[392018](392083 call _endCountAlloc 1))
        unknown numTasks[392019] "temp"
        (392070 'move' numTasks[392019](392066 call chpl_boundedCoforallSize tmpIter[391860] 0))
        (392061 call _upEndCount _coforallCount[392018] 1 numTasks[392019])
        (566854 'end of statement')
        (392058 call chpl_resetTaskSpawn numTasks[392019])
        (566855 'end of statement')
        unknown _indexOfInterest[392026] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[392027] "expr temp" "temp"
        (392036 'move' _iterator[392027](392034 call _getIterator tmpIter[391860]))
        Defer
        {
          {
            (392051 call _freeIterator _iterator[392027])
          }
        }
        { scopeless type
          (392041 'move' _indexOfInterest[392026](392038 call iteratorIndex _iterator[392027]))
        }
        ForLoop[392028]
        {
          unknown chunk[391867] "coforall index var" "index var" "insert auto destroy"
          (566857 'end of statement')
          (392046 'move' chunk[391867] _indexOfInterest[392026])
          (566858 'end of statement' chunk[391867])
          (1465174 call coforall_fn[1465172] numChunks[289350] parDim[289352])
          function coforall_fn[1465172](arg numChunks[1465179], arg parDim[1465182]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[920344] "maybe param" "maybe type" "temp"
              (920347 'move' call_tmp[920344](391873 call ranges _mt[203] this[289251]))
              const ranges[391871] "dead at end of block" "const" "insert auto destroy"
              (652804 'init var' ranges[391871] call_tmp[920344])
              (391877 'end of statement')
              unknown call_tmp[920349] "expr temp" "maybe param" "maybe type" "temp"
              (920352 'move' call_tmp[920349](391885 call ranges[391871] parDim[1465182]))
              unknown call_tmp[920356] "expr temp" "maybe param" "maybe type" "temp"
              (920359 'move' call_tmp[920356](391888 call(391883 call (partial) sizeAs _mt[203] call_tmp[920349]) uint(64)[86]))
              unknown call_tmp[920361] "expr temp" "maybe param" "maybe type" "temp"
              (920364 'move' call_tmp[920361](391897 call ranges[391871] parDim[1465182]))
              unknown call_tmp[920368] "expr temp" "maybe param" "maybe type" "temp"
              (920371 'move' call_tmp[920368](391895 call stride _mt[203] call_tmp[920361]))
              unknown call_tmp[920373] "expr temp" "maybe param" "maybe type" "temp"
              (920376 'move' call_tmp[920373](391893 call abs call_tmp[920368]))
              unknown call_tmp[920378] "expr temp" "maybe param" "maybe type" "temp"
              (920381 'move' call_tmp[920378](391891 call : call_tmp[920373] uint(64)[86]))
              unknown call_tmp[920383] "maybe param" "maybe type" "temp"
              (920386 'move' call_tmp[920383](391881 call * call_tmp[920356] call_tmp[920378]))
              const len[391879] "dead at end of block" "const" "insert auto destroy"
              (652806 'init var' len[391879] call_tmp[920383])
              (391902 'end of statement')
              unknown call_tmp[920388] "expr temp" "maybe param" "maybe type" "temp"
              (920391 'move' call_tmp[920388](391913 call ranges[391871] parDim[1465182]))
              unknown call_tmp[920395] "expr temp" "maybe param" "maybe type" "temp"
              (920398 'move' call_tmp[920395](391911 call _high _mt[203] call_tmp[920388]))
              unknown call_tmp[920400] "expr temp" "maybe param" "maybe type" "temp"
              (920403 'move' call_tmp[920400](391919 call ranges[391871] parDim[1465182]))
              unknown call_tmp[920407] "expr temp" "maybe param" "maybe type" "temp"
              (920410 'move' call_tmp[920407](391917 call _low _mt[203] call_tmp[920400]))
              unknown call_tmp[920412] "expr temp" "maybe param" "maybe type" "temp"
              (920415 'move' call_tmp[920412](391925 call ranges[391871] parDim[1465182]))
              unknown call_tmp[920419] "expr temp" "maybe param" "maybe type" "temp"
              (920422 'move' call_tmp[920419](391923 call _low _mt[203] call_tmp[920412]))
              unknown call_tmp[920424] "maybe param" "maybe type" "temp"
              (920427 'move' call_tmp[920424](391906 call _computeBlock len[391879] numChunks[1465179] chunk[391867] call_tmp[920395] call_tmp[920407] call_tmp[920419]))
              const tmp[391904] "dead at end of block" "const" "insert auto destroy" "temp"
              (652808 'init var' tmp[391904] call_tmp[920424])
              (391930 call _check_tuple_var_decl tmp[391904] 2)
              (566862 'end of statement')
              unknown call_tmp[920429] "maybe param" "maybe type" "temp"
              (920432 'move' call_tmp[920429](391935 call tmp[391904] 0))
              const lo[391933] "dead at end of block" "const" "insert auto destroy"
              (652810 'init var' lo[391933] call_tmp[920429])
              unknown call_tmp[920434] "maybe param" "maybe type" "temp"
              (920437 'move' call_tmp[920434](391940 call tmp[391904] 1))
              const hi[391938] "dead at end of block" "const" "insert auto destroy"
              (652812 'init var' hi[391938] call_tmp[920434])
              (391943 'end of statement')
              unknown block[391945] "dead at end of block" "insert auto destroy"
              (652814 'init var' block[391945] ranges[391871])
              (391948 'end of statement' ranges[391871] parDim[1465182])
              unknown call_tmp[920439] "expr temp" "maybe param" "maybe type" "temp"
              (920442 'move' call_tmp[920439](391954 call block[391945] parDim[1465182]))
              unknown call_tmp[920446] "expr temp" "maybe param" "maybe type" "temp"
              (920449 'move' call_tmp[920446](391952 call _low _mt[203] call_tmp[920439]))
              (391950 call = call_tmp[920446] lo[391933])
              (566863 'end of statement' block[391945] parDim[1465182] lo[391933])
              unknown call_tmp[920451] "expr temp" "maybe param" "maybe type" "temp"
              (920454 'move' call_tmp[920451](391963 call block[391945] parDim[1465182]))
              unknown call_tmp[920458] "expr temp" "maybe param" "maybe type" "temp"
              (920461 'move' call_tmp[920458](391961 call _high _mt[203] call_tmp[920451]))
              (391959 call = call_tmp[920458] hi[391938])
              (566867 'end of statement' block[391945] parDim[1465182] hi[391938])
              unknown call_tmp[920463] "expr temp" "maybe param" "maybe type" "temp"
              (920466 'move' call_tmp[920463](391968 call _cond_test debugDefaultDist[287662]))
              if call_tmp[920463]
              {
                (391972 call chpl_debug_writeln "*** DI[" chunk[391867] "]: block = " block[391945])
                (566871 'end of statement' chunk[391867] block[391945])
              }
              {
                unknown _indexOfInterest[391979] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[391981] "expr temp" "temp"
                unknown call_tmp[920470] "expr temp" "maybe param" "maybe type" "temp"
                (920473 'move' call_tmp[920470](391988 call(466786 call (partial) these_help _mt[203] this[289251]) 0 block[391945]))
                (391983 'move' _iterator[391981](391986 call _getIterator call_tmp[920470]))
                Defer
                {
                  {
                    (391993 call _freeIterator _iterator[391981])
                  }
                }
                { scopeless type
                  (391997 'move' _indexOfInterest[391979](392000 call iteratorIndex _iterator[391981]))
                }
                ForLoop[392002]
                {
                  unknown i[392005] "index var" "insert auto destroy"
                  (566875 'end of statement')
                  (392007 'move' i[392005] _indexOfInterest[391979])
                  (566876 'end of statement' i[392005])
                  {
                    unknown yret[629308] "YVV" "temp"
                    (629311 'move' yret[629308](629310 'deref' i[392005]))
                    (392011 yield yret[629308])
                    (566878 'end of statement' i[392005])
                  }
                  label _continueLabel[392013]
                  _indexOfInterest[391979]
                  _iterator[391981]
                }
                label _breakLabel[392015]
              }
            }
            (392021 call _downEndCount _coforallCount[392018] nil[32])
            (1465177 return _void[46])
          }
          {
          }
          label _continueLabel[392031]
          _indexOfInterest[392026]
          _iterator[392027]
        }
        label _breakLabel[392032]
        Defer
        {
          {
            (392073 call _endCountFree _coforallCount[392018])
          }
        }
        (392078 call _waitEndCount _coforallCount[392018] 1 numTasks[392019])
      }
      {
        const _coforallCount[392090] "const" "end count" "temp"
        (392146 'move' _coforallCount[392090](392143 call _endCountAlloc 1))
        unknown _indexOfInterest[392098] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[392099] "expr temp" "temp"
        (392108 'move' _iterator[392099](392106 call _getIterator tmpIter[391860]))
        Defer
        {
          {
            (392123 call _freeIterator _iterator[392099])
          }
        }
        { scopeless type
          (392113 'move' _indexOfInterest[392098](392110 call iteratorIndex _iterator[392099]))
        }
        ForLoop[392100]
        {
          unknown chunk[289455] "coforall index var" "index var" "insert auto destroy"
          (566884 'end of statement')
          (392118 'move' chunk[289455] _indexOfInterest[392098])
          (566885 'end of statement' chunk[289455])
          (392130 call _upEndCount _coforallCount[392090] 1)
          (566887 'end of statement')
          (1465187 call coforall_fn[1465185] numChunks[289350] parDim[289352])
          function coforall_fn[1465185](arg numChunks[1465192], arg parDim[1465195]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[920477] "maybe param" "maybe type" "temp"
              (920480 'move' call_tmp[920477](289467 call ranges _mt[203] this[289251]))
              const ranges[289465] "dead at end of block" "const" "insert auto destroy"
              (652816 'init var' ranges[289465] call_tmp[920477])
              (289471 'end of statement')
              unknown call_tmp[920482] "expr temp" "maybe param" "maybe type" "temp"
              (920485 'move' call_tmp[920482](289477 call ranges[289465] parDim[1465195]))
              unknown call_tmp[920489] "expr temp" "maybe param" "maybe type" "temp"
              (920492 'move' call_tmp[920489](289482 call(289479 call (partial) sizeAs _mt[203] call_tmp[920482]) uint(64)[86]))
              unknown call_tmp[920494] "expr temp" "maybe param" "maybe type" "temp"
              (920497 'move' call_tmp[920494](289489 call ranges[289465] parDim[1465195]))
              unknown call_tmp[920501] "expr temp" "maybe param" "maybe type" "temp"
              (920504 'move' call_tmp[920501](289491 call stride _mt[203] call_tmp[920494]))
              unknown call_tmp[920506] "expr temp" "maybe param" "maybe type" "temp"
              (920509 'move' call_tmp[920506](289487 call abs call_tmp[920501]))
              unknown call_tmp[920511] "expr temp" "maybe param" "maybe type" "temp"
              (920514 'move' call_tmp[920511](289484 call : call_tmp[920506] uint(64)[86]))
              unknown call_tmp[920516] "maybe param" "maybe type" "temp"
              (920519 'move' call_tmp[920516](289474 call * call_tmp[920489] call_tmp[920511]))
              const len[289473] "dead at end of block" "const" "insert auto destroy"
              (652818 'init var' len[289473] call_tmp[920516])
              (289496 'end of statement')
              unknown call_tmp[920521] "expr temp" "maybe param" "maybe type" "temp"
              (920524 'move' call_tmp[920521](289508 call ranges[289465] parDim[1465195]))
              unknown call_tmp[920528] "expr temp" "maybe param" "maybe type" "temp"
              (920531 'move' call_tmp[920528](289510 call _high _mt[203] call_tmp[920521]))
              unknown call_tmp[920533] "expr temp" "maybe param" "maybe type" "temp"
              (920536 'move' call_tmp[920533](289514 call ranges[289465] parDim[1465195]))
              unknown call_tmp[920540] "expr temp" "maybe param" "maybe type" "temp"
              (920543 'move' call_tmp[920540](289516 call _low _mt[203] call_tmp[920533]))
              unknown call_tmp[920545] "expr temp" "maybe param" "maybe type" "temp"
              (920548 'move' call_tmp[920545](289520 call ranges[289465] parDim[1465195]))
              unknown call_tmp[920552] "expr temp" "maybe param" "maybe type" "temp"
              (920555 'move' call_tmp[920552](289522 call _low _mt[203] call_tmp[920545]))
              unknown call_tmp[920557] "maybe param" "maybe type" "temp"
              (920560 'move' call_tmp[920557](289503 call _computeBlock len[289473] numChunks[1465192] chunk[289455] call_tmp[920528] call_tmp[920540] call_tmp[920552]))
              const tmp[289525] "dead at end of block" "const" "insert auto destroy" "temp"
              (652820 'init var' tmp[289525] call_tmp[920557])
              (289532 call _check_tuple_var_decl tmp[289525] 2)
              (566890 'end of statement')
              unknown call_tmp[920562] "maybe param" "maybe type" "temp"
              (920565 'move' call_tmp[920562](289526 call tmp[289525] 0))
              const lo[289498] "dead at end of block" "const" "insert auto destroy"
              (652822 'init var' lo[289498] call_tmp[920562])
              unknown call_tmp[920567] "maybe param" "maybe type" "temp"
              (920570 'move' call_tmp[920567](289529 call tmp[289525] 1))
              const hi[289500] "dead at end of block" "const" "insert auto destroy"
              (652824 'init var' hi[289500] call_tmp[920567])
              (289537 'end of statement')
              unknown block[289539] "dead at end of block" "insert auto destroy"
              (652826 'init var' block[289539] ranges[289465])
              (289542 'end of statement' ranges[289465] parDim[1465195])
              unknown call_tmp[920572] "expr temp" "maybe param" "maybe type" "temp"
              (920575 'move' call_tmp[920572](289546 call block[289539] parDim[1465195]))
              unknown call_tmp[920579] "expr temp" "maybe param" "maybe type" "temp"
              (920582 'move' call_tmp[920579](289548 call _low _mt[203] call_tmp[920572]))
              (289543 call = call_tmp[920579] lo[289498])
              (566891 'end of statement' block[289539] parDim[1465195] lo[289498])
              unknown call_tmp[920584] "expr temp" "maybe param" "maybe type" "temp"
              (920587 'move' call_tmp[920584](289555 call block[289539] parDim[1465195]))
              unknown call_tmp[920591] "expr temp" "maybe param" "maybe type" "temp"
              (920594 'move' call_tmp[920591](289557 call _high _mt[203] call_tmp[920584]))
              (289552 call = call_tmp[920591] hi[289500])
              (566895 'end of statement' block[289539] parDim[1465195] hi[289500])
              unknown call_tmp[920596] "expr temp" "maybe param" "maybe type" "temp"
              (920599 'move' call_tmp[920596](289571 call _cond_test debugDefaultDist[287662]))
              if call_tmp[920596]
              {
                (289563 call chpl_debug_writeln "*** DI[" chunk[289455] "]: block = " block[289539])
                (566899 'end of statement' chunk[289455] block[289539])
              }
              {
                unknown _indexOfInterest[289584] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[289585] "expr temp" "temp"
                unknown call_tmp[920603] "expr temp" "maybe param" "maybe type" "temp"
                (920606 'move' call_tmp[920603](289578 call(455389 call (partial) these_help _mt[203] this[289251]) 0 block[289539]))
                (289594 'move' _iterator[289585](289592 call _getIterator call_tmp[920603]))
                Defer
                {
                  {
                    (289609 call _freeIterator _iterator[289585])
                  }
                }
                { scopeless type
                  (289599 'move' _indexOfInterest[289584](289596 call iteratorIndex _iterator[289585]))
                }
                ForLoop[289586]
                {
                  unknown i[289575] "index var" "insert auto destroy"
                  (566903 'end of statement')
                  (289604 'move' i[289575] _indexOfInterest[289584])
                  (566904 'end of statement' i[289575])
                  {
                    unknown yret[629314] "YVV" "temp"
                    (629317 'move' yret[629314](629316 'deref' i[289575]))
                    (289582 yield yret[629314])
                    (566906 'end of statement' i[289575])
                  }
                  label _continueLabel[289589]
                  _indexOfInterest[289584]
                  _iterator[289585]
                }
                label _breakLabel[289590]
              }
            }
            (392093 call _downEndCount _coforallCount[392090] nil[32])
            (1465190 return _void[46])
          }
          {
          }
          label _continueLabel[392103]
          _indexOfInterest[392098]
          _iterator[392099]
        }
        label _breakLabel[392104]
        Defer
        {
          {
            (392134 call _endCountFree _coforallCount[392090])
          }
        }
        (392139 call _waitEndCount _coforallCount[392090] 1)
      }
    }
    (629306 return ret[629304])
  }
  where {
    (289282 call == tag[289254] standalone[52142])
  }
  function DefaultRectangularDom[292740](?).these[289620](arg _mt[289651]:_MT[201], arg this[289622]:DefaultRectangularDom[292740](?), param arg tag[289625]:iterKind[52144], arg tasksPerLocale[289629] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[289633] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[289637] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592], arg offset[289648] :
  unknown call_tmp[1002772] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[920610] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629322] "RVV" "temp"
    unknown call_tmp[920634] "expr temp" "maybe param" "maybe type" "temp"
    (920637 'move' call_tmp[920634](409637 call here[135591]))
    unknown call_tmp[920641] "maybe param" "maybe type" "temp"
    (920644 'move' call_tmp[920641](289667 call(289664 call (partial) _getChildCount _mt[203] call_tmp[920634])))
    const numSublocs[289662] "dead at end of block" "const" "insert auto destroy"
    (652828 'init var' numSublocs[289662] call_tmp[920641])
    (289669 'end of statement')
    unknown tmp[503079] "maybe param" "temp"
    (503090 'move' tmp[503079] localeModelPartitionsIterationOnSublocales[306872])
    unknown call_tmp[920646] "expr temp" "maybe param" "maybe type" "temp"
    (920649 'move' call_tmp[920646](503092 call _cond_invalid tmp[503079]))
    if call_tmp[920646]
    {
      (503095 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[704260] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704261] "maybe param" "temp"
    unknown call_tmp[920651] "expr temp" "maybe param" "maybe type" "temp"
    (920654 'move' call_tmp[920651](503080 call isTrue tmp[503079]))
    (704266 'move' tmp[704261](704264 call _cond_test call_tmp[920651]))
    if tmp[704261]
    {
      unknown tmp[704268] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[920656] "expr temp" "maybe param" "maybe type" "temp"
      (920659 'move' call_tmp[920656](290537 call != numSublocs[289662] 0))
      (704270 'move' tmp[704268](503083 call isTrue call_tmp[920656]))
      (704275 'move' tmp[704260](704272 '_paramFoldLogical' tmp[704261] tmp[704268]))
    }
    {
      (704280 'move' tmp[704260](704277 '_paramFoldLogical' tmp[704261] 0))
    }
    unknown call_tmp[920661] "expr temp" "maybe param" "maybe type" "temp"
    (920664 'move' call_tmp[920661](290541 call _cond_test tmp[704260]))
    if call_tmp[920661]
    {
      unknown dptpl[289672] "dead at end of block" "insert auto destroy"
      unknown tmp[704287] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704288] "maybe param" "temp"
      unknown call_tmp[920666] "expr temp" "maybe param" "maybe type" "temp"
      (920669 'move' call_tmp[920666](289673 call == tasksPerLocale[289629] 0))
      (704293 'move' tmp[704288](704291 call _cond_test call_tmp[920666]))
      if tmp[704288]
      {
        unknown tmp[704295] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[920671] "expr temp" "maybe param" "maybe type" "temp"
        (920674 'move' call_tmp[920671](409639 call here[135591]))
        (704297 'move' tmp[704295](289678 call maxTaskPar _mt[203] call_tmp[920671]))
        (704302 'move' tmp[704287](704299 '_paramFoldLogical' tmp[704288] tmp[704295]))
      }
      {
        (704307 'move' tmp[704287](704304 '_paramFoldLogical' tmp[704288] tasksPerLocale[289629]))
      }
      (652830 'init var' dptpl[289672] tmp[704287])
      (289686 'end of statement')
      unknown call_tmp[920678] "expr temp" "maybe param" "maybe type" "temp"
      (920681 'move' call_tmp[920678](289718 call ! ignoreRunning[289633]))
      unknown call_tmp[920683] "expr temp" "maybe param" "maybe type" "temp"
      (920686 'move' call_tmp[920683](289721 call _cond_test call_tmp[920678]))
      if call_tmp[920683]
      {
        unknown call_tmp[920688] "expr temp" "maybe param" "maybe type" "temp"
        (920691 'move' call_tmp[920688](409641 call here[135591]))
        unknown call_tmp[920695] "expr temp" "maybe param" "maybe type" "temp"
        (920698 'move' call_tmp[920695](289696 call(289693 call (partial) runningTasks _mt[203] call_tmp[920688])))
        unknown call_tmp[920700] "maybe param" "maybe type" "temp"
        (920703 'move' call_tmp[920700](289690 call - call_tmp[920695] 1))
        const otherTasks[289689] "dead at end of block" "const" "insert auto destroy"
        (652832 'init var' otherTasks[289689] call_tmp[920700])
        (289699 'end of statement')
        unknown tmp[704314] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[704315] "maybe param" "temp"
        unknown call_tmp[920705] "expr temp" "maybe param" "maybe type" "temp"
        (920708 'move' call_tmp[920705](289703 call < otherTasks[289689] dptpl[289672]))
        (704320 'move' tmp[704315](704318 call _cond_test call_tmp[920705]))
        if tmp[704315]
        {
          unknown tmp[704322] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[920710] "expr temp" "maybe param" "maybe type" "temp"
          (920713 'move' call_tmp[920710](289709 call - dptpl[289672] otherTasks[289689]))
          (704324 'move' tmp[704322](289707 call : call_tmp[920710] int(64)[10]))
          (704329 'move' tmp[704314](704326 '_paramFoldLogical' tmp[704315] tmp[704322]))
        }
        {
          (704334 'move' tmp[704314](704331 '_paramFoldLogical' tmp[704315] 1))
        }
        (289700 call = dptpl[289672] tmp[704314])
        (566912 'end of statement' dptpl[289672] otherTasks[289689])
      }
      unknown call_tmp[920715] "maybe param" "maybe type" "temp"
      (920718 'move' call_tmp[920715](289728 call min numSublocs[289662] dptpl[289672]))
      const numSublocTasks[289726] "dead at end of block" "const" "insert auto destroy"
      (652834 'init var' numSublocTasks[289726] call_tmp[920715])
      (289732 'end of statement')
      const tmp[289754] "dead at end of block" "const" "insert auto destroy" "temp"
      unknown tmp[704341] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704342] "maybe param" "temp"
      unknown call_tmp[920720] "expr temp" "maybe param" "maybe type" "temp"
      (920723 'move' call_tmp[920720](289738 'task_get_serial'))
      (704347 'move' tmp[704342](704345 call _cond_test call_tmp[920720]))
      if tmp[704342]
      {
        unknown tmp[704349] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (704351 'move' tmp[704349](289742 call _build_tuple 1 0))
        (704356 'move' tmp[704341](704353 '_paramFoldLogical' tmp[704342] tmp[704349]))
      }
      {
        unknown tmp[704358] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[920727] "expr temp" "maybe param" "maybe type" "temp"
        (920730 'move' call_tmp[920727](455426 call ranges _mt[203] this[289622]))
        (704360 'move' tmp[704358](289745 call _computeChunkStuff numSublocTasks[289726](ignoreRunning = 1) minIndicesPerTask[289637] call_tmp[920727]))
        (704365 'move' tmp[704341](704362 '_paramFoldLogical' tmp[704342] tmp[704358]))
      }
      (652836 'init var' tmp[289754] tmp[704341])
      (289761 call _check_tuple_var_decl tmp[289754] 2)
      (566917 'end of statement')
      unknown call_tmp[920732] "maybe param" "maybe type" "temp"
      (920735 'move' call_tmp[920732](289755 call tmp[289754] 0))
      const numChunks[289734] "dead at end of block" "const" "insert auto destroy"
      (652838 'init var' numChunks[289734] call_tmp[920732])
      unknown call_tmp[920737] "maybe param" "maybe type" "temp"
      (920740 'move' call_tmp[920737](289758 call tmp[289754] 1))
      const parDim[289736] "dead at end of block" "const" "insert auto destroy"
      (652840 'init var' parDim[289736] call_tmp[920737])
      (289766 'end of statement' numSublocs[289662] dptpl[289672])
      unknown call_tmp[920742] "expr temp" "maybe param" "maybe type" "temp"
      (920745 'move' call_tmp[920742](289790 call _cond_test debugDataParNuma[287677]))
      if call_tmp[920742]
      {
        unknown call_tmp[920749] "expr temp" "maybe param" "maybe type" "temp"
        (920752 'move' call_tmp[920749](455437 call ranges _mt[203] this[289622]))
        (289769 call chpl_debug_writeln "### numSublocs = " numSublocs[289662] "\n" "### numTasksPerSubloc = " numSublocTasks[289726] "\n" "### ignoreRunning = " ignoreRunning[289633] "\n" "### minIndicesPerTask = " minIndicesPerTask[289637] "\n" "### numChunks = " numChunks[289734] " (parDim = " parDim[289736] ")\n" "### nranges = " call_tmp[920749])
        (566918 'end of statement' numSublocs[289662] numSublocTasks[289726] numChunks[289734] parDim[289736])
      }
      {
        unknown tmpIter[392473] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[920754] "expr temp" "maybe param" "maybe type" "temp"
        (920757 'move' call_tmp[920754](289799 call chpl_build_low_bounded_range 0))
        (392476 'move' tmpIter[392473](289796 call # call_tmp[920754] numChunks[289734]))
        unknown isBounded[393323] "maybe param" "temp"
        (393329 'move' isBounded[393323](393325 call chpl_supportsBoundedCoforall tmpIter[392473] 0))
        if isBounded[393323]
        {
          const _coforallCount[393192] "const" "end count" "temp"
          (393260 'move' _coforallCount[393192](393257 call _endCountAlloc 1))
          unknown numTasks[393193] "temp"
          (393244 'move' numTasks[393193](393240 call chpl_boundedCoforallSize tmpIter[392473] 0))
          (393235 call _upEndCount _coforallCount[393192] 1 numTasks[393193])
          (566923 'end of statement')
          (393232 call chpl_resetTaskSpawn numTasks[393193])
          (566924 'end of statement')
          unknown _indexOfInterest[393200] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[393201] "expr temp" "temp"
          (393210 'move' _iterator[393201](393208 call _getIterator tmpIter[392473]))
          Defer
          {
            {
              (393225 call _freeIterator _iterator[393201])
            }
          }
          { scopeless type
            (393215 'move' _indexOfInterest[393200](393212 call iteratorIndex _iterator[393201]))
          }
          ForLoop[393202]
          {
            unknown chunk[392480] "coforall index var" "index var" "insert auto destroy"
            (566926 'end of statement')
            (393220 'move' chunk[392480] _indexOfInterest[393200])
            (566927 'end of statement' chunk[392480])
            (1465276 call coforall_fn[1465274] minIndicesPerTask[289637] offset[289648] dptpl[289672] numChunks[289734] parDim[289736])
            function coforall_fn[1465274](arg minIndicesPerTask[1465281], arg offset[1465284], arg dptpl[1465287], arg numChunks[1465290], arg parDim[1465293]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
            {
              {
                const tmp[392487] "const" "temp"
                unknown call_tmp[920759] "expr temp" "maybe param" "maybe type" "temp"
                (920762 'move' call_tmp[920759](412884 call here[135591]))
                unknown call_tmp[920766] "expr temp" "maybe param" "maybe type" "temp"
                (920769 'move' call_tmp[920766](392497 call(392494 call (partial) _getChild _mt[203] call_tmp[920759]) chunk[392480]))
                unknown call_tmp[920771] "expr temp" "maybe param" "maybe type" "temp"
                (920774 'move' call_tmp[920771](392492 '_wide_get_locale' call_tmp[920766]))
                (392489 'move' tmp[392487](392491 'deref' call_tmp[920771]))
                {
                  unknown call_tmp[920776] "expr temp" "maybe param" "maybe type" "temp"
                  (920779 'move' call_tmp[920776](392501 call _cond_test debugDataParNuma[287677]))
                  if call_tmp[920776]
                  {
                    unknown call_tmp[920781] "expr temp" "maybe param" "maybe type" "temp"
                    (920784 'move' call_tmp[920781](392510 call chpl_getSubloc))
                    unknown call_tmp[920786] "expr temp" "maybe param" "maybe type" "temp"
                    (920789 'move' call_tmp[920786](392507 call != chunk[392480] call_tmp[920781]))
                    unknown call_tmp[920791] "expr temp" "maybe param" "maybe type" "temp"
                    (920794 'move' call_tmp[920791](392505 call _cond_test call_tmp[920786]))
                    if call_tmp[920791]
                    {
                      unknown call_tmp[920796] "expr temp" "maybe param" "maybe type" "temp"
                      (920799 'move' call_tmp[920796](392519 call chpl_getSubloc))
                      (392514 call chpl_debug_writeln "*** ERROR: ON WRONG SUBLOC (should be " chunk[392480] ", on " call_tmp[920796] ") ***")
                      (566929 'end of statement' chunk[392480])
                    }
                  }
                  const numSublocTasks[392524] "dead at end of block" "const" "insert auto destroy"
                  unknown tmp[704372] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[704373] "maybe param" "temp"
                  unknown call_tmp[920801] "expr temp" "maybe param" "maybe type" "temp"
                  (920804 'move' call_tmp[920801](392529 call % dptpl[1465287] numChunks[1465290]))
                  unknown call_tmp[920806] "expr temp" "maybe param" "maybe type" "temp"
                  (920809 'move' call_tmp[920806](392526 call < chunk[392480] call_tmp[920801]))
                  (704378 'move' tmp[704373](704376 call _cond_test call_tmp[920806]))
                  if tmp[704373]
                  {
                    unknown tmp[704380] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[920811] "expr temp" "maybe param" "maybe type" "temp"
                    (920814 'move' call_tmp[920811](392536 call / dptpl[1465287] numChunks[1465290]))
                    (704382 'move' tmp[704380](392534 call + call_tmp[920811] 1))
                    (704387 'move' tmp[704372](704384 '_paramFoldLogical' tmp[704373] tmp[704380]))
                  }
                  {
                    unknown tmp[704389] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    (704391 'move' tmp[704389](392542 call / dptpl[1465287] numChunks[1465290]))
                    (704396 'move' tmp[704372](704393 '_paramFoldLogical' tmp[704373] tmp[704389]))
                  }
                  (652842 'init var' numSublocTasks[392524] tmp[704372])
                  (392547 'end of statement')
                  unknown locBlock[392549] "dead at end of block" "insert auto destroy"
                  unknown call_tmp[920818] "expr temp" "maybe param" "maybe type" "temp"
                  (920821 'move' call_tmp[920818](466866 call rank _mt[203] this[289622]))
                  unknown call_tmp[920825] "expr temp" "maybe param" "maybe type" "temp"
                  (920828 'move' call_tmp[920825](466871 call chpl_integralIdxType _mt[203] this[289622]))
                  unknown call_tmp[920830] "expr temp" "maybe param" "maybe type" "temp"
                  (920833 'move' call_tmp[920830](392554 call range[240](?) call_tmp[920825]))
                  unknown call_tmp[920835] "expr temp" "maybe param" "maybe type" "temp"
                  (920838 'move' call_tmp[920835](392551 call * call_tmp[920818] call_tmp[920830]))
                  (652844 'default init var' locBlock[392549] call_tmp[920835])
                  (392557 'end of statement')
                  {
                    unknown i[392559] "dead at end of block" "index var" "insert auto destroy"
                    (652846 'init var' i[392559] 0)
                    (566938 'end of statement')
                    unknown tmp[392562] "maybe param" "temp"
                    unknown call_tmp[920842] "expr temp" "maybe param" "maybe type" "temp"
                    (920845 'move' call_tmp[920842](466876 call rank _mt[203] this[289622]))
                    unknown call_tmp[920847] "expr temp" "maybe param" "maybe type" "temp"
                    (920850 'move' call_tmp[920847](392570 call - call_tmp[920842] 1))
                    (392564 'move' tmp[392562](392567 call chpl_compute_low_param_loop_bound 0 call_tmp[920847]))
                    unknown tmp[392573] "maybe param" "temp"
                    unknown call_tmp[920854] "expr temp" "maybe param" "maybe type" "temp"
                    (920857 'move' call_tmp[920854](466881 call rank _mt[203] this[289622]))
                    unknown call_tmp[920859] "expr temp" "maybe param" "maybe type" "temp"
                    (920862 'move' call_tmp[920859](392581 call - call_tmp[920854] 1))
                    (392575 'move' tmp[392573](392578 call chpl_compute_high_param_loop_bound 0 call_tmp[920859]))
                    unknown tmp[392584] "maybe param" "temp"
                    (392586 'move' tmp[392584] 1)
                    ParamForLoop[392589]
                    { i[392559] tmp[392562] tmp[392573] tmp[392584]
                      unknown call_tmp[920864] "expr temp" "maybe param" "maybe type" "temp"
                      (920867 'move' call_tmp[920864](392599 call locBlock[392549] i[392559]))
                      unknown call_tmp[920869] "expr temp" "maybe param" "maybe type" "temp"
                      (920872 'move' call_tmp[920869](392606 call offset[1465284] i[392559]))
                      unknown call_tmp[920874] "expr temp" "maybe param" "maybe type" "temp"
                      (920877 'move' call_tmp[920874](392604 call chpl_build_low_bounded_range call_tmp[920869]))
                      unknown call_tmp[920881] "expr temp" "maybe param" "maybe type" "temp"
                      (920884 'move' call_tmp[920881](392611 call(466890 call (partial) ranges _mt[203] this[289622]) i[392559]))
                      unknown call_tmp[920890] "expr temp" "maybe param" "maybe type" "temp"
                      (920893 'move' call_tmp[920890](466895 call chpl_integralIdxType _mt[203] this[289622]))
                      unknown call_tmp[920895] "expr temp" "maybe param" "maybe type" "temp"
                      (920898 'move' call_tmp[920895](392614 call(392609 call (partial) sizeAs _mt[203] call_tmp[920881]) call_tmp[920890]))
                      unknown call_tmp[920900] "expr temp" "maybe param" "maybe type" "temp"
                      (920903 'move' call_tmp[920900](392602 call # call_tmp[920874] call_tmp[920895]))
                      (392597 call = call_tmp[920864] call_tmp[920900])
                      (566939 'end of statement' locBlock[392549] i[392559])
                    }
                    label _unused_continueLabel[392616]
                    label _breakLabel[392618]
                  }
                  unknown call_tmp[920907] "expr temp" "maybe param" "maybe type" "temp"
                  (920910 'move' call_tmp[920907](466901 call rank _mt[203] this[289622]))
                  unknown call_tmp[920914] "expr temp" "maybe param" "maybe type" "temp"
                  (920917 'move' call_tmp[920914](466906 call chpl_integralIdxType _mt[203] this[289622]))
                  unknown call_tmp[920919] "expr temp" "maybe param" "maybe type" "temp"
                  (920922 'move' call_tmp[920919](392627 call range[240](?) call_tmp[920914]))
                  unknown call_tmp[920924] "maybe param" "maybe type" "temp"
                  (920927 'move' call_tmp[920924](392624 call * call_tmp[920907] call_tmp[920919]))
                  unknown followMe[392621] "dead at end of block" "insert auto destroy"
                  (652848 'init var' followMe[392621] locBlock[392549] call_tmp[920924])
                  (392630 'end of statement')
                  unknown call_tmp[920929] "expr temp" "maybe param" "maybe type" "temp"
                  (920932 'move' call_tmp[920929](392638 call locBlock[392549] parDim[1465293]))
                  unknown call_tmp[920938] "expr temp" "maybe param" "maybe type" "temp"
                  (920941 'move' call_tmp[920938](466912 call chpl_integralIdxType _mt[203] this[289622]))
                  unknown call_tmp[920943] "expr temp" "maybe param" "maybe type" "temp"
                  (920946 'move' call_tmp[920943](392641 call(392636 call (partial) sizeAs _mt[203] call_tmp[920929]) call_tmp[920938]))
                  unknown call_tmp[920948] "expr temp" "maybe param" "maybe type" "temp"
                  (920951 'move' call_tmp[920948](392648 call locBlock[392549] parDim[1465293]))
                  unknown call_tmp[920955] "expr temp" "maybe param" "maybe type" "temp"
                  (920958 'move' call_tmp[920955](392646 call _high _mt[203] call_tmp[920948]))
                  unknown call_tmp[920960] "expr temp" "maybe param" "maybe type" "temp"
                  (920963 'move' call_tmp[920960](392654 call locBlock[392549] parDim[1465293]))
                  unknown call_tmp[920967] "expr temp" "maybe param" "maybe type" "temp"
                  (920970 'move' call_tmp[920967](392652 call _low _mt[203] call_tmp[920960]))
                  unknown call_tmp[920972] "expr temp" "maybe param" "maybe type" "temp"
                  (920975 'move' call_tmp[920972](392660 call locBlock[392549] parDim[1465293]))
                  unknown call_tmp[920979] "expr temp" "maybe param" "maybe type" "temp"
                  (920982 'move' call_tmp[920979](392658 call _low _mt[203] call_tmp[920972]))
                  unknown call_tmp[920984] "maybe param" "maybe type" "temp"
                  (920987 'move' call_tmp[920984](392634 call _computeBlock call_tmp[920943] numChunks[1465290] chunk[392480] call_tmp[920955] call_tmp[920967] call_tmp[920979]))
                  const tmp[392632] "dead at end of block" "const" "insert auto destroy" "temp"
                  (652850 'init var' tmp[392632] call_tmp[920984])
                  (392665 call _check_tuple_var_decl tmp[392632] 2)
                  (566943 'end of statement')
                  unknown call_tmp[920989] "maybe param" "maybe type" "temp"
                  (920992 'move' call_tmp[920989](392670 call tmp[392632] 0))
                  const lo[392668] "dead at end of block" "const" "insert auto destroy"
                  (652852 'init var' lo[392668] call_tmp[920989])
                  unknown call_tmp[920994] "maybe param" "maybe type" "temp"
                  (920997 'move' call_tmp[920994](392675 call tmp[392632] 1))
                  const hi[392673] "dead at end of block" "const" "insert auto destroy"
                  (652854 'init var' hi[392673] call_tmp[920994])
                  (392678 'end of statement')
                  unknown call_tmp[920999] "expr temp" "maybe param" "maybe type" "temp"
                  (921002 'move' call_tmp[920999](392682 call followMe[392621] parDim[1465293]))
                  unknown call_tmp[921004] "expr temp" "maybe param" "maybe type" "temp"
                  (921007 'move' call_tmp[921004](392685 call chpl_build_bounded_range lo[392668] hi[392673]))
                  (392680 call = call_tmp[920999] call_tmp[921004])
                  (566944 'end of statement' followMe[392621] parDim[1465293] lo[392668] hi[392673])
                  unknown call_tmp[921009] "maybe param" "maybe type" "temp"
                  (921012 'move' call_tmp[921009](392691 call _computeChunkStuff numSublocTasks[392524](ignoreRunning = 1) minIndicesPerTask[1465281] followMe[392621]))
                  const tmp[392689] "dead at end of block" "const" "insert auto destroy" "temp"
                  (652856 'init var' tmp[392689] call_tmp[921009])
                  (392699 call _check_tuple_var_decl tmp[392689] 2)
                  (566949 'end of statement')
                  unknown call_tmp[921014] "maybe param" "maybe type" "temp"
                  (921017 'move' call_tmp[921014](392704 call tmp[392689] 0))
                  const numChunks2[392702] "dead at end of block" "const" "insert auto destroy"
                  (652858 'init var' numChunks2[392702] call_tmp[921014])
                  unknown call_tmp[921019] "maybe param" "maybe type" "temp"
                  (921022 'move' call_tmp[921019](392709 call tmp[392689] 1))
                  const parDim2[392707] "dead at end of block" "const" "insert auto destroy"
                  (652860 'init var' parDim2[392707] call_tmp[921019])
                  (392712 'end of statement' chunk[392480] dptpl[1465287] numChunks[1465290] dptpl[1465287] numChunks[1465290] dptpl[1465287] numChunks[1465290] locBlock[392549])
                  {
                    unknown tmpIter[392714] "expr temp" "maybe ref" "no copy" "temp"
                    unknown call_tmp[921024] "expr temp" "maybe param" "maybe type" "temp"
                    (921027 'move' call_tmp[921024](392721 call chpl_build_low_bounded_range 0))
                    (392716 'move' tmpIter[392714](392719 call # call_tmp[921024] numChunks2[392702]))
                    unknown isBounded[392724] "maybe param" "temp"
                    (392726 'move' isBounded[392724](392729 call chpl_supportsBoundedCoforall tmpIter[392714] 0))
                    if isBounded[392724]
                    {
                      const _coforallCount[392734] "const" "end count" "temp"
                      (392736 'move' _coforallCount[392734](392739 call _endCountAlloc 1))
                      unknown numTasks[392741] "temp"
                      (392743 'move' numTasks[392741](392746 call chpl_boundedCoforallSize tmpIter[392714] 0))
                      (392750 call _upEndCount _coforallCount[392734] 1 numTasks[392741])
                      (566950 'end of statement')
                      (392755 call chpl_resetTaskSpawn numTasks[392741])
                      (566951 'end of statement')
                      unknown _indexOfInterest[392757] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      unknown _iterator[392759] "expr temp" "temp"
                      (392761 'move' _iterator[392759](392764 call _getIterator tmpIter[392714]))
                      Defer
                      {
                        {
                          (392768 call _freeIterator _iterator[392759])
                        }
                      }
                      { scopeless type
                        (392772 'move' _indexOfInterest[392757](392775 call iteratorIndex _iterator[392759]))
                      }
                      ForLoop[392777]
                      {
                        unknown chunk2[392780] "coforall index var" "index var" "insert auto destroy"
                        (566953 'end of statement')
                        (392782 'move' chunk2[392780] _indexOfInterest[392757])
                        (566954 'end of statement' chunk2[392780])
                        (1465238 call coforall_fn[1465236] chunk[392480] followMe[392621] numChunks2[392702] parDim2[392707])
                        function coforall_fn[1465236](arg chunk[1465243], arg followMe[1465246], arg numChunks2[1465249], arg parDim2[1465252]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
                        {
                          {
                            unknown locBlock2[392789] "dead at end of block" "insert auto destroy"
                            unknown call_tmp[921031] "expr temp" "maybe param" "maybe type" "temp"
                            (921034 'move' call_tmp[921031](466933 call rank _mt[203] this[289622]))
                            unknown call_tmp[921038] "expr temp" "maybe param" "maybe type" "temp"
                            (921041 'move' call_tmp[921038](466938 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921043] "expr temp" "maybe param" "maybe type" "temp"
                            (921046 'move' call_tmp[921043](392794 call range[240](?) call_tmp[921038]))
                            unknown call_tmp[921048] "expr temp" "maybe param" "maybe type" "temp"
                            (921051 'move' call_tmp[921048](392791 call * call_tmp[921031] call_tmp[921043]))
                            (652862 'default init var' locBlock2[392789] call_tmp[921048])
                            (392797 'end of statement')
                            {
                              unknown i[392799] "dead at end of block" "index var" "insert auto destroy"
                              (652864 'init var' i[392799] 0)
                              (566956 'end of statement')
                              unknown tmp[392802] "maybe param" "temp"
                              unknown call_tmp[921055] "expr temp" "maybe param" "maybe type" "temp"
                              (921058 'move' call_tmp[921055](466943 call rank _mt[203] this[289622]))
                              unknown call_tmp[921060] "expr temp" "maybe param" "maybe type" "temp"
                              (921063 'move' call_tmp[921060](392810 call - call_tmp[921055] 1))
                              (392804 'move' tmp[392802](392807 call chpl_compute_low_param_loop_bound 0 call_tmp[921060]))
                              unknown tmp[392813] "maybe param" "temp"
                              unknown call_tmp[921067] "expr temp" "maybe param" "maybe type" "temp"
                              (921070 'move' call_tmp[921067](466948 call rank _mt[203] this[289622]))
                              unknown call_tmp[921072] "expr temp" "maybe param" "maybe type" "temp"
                              (921075 'move' call_tmp[921072](392821 call - call_tmp[921067] 1))
                              (392815 'move' tmp[392813](392818 call chpl_compute_high_param_loop_bound 0 call_tmp[921072]))
                              unknown tmp[392824] "maybe param" "temp"
                              (392826 'move' tmp[392824] 1)
                              ParamForLoop[392829]
                              { i[392799] tmp[392802] tmp[392813] tmp[392824]
                                unknown call_tmp[921077] "expr temp" "maybe param" "maybe type" "temp"
                                (921080 'move' call_tmp[921077](392839 call locBlock2[392789] i[392799]))
                                unknown call_tmp[921082] "expr temp" "maybe param" "maybe type" "temp"
                                (921085 'move' call_tmp[921082](392846 call followMe[1465246] i[392799]))
                                unknown call_tmp[921089] "expr temp" "maybe param" "maybe type" "temp"
                                (921092 'move' call_tmp[921089](392844 call lowBound _mt[203] call_tmp[921082]))
                                unknown call_tmp[921094] "expr temp" "maybe param" "maybe type" "temp"
                                (921097 'move' call_tmp[921094](392852 call followMe[1465246] i[392799]))
                                unknown call_tmp[921101] "expr temp" "maybe param" "maybe type" "temp"
                                (921104 'move' call_tmp[921101](392850 call highBound _mt[203] call_tmp[921094]))
                                unknown call_tmp[921106] "expr temp" "maybe param" "maybe type" "temp"
                                (921109 'move' call_tmp[921106](392842 call chpl_build_bounded_range call_tmp[921089] call_tmp[921101]))
                                (392837 call = call_tmp[921077] call_tmp[921106])
                                (566957 'end of statement' locBlock2[392789] i[392799] followMe[1465246] i[392799] followMe[1465246] i[392799])
                              }
                              label _unused_continueLabel[392855]
                              label _breakLabel[392857]
                            }
                            unknown call_tmp[921113] "expr temp" "maybe param" "maybe type" "temp"
                            (921116 'move' call_tmp[921113](466960 call rank _mt[203] this[289622]))
                            unknown call_tmp[921120] "expr temp" "maybe param" "maybe type" "temp"
                            (921123 'move' call_tmp[921120](466965 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921125] "expr temp" "maybe param" "maybe type" "temp"
                            (921128 'move' call_tmp[921125](392866 call range[240](?) call_tmp[921120]))
                            unknown call_tmp[921130] "maybe param" "maybe type" "temp"
                            (921133 'move' call_tmp[921130](392863 call * call_tmp[921113] call_tmp[921125]))
                            unknown followMe2[392860] "dead at end of block" "insert auto destroy"
                            (652866 'init var' followMe2[392860] locBlock2[392789] call_tmp[921130])
                            (392869 'end of statement')
                            unknown call_tmp[921135] "expr temp" "maybe param" "maybe type" "temp"
                            (921138 'move' call_tmp[921135](392876 call locBlock2[392789] parDim2[1465252]))
                            unknown call_tmp[921142] "maybe param" "maybe type" "temp"
                            (921145 'move' call_tmp[921142](392874 call _low _mt[203] call_tmp[921135]))
                            const low[392872] "dead at end of block" "const" "insert auto destroy"
                            (652868 'init var' low[392872] call_tmp[921142])
                            unknown call_tmp[921147] "expr temp" "maybe param" "maybe type" "temp"
                            (921150 'move' call_tmp[921147](392885 call locBlock2[392789] parDim2[1465252]))
                            unknown call_tmp[921154] "maybe param" "maybe type" "temp"
                            (921157 'move' call_tmp[921154](392883 call _high _mt[203] call_tmp[921147]))
                            const high[392881] "dead at end of block" "const" "insert auto destroy"
                            (652870 'init var' high[392881] call_tmp[921154])
                            (392889 'end of statement')
                            unknown call_tmp[921159] "expr temp" "maybe param" "maybe type" "temp"
                            (921162 'move' call_tmp[921159](392897 call locBlock2[392789] parDim2[1465252]))
                            unknown call_tmp[921168] "expr temp" "maybe param" "maybe type" "temp"
                            (921171 'move' call_tmp[921168](466975 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921173] "expr temp" "maybe param" "maybe type" "temp"
                            (921176 'move' call_tmp[921173](392900 call(392895 call (partial) sizeAs _mt[203] call_tmp[921159]) call_tmp[921168]))
                            unknown call_tmp[921178] "maybe param" "maybe type" "temp"
                            (921181 'move' call_tmp[921178](392893 call _computeBlock call_tmp[921173] numChunks2[1465249] chunk2[392780] high[392881] low[392872] low[392872]))
                            const tmp[392891] "dead at end of block" "const" "insert auto destroy" "temp"
                            (652872 'init var' tmp[392891] call_tmp[921178])
                            (392909 call _check_tuple_var_decl tmp[392891] 2)
                            (566966 'end of statement')
                            unknown call_tmp[921183] "maybe param" "maybe type" "temp"
                            (921186 'move' call_tmp[921183](392914 call tmp[392891] 0))
                            const lo[392912] "dead at end of block" "const" "insert auto destroy"
                            (652874 'init var' lo[392912] call_tmp[921183])
                            unknown call_tmp[921188] "maybe param" "maybe type" "temp"
                            (921191 'move' call_tmp[921188](392919 call tmp[392891] 1))
                            const hi[392917] "dead at end of block" "const" "insert auto destroy"
                            (652876 'init var' hi[392917] call_tmp[921188])
                            (392922 'end of statement' locBlock2[392789] parDim2[1465252])
                            unknown call_tmp[921193] "expr temp" "maybe param" "maybe type" "temp"
                            (921196 'move' call_tmp[921193](392926 call followMe2[392860] parDim2[1465252]))
                            unknown call_tmp[921198] "expr temp" "maybe param" "maybe type" "temp"
                            (921201 'move' call_tmp[921198](392929 call chpl_build_bounded_range lo[392912] hi[392917]))
                            (392924 call = call_tmp[921193] call_tmp[921198])
                            (566967 'end of statement' followMe2[392860] parDim2[1465252] lo[392912] hi[392917])
                            unknown call_tmp[921203] "expr temp" "maybe param" "maybe type" "temp"
                            (921206 'move' call_tmp[921203](392933 call _cond_test debugDataParNuma[287677]))
                            if call_tmp[921203]
                            {
                              (392937 call chpl_debug_writeln "### chunk = " chunk[1465243] "  chunk2 = " chunk2[392780] "  " "followMe = " followMe[1465246] "  followMe2 = " followMe2[392860])
                              (566972 'end of statement' chunk[1465243] chunk2[392780] followMe[1465246] followMe2[392860])
                            }
                            unknown yret[629326] "YVV" "temp"
                            (629329 'move' yret[629326](629328 'deref' followMe2[392860]))
                            (392948 yield yret[629326])
                            (566977 'end of statement' followMe2[392860])
                          }
                          (392951 call _downEndCount _coforallCount[392734] nil[32])
                          (1465241 return _void[46])
                        }
                        {
                        }
                        label _continueLabel[392954]
                        _indexOfInterest[392757]
                        _iterator[392759]
                      }
                      label _breakLabel[392956]
                      Defer
                      {
                        {
                          (392960 call _endCountFree _coforallCount[392734])
                        }
                      }
                      (392964 call _waitEndCount _coforallCount[392734] 1 numTasks[392741])
                    }
                    {
                      const _coforallCount[392969] "const" "end count" "temp"
                      (392971 'move' _coforallCount[392969](392974 call _endCountAlloc 1))
                      unknown _indexOfInterest[392976] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      unknown _iterator[392978] "expr temp" "temp"
                      (392980 'move' _iterator[392978](392983 call _getIterator tmpIter[392714]))
                      Defer
                      {
                        {
                          (392987 call _freeIterator _iterator[392978])
                        }
                      }
                      { scopeless type
                        (392991 'move' _indexOfInterest[392976](392994 call iteratorIndex _iterator[392978]))
                      }
                      ForLoop[392996]
                      {
                        unknown chunk2[392999] "coforall index var" "index var" "insert auto destroy"
                        (566983 'end of statement')
                        (393001 'move' chunk2[392999] _indexOfInterest[392976])
                        (566984 'end of statement' chunk2[392999])
                        (393005 call _upEndCount _coforallCount[392969] 1)
                        (566986 'end of statement')
                        (1465257 call coforall_fn[1465255] chunk[392480] followMe[392621] numChunks2[392702] parDim2[392707])
                        function coforall_fn[1465255](arg chunk[1465262], arg followMe[1465265], arg numChunks2[1465268], arg parDim2[1465271]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
                        {
                          {
                            unknown locBlock2[393012] "dead at end of block" "insert auto destroy"
                            unknown call_tmp[921210] "expr temp" "maybe param" "maybe type" "temp"
                            (921213 'move' call_tmp[921210](466995 call rank _mt[203] this[289622]))
                            unknown call_tmp[921217] "expr temp" "maybe param" "maybe type" "temp"
                            (921220 'move' call_tmp[921217](467000 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921222] "expr temp" "maybe param" "maybe type" "temp"
                            (921225 'move' call_tmp[921222](393017 call range[240](?) call_tmp[921217]))
                            unknown call_tmp[921227] "expr temp" "maybe param" "maybe type" "temp"
                            (921230 'move' call_tmp[921227](393014 call * call_tmp[921210] call_tmp[921222]))
                            (652878 'default init var' locBlock2[393012] call_tmp[921227])
                            (393020 'end of statement')
                            {
                              unknown i[393022] "dead at end of block" "index var" "insert auto destroy"
                              (652880 'init var' i[393022] 0)
                              (566987 'end of statement')
                              unknown tmp[393025] "maybe param" "temp"
                              unknown call_tmp[921234] "expr temp" "maybe param" "maybe type" "temp"
                              (921237 'move' call_tmp[921234](467005 call rank _mt[203] this[289622]))
                              unknown call_tmp[921239] "expr temp" "maybe param" "maybe type" "temp"
                              (921242 'move' call_tmp[921239](393033 call - call_tmp[921234] 1))
                              (393027 'move' tmp[393025](393030 call chpl_compute_low_param_loop_bound 0 call_tmp[921239]))
                              unknown tmp[393036] "maybe param" "temp"
                              unknown call_tmp[921246] "expr temp" "maybe param" "maybe type" "temp"
                              (921249 'move' call_tmp[921246](467010 call rank _mt[203] this[289622]))
                              unknown call_tmp[921251] "expr temp" "maybe param" "maybe type" "temp"
                              (921254 'move' call_tmp[921251](393044 call - call_tmp[921246] 1))
                              (393038 'move' tmp[393036](393041 call chpl_compute_high_param_loop_bound 0 call_tmp[921251]))
                              unknown tmp[393047] "maybe param" "temp"
                              (393049 'move' tmp[393047] 1)
                              ParamForLoop[393052]
                              { i[393022] tmp[393025] tmp[393036] tmp[393047]
                                unknown call_tmp[921256] "expr temp" "maybe param" "maybe type" "temp"
                                (921259 'move' call_tmp[921256](393062 call locBlock2[393012] i[393022]))
                                unknown call_tmp[921261] "expr temp" "maybe param" "maybe type" "temp"
                                (921264 'move' call_tmp[921261](393069 call followMe[1465265] i[393022]))
                                unknown call_tmp[921268] "expr temp" "maybe param" "maybe type" "temp"
                                (921271 'move' call_tmp[921268](393067 call lowBound _mt[203] call_tmp[921261]))
                                unknown call_tmp[921273] "expr temp" "maybe param" "maybe type" "temp"
                                (921276 'move' call_tmp[921273](393075 call followMe[1465265] i[393022]))
                                unknown call_tmp[921280] "expr temp" "maybe param" "maybe type" "temp"
                                (921283 'move' call_tmp[921280](393073 call highBound _mt[203] call_tmp[921273]))
                                unknown call_tmp[921285] "expr temp" "maybe param" "maybe type" "temp"
                                (921288 'move' call_tmp[921285](393065 call chpl_build_bounded_range call_tmp[921268] call_tmp[921280]))
                                (393060 call = call_tmp[921256] call_tmp[921285])
                                (566988 'end of statement' locBlock2[393012] i[393022] followMe[1465265] i[393022] followMe[1465265] i[393022])
                              }
                              label _unused_continueLabel[393078]
                              label _breakLabel[393080]
                            }
                            unknown call_tmp[921292] "expr temp" "maybe param" "maybe type" "temp"
                            (921295 'move' call_tmp[921292](467022 call rank _mt[203] this[289622]))
                            unknown call_tmp[921299] "expr temp" "maybe param" "maybe type" "temp"
                            (921302 'move' call_tmp[921299](467027 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921304] "expr temp" "maybe param" "maybe type" "temp"
                            (921307 'move' call_tmp[921304](393089 call range[240](?) call_tmp[921299]))
                            unknown call_tmp[921309] "maybe param" "maybe type" "temp"
                            (921312 'move' call_tmp[921309](393086 call * call_tmp[921292] call_tmp[921304]))
                            unknown followMe2[393083] "dead at end of block" "insert auto destroy"
                            (652882 'init var' followMe2[393083] locBlock2[393012] call_tmp[921309])
                            (393092 'end of statement')
                            unknown call_tmp[921314] "expr temp" "maybe param" "maybe type" "temp"
                            (921317 'move' call_tmp[921314](393099 call locBlock2[393012] parDim2[1465271]))
                            unknown call_tmp[921321] "maybe param" "maybe type" "temp"
                            (921324 'move' call_tmp[921321](393097 call _low _mt[203] call_tmp[921314]))
                            const low[393095] "dead at end of block" "const" "insert auto destroy"
                            (652884 'init var' low[393095] call_tmp[921321])
                            unknown call_tmp[921326] "expr temp" "maybe param" "maybe type" "temp"
                            (921329 'move' call_tmp[921326](393108 call locBlock2[393012] parDim2[1465271]))
                            unknown call_tmp[921333] "maybe param" "maybe type" "temp"
                            (921336 'move' call_tmp[921333](393106 call _high _mt[203] call_tmp[921326]))
                            const high[393104] "dead at end of block" "const" "insert auto destroy"
                            (652886 'init var' high[393104] call_tmp[921333])
                            (393112 'end of statement')
                            unknown call_tmp[921338] "expr temp" "maybe param" "maybe type" "temp"
                            (921341 'move' call_tmp[921338](393120 call locBlock2[393012] parDim2[1465271]))
                            unknown call_tmp[921347] "expr temp" "maybe param" "maybe type" "temp"
                            (921350 'move' call_tmp[921347](467037 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921352] "expr temp" "maybe param" "maybe type" "temp"
                            (921355 'move' call_tmp[921352](393123 call(393118 call (partial) sizeAs _mt[203] call_tmp[921338]) call_tmp[921347]))
                            unknown call_tmp[921357] "maybe param" "maybe type" "temp"
                            (921360 'move' call_tmp[921357](393116 call _computeBlock call_tmp[921352] numChunks2[1465268] chunk2[392999] high[393104] low[393095] low[393095]))
                            const tmp[393114] "dead at end of block" "const" "insert auto destroy" "temp"
                            (652888 'init var' tmp[393114] call_tmp[921357])
                            (393132 call _check_tuple_var_decl tmp[393114] 2)
                            (566997 'end of statement')
                            unknown call_tmp[921362] "maybe param" "maybe type" "temp"
                            (921365 'move' call_tmp[921362](393137 call tmp[393114] 0))
                            const lo[393135] "dead at end of block" "const" "insert auto destroy"
                            (652890 'init var' lo[393135] call_tmp[921362])
                            unknown call_tmp[921367] "maybe param" "maybe type" "temp"
                            (921370 'move' call_tmp[921367](393142 call tmp[393114] 1))
                            const hi[393140] "dead at end of block" "const" "insert auto destroy"
                            (652892 'init var' hi[393140] call_tmp[921367])
                            (393145 'end of statement' locBlock2[393012] parDim2[1465271])
                            unknown call_tmp[921372] "expr temp" "maybe param" "maybe type" "temp"
                            (921375 'move' call_tmp[921372](393149 call followMe2[393083] parDim2[1465271]))
                            unknown call_tmp[921377] "expr temp" "maybe param" "maybe type" "temp"
                            (921380 'move' call_tmp[921377](393152 call chpl_build_bounded_range lo[393135] hi[393140]))
                            (393147 call = call_tmp[921372] call_tmp[921377])
                            (566998 'end of statement' followMe2[393083] parDim2[1465271] lo[393135] hi[393140])
                            unknown call_tmp[921382] "expr temp" "maybe param" "maybe type" "temp"
                            (921385 'move' call_tmp[921382](393156 call _cond_test debugDataParNuma[287677]))
                            if call_tmp[921382]
                            {
                              (393160 call chpl_debug_writeln "### chunk = " chunk[1465262] "  chunk2 = " chunk2[392999] "  " "followMe = " followMe[1465265] "  followMe2 = " followMe2[393083])
                              (567003 'end of statement' chunk[1465262] chunk2[392999] followMe[1465265] followMe2[393083])
                            }
                            unknown yret[629332] "YVV" "temp"
                            (629335 'move' yret[629332](629334 'deref' followMe2[393083]))
                            (393171 yield yret[629332])
                            (567008 'end of statement' followMe2[393083])
                          }
                          (393174 call _downEndCount _coforallCount[392969] nil[32])
                          (1465260 return _void[46])
                        }
                        {
                        }
                        label _continueLabel[393177]
                        _indexOfInterest[392976]
                        _iterator[392978]
                      }
                      label _breakLabel[393179]
                      Defer
                      {
                        {
                          (393183 call _endCountFree _coforallCount[392969])
                        }
                      }
                      (393187 call _waitEndCount _coforallCount[392969] 1)
                    }
                  }
                }
                (392484 'elided on block' 0 tmp[392487])
              }
              (393195 call _downEndCount _coforallCount[393192] nil[32])
              (1465279 return _void[46])
            }
            {
            }
            label _continueLabel[393205]
            _indexOfInterest[393200]
            _iterator[393201]
          }
          label _breakLabel[393206]
          Defer
          {
            {
              (393247 call _endCountFree _coforallCount[393192])
            }
          }
          (393252 call _waitEndCount _coforallCount[393192] 1 numTasks[393193])
        }
        {
          const _coforallCount[393264] "const" "end count" "temp"
          (393320 'move' _coforallCount[393264](393317 call _endCountAlloc 1))
          unknown _indexOfInterest[393272] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[393273] "expr temp" "temp"
          (393282 'move' _iterator[393273](393280 call _getIterator tmpIter[392473]))
          Defer
          {
            {
              (393297 call _freeIterator _iterator[393273])
            }
          }
          { scopeless type
            (393287 'move' _indexOfInterest[393272](393284 call iteratorIndex _iterator[393273]))
          }
          ForLoop[393274]
          {
            unknown chunk[289794] "coforall index var" "index var" "insert auto destroy"
            (567017 'end of statement')
            (393292 'move' chunk[289794] _indexOfInterest[393272])
            (567018 'end of statement' chunk[289794])
            (393304 call _upEndCount _coforallCount[393264] 1)
            (567020 'end of statement')
            (1465298 call coforall_fn[1465296] minIndicesPerTask[289637] offset[289648] dptpl[289672] numChunks[289734] parDim[289736])
            function coforall_fn[1465296](arg minIndicesPerTask[1465303], arg offset[1465306], arg dptpl[1465309], arg numChunks[1465312], arg parDim[1465315]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
            {
              {
                const tmp[290215] "const" "temp"
                unknown call_tmp[921387] "expr temp" "maybe param" "maybe type" "temp"
                (921390 'move' call_tmp[921387](409643 call here[135591]))
                unknown call_tmp[921394] "expr temp" "maybe param" "maybe type" "temp"
                (921397 'move' call_tmp[921394](289807 call(289804 call (partial) _getChild _mt[203] call_tmp[921387]) chunk[289794]))
                unknown call_tmp[921399] "expr temp" "maybe param" "maybe type" "temp"
                (921402 'move' call_tmp[921399](290212 '_wide_get_locale' call_tmp[921394]))
                (290216 'move' tmp[290215](290213 'deref' call_tmp[921399]))
                {
                  unknown call_tmp[921404] "expr temp" "maybe param" "maybe type" "temp"
                  (921407 'move' call_tmp[921404](289831 call _cond_test debugDataParNuma[287677]))
                  if call_tmp[921404]
                  {
                    unknown call_tmp[921409] "expr temp" "maybe param" "maybe type" "temp"
                    (921412 'move' call_tmp[921409](289824 call chpl_getSubloc))
                    unknown call_tmp[921414] "expr temp" "maybe param" "maybe type" "temp"
                    (921417 'move' call_tmp[921414](289820 call != chunk[289794] call_tmp[921409]))
                    unknown call_tmp[921419] "expr temp" "maybe param" "maybe type" "temp"
                    (921422 'move' call_tmp[921419](289825 call _cond_test call_tmp[921414]))
                    if call_tmp[921419]
                    {
                      unknown call_tmp[921424] "expr temp" "maybe param" "maybe type" "temp"
                      (921427 'move' call_tmp[921424](289817 call chpl_getSubloc))
                      (289812 call chpl_debug_writeln "*** ERROR: ON WRONG SUBLOC (should be " chunk[289794] ", on " call_tmp[921424] ") ***")
                      (567021 'end of statement' chunk[289794])
                    }
                  }
                  const numSublocTasks[289836] "dead at end of block" "const" "insert auto destroy"
                  unknown tmp[704403] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[704404] "maybe param" "temp"
                  unknown call_tmp[921429] "expr temp" "maybe param" "maybe type" "temp"
                  (921432 'move' call_tmp[921429](289840 call % dptpl[1465309] numChunks[1465312]))
                  unknown call_tmp[921434] "expr temp" "maybe param" "maybe type" "temp"
                  (921437 'move' call_tmp[921434](289837 call < chunk[289794] call_tmp[921429]))
                  (704409 'move' tmp[704404](704407 call _cond_test call_tmp[921434]))
                  if tmp[704404]
                  {
                    unknown tmp[704411] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[921439] "expr temp" "maybe param" "maybe type" "temp"
                    (921442 'move' call_tmp[921439](289846 call / dptpl[1465309] numChunks[1465312]))
                    (704413 'move' tmp[704411](289844 call + call_tmp[921439] 1))
                    (704418 'move' tmp[704403](704415 '_paramFoldLogical' tmp[704404] tmp[704411]))
                  }
                  {
                    unknown tmp[704420] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    (704422 'move' tmp[704420](289851 call / dptpl[1465309] numChunks[1465312]))
                    (704427 'move' tmp[704403](704424 '_paramFoldLogical' tmp[704404] tmp[704420]))
                  }
                  (652894 'init var' numSublocTasks[289836] tmp[704403])
                  (289859 'end of statement')
                  unknown locBlock[289861] "dead at end of block" "insert auto destroy"
                  unknown call_tmp[921446] "expr temp" "maybe param" "maybe type" "temp"
                  (921449 'move' call_tmp[921446](455455 call rank _mt[203] this[289622]))
                  unknown call_tmp[921453] "expr temp" "maybe param" "maybe type" "temp"
                  (921456 'move' call_tmp[921453](455460 call chpl_integralIdxType _mt[203] this[289622]))
                  unknown call_tmp[921458] "expr temp" "maybe param" "maybe type" "temp"
                  (921461 'move' call_tmp[921458](289866 call range[240](?) call_tmp[921453]))
                  unknown call_tmp[921463] "expr temp" "maybe param" "maybe type" "temp"
                  (921466 'move' call_tmp[921463](289862 call * call_tmp[921446] call_tmp[921458]))
                  (652896 'default init var' locBlock[289861] call_tmp[921463])
                  (289869 'end of statement')
                  {
                    unknown i[289870] "dead at end of block" "index var" "insert auto destroy"
                    (652898 'init var' i[289870] 0)
                    (567030 'end of statement')
                    unknown tmp[289900] "maybe param" "temp"
                    unknown call_tmp[921470] "expr temp" "maybe param" "maybe type" "temp"
                    (921473 'move' call_tmp[921470](455465 call rank _mt[203] this[289622]))
                    unknown call_tmp[921475] "expr temp" "maybe param" "maybe type" "temp"
                    (921478 'move' call_tmp[921475](289873 call - call_tmp[921470] 1))
                    (289912 'move' tmp[289900](289910 call chpl_compute_low_param_loop_bound 0 call_tmp[921475]))
                    unknown tmp[289901] "maybe param" "temp"
                    unknown call_tmp[921482] "expr temp" "maybe param" "maybe type" "temp"
                    (921485 'move' call_tmp[921482](455484 call rank _mt[203] this[289622]))
                    unknown call_tmp[921487] "expr temp" "maybe param" "maybe type" "temp"
                    (921490 'move' call_tmp[921487](289917 call - call_tmp[921482] 1))
                    (289922 'move' tmp[289901](289920 call chpl_compute_high_param_loop_bound 0 call_tmp[921487]))
                    unknown tmp[289902] "maybe param" "temp"
                    (289925 'move' tmp[289902] 1)
                    ParamForLoop[289927]
                    { i[289870] tmp[289900] tmp[289901] tmp[289902]
                      unknown call_tmp[921492] "expr temp" "maybe param" "maybe type" "temp"
                      (921495 'move' call_tmp[921492](289882 call locBlock[289861] i[289870]))
                      unknown call_tmp[921497] "expr temp" "maybe param" "maybe type" "temp"
                      (921500 'move' call_tmp[921497](289887 call offset[1465306] i[289870]))
                      unknown call_tmp[921502] "expr temp" "maybe param" "maybe type" "temp"
                      (921505 'move' call_tmp[921502](289889 call chpl_build_low_bounded_range call_tmp[921497]))
                      unknown call_tmp[921509] "expr temp" "maybe param" "maybe type" "temp"
                      (921512 'move' call_tmp[921509](289892 call(455474 call (partial) ranges _mt[203] this[289622]) i[289870]))
                      unknown call_tmp[921518] "expr temp" "maybe param" "maybe type" "temp"
                      (921521 'move' call_tmp[921518](455479 call chpl_integralIdxType _mt[203] this[289622]))
                      unknown call_tmp[921523] "expr temp" "maybe param" "maybe type" "temp"
                      (921526 'move' call_tmp[921523](289897 call(289894 call (partial) sizeAs _mt[203] call_tmp[921509]) call_tmp[921518]))
                      unknown call_tmp[921528] "expr temp" "maybe param" "maybe type" "temp"
                      (921531 'move' call_tmp[921528](289884 call # call_tmp[921502] call_tmp[921523]))
                      (289879 call = call_tmp[921492] call_tmp[921528])
                      (567031 'end of statement' locBlock[289861] i[289870])
                    }
                    label _unused_continueLabel[289904]
                    label _breakLabel[289903]
                  }
                  unknown call_tmp[921535] "expr temp" "maybe param" "maybe type" "temp"
                  (921538 'move' call_tmp[921535](455489 call rank _mt[203] this[289622]))
                  unknown call_tmp[921542] "expr temp" "maybe param" "maybe type" "temp"
                  (921545 'move' call_tmp[921542](455494 call chpl_integralIdxType _mt[203] this[289622]))
                  unknown call_tmp[921547] "expr temp" "maybe param" "maybe type" "temp"
                  (921550 'move' call_tmp[921547](289942 call range[240](?) call_tmp[921542]))
                  unknown call_tmp[921552] "maybe param" "maybe type" "temp"
                  (921555 'move' call_tmp[921552](289938 call * call_tmp[921535] call_tmp[921547]))
                  unknown followMe[289937] "dead at end of block" "insert auto destroy"
                  (652900 'init var' followMe[289937] locBlock[289861] call_tmp[921552])
                  (289946 'end of statement')
                  unknown call_tmp[921557] "expr temp" "maybe param" "maybe type" "temp"
                  (921560 'move' call_tmp[921557](289955 call locBlock[289861] parDim[1465315]))
                  unknown call_tmp[921566] "expr temp" "maybe param" "maybe type" "temp"
                  (921569 'move' call_tmp[921566](455501 call chpl_integralIdxType _mt[203] this[289622]))
                  unknown call_tmp[921571] "expr temp" "maybe param" "maybe type" "temp"
                  (921574 'move' call_tmp[921571](289960 call(289957 call (partial) sizeAs _mt[203] call_tmp[921557]) call_tmp[921566]))
                  unknown call_tmp[921576] "expr temp" "maybe param" "maybe type" "temp"
                  (921579 'move' call_tmp[921576](289965 call locBlock[289861] parDim[1465315]))
                  unknown call_tmp[921583] "expr temp" "maybe param" "maybe type" "temp"
                  (921586 'move' call_tmp[921583](289967 call _high _mt[203] call_tmp[921576]))
                  unknown call_tmp[921588] "expr temp" "maybe param" "maybe type" "temp"
                  (921591 'move' call_tmp[921588](289971 call locBlock[289861] parDim[1465315]))
                  unknown call_tmp[921595] "expr temp" "maybe param" "maybe type" "temp"
                  (921598 'move' call_tmp[921595](289973 call _low _mt[203] call_tmp[921588]))
                  unknown call_tmp[921600] "expr temp" "maybe param" "maybe type" "temp"
                  (921603 'move' call_tmp[921600](289977 call locBlock[289861] parDim[1465315]))
                  unknown call_tmp[921607] "expr temp" "maybe param" "maybe type" "temp"
                  (921610 'move' call_tmp[921607](289979 call _low _mt[203] call_tmp[921600]))
                  unknown call_tmp[921612] "maybe param" "maybe type" "temp"
                  (921615 'move' call_tmp[921612](289953 call _computeBlock call_tmp[921571] numChunks[1465312] chunk[289794] call_tmp[921583] call_tmp[921595] call_tmp[921607]))
                  const tmp[289982] "dead at end of block" "const" "insert auto destroy" "temp"
                  (652902 'init var' tmp[289982] call_tmp[921612])
                  (289989 call _check_tuple_var_decl tmp[289982] 2)
                  (567035 'end of statement')
                  unknown call_tmp[921617] "maybe param" "maybe type" "temp"
                  (921620 'move' call_tmp[921617](289983 call tmp[289982] 0))
                  const lo[289948] "dead at end of block" "const" "insert auto destroy"
                  (652904 'init var' lo[289948] call_tmp[921617])
                  unknown call_tmp[921622] "maybe param" "maybe type" "temp"
                  (921625 'move' call_tmp[921622](289986 call tmp[289982] 1))
                  const hi[289950] "dead at end of block" "const" "insert auto destroy"
                  (652906 'init var' hi[289950] call_tmp[921622])
                  (289994 'end of statement')
                  unknown call_tmp[921627] "expr temp" "maybe param" "maybe type" "temp"
                  (921630 'move' call_tmp[921627](289998 call followMe[289937] parDim[1465315]))
                  unknown call_tmp[921632] "expr temp" "maybe param" "maybe type" "temp"
                  (921635 'move' call_tmp[921632](290002 call chpl_build_bounded_range lo[289948] hi[289950]))
                  (289995 call = call_tmp[921627] call_tmp[921632])
                  (567036 'end of statement' followMe[289937] parDim[1465315] lo[289948] hi[289950])
                  unknown call_tmp[921637] "maybe param" "maybe type" "temp"
                  (921640 'move' call_tmp[921637](290010 call _computeChunkStuff numSublocTasks[289836](ignoreRunning = 1) minIndicesPerTask[1465303] followMe[289937]))
                  const tmp[290016] "dead at end of block" "const" "insert auto destroy" "temp"
                  (652908 'init var' tmp[290016] call_tmp[921637])
                  (290023 call _check_tuple_var_decl tmp[290016] 2)
                  (567041 'end of statement')
                  unknown call_tmp[921642] "maybe param" "maybe type" "temp"
                  (921645 'move' call_tmp[921642](290017 call tmp[290016] 0))
                  const numChunks2[290005] "dead at end of block" "const" "insert auto destroy"
                  (652910 'init var' numChunks2[290005] call_tmp[921642])
                  unknown call_tmp[921647] "maybe param" "maybe type" "temp"
                  (921650 'move' call_tmp[921647](290020 call tmp[290016] 1))
                  const parDim2[290007] "dead at end of block" "const" "insert auto destroy"
                  (652912 'init var' parDim2[290007] call_tmp[921647])
                  (290028 'end of statement' chunk[289794] dptpl[1465309] numChunks[1465312] dptpl[1465309] numChunks[1465312] dptpl[1465309] numChunks[1465312] locBlock[289861])
                  {
                    unknown tmpIter[392159] "expr temp" "maybe ref" "no copy" "temp"
                    unknown call_tmp[921652] "expr temp" "maybe param" "maybe type" "temp"
                    (921655 'move' call_tmp[921652](290034 call chpl_build_low_bounded_range 0))
                    (392162 'move' tmpIter[392159](290031 call # call_tmp[921652] numChunks2[290005]))
                    unknown isBounded[392463] "maybe param" "temp"
                    (392469 'move' isBounded[392463](392465 call chpl_supportsBoundedCoforall tmpIter[392159] 0))
                    if isBounded[392463]
                    {
                      const _coforallCount[392332] "const" "end count" "temp"
                      (392400 'move' _coforallCount[392332](392397 call _endCountAlloc 1))
                      unknown numTasks[392333] "temp"
                      (392384 'move' numTasks[392333](392380 call chpl_boundedCoforallSize tmpIter[392159] 0))
                      (392375 call _upEndCount _coforallCount[392332] 1 numTasks[392333])
                      (567042 'end of statement')
                      (392372 call chpl_resetTaskSpawn numTasks[392333])
                      (567043 'end of statement')
                      unknown _indexOfInterest[392340] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      unknown _iterator[392341] "expr temp" "temp"
                      (392350 'move' _iterator[392341](392348 call _getIterator tmpIter[392159]))
                      Defer
                      {
                        {
                          (392365 call _freeIterator _iterator[392341])
                        }
                      }
                      { scopeless type
                        (392355 'move' _indexOfInterest[392340](392352 call iteratorIndex _iterator[392341]))
                      }
                      ForLoop[392342]
                      {
                        unknown chunk2[392166] "coforall index var" "index var" "insert auto destroy"
                        (567045 'end of statement')
                        (392360 'move' chunk2[392166] _indexOfInterest[392340])
                        (567046 'end of statement' chunk2[392166])
                        (1465200 call coforall_fn[1465198] chunk[289794] followMe[289937] numChunks2[290005] parDim2[290007])
                        function coforall_fn[1465198](arg chunk[1465205], arg followMe[1465208], arg numChunks2[1465211], arg parDim2[1465214]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
                        {
                          {
                            unknown locBlock2[392170] "dead at end of block" "insert auto destroy"
                            unknown call_tmp[921659] "expr temp" "maybe param" "maybe type" "temp"
                            (921662 'move' call_tmp[921659](466793 call rank _mt[203] this[289622]))
                            unknown call_tmp[921666] "expr temp" "maybe param" "maybe type" "temp"
                            (921669 'move' call_tmp[921666](466798 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921671] "expr temp" "maybe param" "maybe type" "temp"
                            (921674 'move' call_tmp[921671](392175 call range[240](?) call_tmp[921666]))
                            unknown call_tmp[921676] "expr temp" "maybe param" "maybe type" "temp"
                            (921679 'move' call_tmp[921676](392172 call * call_tmp[921659] call_tmp[921671]))
                            (652914 'default init var' locBlock2[392170] call_tmp[921676])
                            (392178 'end of statement')
                            {
                              unknown i[392180] "dead at end of block" "index var" "insert auto destroy"
                              (652916 'init var' i[392180] 0)
                              (567048 'end of statement')
                              unknown tmp[392183] "maybe param" "temp"
                              unknown call_tmp[921683] "expr temp" "maybe param" "maybe type" "temp"
                              (921686 'move' call_tmp[921683](466803 call rank _mt[203] this[289622]))
                              unknown call_tmp[921688] "expr temp" "maybe param" "maybe type" "temp"
                              (921691 'move' call_tmp[921688](392191 call - call_tmp[921683] 1))
                              (392185 'move' tmp[392183](392188 call chpl_compute_low_param_loop_bound 0 call_tmp[921688]))
                              unknown tmp[392194] "maybe param" "temp"
                              unknown call_tmp[921695] "expr temp" "maybe param" "maybe type" "temp"
                              (921698 'move' call_tmp[921695](466808 call rank _mt[203] this[289622]))
                              unknown call_tmp[921700] "expr temp" "maybe param" "maybe type" "temp"
                              (921703 'move' call_tmp[921700](392202 call - call_tmp[921695] 1))
                              (392196 'move' tmp[392194](392199 call chpl_compute_high_param_loop_bound 0 call_tmp[921700]))
                              unknown tmp[392205] "maybe param" "temp"
                              (392207 'move' tmp[392205] 1)
                              ParamForLoop[392210]
                              { i[392180] tmp[392183] tmp[392194] tmp[392205]
                                unknown call_tmp[921705] "expr temp" "maybe param" "maybe type" "temp"
                                (921708 'move' call_tmp[921705](392220 call locBlock2[392170] i[392180]))
                                unknown call_tmp[921710] "expr temp" "maybe param" "maybe type" "temp"
                                (921713 'move' call_tmp[921710](392227 call followMe[1465208] i[392180]))
                                unknown call_tmp[921717] "expr temp" "maybe param" "maybe type" "temp"
                                (921720 'move' call_tmp[921717](392225 call lowBound _mt[203] call_tmp[921710]))
                                unknown call_tmp[921722] "expr temp" "maybe param" "maybe type" "temp"
                                (921725 'move' call_tmp[921722](392233 call followMe[1465208] i[392180]))
                                unknown call_tmp[921729] "expr temp" "maybe param" "maybe type" "temp"
                                (921732 'move' call_tmp[921729](392231 call highBound _mt[203] call_tmp[921722]))
                                unknown call_tmp[921734] "expr temp" "maybe param" "maybe type" "temp"
                                (921737 'move' call_tmp[921734](392223 call chpl_build_bounded_range call_tmp[921717] call_tmp[921729]))
                                (392218 call = call_tmp[921705] call_tmp[921734])
                                (567049 'end of statement' locBlock2[392170] i[392180] followMe[1465208] i[392180] followMe[1465208] i[392180])
                              }
                              label _unused_continueLabel[392236]
                              label _breakLabel[392238]
                            }
                            unknown call_tmp[921741] "expr temp" "maybe param" "maybe type" "temp"
                            (921744 'move' call_tmp[921741](466820 call rank _mt[203] this[289622]))
                            unknown call_tmp[921748] "expr temp" "maybe param" "maybe type" "temp"
                            (921751 'move' call_tmp[921748](466825 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921753] "expr temp" "maybe param" "maybe type" "temp"
                            (921756 'move' call_tmp[921753](392247 call range[240](?) call_tmp[921748]))
                            unknown call_tmp[921758] "maybe param" "maybe type" "temp"
                            (921761 'move' call_tmp[921758](392244 call * call_tmp[921741] call_tmp[921753]))
                            unknown followMe2[392241] "dead at end of block" "insert auto destroy"
                            (652918 'init var' followMe2[392241] locBlock2[392170] call_tmp[921758])
                            (392250 'end of statement')
                            unknown call_tmp[921763] "expr temp" "maybe param" "maybe type" "temp"
                            (921766 'move' call_tmp[921763](392257 call locBlock2[392170] parDim2[1465214]))
                            unknown call_tmp[921770] "maybe param" "maybe type" "temp"
                            (921773 'move' call_tmp[921770](392255 call _low _mt[203] call_tmp[921763]))
                            const low[392253] "dead at end of block" "const" "insert auto destroy"
                            (652920 'init var' low[392253] call_tmp[921770])
                            unknown call_tmp[921775] "expr temp" "maybe param" "maybe type" "temp"
                            (921778 'move' call_tmp[921775](392266 call locBlock2[392170] parDim2[1465214]))
                            unknown call_tmp[921782] "maybe param" "maybe type" "temp"
                            (921785 'move' call_tmp[921782](392264 call _high _mt[203] call_tmp[921775]))
                            const high[392262] "dead at end of block" "const" "insert auto destroy"
                            (652922 'init var' high[392262] call_tmp[921782])
                            (392270 'end of statement')
                            unknown call_tmp[921787] "expr temp" "maybe param" "maybe type" "temp"
                            (921790 'move' call_tmp[921787](392278 call locBlock2[392170] parDim2[1465214]))
                            unknown call_tmp[921796] "expr temp" "maybe param" "maybe type" "temp"
                            (921799 'move' call_tmp[921796](466835 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921801] "expr temp" "maybe param" "maybe type" "temp"
                            (921804 'move' call_tmp[921801](392281 call(392276 call (partial) sizeAs _mt[203] call_tmp[921787]) call_tmp[921796]))
                            unknown call_tmp[921806] "maybe param" "maybe type" "temp"
                            (921809 'move' call_tmp[921806](392274 call _computeBlock call_tmp[921801] numChunks2[1465211] chunk2[392166] high[392262] low[392253] low[392253]))
                            const tmp[392272] "dead at end of block" "const" "insert auto destroy" "temp"
                            (652924 'init var' tmp[392272] call_tmp[921806])
                            (392290 call _check_tuple_var_decl tmp[392272] 2)
                            (567058 'end of statement')
                            unknown call_tmp[921811] "maybe param" "maybe type" "temp"
                            (921814 'move' call_tmp[921811](392295 call tmp[392272] 0))
                            const lo[392293] "dead at end of block" "const" "insert auto destroy"
                            (652926 'init var' lo[392293] call_tmp[921811])
                            unknown call_tmp[921816] "maybe param" "maybe type" "temp"
                            (921819 'move' call_tmp[921816](392300 call tmp[392272] 1))
                            const hi[392298] "dead at end of block" "const" "insert auto destroy"
                            (652928 'init var' hi[392298] call_tmp[921816])
                            (392303 'end of statement' locBlock2[392170] parDim2[1465214])
                            unknown call_tmp[921821] "expr temp" "maybe param" "maybe type" "temp"
                            (921824 'move' call_tmp[921821](392307 call followMe2[392241] parDim2[1465214]))
                            unknown call_tmp[921826] "expr temp" "maybe param" "maybe type" "temp"
                            (921829 'move' call_tmp[921826](392310 call chpl_build_bounded_range lo[392293] hi[392298]))
                            (392305 call = call_tmp[921821] call_tmp[921826])
                            (567059 'end of statement' followMe2[392241] parDim2[1465214] lo[392293] hi[392298])
                            unknown call_tmp[921831] "expr temp" "maybe param" "maybe type" "temp"
                            (921834 'move' call_tmp[921831](392314 call _cond_test debugDataParNuma[287677]))
                            if call_tmp[921831]
                            {
                              (392318 call chpl_debug_writeln "### chunk = " chunk[1465205] "  chunk2 = " chunk2[392166] "  " "followMe = " followMe[1465208] "  followMe2 = " followMe2[392241])
                              (567064 'end of statement' chunk[1465205] chunk2[392166] followMe[1465208] followMe2[392241])
                            }
                            unknown yret[629338] "YVV" "temp"
                            (629341 'move' yret[629338](629340 'deref' followMe2[392241]))
                            (392329 yield yret[629338])
                            (567069 'end of statement' followMe2[392241])
                          }
                          (392335 call _downEndCount _coforallCount[392332] nil[32])
                          (1465203 return _void[46])
                        }
                        {
                        }
                        label _continueLabel[392345]
                        _indexOfInterest[392340]
                        _iterator[392341]
                      }
                      label _breakLabel[392346]
                      Defer
                      {
                        {
                          (392387 call _endCountFree _coforallCount[392332])
                        }
                      }
                      (392392 call _waitEndCount _coforallCount[392332] 1 numTasks[392333])
                    }
                    {
                      const _coforallCount[392404] "const" "end count" "temp"
                      (392460 'move' _coforallCount[392404](392457 call _endCountAlloc 1))
                      unknown _indexOfInterest[392412] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      unknown _iterator[392413] "expr temp" "temp"
                      (392422 'move' _iterator[392413](392420 call _getIterator tmpIter[392159]))
                      Defer
                      {
                        {
                          (392437 call _freeIterator _iterator[392413])
                        }
                      }
                      { scopeless type
                        (392427 'move' _indexOfInterest[392412](392424 call iteratorIndex _iterator[392413]))
                      }
                      ForLoop[392414]
                      {
                        unknown chunk2[290029] "coforall index var" "index var" "insert auto destroy"
                        (567075 'end of statement')
                        (392432 'move' chunk2[290029] _indexOfInterest[392412])
                        (567076 'end of statement' chunk2[290029])
                        (392444 call _upEndCount _coforallCount[392404] 1)
                        (567078 'end of statement')
                        (1465219 call coforall_fn[1465217] chunk[289794] followMe[289937] numChunks2[290005] parDim2[290007])
                        function coforall_fn[1465217](arg chunk[1465224], arg followMe[1465227], arg numChunks2[1465230], arg parDim2[1465233]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
                        {
                          {
                            unknown locBlock2[290039] "dead at end of block" "insert auto destroy"
                            unknown call_tmp[921838] "expr temp" "maybe param" "maybe type" "temp"
                            (921841 'move' call_tmp[921838](455522 call rank _mt[203] this[289622]))
                            unknown call_tmp[921845] "expr temp" "maybe param" "maybe type" "temp"
                            (921848 'move' call_tmp[921845](455527 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921850] "expr temp" "maybe param" "maybe type" "temp"
                            (921853 'move' call_tmp[921850](290044 call range[240](?) call_tmp[921845]))
                            unknown call_tmp[921855] "expr temp" "maybe param" "maybe type" "temp"
                            (921858 'move' call_tmp[921855](290040 call * call_tmp[921838] call_tmp[921850]))
                            (652930 'default init var' locBlock2[290039] call_tmp[921855])
                            (290047 'end of statement')
                            {
                              unknown i[290048] "dead at end of block" "index var" "insert auto destroy"
                              (652932 'init var' i[290048] 0)
                              (567079 'end of statement')
                              unknown tmp[290077] "maybe param" "temp"
                              unknown call_tmp[921862] "expr temp" "maybe param" "maybe type" "temp"
                              (921865 'move' call_tmp[921862](455532 call rank _mt[203] this[289622]))
                              unknown call_tmp[921867] "expr temp" "maybe param" "maybe type" "temp"
                              (921870 'move' call_tmp[921867](290051 call - call_tmp[921862] 1))
                              (290089 'move' tmp[290077](290087 call chpl_compute_low_param_loop_bound 0 call_tmp[921867]))
                              unknown tmp[290078] "maybe param" "temp"
                              unknown call_tmp[921874] "expr temp" "maybe param" "maybe type" "temp"
                              (921877 'move' call_tmp[921874](455543 call rank _mt[203] this[289622]))
                              unknown call_tmp[921879] "expr temp" "maybe param" "maybe type" "temp"
                              (921882 'move' call_tmp[921879](290094 call - call_tmp[921874] 1))
                              (290099 'move' tmp[290078](290097 call chpl_compute_high_param_loop_bound 0 call_tmp[921879]))
                              unknown tmp[290079] "maybe param" "temp"
                              (290102 'move' tmp[290079] 1)
                              ParamForLoop[290104]
                              { i[290048] tmp[290077] tmp[290078] tmp[290079]
                                unknown call_tmp[921884] "expr temp" "maybe param" "maybe type" "temp"
                                (921887 'move' call_tmp[921884](290060 call locBlock2[290039] i[290048]))
                                unknown call_tmp[921889] "expr temp" "maybe param" "maybe type" "temp"
                                (921892 'move' call_tmp[921889](290063 call followMe[1465227] i[290048]))
                                unknown call_tmp[921896] "expr temp" "maybe param" "maybe type" "temp"
                                (921899 'move' call_tmp[921896](290065 call lowBound _mt[203] call_tmp[921889]))
                                unknown call_tmp[921901] "expr temp" "maybe param" "maybe type" "temp"
                                (921904 'move' call_tmp[921901](290069 call followMe[1465227] i[290048]))
                                unknown call_tmp[921908] "expr temp" "maybe param" "maybe type" "temp"
                                (921911 'move' call_tmp[921908](290071 call highBound _mt[203] call_tmp[921901]))
                                unknown call_tmp[921913] "expr temp" "maybe param" "maybe type" "temp"
                                (921916 'move' call_tmp[921913](290074 call chpl_build_bounded_range call_tmp[921896] call_tmp[921908]))
                                (290057 call = call_tmp[921884] call_tmp[921913])
                                (567080 'end of statement' locBlock2[290039] i[290048] followMe[1465227] i[290048] followMe[1465227] i[290048])
                              }
                              label _unused_continueLabel[290081]
                              label _breakLabel[290080]
                            }
                            unknown call_tmp[921920] "expr temp" "maybe param" "maybe type" "temp"
                            (921923 'move' call_tmp[921920](455548 call rank _mt[203] this[289622]))
                            unknown call_tmp[921927] "expr temp" "maybe param" "maybe type" "temp"
                            (921930 'move' call_tmp[921927](455553 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921932] "expr temp" "maybe param" "maybe type" "temp"
                            (921935 'move' call_tmp[921932](290119 call range[240](?) call_tmp[921927]))
                            unknown call_tmp[921937] "maybe param" "maybe type" "temp"
                            (921940 'move' call_tmp[921937](290115 call * call_tmp[921920] call_tmp[921932]))
                            unknown followMe2[290114] "dead at end of block" "insert auto destroy"
                            (652934 'init var' followMe2[290114] locBlock2[290039] call_tmp[921937])
                            (290123 'end of statement')
                            unknown call_tmp[921942] "expr temp" "maybe param" "maybe type" "temp"
                            (921945 'move' call_tmp[921942](290137 call locBlock2[290039] parDim2[1465233]))
                            unknown call_tmp[921949] "maybe param" "maybe type" "temp"
                            (921952 'move' call_tmp[921949](290139 call _low _mt[203] call_tmp[921942]))
                            const low[290135] "dead at end of block" "const" "insert auto destroy"
                            (652936 'init var' low[290135] call_tmp[921949])
                            unknown call_tmp[921954] "expr temp" "maybe param" "maybe type" "temp"
                            (921957 'move' call_tmp[921954](290128 call locBlock2[290039] parDim2[1465233]))
                            unknown call_tmp[921961] "maybe param" "maybe type" "temp"
                            (921964 'move' call_tmp[921961](290130 call _high _mt[203] call_tmp[921954]))
                            const high[290126] "dead at end of block" "const" "insert auto destroy"
                            (652938 'init var' high[290126] call_tmp[921961])
                            (290143 'end of statement')
                            unknown call_tmp[921966] "expr temp" "maybe param" "maybe type" "temp"
                            (921969 'move' call_tmp[921966](290152 call locBlock2[290039] parDim2[1465233]))
                            unknown call_tmp[921975] "expr temp" "maybe param" "maybe type" "temp"
                            (921978 'move' call_tmp[921975](455564 call chpl_integralIdxType _mt[203] this[289622]))
                            unknown call_tmp[921980] "expr temp" "maybe param" "maybe type" "temp"
                            (921983 'move' call_tmp[921980](290157 call(290154 call (partial) sizeAs _mt[203] call_tmp[921966]) call_tmp[921975]))
                            unknown call_tmp[921985] "maybe param" "maybe type" "temp"
                            (921988 'move' call_tmp[921985](290150 call _computeBlock call_tmp[921980] numChunks2[1465230] chunk2[290029] high[290126] low[290135] low[290135]))
                            const tmp[290164] "dead at end of block" "const" "insert auto destroy" "temp"
                            (652940 'init var' tmp[290164] call_tmp[921985])
                            (290171 call _check_tuple_var_decl tmp[290164] 2)
                            (567089 'end of statement')
                            unknown call_tmp[921990] "maybe param" "maybe type" "temp"
                            (921993 'move' call_tmp[921990](290165 call tmp[290164] 0))
                            const lo[290145] "dead at end of block" "const" "insert auto destroy"
                            (652942 'init var' lo[290145] call_tmp[921990])
                            unknown call_tmp[921995] "maybe param" "maybe type" "temp"
                            (921998 'move' call_tmp[921995](290168 call tmp[290164] 1))
                            const hi[290147] "dead at end of block" "const" "insert auto destroy"
                            (652944 'init var' hi[290147] call_tmp[921995])
                            (290176 'end of statement' locBlock2[290039] parDim2[1465233])
                            unknown call_tmp[922000] "expr temp" "maybe param" "maybe type" "temp"
                            (922003 'move' call_tmp[922000](290180 call followMe2[290114] parDim2[1465233]))
                            unknown call_tmp[922005] "expr temp" "maybe param" "maybe type" "temp"
                            (922008 'move' call_tmp[922005](290184 call chpl_build_bounded_range lo[290145] hi[290147]))
                            (290177 call = call_tmp[922000] call_tmp[922005])
                            (567090 'end of statement' followMe2[290114] parDim2[1465233] lo[290145] hi[290147])
                            unknown call_tmp[922010] "expr temp" "maybe param" "maybe type" "temp"
                            (922013 'move' call_tmp[922010](290205 call _cond_test debugDataParNuma[287677]))
                            if call_tmp[922010]
                            {
                              (290188 call chpl_debug_writeln "### chunk = " chunk[1465224] "  chunk2 = " chunk2[290029] "  " "followMe = " followMe[1465227] "  followMe2 = " followMe2[290114])
                              (567095 'end of statement' chunk[1465224] chunk2[290029] followMe[1465227] followMe2[290114])
                            }
                            unknown yret[629344] "YVV" "temp"
                            (629347 'move' yret[629344](629346 'deref' followMe2[290114]))
                            (290209 yield yret[629344])
                            (567100 'end of statement' followMe2[290114])
                          }
                          (392407 call _downEndCount _coforallCount[392404] nil[32])
                          (1465222 return _void[46])
                        }
                        {
                        }
                        label _continueLabel[392417]
                        _indexOfInterest[392412]
                        _iterator[392413]
                      }
                      label _breakLabel[392418]
                      Defer
                      {
                        {
                          (392448 call _endCountFree _coforallCount[392404])
                        }
                      }
                      (392453 call _waitEndCount _coforallCount[392404] 1)
                    }
                  }
                }
                (290219 'elided on block' 0 tmp[290215])
              }
              (393267 call _downEndCount _coforallCount[393264] nil[32])
              (1465301 return _void[46])
            }
            {
            }
            label _continueLabel[393277]
            _indexOfInterest[393272]
            _iterator[393273]
          }
          label _breakLabel[393278]
          Defer
          {
            {
              (393308 call _endCountFree _coforallCount[393264])
            }
          }
          (393313 call _waitEndCount _coforallCount[393264] 1)
        }
      }
    }
    {
      unknown call_tmp[922015] "expr temp" "maybe param" "maybe type" "temp"
      (922018 'move' call_tmp[922015](290233 call _cond_test debugDefaultDist[287662]))
      if call_tmp[922015]
      {
        (290227 call chpl_debug_writeln "*** In domain/array leader code:")
      }
      const numTasks[290239] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[704434] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704435] "maybe param" "temp"
      unknown call_tmp[922020] "expr temp" "maybe param" "maybe type" "temp"
      (922023 'move' call_tmp[922020](290240 call == tasksPerLocale[289629] 0))
      (704440 'move' tmp[704435](704438 call _cond_test call_tmp[922020]))
      if tmp[704435]
      {
        unknown tmp[704442] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[922025] "expr temp" "maybe param" "maybe type" "temp"
        (922028 'move' call_tmp[922025](409645 call here[135591]))
        (704444 'move' tmp[704442](290245 call maxTaskPar _mt[203] call_tmp[922025]))
        (704449 'move' tmp[704434](704446 '_paramFoldLogical' tmp[704435] tmp[704442]))
      }
      {
        (704454 'move' tmp[704434](704451 '_paramFoldLogical' tmp[704435] tasksPerLocale[289629]))
      }
      (652946 'init var' numTasks[290239] tmp[704434])
      (290253 'end of statement')
      unknown call_tmp[922032] "expr temp" "maybe param" "maybe type" "temp"
      (922035 'move' call_tmp[922032](290264 call _cond_test debugDefaultDist[287662]))
      if call_tmp[922032]
      {
        (290255 call chpl_debug_writeln "    numTasks=" numTasks[290239] " (" ignoreRunning[289633] "), minIndicesPerTask=" minIndicesPerTask[289637])
        (567109 'end of statement' numTasks[290239])
      }
      const tmp[290289] "dead at end of block" "const" "insert auto destroy" "temp"
      unknown tmp[704461] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704462] "maybe param" "temp"
      unknown call_tmp[922037] "expr temp" "maybe param" "maybe type" "temp"
      (922040 'move' call_tmp[922037](290274 'task_get_serial'))
      (704467 'move' tmp[704462](704465 call _cond_test call_tmp[922037]))
      if tmp[704462]
      {
        unknown tmp[704469] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (704471 'move' tmp[704469](290278 call _build_tuple 1 0))
        (704476 'move' tmp[704461](704473 '_paramFoldLogical' tmp[704462] tmp[704469]))
      }
      {
        unknown tmp[704478] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[922044] "expr temp" "maybe param" "maybe type" "temp"
        (922047 'move' call_tmp[922044](455594 call ranges _mt[203] this[289622]))
        (704480 'move' tmp[704478](290281 call _computeChunkStuff numTasks[290239] ignoreRunning[289633] minIndicesPerTask[289637] call_tmp[922044]))
        (704485 'move' tmp[704461](704482 '_paramFoldLogical' tmp[704462] tmp[704478]))
      }
      (652948 'init var' tmp[290289] tmp[704461])
      (290296 call _check_tuple_var_decl tmp[290289] 2)
      (567111 'end of statement')
      unknown call_tmp[922049] "maybe param" "maybe type" "temp"
      (922052 'move' call_tmp[922049](290290 call tmp[290289] 0))
      const numChunks[290270] "dead at end of block" "const" "insert auto destroy"
      (652950 'init var' numChunks[290270] call_tmp[922049])
      unknown call_tmp[922054] "maybe param" "maybe type" "temp"
      (922057 'move' call_tmp[922054](290293 call tmp[290289] 1))
      const parDim[290272] "dead at end of block" "const" "insert auto destroy"
      (652952 'init var' parDim[290272] call_tmp[922054])
      (290301 'end of statement')
      unknown call_tmp[922059] "expr temp" "maybe param" "maybe type" "temp"
      (922062 'move' call_tmp[922059](290321 call _cond_test debugDefaultDist[287662]))
      if call_tmp[922059]
      {
        unknown call_tmp[922066] "expr temp" "maybe param" "maybe type" "temp"
        (922069 'move' call_tmp[922066](290312 call(455602 call (partial) ranges _mt[203] this[289622]) parDim[290272]))
        unknown call_tmp[922073] "expr temp" "maybe param" "maybe type" "temp"
        (922076 'move' call_tmp[922073](290317 call(290314 call (partial) sizeAs _mt[203] call_tmp[922066]) uint(64)[86]))
        (290303 call chpl_debug_writeln "    numChunks=" numChunks[290270] " parDim=" parDim[290272] " ranges(" parDim[290272] ").size=" call_tmp[922073])
        (567112 'end of statement' numChunks[290270] parDim[290272])
      }
      unknown call_tmp[922078] "expr temp" "maybe param" "maybe type" "temp"
      (922081 'move' call_tmp[922078](290346 call _cond_test debugDataPar[287672]))
      if call_tmp[922078]
      {
        unknown call_tmp[922085] "expr temp" "maybe param" "maybe type" "temp"
        (922088 'move' call_tmp[922085](455614 call ranges _mt[203] this[289622]))
        (290328 call chpl_debug_writeln "### numTasksPerLoc = " numTasks[290239] "\n" "### ignoreRunning = " ignoreRunning[289633] "\n" "### minIndicesPerTask = " minIndicesPerTask[289637] "\n" "### numChunks = " numChunks[290270] " (parDim = " parDim[290272] ")\n" "### nranges = " call_tmp[922085])
        (567115 'end of statement' numTasks[290239] numChunks[290270] parDim[290272])
      }
      unknown locBlock[290351] "dead at end of block" "insert auto destroy"
      unknown call_tmp[922092] "expr temp" "maybe param" "maybe type" "temp"
      (922095 'move' call_tmp[922092](455620 call rank _mt[203] this[289622]))
      unknown call_tmp[922099] "expr temp" "maybe param" "maybe type" "temp"
      (922102 'move' call_tmp[922099](455625 call chpl_integralIdxType _mt[203] this[289622]))
      unknown call_tmp[922104] "expr temp" "maybe param" "maybe type" "temp"
      (922107 'move' call_tmp[922104](290356 call range[240](?) call_tmp[922099]))
      unknown call_tmp[922109] "expr temp" "maybe param" "maybe type" "temp"
      (922112 'move' call_tmp[922109](290352 call * call_tmp[922092] call_tmp[922104]))
      (652954 'default init var' locBlock[290351] call_tmp[922109])
      (290359 'end of statement')
      {
        unknown i[290360] "dead at end of block" "index var" "insert auto destroy"
        (652956 'init var' i[290360] 0)
        (567119 'end of statement')
        unknown tmp[290390] "maybe param" "temp"
        unknown call_tmp[922116] "expr temp" "maybe param" "maybe type" "temp"
        (922119 'move' call_tmp[922116](455630 call rank _mt[203] this[289622]))
        unknown call_tmp[922121] "expr temp" "maybe param" "maybe type" "temp"
        (922124 'move' call_tmp[922121](290363 call - call_tmp[922116] 1))
        (290402 'move' tmp[290390](290400 call chpl_compute_low_param_loop_bound 0 call_tmp[922121]))
        unknown tmp[290391] "maybe param" "temp"
        unknown call_tmp[922128] "expr temp" "maybe param" "maybe type" "temp"
        (922131 'move' call_tmp[922128](455649 call rank _mt[203] this[289622]))
        unknown call_tmp[922133] "expr temp" "maybe param" "maybe type" "temp"
        (922136 'move' call_tmp[922133](290407 call - call_tmp[922128] 1))
        (290412 'move' tmp[290391](290410 call chpl_compute_high_param_loop_bound 0 call_tmp[922133]))
        unknown tmp[290392] "maybe param" "temp"
        (290415 'move' tmp[290392] 1)
        ParamForLoop[290417]
        { i[290360] tmp[290390] tmp[290391] tmp[290392]
          unknown call_tmp[922138] "expr temp" "maybe param" "maybe type" "temp"
          (922141 'move' call_tmp[922138](290372 call locBlock[290351] i[290360]))
          unknown call_tmp[922143] "expr temp" "maybe param" "maybe type" "temp"
          (922146 'move' call_tmp[922143](290377 call offset[289648] i[290360]))
          unknown call_tmp[922148] "expr temp" "maybe param" "maybe type" "temp"
          (922151 'move' call_tmp[922148](290379 call chpl_build_low_bounded_range call_tmp[922143]))
          unknown call_tmp[922155] "expr temp" "maybe param" "maybe type" "temp"
          (922158 'move' call_tmp[922155](290382 call(455639 call (partial) ranges _mt[203] this[289622]) i[290360]))
          unknown call_tmp[922164] "expr temp" "maybe param" "maybe type" "temp"
          (922167 'move' call_tmp[922164](455644 call chpl_integralIdxType _mt[203] this[289622]))
          unknown call_tmp[922169] "expr temp" "maybe param" "maybe type" "temp"
          (922172 'move' call_tmp[922169](290387 call(290384 call (partial) sizeAs _mt[203] call_tmp[922155]) call_tmp[922164]))
          unknown call_tmp[922174] "expr temp" "maybe param" "maybe type" "temp"
          (922177 'move' call_tmp[922174](290374 call # call_tmp[922148] call_tmp[922169]))
          (290369 call = call_tmp[922138] call_tmp[922174])
          (567120 'end of statement' locBlock[290351] i[290360])
        }
        label _unused_continueLabel[290394]
        label _breakLabel[290393]
      }
      unknown call_tmp[922179] "expr temp" "maybe param" "maybe type" "temp"
      (922182 'move' call_tmp[922179](290434 call _cond_test debugDefaultDist[287662]))
      if call_tmp[922179]
      {
        (290427 call chpl_debug_writeln "*** DI: locBlock = " locBlock[290351])
        (567123 'end of statement' locBlock[290351])
      }
      {
        unknown tmpIter[393333] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[922184] "expr temp" "maybe param" "maybe type" "temp"
        (922187 'move' call_tmp[922184](290444 call chpl_build_low_bounded_range 0))
        (393336 'move' tmpIter[393333](290441 call # call_tmp[922184] numChunks[290270]))
        unknown isBounded[393557] "maybe param" "temp"
        (393563 'move' isBounded[393557](393559 call chpl_supportsBoundedCoforall tmpIter[393333] 0))
        if isBounded[393557]
        {
          const _coforallCount[393426] "const" "end count" "temp"
          (393494 'move' _coforallCount[393426](393491 call _endCountAlloc 1))
          unknown numTasks[393427] "temp"
          (393478 'move' numTasks[393427](393474 call chpl_boundedCoforallSize tmpIter[393333] 0))
          (393469 call _upEndCount _coforallCount[393426] 1 numTasks[393427])
          (567125 'end of statement')
          (393466 call chpl_resetTaskSpawn numTasks[393427])
          (567126 'end of statement')
          unknown _indexOfInterest[393434] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[393435] "expr temp" "temp"
          (393444 'move' _iterator[393435](393442 call _getIterator tmpIter[393333]))
          Defer
          {
            {
              (393459 call _freeIterator _iterator[393435])
            }
          }
          { scopeless type
            (393449 'move' _indexOfInterest[393434](393446 call iteratorIndex _iterator[393435]))
          }
          ForLoop[393436]
          {
            unknown chunk[393340] "coforall index var" "index var" "insert auto destroy"
            (567128 'end of statement')
            (393454 'move' chunk[393340] _indexOfInterest[393434])
            (567129 'end of statement' chunk[393340])
            (1465320 call coforall_fn[1465318] numChunks[290270] parDim[290272] locBlock[290351])
            function coforall_fn[1465318](arg numChunks[1465325], arg parDim[1465328], arg locBlock[1465331]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
            {
              {
                unknown call_tmp[922191] "expr temp" "maybe param" "maybe type" "temp"
                (922194 'move' call_tmp[922191](467058 call rank _mt[203] this[289622]))
                unknown call_tmp[922198] "expr temp" "maybe param" "maybe type" "temp"
                (922201 'move' call_tmp[922198](467063 call chpl_integralIdxType _mt[203] this[289622]))
                unknown call_tmp[922203] "expr temp" "maybe param" "maybe type" "temp"
                (922206 'move' call_tmp[922203](393350 call range[240](?) call_tmp[922198]))
                unknown call_tmp[922208] "maybe param" "maybe type" "temp"
                (922211 'move' call_tmp[922208](393347 call * call_tmp[922191] call_tmp[922203]))
                unknown followMe[393344] "dead at end of block" "insert auto destroy"
                (652958 'init var' followMe[393344] locBlock[1465331] call_tmp[922208])
                (393353 'end of statement')
                unknown call_tmp[922213] "expr temp" "maybe param" "maybe type" "temp"
                (922216 'move' call_tmp[922213](393361 call locBlock[1465331] parDim[1465328]))
                unknown call_tmp[922222] "expr temp" "maybe param" "maybe type" "temp"
                (922225 'move' call_tmp[922222](467069 call chpl_integralIdxType _mt[203] this[289622]))
                unknown call_tmp[922227] "expr temp" "maybe param" "maybe type" "temp"
                (922230 'move' call_tmp[922227](393364 call(393359 call (partial) sizeAs _mt[203] call_tmp[922213]) call_tmp[922222]))
                unknown call_tmp[922232] "expr temp" "maybe param" "maybe type" "temp"
                (922235 'move' call_tmp[922232](393371 call locBlock[1465331] parDim[1465328]))
                unknown call_tmp[922239] "expr temp" "maybe param" "maybe type" "temp"
                (922242 'move' call_tmp[922239](393369 call _high _mt[203] call_tmp[922232]))
                unknown call_tmp[922244] "expr temp" "maybe param" "maybe type" "temp"
                (922247 'move' call_tmp[922244](393377 call locBlock[1465331] parDim[1465328]))
                unknown call_tmp[922251] "expr temp" "maybe param" "maybe type" "temp"
                (922254 'move' call_tmp[922251](393375 call _low _mt[203] call_tmp[922244]))
                unknown call_tmp[922256] "expr temp" "maybe param" "maybe type" "temp"
                (922259 'move' call_tmp[922256](393383 call locBlock[1465331] parDim[1465328]))
                unknown call_tmp[922263] "expr temp" "maybe param" "maybe type" "temp"
                (922266 'move' call_tmp[922263](393381 call _low _mt[203] call_tmp[922256]))
                unknown call_tmp[922268] "maybe param" "maybe type" "temp"
                (922271 'move' call_tmp[922268](393357 call _computeBlock call_tmp[922227] numChunks[1465325] chunk[393340] call_tmp[922239] call_tmp[922251] call_tmp[922263]))
                const tmp[393355] "dead at end of block" "const" "insert auto destroy" "temp"
                (652960 'init var' tmp[393355] call_tmp[922268])
                (393388 call _check_tuple_var_decl tmp[393355] 2)
                (567132 'end of statement')
                unknown call_tmp[922273] "maybe param" "maybe type" "temp"
                (922276 'move' call_tmp[922273](393393 call tmp[393355] 0))
                const lo[393391] "dead at end of block" "const" "insert auto destroy"
                (652962 'init var' lo[393391] call_tmp[922273])
                unknown call_tmp[922278] "maybe param" "maybe type" "temp"
                (922281 'move' call_tmp[922278](393398 call tmp[393355] 1))
                const hi[393396] "dead at end of block" "const" "insert auto destroy"
                (652964 'init var' hi[393396] call_tmp[922278])
                (393401 'end of statement' locBlock[1465331])
                unknown call_tmp[922283] "expr temp" "maybe param" "maybe type" "temp"
                (922286 'move' call_tmp[922283](393405 call followMe[393344] parDim[1465328]))
                unknown call_tmp[922288] "expr temp" "maybe param" "maybe type" "temp"
                (922291 'move' call_tmp[922288](393408 call chpl_build_bounded_range lo[393391] hi[393396]))
                (393403 call = call_tmp[922283] call_tmp[922288])
                (567133 'end of statement' followMe[393344] parDim[1465328] lo[393391] hi[393396])
                unknown call_tmp[922293] "expr temp" "maybe param" "maybe type" "temp"
                (922296 'move' call_tmp[922293](393412 call _cond_test debugDefaultDist[287662]))
                if call_tmp[922293]
                {
                  (393417 call chpl_debug_writeln "*** DI[" chunk[393340] "]: followMe = " followMe[393344])
                  (567138 'end of statement' chunk[393340] followMe[393344])
                }
                unknown yret[629350] "YVV" "temp"
                (629353 'move' yret[629350](629352 'deref' followMe[393344]))
                (393423 yield yret[629350])
                (567141 'end of statement' followMe[393344])
              }
              (393429 call _downEndCount _coforallCount[393426] nil[32])
              (1465323 return _void[46])
            }
            {
            }
            label _continueLabel[393439]
            _indexOfInterest[393434]
            _iterator[393435]
          }
          label _breakLabel[393440]
          Defer
          {
            {
              (393481 call _endCountFree _coforallCount[393426])
            }
          }
          (393486 call _waitEndCount _coforallCount[393426] 1 numTasks[393427])
        }
        {
          const _coforallCount[393498] "const" "end count" "temp"
          (393554 'move' _coforallCount[393498](393551 call _endCountAlloc 1))
          unknown _indexOfInterest[393506] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[393507] "expr temp" "temp"
          (393516 'move' _iterator[393507](393514 call _getIterator tmpIter[393333]))
          Defer
          {
            {
              (393531 call _freeIterator _iterator[393507])
            }
          }
          { scopeless type
            (393521 'move' _indexOfInterest[393506](393518 call iteratorIndex _iterator[393507]))
          }
          ForLoop[393508]
          {
            unknown chunk[290439] "coforall index var" "index var" "insert auto destroy"
            (567147 'end of statement')
            (393526 'move' chunk[290439] _indexOfInterest[393506])
            (567148 'end of statement' chunk[290439])
            (393538 call _upEndCount _coforallCount[393498] 1)
            (567150 'end of statement')
            (1465336 call coforall_fn[1465334] numChunks[290270] parDim[290272] locBlock[290351])
            function coforall_fn[1465334](arg numChunks[1465341], arg parDim[1465344], arg locBlock[1465347]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
            {
              {
                unknown call_tmp[922300] "expr temp" "maybe param" "maybe type" "temp"
                (922303 'move' call_tmp[922300](455657 call rank _mt[203] this[289622]))
                unknown call_tmp[922307] "expr temp" "maybe param" "maybe type" "temp"
                (922310 'move' call_tmp[922307](455662 call chpl_integralIdxType _mt[203] this[289622]))
                unknown call_tmp[922312] "expr temp" "maybe param" "maybe type" "temp"
                (922315 'move' call_tmp[922312](290454 call range[240](?) call_tmp[922307]))
                unknown call_tmp[922317] "maybe param" "maybe type" "temp"
                (922320 'move' call_tmp[922317](290450 call * call_tmp[922300] call_tmp[922312]))
                unknown followMe[290449] "dead at end of block" "insert auto destroy"
                (652966 'init var' followMe[290449] locBlock[1465347] call_tmp[922317])
                (290458 'end of statement')
                unknown call_tmp[922322] "expr temp" "maybe param" "maybe type" "temp"
                (922325 'move' call_tmp[922322](290467 call locBlock[1465347] parDim[1465344]))
                unknown call_tmp[922331] "expr temp" "maybe param" "maybe type" "temp"
                (922334 'move' call_tmp[922331](455669 call chpl_integralIdxType _mt[203] this[289622]))
                unknown call_tmp[922336] "expr temp" "maybe param" "maybe type" "temp"
                (922339 'move' call_tmp[922336](290472 call(290469 call (partial) sizeAs _mt[203] call_tmp[922322]) call_tmp[922331]))
                unknown call_tmp[922341] "expr temp" "maybe param" "maybe type" "temp"
                (922344 'move' call_tmp[922341](290477 call locBlock[1465347] parDim[1465344]))
                unknown call_tmp[922348] "expr temp" "maybe param" "maybe type" "temp"
                (922351 'move' call_tmp[922348](290479 call _high _mt[203] call_tmp[922341]))
                unknown call_tmp[922353] "expr temp" "maybe param" "maybe type" "temp"
                (922356 'move' call_tmp[922353](290483 call locBlock[1465347] parDim[1465344]))
                unknown call_tmp[922360] "expr temp" "maybe param" "maybe type" "temp"
                (922363 'move' call_tmp[922360](290485 call _low _mt[203] call_tmp[922353]))
                unknown call_tmp[922365] "expr temp" "maybe param" "maybe type" "temp"
                (922368 'move' call_tmp[922365](290489 call locBlock[1465347] parDim[1465344]))
                unknown call_tmp[922372] "expr temp" "maybe param" "maybe type" "temp"
                (922375 'move' call_tmp[922372](290491 call _low _mt[203] call_tmp[922365]))
                unknown call_tmp[922377] "maybe param" "maybe type" "temp"
                (922380 'move' call_tmp[922377](290465 call _computeBlock call_tmp[922336] numChunks[1465341] chunk[290439] call_tmp[922348] call_tmp[922360] call_tmp[922372]))
                const tmp[290494] "dead at end of block" "const" "insert auto destroy" "temp"
                (652968 'init var' tmp[290494] call_tmp[922377])
                (290501 call _check_tuple_var_decl tmp[290494] 2)
                (567152 'end of statement')
                unknown call_tmp[922382] "maybe param" "maybe type" "temp"
                (922385 'move' call_tmp[922382](290495 call tmp[290494] 0))
                const lo[290460] "dead at end of block" "const" "insert auto destroy"
                (652970 'init var' lo[290460] call_tmp[922382])
                unknown call_tmp[922387] "maybe param" "maybe type" "temp"
                (922390 'move' call_tmp[922387](290498 call tmp[290494] 1))
                const hi[290462] "dead at end of block" "const" "insert auto destroy"
                (652972 'init var' hi[290462] call_tmp[922387])
                (290506 'end of statement' locBlock[1465347])
                unknown call_tmp[922392] "expr temp" "maybe param" "maybe type" "temp"
                (922395 'move' call_tmp[922392](290510 call followMe[290449] parDim[1465344]))
                unknown call_tmp[922397] "expr temp" "maybe param" "maybe type" "temp"
                (922400 'move' call_tmp[922397](290514 call chpl_build_bounded_range lo[290460] hi[290462]))
                (290507 call = call_tmp[922392] call_tmp[922397])
                (567153 'end of statement' followMe[290449] parDim[1465344] lo[290460] hi[290462])
                unknown call_tmp[922402] "expr temp" "maybe param" "maybe type" "temp"
                (922405 'move' call_tmp[922402](290526 call _cond_test debugDefaultDist[287662]))
                if call_tmp[922402]
                {
                  (290517 call chpl_debug_writeln "*** DI[" chunk[290439] "]: followMe = " followMe[290449])
                  (567158 'end of statement' chunk[290439] followMe[290449])
                }
                unknown yret[629356] "YVV" "temp"
                (629359 'move' yret[629356](629358 'deref' followMe[290449]))
                (290531 yield yret[629356])
                (567161 'end of statement' followMe[290449])
              }
              (393501 call _downEndCount _coforallCount[393498] nil[32])
              (1465339 return _void[46])
            }
            {
            }
            label _continueLabel[393511]
            _indexOfInterest[393506]
            _iterator[393507]
          }
          label _breakLabel[393512]
          Defer
          {
            {
              (393542 call _endCountFree _coforallCount[393498])
            }
          }
          (393547 call _waitEndCount _coforallCount[393498] 1)
        }
      }
    }
    (629324 return ret[629322])
  }
  where {
    (289653 call == tag[289625] leader[52138])
  }
  function DefaultRectangularDom[292740](?).these[290548](arg _mt[290581]:_MT[201], arg this[290550]:DefaultRectangularDom[292740](?), param arg tag[290553]:iterKind[52144], arg followThis[290556]:_any[141](?), arg tasksPerLocale[290559] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[290563] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[290567] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592], arg offset[290578] :
  unknown call_tmp[1002816] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[922409] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629364] "RVV" "temp"
    unknown call_tmp[922435] "expr temp" "maybe param" "maybe type" "temp"
    (922438 'move' call_tmp[922435](290626 call size _mt[203] followThis[290556]))
    unknown call_tmp[922442] "expr temp" "maybe param" "maybe type" "temp"
    (922445 'move' call_tmp[922442](290630 call rank _mt[203] this[290550]))
    unknown call_tmp[922447] "expr temp" "maybe param" "maybe type" "temp"
    (922450 'move' call_tmp[922447](290623 call != call_tmp[922435] call_tmp[922442]))
    unknown call_tmp[922452] "expr temp" "maybe param" "maybe type" "temp"
    (922455 'move' call_tmp[922452](290633 call _cond_test call_tmp[922447]))
    if call_tmp[922452]
    {
      unknown call_tmp[922459] "expr temp" "maybe param" "maybe type" "temp"
      (922462 'move' call_tmp[922459](290605 call size _mt[203] followThis[290556]))
      unknown call_tmp[922464] "expr temp" "maybe param" "maybe type" "temp"
      (922467 'move' call_tmp[922464](290602 call : call_tmp[922459] string[244]))
      unknown call_tmp[922469] "expr temp" "maybe param" "maybe type" "temp"
      (922472 'move' call_tmp[922469](290599 call + "rank mismatch in zippered iteration (can't zip a " call_tmp[922464]))
      unknown call_tmp[922474] "expr temp" "maybe param" "maybe type" "temp"
      (922477 'move' call_tmp[922474](290597 call + call_tmp[922469] "D expression with a "))
      unknown call_tmp[922481] "expr temp" "maybe param" "maybe type" "temp"
      (922484 'move' call_tmp[922481](290615 call rank _mt[203] this[290550]))
      unknown call_tmp[922486] "expr temp" "maybe param" "maybe type" "temp"
      (922489 'move' call_tmp[922486](290612 call : call_tmp[922481] string[244]))
      unknown call_tmp[922491] "expr temp" "maybe param" "maybe type" "temp"
      (922494 'move' call_tmp[922491](290595 call + call_tmp[922474] call_tmp[922486]))
      unknown call_tmp[922496] "expr temp" "maybe param" "maybe type" "temp"
      (922499 'move' call_tmp[922496](290593 call + call_tmp[922491] "D domain)"))
      (290592 call compilerError call_tmp[922496])
    }
    unknown call_tmp[922501] "expr temp" "maybe param" "maybe type" "temp"
    (922504 'move' call_tmp[922501](290646 call _cond_test chpl__testParFlag[106873]))
    if call_tmp[922501]
    {
      (290639 call chpl__testPar "default rectangular domain follower invoked on " followThis[290556])
    }
    unknown call_tmp[922506] "expr temp" "maybe param" "maybe type" "temp"
    (922509 'move' call_tmp[922506](290659 call _cond_test debugDefaultDist[287662]))
    if call_tmp[922506]
    {
      (290652 call chpl_debug_writeln "In domain follower code: Following " followThis[290556])
    }
    unknown call_tmp[922513] "expr temp" "maybe param" "maybe type" "temp"
    (922516 'move' call_tmp[922513](290669 call strides _mt[203] this[290550]))
    unknown call_tmp[922518] "expr temp" "maybe param" "maybe type" "temp"
    (922521 'move' call_tmp[922518](290673 call chpl_strideUnion followThis[290556]))
    unknown call_tmp[922523] "maybe param" "maybe type" "temp"
    (922526 'move' call_tmp[922523](290667 call chpl_strideProduct call_tmp[922513] call_tmp[922518]))
    unknown newStrides[290665] "dead at end of block" "param"
    (652974 'init var' newStrides[290665] call_tmp[922523])
    (290676 'end of statement')
    unknown block[290678] "dead at end of block" "insert auto destroy"
    unknown call_tmp[922530] "expr temp" "maybe param" "maybe type" "temp"
    (922533 'move' call_tmp[922530](455715 call rank _mt[203] this[290550]))
    unknown call_tmp[922537] "expr temp" "maybe param" "maybe type" "temp"
    (922540 'move' call_tmp[922537](455720 call chpl_integralIdxType _mt[203] this[290550]))
    unknown call_tmp[922542] "expr temp" "maybe param" "maybe type" "temp"
    (922545 'move' call_tmp[922542](290683 call range[240](?)(idxType = call_tmp[922537])(strides = newStrides[290665])))
    unknown call_tmp[922547] "expr temp" "maybe param" "maybe type" "temp"
    (922550 'move' call_tmp[922547](290679 call * call_tmp[922530] call_tmp[922542]))
    (652976 'default init var' block[290678] call_tmp[922547])
    (290689 'end of statement')
    unknown call_tmp[922552] "expr temp" "maybe param" "maybe type" "temp"
    (922555 'move' call_tmp[922552](290775 call _cond_test 1))
    if call_tmp[922552]
    {
      {
        unknown i[290690] "dead at end of block" "index var" "insert auto destroy"
        (652978 'init var' i[290690] 0)
        (567169 'end of statement')
        unknown tmp[290738] "maybe param" "temp"
        unknown call_tmp[922559] "expr temp" "maybe param" "maybe type" "temp"
        (922562 'move' call_tmp[922559](455726 call rank _mt[203] this[290550]))
        unknown call_tmp[922564] "expr temp" "maybe param" "maybe type" "temp"
        (922567 'move' call_tmp[922564](290693 call - call_tmp[922559] 1))
        (290750 'move' tmp[290738](290748 call chpl_compute_low_param_loop_bound 0 call_tmp[922564]))
        unknown tmp[290739] "maybe param" "temp"
        unknown call_tmp[922571] "expr temp" "maybe param" "maybe type" "temp"
        (922574 'move' call_tmp[922571](455740 call rank _mt[203] this[290550]))
        unknown call_tmp[922576] "expr temp" "maybe param" "maybe type" "temp"
        (922579 'move' call_tmp[922576](290755 call - call_tmp[922571] 1))
        (290760 'move' tmp[290739](290758 call chpl_compute_high_param_loop_bound 0 call_tmp[922576]))
        unknown tmp[290740] "maybe param" "temp"
        (290763 'move' tmp[290740] 1)
        ParamForLoop[290765]
        { i[290690] tmp[290738] tmp[290739] tmp[290740]
          unknown call_tmp[922581] "expr temp" "maybe param" "maybe type" "temp"
          (922584 'move' call_tmp[922581](290720 call followThis[290556] i[290690]))
          unknown call_tmp[922588] "expr temp" "maybe param" "maybe type" "temp"
          (922591 'move' call_tmp[922588](290722 call highBound _mt[203] call_tmp[922581]))
          unknown call_tmp[922595] "expr temp" "maybe param" "maybe type" "temp"
          (922598 'move' call_tmp[922595](290726 call(455734 call (partial) ranges _mt[203] this[290550]) i[290690]))
          unknown call_tmp[922602] "expr temp" "maybe param" "maybe type" "temp"
          (922605 'move' call_tmp[922602](290731 call(290728 call (partial) sizeAs _mt[203] call_tmp[922595]) uint(64)[86]))
          unknown call_tmp[922607] "expr temp" "maybe param" "maybe type" "temp"
          (922610 'move' call_tmp[922607](290717 call >= call_tmp[922588] call_tmp[922602]))
          unknown call_tmp[922612] "expr temp" "maybe param" "maybe type" "temp"
          (922615 'move' call_tmp[922612](290733 call _cond_test call_tmp[922607]))
          if call_tmp[922612]
          {
            unknown call_tmp[922617] "expr temp" "maybe param" "maybe type" "temp"
            (922620 'move' call_tmp[922617](290711 call : i[290690] string[244]))
            unknown call_tmp[922622] "expr temp" "maybe param" "maybe type" "temp"
            (922625 'move' call_tmp[922622](290706 call + "size mismatch in zippered iteration (dimension " call_tmp[922617]))
            unknown call_tmp[922627] "expr temp" "maybe param" "maybe type" "temp"
            (922630 'move' call_tmp[922627](290704 call + call_tmp[922622] ")"))
            (290703 call boundsCheckHalt module=[222] HaltWrappers[518] call_tmp[922627])
            (567170 'end of statement' i[290690])
            (409654 'referenced modules list' HaltWrappers[518])
          }
        }
        label _unused_continueLabel[290742]
        label _breakLabel[290741]
      }
    }
    unknown call_tmp[922634] "expr temp" "maybe param" "maybe type" "temp"
    (922637 'move' call_tmp[922634](291264 call(291261 call (partial) isPosNegOne _mt[203] newStrides[290665])))
    unknown call_tmp[922639] "expr temp" "maybe param" "maybe type" "temp"
    (922642 'move' call_tmp[922639](291258 call ! call_tmp[922634]))
    unknown call_tmp[922644] "expr temp" "maybe param" "maybe type" "temp"
    (922647 'move' call_tmp[922644](291265 call _cond_test call_tmp[922639]))
    if call_tmp[922644]
    {
      unknown strType[290782] "dead at end of block" "insert auto destroy" "type variable"
      unknown call_tmp[922651] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (922654 'move' call_tmp[922651](652983 call chpl_integralIdxType _mt[203] this[290550]))
      (652986 'move' strType[290782](652981 call chpl__signedType call_tmp[922651]))
      (567172 'end of statement')
      {
        unknown i[290787] "dead at end of block" "index var" "insert auto destroy"
        (652988 'init var' i[290787] 0)
        (567173 'end of statement')
        unknown tmp[290983] "maybe param" "temp"
        unknown call_tmp[922658] "expr temp" "maybe param" "maybe type" "temp"
        (922661 'move' call_tmp[922658](455750 call rank _mt[203] this[290550]))
        unknown call_tmp[922663] "expr temp" "maybe param" "maybe type" "temp"
        (922666 'move' call_tmp[922663](290790 call - call_tmp[922658] 1))
        (290995 'move' tmp[290983](290993 call chpl_compute_low_param_loop_bound 0 call_tmp[922663]))
        unknown tmp[290984] "maybe param" "temp"
        unknown call_tmp[922670] "expr temp" "maybe param" "maybe type" "temp"
        (922673 'move' call_tmp[922670](455834 call rank _mt[203] this[290550]))
        unknown call_tmp[922675] "expr temp" "maybe param" "maybe type" "temp"
        (922678 'move' call_tmp[922675](291000 call - call_tmp[922670] 1))
        (291005 'move' tmp[290984](291003 call chpl_compute_high_param_loop_bound 0 call_tmp[922675]))
        unknown tmp[290985] "maybe param" "temp"
        (291008 'move' tmp[290985] 1)
        ParamForLoop[291010]
        { i[290787] tmp[290983] tmp[290984] tmp[290985]
          {
            unknown call_tmp[922682] "expr temp" "maybe param" "maybe type" "temp"
            (922685 'move' call_tmp[922682](290800 call(455755 call (partial) ranges _mt[203] this[290550]) i[290787]))
            unknown call_tmp[922689] "maybe param" "maybe type" "temp"
            (922692 'move' call_tmp[922689](290802 call stride _mt[203] call_tmp[922682]))
            const rStride[290798] "dead at end of block" "const" "insert auto destroy"
            (652990 'init var' rStride[290798] call_tmp[922689])
            (290806 'end of statement')
            unknown call_tmp[922694] "maybe param" "maybe type" "temp"
            (922697 'move' call_tmp[922694](290822 call : rStride[290798] strType[290782]))
            const rSignedStride[290821] "dead at end of block" "const" "insert auto destroy"
            (652992 'init var' rSignedStride[290821] call_tmp[922694])
            unknown call_tmp[922699] "expr temp" "maybe param" "maybe type" "temp"
            (922702 'move' call_tmp[922699](290813 call followThis[290556] i[290787]))
            unknown call_tmp[922706] "expr temp" "maybe param" "maybe type" "temp"
            (922709 'move' call_tmp[922706](290815 call stride _mt[203] call_tmp[922699]))
            unknown call_tmp[922711] "maybe param" "maybe type" "temp"
            (922714 'move' call_tmp[922711](290810 call : call_tmp[922706] strType[290782]))
            const fSignedStride[290809] "dead at end of block" "const" "insert auto destroy"
            (652994 'init var' fSignedStride[290809] call_tmp[922711])
            (290827 'end of statement' i[290787] rStride[290798] strType[290782])
            unknown call_tmp[922718] "expr temp" "maybe param" "maybe type" "temp"
            (922721 'move' call_tmp[922718](290973 call(455828 call (partial) ranges _mt[203] this[290550]) i[290787]))
            unknown call_tmp[922725] "expr temp" "maybe param" "maybe type" "temp"
            (922728 'move' call_tmp[922725](290978 call(290975 call (partial) hasPositiveStride _mt[203] call_tmp[922718])))
            unknown call_tmp[922730] "expr temp" "maybe param" "maybe type" "temp"
            (922733 'move' call_tmp[922730](290979 call _cond_test call_tmp[922725]))
            if call_tmp[922730]
            {
              unknown call_tmp[922737] "expr temp" "maybe param" "maybe type" "temp"
              (922740 'move' call_tmp[922737](455766 call chpl_integralIdxType _mt[203] this[290550]))
              unknown call_tmp[922742] "maybe param" "maybe type" "temp"
              (922745 'move' call_tmp[922742](290831 call : rStride[290798] call_tmp[922737]))
              const riStride[290830] "dead at end of block" "const" "insert auto destroy"
              (652996 'init var' riStride[290830] call_tmp[922742])
              (290836 'end of statement')
              unknown call_tmp[922749] "expr temp" "maybe param" "maybe type" "temp"
              (922752 'move' call_tmp[922749](290873 call(455783 call (partial) ranges _mt[203] this[290550]) i[290787]))
              unknown call_tmp[922756] "expr temp" "maybe param" "maybe type" "temp"
              (922759 'move' call_tmp[922756](290875 call alignedLowAsInt _mt[203] call_tmp[922749]))
              unknown call_tmp[922761] "expr temp" "maybe param" "maybe type" "temp"
              (922764 'move' call_tmp[922761](290881 call followThis[290556] i[290787]))
              unknown call_tmp[922768] "expr temp" "maybe param" "maybe type" "temp"
              (922771 'move' call_tmp[922768](290883 call lowBound _mt[203] call_tmp[922761]))
              unknown call_tmp[922773] "expr temp" "maybe param" "maybe type" "temp"
              (922776 'move' call_tmp[922773](290878 call * call_tmp[922768] riStride[290830]))
              unknown call_tmp[922778] "maybe param" "maybe type" "temp"
              (922781 'move' call_tmp[922778](290870 call + call_tmp[922756] call_tmp[922773]))
              const low[290869] "dead at end of block" "const" "insert auto destroy"
              (652998 'init var' low[290869] call_tmp[922778])
              unknown call_tmp[922785] "expr temp" "maybe param" "maybe type" "temp"
              (922788 'move' call_tmp[922785](290853 call(455774 call (partial) ranges _mt[203] this[290550]) i[290787]))
              unknown call_tmp[922792] "expr temp" "maybe param" "maybe type" "temp"
              (922795 'move' call_tmp[922792](290855 call alignedLowAsInt _mt[203] call_tmp[922785]))
              unknown call_tmp[922797] "expr temp" "maybe param" "maybe type" "temp"
              (922800 'move' call_tmp[922797](290861 call followThis[290556] i[290787]))
              unknown call_tmp[922804] "expr temp" "maybe param" "maybe type" "temp"
              (922807 'move' call_tmp[922804](290863 call highBound _mt[203] call_tmp[922797]))
              unknown call_tmp[922809] "expr temp" "maybe param" "maybe type" "temp"
              (922812 'move' call_tmp[922809](290858 call * call_tmp[922804] riStride[290830]))
              unknown call_tmp[922814] "maybe param" "maybe type" "temp"
              (922817 'move' call_tmp[922814](290850 call + call_tmp[922792] call_tmp[922809]))
              const high[290849] "dead at end of block" "const" "insert auto destroy"
              (653000 'init var' high[290849] call_tmp[922814])
              unknown call_tmp[922819] "expr temp" "maybe param" "maybe type" "temp"
              (922822 'move' call_tmp[922819](290842 call * rSignedStride[290821] fSignedStride[290809]))
              unknown call_tmp[922824] "maybe param" "maybe type" "temp"
              (922827 'move' call_tmp[922824](290840 call : call_tmp[922819] strType[290782]))
              const stride[290839] "dead at end of block" "const" "insert auto destroy"
              (653002 'init var' stride[290839] call_tmp[922824])
              (290888 'end of statement' rStride[290798] i[290787] riStride[290830] i[290787] riStride[290830] rSignedStride[290821] fSignedStride[290809] strType[290782])
              unknown call_tmp[922829] "expr temp" "maybe param" "maybe type" "temp"
              (922832 'move' call_tmp[922829](290890 call block[290678] i[290787]))
              (290895 call(290892 call (partial) chpl_setFields _mt[203] call_tmp[922829]) low[290869] high[290849] stride[290839])
              (567185 'end of statement' block[290678] i[290787] low[290869] high[290849] stride[290839])
            }
            {
              unknown call_tmp[922836] "expr temp" "maybe param" "maybe type" "temp"
              (922839 'move' call_tmp[922836](290904 call - rStride[290798]))
              unknown call_tmp[922843] "expr temp" "maybe param" "maybe type" "temp"
              (922846 'move' call_tmp[922843](455797 call chpl_integralIdxType _mt[203] this[290550]))
              unknown call_tmp[922848] "maybe param" "maybe type" "temp"
              (922851 'move' call_tmp[922848](290902 call : call_tmp[922836] call_tmp[922843]))
              const irStride[290901] "dead at end of block" "const" "insert auto destroy"
              (653004 'init var' irStride[290901] call_tmp[922848])
              (290909 'end of statement')
              unknown call_tmp[922855] "expr temp" "maybe param" "maybe type" "temp"
              (922858 'move' call_tmp[922855](290946 call(455814 call (partial) ranges _mt[203] this[290550]) i[290787]))
              unknown call_tmp[922862] "expr temp" "maybe param" "maybe type" "temp"
              (922865 'move' call_tmp[922862](290948 call alignedHighAsInt _mt[203] call_tmp[922855]))
              unknown call_tmp[922867] "expr temp" "maybe param" "maybe type" "temp"
              (922870 'move' call_tmp[922867](290954 call followThis[290556] i[290787]))
              unknown call_tmp[922874] "expr temp" "maybe param" "maybe type" "temp"
              (922877 'move' call_tmp[922874](290956 call highBound _mt[203] call_tmp[922867]))
              unknown call_tmp[922879] "expr temp" "maybe param" "maybe type" "temp"
              (922882 'move' call_tmp[922879](290951 call * call_tmp[922874] irStride[290901]))
              unknown call_tmp[922884] "maybe param" "maybe type" "temp"
              (922887 'move' call_tmp[922884](290943 call - call_tmp[922862] call_tmp[922879]))
              const low[290942] "dead at end of block" "const" "insert auto destroy"
              (653006 'init var' low[290942] call_tmp[922884])
              unknown call_tmp[922891] "expr temp" "maybe param" "maybe type" "temp"
              (922894 'move' call_tmp[922891](290926 call(455805 call (partial) ranges _mt[203] this[290550]) i[290787]))
              unknown call_tmp[922898] "expr temp" "maybe param" "maybe type" "temp"
              (922901 'move' call_tmp[922898](290928 call alignedHighAsInt _mt[203] call_tmp[922891]))
              unknown call_tmp[922903] "expr temp" "maybe param" "maybe type" "temp"
              (922906 'move' call_tmp[922903](290934 call followThis[290556] i[290787]))
              unknown call_tmp[922910] "expr temp" "maybe param" "maybe type" "temp"
              (922913 'move' call_tmp[922910](290936 call lowBound _mt[203] call_tmp[922903]))
              unknown call_tmp[922915] "expr temp" "maybe param" "maybe type" "temp"
              (922918 'move' call_tmp[922915](290931 call * call_tmp[922910] irStride[290901]))
              unknown call_tmp[922920] "maybe param" "maybe type" "temp"
              (922923 'move' call_tmp[922920](290923 call - call_tmp[922898] call_tmp[922915]))
              const high[290922] "dead at end of block" "const" "insert auto destroy"
              (653008 'init var' high[290922] call_tmp[922920])
              unknown call_tmp[922925] "expr temp" "maybe param" "maybe type" "temp"
              (922928 'move' call_tmp[922925](290915 call * rSignedStride[290821] fSignedStride[290809]))
              unknown call_tmp[922930] "maybe param" "maybe type" "temp"
              (922933 'move' call_tmp[922930](290913 call : call_tmp[922925] strType[290782]))
              const stride[290912] "dead at end of block" "const" "insert auto destroy"
              (653010 'init var' stride[290912] call_tmp[922930])
              (290961 'end of statement' rStride[290798] i[290787] irStride[290901] i[290787] irStride[290901] rSignedStride[290821] fSignedStride[290809] strType[290782])
              unknown call_tmp[922935] "expr temp" "maybe param" "maybe type" "temp"
              (922938 'move' call_tmp[922935](290963 call block[290678] i[290787]))
              (290968 call(290965 call (partial) chpl_setFields _mt[203] call_tmp[922935]) low[290942] high[290922] stride[290912])
              (567199 'end of statement' block[290678] i[290787] low[290942] high[290922] stride[290912])
            }
          }
        }
        label _unused_continueLabel[290987]
        label _breakLabel[290986]
      }
    }
    {
      unknown strType[291021] "dead at end of block" "insert auto destroy" "type variable"
      unknown call_tmp[922944] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (922947 'move' call_tmp[922944](653015 call chpl_integralIdxType _mt[203] this[290550]))
      (653018 'move' strType[291021](653013 call chpl__signedType call_tmp[922944]))
      (567205 'end of statement')
      {
        unknown i[291026] "dead at end of block" "index var" "insert auto destroy"
        (653020 'init var' i[291026] 0)
        (567206 'end of statement')
        unknown tmp[291222] "maybe param" "temp"
        unknown call_tmp[922951] "expr temp" "maybe param" "maybe type" "temp"
        (922954 'move' call_tmp[922951](455843 call rank _mt[203] this[290550]))
        unknown call_tmp[922956] "expr temp" "maybe param" "maybe type" "temp"
        (922959 'move' call_tmp[922956](291029 call - call_tmp[922951] 1))
        (291234 'move' tmp[291222](291232 call chpl_compute_low_param_loop_bound 0 call_tmp[922956]))
        unknown tmp[291223] "maybe param" "temp"
        unknown call_tmp[922963] "expr temp" "maybe param" "maybe type" "temp"
        (922966 'move' call_tmp[922963](455925 call rank _mt[203] this[290550]))
        unknown call_tmp[922968] "expr temp" "maybe param" "maybe type" "temp"
        (922971 'move' call_tmp[922968](291239 call - call_tmp[922963] 1))
        (291244 'move' tmp[291223](291242 call chpl_compute_high_param_loop_bound 0 call_tmp[922968]))
        unknown tmp[291224] "maybe param" "temp"
        (291247 'move' tmp[291224] 1)
        ParamForLoop[291249]
        { i[291026] tmp[291222] tmp[291223] tmp[291224]
          {
            unknown call_tmp[922975] "expr temp" "maybe param" "maybe type" "temp"
            (922978 'move' call_tmp[922975](291039 call(455848 call (partial) ranges _mt[203] this[290550]) i[291026]))
            unknown call_tmp[922982] "maybe param" "maybe type" "temp"
            (922985 'move' call_tmp[922982](291041 call stride _mt[203] call_tmp[922975]))
            unknown rStride[291037] "dead at end of block" "param"
            (653022 'init var' rStride[291037] call_tmp[922982])
            (291045 'end of statement')
            unknown call_tmp[922987] "maybe param" "maybe type" "temp"
            (922990 'move' call_tmp[922987](291061 call : rStride[291037] strType[291021]))
            unknown rSignedStride[291060] "dead at end of block" "param"
            (653024 'init var' rSignedStride[291060] call_tmp[922987])
            unknown call_tmp[922992] "expr temp" "maybe param" "maybe type" "temp"
            (922995 'move' call_tmp[922992](291052 call followThis[290556] i[291026]))
            unknown call_tmp[922999] "expr temp" "maybe param" "maybe type" "temp"
            (923002 'move' call_tmp[922999](291054 call stride _mt[203] call_tmp[922992]))
            unknown call_tmp[923004] "maybe param" "maybe type" "temp"
            (923007 'move' call_tmp[923004](291049 call : call_tmp[922999] strType[291021]))
            unknown fSignedStride[291048] "dead at end of block" "param"
            (653026 'init var' fSignedStride[291048] call_tmp[923004])
            (291066 'end of statement' i[291026] strType[291021])
            unknown call_tmp[923011] "expr temp" "maybe param" "maybe type" "temp"
            (923014 'move' call_tmp[923011](291212 call(455919 call (partial) ranges _mt[203] this[290550]) i[291026]))
            unknown call_tmp[923018] "expr temp" "maybe param" "maybe type" "temp"
            (923021 'move' call_tmp[923018](291217 call(291214 call (partial) hasPositiveStride _mt[203] call_tmp[923011])))
            unknown call_tmp[923023] "expr temp" "maybe param" "maybe type" "temp"
            (923026 'move' call_tmp[923023](291218 call _cond_test call_tmp[923018]))
            if call_tmp[923023]
            {
              unknown call_tmp[923030] "expr temp" "maybe param" "maybe type" "temp"
              (923033 'move' call_tmp[923030](455859 call chpl_integralIdxType _mt[203] this[290550]))
              unknown call_tmp[923035] "maybe param" "maybe type" "temp"
              (923038 'move' call_tmp[923035](291070 call : rStride[291037] call_tmp[923030]))
              unknown riStride[291069] "dead at end of block" "param"
              (653028 'init var' riStride[291069] call_tmp[923035])
              (291075 'end of statement')
              unknown call_tmp[923042] "expr temp" "maybe param" "maybe type" "temp"
              (923045 'move' call_tmp[923042](291102 call(455873 call (partial) ranges _mt[203] this[290550]) i[291026]))
              unknown call_tmp[923049] "expr temp" "maybe param" "maybe type" "temp"
              (923052 'move' call_tmp[923049](291104 call alignedLowAsInt _mt[203] call_tmp[923042]))
              unknown call_tmp[923054] "expr temp" "maybe param" "maybe type" "temp"
              (923057 'move' call_tmp[923054](291110 call followThis[290556] i[291026]))
              unknown call_tmp[923061] "expr temp" "maybe param" "maybe type" "temp"
              (923064 'move' call_tmp[923061](291112 call lowBound _mt[203] call_tmp[923054]))
              unknown call_tmp[923066] "expr temp" "maybe param" "maybe type" "temp"
              (923069 'move' call_tmp[923066](291107 call * call_tmp[923061] riStride[291069]))
              unknown call_tmp[923071] "maybe param" "maybe type" "temp"
              (923074 'move' call_tmp[923071](291099 call + call_tmp[923049] call_tmp[923066]))
              const low[291098] "dead at end of block" "const" "insert auto destroy"
              (653030 'init var' low[291098] call_tmp[923071])
              unknown call_tmp[923078] "expr temp" "maybe param" "maybe type" "temp"
              (923081 'move' call_tmp[923078](291082 call(455864 call (partial) ranges _mt[203] this[290550]) i[291026]))
              unknown call_tmp[923085] "expr temp" "maybe param" "maybe type" "temp"
              (923088 'move' call_tmp[923085](291084 call alignedLowAsInt _mt[203] call_tmp[923078]))
              unknown call_tmp[923090] "expr temp" "maybe param" "maybe type" "temp"
              (923093 'move' call_tmp[923090](291090 call followThis[290556] i[291026]))
              unknown call_tmp[923097] "expr temp" "maybe param" "maybe type" "temp"
              (923100 'move' call_tmp[923097](291092 call highBound _mt[203] call_tmp[923090]))
              unknown call_tmp[923102] "expr temp" "maybe param" "maybe type" "temp"
              (923105 'move' call_tmp[923102](291087 call * call_tmp[923097] riStride[291069]))
              unknown call_tmp[923107] "maybe param" "maybe type" "temp"
              (923110 'move' call_tmp[923107](291079 call + call_tmp[923085] call_tmp[923102]))
              const high[291078] "dead at end of block" "const" "insert auto destroy"
              (653032 'init var' high[291078] call_tmp[923107])
              (291117 'end of statement')
              unknown call_tmp[923112] "expr temp" "maybe param" "maybe type" "temp"
              (923115 'move' call_tmp[923112](291122 call * rSignedStride[291060] fSignedStride[291048]))
              unknown call_tmp[923117] "maybe param" "maybe type" "temp"
              (923120 'move' call_tmp[923117](291120 call : call_tmp[923112] strType[291021]))
              unknown stride[291119] "dead at end of block" "param"
              (653034 'init var' stride[291119] call_tmp[923117])
              (291128 'end of statement' i[291026] strType[291021])
              unknown call_tmp[923122] "expr temp" "maybe param" "maybe type" "temp"
              (923125 'move' call_tmp[923122](291130 call block[290678] i[291026]))
              (291135 call(291132 call (partial) chpl_setFields _mt[203] call_tmp[923122]) low[291098] high[291078])
              (567211 'end of statement' block[290678] i[291026] low[291098] high[291078])
            }
            {
              unknown call_tmp[923129] "expr temp" "maybe param" "maybe type" "temp"
              (923132 'move' call_tmp[923129](291143 call - rStride[291037]))
              unknown call_tmp[923136] "expr temp" "maybe param" "maybe type" "temp"
              (923139 'move' call_tmp[923136](455889 call chpl_integralIdxType _mt[203] this[290550]))
              unknown call_tmp[923141] "maybe param" "maybe type" "temp"
              (923144 'move' call_tmp[923141](291141 call : call_tmp[923129] call_tmp[923136]))
              unknown irStride[291140] "dead at end of block" "param"
              (653036 'init var' irStride[291140] call_tmp[923141])
              (291148 'end of statement')
              unknown call_tmp[923148] "expr temp" "maybe param" "maybe type" "temp"
              (923151 'move' call_tmp[923148](291175 call(455903 call (partial) ranges _mt[203] this[290550]) i[291026]))
              unknown call_tmp[923155] "expr temp" "maybe param" "maybe type" "temp"
              (923158 'move' call_tmp[923155](291177 call alignedHighAsInt _mt[203] call_tmp[923148]))
              unknown call_tmp[923160] "expr temp" "maybe param" "maybe type" "temp"
              (923163 'move' call_tmp[923160](291183 call followThis[290556] i[291026]))
              unknown call_tmp[923167] "expr temp" "maybe param" "maybe type" "temp"
              (923170 'move' call_tmp[923167](291185 call highBound _mt[203] call_tmp[923160]))
              unknown call_tmp[923172] "expr temp" "maybe param" "maybe type" "temp"
              (923175 'move' call_tmp[923172](291180 call * call_tmp[923167] irStride[291140]))
              unknown call_tmp[923177] "maybe param" "maybe type" "temp"
              (923180 'move' call_tmp[923177](291172 call - call_tmp[923155] call_tmp[923172]))
              const low[291171] "dead at end of block" "const" "insert auto destroy"
              (653038 'init var' low[291171] call_tmp[923177])
              unknown call_tmp[923184] "expr temp" "maybe param" "maybe type" "temp"
              (923187 'move' call_tmp[923184](291155 call(455894 call (partial) ranges _mt[203] this[290550]) i[291026]))
              unknown call_tmp[923191] "expr temp" "maybe param" "maybe type" "temp"
              (923194 'move' call_tmp[923191](291157 call alignedHighAsInt _mt[203] call_tmp[923184]))
              unknown call_tmp[923196] "expr temp" "maybe param" "maybe type" "temp"
              (923199 'move' call_tmp[923196](291163 call followThis[290556] i[291026]))
              unknown call_tmp[923203] "expr temp" "maybe param" "maybe type" "temp"
              (923206 'move' call_tmp[923203](291165 call lowBound _mt[203] call_tmp[923196]))
              unknown call_tmp[923208] "expr temp" "maybe param" "maybe type" "temp"
              (923211 'move' call_tmp[923208](291160 call * call_tmp[923203] irStride[291140]))
              unknown call_tmp[923213] "maybe param" "maybe type" "temp"
              (923216 'move' call_tmp[923213](291152 call - call_tmp[923191] call_tmp[923208]))
              const high[291151] "dead at end of block" "const" "insert auto destroy"
              (653040 'init var' high[291151] call_tmp[923213])
              (291190 'end of statement')
              unknown call_tmp[923218] "expr temp" "maybe param" "maybe type" "temp"
              (923221 'move' call_tmp[923218](291195 call * rSignedStride[291060] fSignedStride[291048]))
              unknown call_tmp[923223] "maybe param" "maybe type" "temp"
              (923226 'move' call_tmp[923223](291193 call : call_tmp[923218] strType[291021]))
              unknown stride[291192] "dead at end of block" "param"
              (653042 'init var' stride[291192] call_tmp[923223])
              (291201 'end of statement' i[291026] strType[291021])
              unknown call_tmp[923228] "expr temp" "maybe param" "maybe type" "temp"
              (923231 'move' call_tmp[923228](291203 call block[290678] i[291026]))
              (291208 call(291205 call (partial) chpl_setFields _mt[203] call_tmp[923228]) low[291171] high[291151])
              (567218 'end of statement' block[290678] i[291026] low[291171] high[291151])
            }
          }
        }
        label _unused_continueLabel[291226]
        label _breakLabel[291225]
      }
    }
    unknown call_tmp[923237] "expr temp" "maybe param" "maybe type" "temp"
    (923240 'move' call_tmp[923237](455946 call rank _mt[203] this[290550]))
    unknown call_tmp[923242] "expr temp" "maybe param" "maybe type" "temp"
    (923245 'move' call_tmp[923242](291360 call == call_tmp[923237] 1))
    unknown call_tmp[923247] "expr temp" "maybe param" "maybe type" "temp"
    (923250 'move' call_tmp[923247](291364 call _cond_test call_tmp[923242]))
    if call_tmp[923247]
    {
      {
        unknown _indexOfInterest[291283] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291284] "expr temp" "temp"
        (291292 'move' _iterator[291284](291275 call _getIteratorZip block[290678]))
        Defer
        {
          {
            (291307 call _freeIterator _iterator[291284])
          }
        }
        { scopeless type
          (291297 'move' _indexOfInterest[291283](291294 call iteratorIndex _iterator[291284]))
        }
        ForLoop[291285] order-independent
        {
          unknown i[291270] "index var" "insert auto destroy"
          (567224 'end of statement')
          (291302 'move' i[291270] _indexOfInterest[291283])
          (567225 'end of statement' i[291270])
          {
            unknown yret[629368] "YVV" "temp"
            unknown call_tmp[923254] "expr temp" "maybe param" "maybe type" "temp"
            (923257 'move' call_tmp[923254](291279 call(455930 call (partial) chpl_intToIdx _mt[203] this[290550]) i[291270]))
            (629371 'move' yret[629368](629370 'deref' call_tmp[923254]))
            (291277 yield yret[629368])
            (567227 'end of statement' i[291270])
          }
          label _continueLabel[291288]
          _indexOfInterest[291283]
          _iterator[291284]
        }
        label _breakLabel[291289]
      }
    }
    {
      {
        unknown _indexOfInterest[291328] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291329] "expr temp" "temp"
        unknown call_tmp[923261] "expr temp" "maybe param" "maybe type" "temp"
        (923264 'move' call_tmp[923261](291318 call(455935 call (partial) these_help _mt[203] this[290550]) 0 block[290678]))
        (291338 'move' _iterator[291329](291336 call _getIterator call_tmp[923261]))
        Defer
        {
          {
            (291353 call _freeIterator _iterator[291329])
          }
        }
        { scopeless type
          (291343 'move' _indexOfInterest[291328](291340 call iteratorIndex _iterator[291329]))
        }
        ForLoop[291330] order-independent
        {
          unknown i[291315] "index var" "insert auto destroy"
          (567230 'end of statement')
          (291348 'move' i[291315] _indexOfInterest[291328])
          (567231 'end of statement' i[291315])
          {
            unknown yret[629374] "YVV" "temp"
            unknown call_tmp[923268] "expr temp" "maybe param" "maybe type" "temp"
            (923271 'move' call_tmp[923268](291324 call(455940 call (partial) chpl_intToIdx _mt[203] this[290550]) i[291315]))
            (629377 'move' yret[629374](629376 'deref' call_tmp[923268]))
            (291322 yield yret[629374])
            (567233 'end of statement' i[291315])
          }
          label _continueLabel[291333]
          _indexOfInterest[291328]
          _iterator[291329]
        }
        label _breakLabel[291334]
      }
    }
    (629366 return ret[629364])
  }
  where {
    (290583 call == tag[290553] follower[52140])
  }
  function DefaultRectangularDom[292740](?).dsiMember[291371](arg _mt[291382]:_MT[201], arg this[291373]:DefaultRectangularDom[292740](?), arg ind[291379] :
  unknown call_tmp[923275] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "method" "primary method"
  {
    unknown ret[629382] "RVV" "temp"
    {
      unknown i[291385] "dead at end of block" "index var" "insert auto destroy"
      (653044 'init var' i[291385] 0)
      (567235 'end of statement')
      unknown tmp[291414] "maybe param" "temp"
      unknown call_tmp[923289] "expr temp" "maybe param" "maybe type" "temp"
      (923292 'move' call_tmp[923289](455961 call rank _mt[203] this[291373]))
      unknown call_tmp[923294] "expr temp" "maybe param" "maybe type" "temp"
      (923297 'move' call_tmp[923294](291388 call - call_tmp[923289] 1))
      (291426 'move' tmp[291414](291424 call chpl_compute_low_param_loop_bound 0 call_tmp[923294]))
      unknown tmp[291415] "maybe param" "temp"
      unknown call_tmp[923301] "expr temp" "maybe param" "maybe type" "temp"
      (923304 'move' call_tmp[923301](455974 call rank _mt[203] this[291373]))
      unknown call_tmp[923306] "expr temp" "maybe param" "maybe type" "temp"
      (923309 'move' call_tmp[923306](291431 call - call_tmp[923301] 1))
      (291436 'move' tmp[291415](291434 call chpl_compute_high_param_loop_bound 0 call_tmp[923306]))
      unknown tmp[291416] "maybe param" "temp"
      (291439 'move' tmp[291416] 1)
      ParamForLoop[291441]
      { i[291385] tmp[291414] tmp[291415] tmp[291416]
        unknown call_tmp[923313] "expr temp" "maybe param" "maybe type" "temp"
        (923316 'move' call_tmp[923313](291400 call(455966 call (partial) ranges _mt[203] this[291373]) i[291385]))
        unknown call_tmp[923320] "expr temp" "maybe param" "maybe type" "temp"
        (923323 'move' call_tmp[923320](291407 call ind[291379] i[291385]))
        unknown call_tmp[923325] "expr temp" "maybe param" "maybe type" "temp"
        (923328 'move' call_tmp[923325](291405 call(291402 call (partial) contains _mt[203] call_tmp[923313]) call_tmp[923320]))
        unknown call_tmp[923330] "expr temp" "maybe param" "maybe type" "temp"
        (923333 'move' call_tmp[923330](291397 call ! call_tmp[923325]))
        unknown call_tmp[923335] "expr temp" "maybe param" "maybe type" "temp"
        (923338 'move' call_tmp[923335](291409 call _cond_test call_tmp[923330]))
        if call_tmp[923335]
        {
          (629387 'move' ret[629382](629386 'deref' 0))
          gotoReturn _end_dsiMember[629380] _end_dsiMember[629380]
        }
      }
      label _unused_continueLabel[291418]
      label _breakLabel[291417]
    }
    (629392 'move' ret[629382](629391 'deref' 1))
    label _end_dsiMember[629380]
    (629384 return ret[629382])
  }
  function DefaultRectangularDom[292740](?).dsiIndexOrder[291454](arg _mt[291465]:_MT[201], arg this[291456]:DefaultRectangularDom[292740](?), arg ind[291462] :
  unknown call_tmp[923342] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "method" "primary method"
  {
    unknown ret[629396] "RVV" "temp"
    unknown totOrder[291469] "dead at end of block" "insert auto destroy"
    (653046 'default init var' totOrder[291469] int(64)[10])
    (291472 'end of statement')
    unknown blk[291474] "dead at end of block" "insert auto destroy"
    (653048 'init var' blk[291474] 1)
    (291477 'end of statement')
    {
      unknown d[291478] "dead at end of block" "index var" "insert auto destroy"
      (653050 'init var' d[291478] 0)
      (567238 'end of statement')
      unknown tmp[291542] "maybe param" "temp"
      unknown call_tmp[923356] "expr temp" "maybe param" "maybe type" "temp"
      (923359 'move' call_tmp[923356](455989 call rank _mt[203] this[291456]))
      unknown call_tmp[923361] "expr temp" "maybe param" "maybe type" "temp"
      (923364 'move' call_tmp[923361](291483 call - call_tmp[923356] 1))
      (291553 'move' tmp[291542](291551 call chpl_compute_low_param_loop_bound 0 call_tmp[923361]))
      unknown tmp[291543] "maybe param" "temp"
      unknown call_tmp[923368] "expr temp" "maybe param" "maybe type" "temp"
      (923371 'move' call_tmp[923368](456018 call rank _mt[203] this[291456]))
      unknown call_tmp[923373] "expr temp" "maybe param" "maybe type" "temp"
      (923376 'move' call_tmp[923373](291558 call - call_tmp[923368] 1))
      (291563 'move' tmp[291543](291561 call chpl_compute_high_param_loop_bound 0 call_tmp[923373]))
      unknown tmp[291544] "maybe param" "temp"
      (291566 'move' tmp[291544](291489 call - 1))
      ParamForLoop[291568]
      { d[291478] tmp[291542] tmp[291543] tmp[291544]
        {
          unknown call_tmp[923380] "expr temp" "maybe param" "maybe type" "temp"
          (923383 'move' call_tmp[923380](291496 call(455994 call (partial) ranges _mt[203] this[291456]) d[291478]))
          unknown call_tmp[923387] "expr temp" "maybe param" "maybe type" "temp"
          (923390 'move' call_tmp[923387](291503 call ind[291462] d[291478]))
          unknown call_tmp[923392] "maybe param" "maybe type" "temp"
          (923395 'move' call_tmp[923392](291501 call(291498 call (partial) indexOrder _mt[203] call_tmp[923380]) call_tmp[923387]))
          const orderD[291494] "dead at end of block" "const" "insert auto destroy"
          (653052 'init var' orderD[291494] call_tmp[923392])
          (291506 'end of statement' d[291478])
          unknown call_tmp[923397] "expr temp" "maybe param" "maybe type" "temp"
          (923400 'move' call_tmp[923397](291515 call - 1))
          unknown call_tmp[923404] "expr temp" "maybe param" "maybe type" "temp"
          (923407 'move' call_tmp[923404](456003 call chpl_integralIdxType _mt[203] this[291456]))
          unknown call_tmp[923409] "expr temp" "maybe param" "maybe type" "temp"
          (923412 'move' call_tmp[923409](291513 call : call_tmp[923397] call_tmp[923404]))
          unknown call_tmp[923414] "expr temp" "maybe param" "maybe type" "temp"
          (923417 'move' call_tmp[923414](291510 call == orderD[291494] call_tmp[923409]))
          unknown call_tmp[923419] "expr temp" "maybe param" "maybe type" "temp"
          (923422 'move' call_tmp[923419](291519 call _cond_test call_tmp[923414]))
          if call_tmp[923419]
          {
            (629401 'move' ret[629396](629400 'deref' orderD[291494]))
            gotoReturn _end_dsiIndexOrder[629394] _end_dsiIndexOrder[629394]
            (567240 'end of statement' orderD[291494])
          }
          unknown call_tmp[923424] "expr temp" "maybe param" "maybe type" "temp"
          (923427 'move' call_tmp[923424](291527 call * orderD[291494] blk[291474]))
          (291524 call += totOrder[291469] call_tmp[923424])
          (567242 'end of statement' totOrder[291469] orderD[291494] blk[291474])
          unknown call_tmp[923431] "expr temp" "maybe param" "maybe type" "temp"
          (923434 'move' call_tmp[923431](291535 call(456012 call (partial) ranges _mt[203] this[291456]) d[291478]))
          unknown call_tmp[923438] "expr temp" "maybe param" "maybe type" "temp"
          (923441 'move' call_tmp[923438](291540 call(291537 call (partial) sizeAs _mt[203] call_tmp[923431]) int(64)[10]))
          (291531 call *= blk[291474] call_tmp[923438])
          (567246 'end of statement' blk[291474] d[291478])
        }
      }
      label _unused_continueLabel[291546]
      label _breakLabel[291545]
    }
    (629406 'move' ret[629396](629405 'deref' totOrder[291469]))
    gotoReturn _end_dsiIndexOrder[629394] _end_dsiIndexOrder[629394]
    (567249 'end of statement' totOrder[291469])
    label _end_dsiIndexOrder[629394]
    (629398 return ret[629396])
  }
  function DefaultRectangularDom[292740](?).dsiDims[291581](arg _mt[291585]:_MT[201], arg this[291583]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[629412] "RVV" "temp"
    unknown call_tmp[923445] "expr temp" "maybe param" "maybe type" "temp"
    (923448 'move' call_tmp[923445](456024 call ranges _mt[203] this[291583]))
    (629417 'move' ret[629412](629416 'deref' call_tmp[923445]))
    (629414 return ret[629412])
  }
  function DefaultRectangularDom[292740](?).dsiDim[291592](arg _mt[291600]:_MT[201], arg this[291594]:DefaultRectangularDom[292740](?), arg d[291597]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[629421] "RVV" "temp"
    unknown call_tmp[923452] "expr temp" "maybe param" "maybe type" "temp"
    (923455 'move' call_tmp[923452](291605 call(456029 call (partial) ranges _mt[203] this[291594]) d[291597]))
    (629426 'move' ret[629421](629425 'deref' call_tmp[923452]))
    (629423 return ret[629421])
  }
  function DefaultRectangularDom[292740](?).dsiDim[291609](arg _mt[291617]:_MT[201], arg this[291611]:DefaultRectangularDom[292740](?), param arg d[291614]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[629430] "RVV" "temp"
    unknown call_tmp[923459] "expr temp" "maybe param" "maybe type" "temp"
    (923462 'move' call_tmp[923459](291622 call(456035 call (partial) ranges _mt[203] this[291611]) d[291614]))
    (629435 'move' ret[629430](629434 'deref' call_tmp[923459]))
    (629432 return ret[629430])
  }
  function DefaultRectangularDom[292740](?).dsiNumIndices[291626](arg _mt[291630]:_MT[201], arg this[291628]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[629439] "RVV" "temp"
    unknown sum[291634] "dead at end of block" "insert auto destroy"
    (653054 'init var' sum[291634] 1)
    (291637 'end of statement')
    {
      unknown i[291638] "dead at end of block" "index var" "insert auto destroy"
      (653056 'init var' i[291638] 0)
      (567254 'end of statement')
      unknown tmp[291659] "maybe param" "temp"
      unknown call_tmp[923466] "expr temp" "maybe param" "maybe type" "temp"
      (923469 'move' call_tmp[923466](456041 call rank _mt[203] this[291628]))
      unknown call_tmp[923471] "expr temp" "maybe param" "maybe type" "temp"
      (923474 'move' call_tmp[923471](291641 call - call_tmp[923466] 1))
      (291671 'move' tmp[291659](291669 call chpl_compute_low_param_loop_bound 0 call_tmp[923471]))
      unknown tmp[291660] "maybe param" "temp"
      unknown call_tmp[923478] "expr temp" "maybe param" "maybe type" "temp"
      (923481 'move' call_tmp[923478](456053 call rank _mt[203] this[291628]))
      unknown call_tmp[923483] "expr temp" "maybe param" "maybe type" "temp"
      (923486 'move' call_tmp[923483](291676 call - call_tmp[923478] 1))
      (291681 'move' tmp[291660](291679 call chpl_compute_high_param_loop_bound 0 call_tmp[923483]))
      unknown tmp[291661] "maybe param" "temp"
      (291684 'move' tmp[291661] 1)
      ParamForLoop[291686]
      { i[291638] tmp[291659] tmp[291660] tmp[291661]
        unknown call_tmp[923490] "expr temp" "maybe param" "maybe type" "temp"
        (923493 'move' call_tmp[923490](291651 call(456047 call (partial) ranges _mt[203] this[291628]) i[291638]))
        unknown call_tmp[923497] "expr temp" "maybe param" "maybe type" "temp"
        (923500 'move' call_tmp[923497](291656 call(291653 call (partial) sizeAs _mt[203] call_tmp[923490]) int(64)[10]))
        (291647 call *= sum[291634] call_tmp[923497])
        (567255 'end of statement' sum[291634] i[291638])
      }
      label _unused_continueLabel[291663]
      label _breakLabel[291662]
    }
    (629444 'move' ret[629439](629443 'deref' sum[291634]))
    gotoReturn _end_dsiNumIndices[629437] _end_dsiNumIndices[629437]
    (567258 'end of statement' sum[291634])
    label _end_dsiNumIndices[629437]
    (629441 return ret[629439])
  }
  function DefaultRectangularDom[467912](?).parSafe[291699](arg _mt[291703]:_MT[201], arg this[291701]:DefaultRectangularDom[467912](?)) param : _unknown[42] "method" "primary method" "no parens" "no return value for void"
  {
    (291707 call(456058 call (partial) dnsError _mt[203] this[291701]) "parSafe")
    (629448 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiLow[291711](arg _mt[291715]:_MT[201], arg this[291713]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629452] "RVV" "temp"
    unknown call_tmp[923506] "expr temp" "maybe param" "maybe type" "temp"
    (923509 'move' call_tmp[923506](456097 call rank _mt[203] this[291713]))
    unknown call_tmp[923511] "expr temp" "maybe param" "maybe type" "temp"
    (923514 'move' call_tmp[923511](291794 call == call_tmp[923506] 1))
    unknown call_tmp[923516] "expr temp" "maybe param" "maybe type" "temp"
    (923519 'move' call_tmp[923516](291798 call _cond_test call_tmp[923511]))
    if call_tmp[923516]
    {
      unknown call_tmp[923523] "expr temp" "maybe param" "maybe type" "temp"
      (923526 'move' call_tmp[923523](291721 call(456063 call (partial) ranges _mt[203] this[291713]) 0))
      unknown call_tmp[923530] "expr temp" "maybe param" "maybe type" "temp"
      (923533 'move' call_tmp[923530](291723 call lowBound _mt[203] call_tmp[923523]))
      (629457 'move' ret[629452](629456 'deref' call_tmp[923530]))
      gotoReturn _end_dsiLow[629450] _end_dsiLow[629450]
    }
    {
      unknown result[291728] "dead at end of block" "insert auto destroy"
      unknown call_tmp[923537] "expr temp" "maybe param" "maybe type" "temp"
      (923540 'move' call_tmp[923537](456068 call rank _mt[203] this[291713]))
      unknown call_tmp[923544] "expr temp" "maybe param" "maybe type" "temp"
      (923547 'move' call_tmp[923544](456073 call idxType _mt[203] this[291713]))
      unknown call_tmp[923549] "expr temp" "maybe param" "maybe type" "temp"
      (923552 'move' call_tmp[923549](291729 call * call_tmp[923537] call_tmp[923544]))
      (653058 'default init var' result[291728] call_tmp[923549])
      (291734 'end of statement')
      {
        unknown i[291735] "dead at end of block" "index var" "insert auto destroy"
        (653060 'init var' i[291735] 0)
        (567262 'end of statement')
        unknown tmp[291756] "maybe param" "temp"
        unknown call_tmp[923556] "expr temp" "maybe param" "maybe type" "temp"
        (923559 'move' call_tmp[923556](456078 call rank _mt[203] this[291713]))
        unknown call_tmp[923561] "expr temp" "maybe param" "maybe type" "temp"
        (923564 'move' call_tmp[923561](291738 call - call_tmp[923556] 1))
        (291768 'move' tmp[291756](291766 call chpl_compute_low_param_loop_bound 0 call_tmp[923561]))
        unknown tmp[291757] "maybe param" "temp"
        unknown call_tmp[923568] "expr temp" "maybe param" "maybe type" "temp"
        (923571 'move' call_tmp[923568](456091 call rank _mt[203] this[291713]))
        unknown call_tmp[923573] "expr temp" "maybe param" "maybe type" "temp"
        (923576 'move' call_tmp[923573](291773 call - call_tmp[923568] 1))
        (291778 'move' tmp[291757](291776 call chpl_compute_high_param_loop_bound 0 call_tmp[923573]))
        unknown tmp[291758] "maybe param" "temp"
        (291781 'move' tmp[291758] 1)
        ParamForLoop[291783]
        { i[291735] tmp[291756] tmp[291757] tmp[291758]
          unknown call_tmp[923578] "expr temp" "maybe param" "maybe type" "temp"
          (923581 'move' call_tmp[923578](291747 call result[291728] i[291735]))
          unknown call_tmp[923585] "expr temp" "maybe param" "maybe type" "temp"
          (923588 'move' call_tmp[923585](291750 call(456085 call (partial) ranges _mt[203] this[291713]) i[291735]))
          unknown call_tmp[923592] "expr temp" "maybe param" "maybe type" "temp"
          (923595 'move' call_tmp[923592](291752 call lowBound _mt[203] call_tmp[923585]))
          (291744 call = call_tmp[923578] call_tmp[923592])
          (567263 'end of statement' result[291728] i[291735])
        }
        label _unused_continueLabel[291760]
        label _breakLabel[291759]
      }
      (629462 'move' ret[629452](629461 'deref' result[291728]))
      gotoReturn _end_dsiLow[629450] _end_dsiLow[629450]
      (567266 'end of statement' result[291728])
    }
    label _end_dsiLow[629450]
    (629454 return ret[629452])
  }
  function DefaultRectangularDom[292740](?).dsiHigh[291804](arg _mt[291808]:_MT[201], arg this[291806]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629468] "RVV" "temp"
    unknown call_tmp[923599] "expr temp" "maybe param" "maybe type" "temp"
    (923602 'move' call_tmp[923599](456136 call rank _mt[203] this[291806]))
    unknown call_tmp[923604] "expr temp" "maybe param" "maybe type" "temp"
    (923607 'move' call_tmp[923604](291887 call == call_tmp[923599] 1))
    unknown call_tmp[923609] "expr temp" "maybe param" "maybe type" "temp"
    (923612 'move' call_tmp[923609](291891 call _cond_test call_tmp[923604]))
    if call_tmp[923609]
    {
      unknown call_tmp[923616] "expr temp" "maybe param" "maybe type" "temp"
      (923619 'move' call_tmp[923616](291814 call(456102 call (partial) ranges _mt[203] this[291806]) 0))
      unknown call_tmp[923623] "expr temp" "maybe param" "maybe type" "temp"
      (923626 'move' call_tmp[923623](291816 call highBound _mt[203] call_tmp[923616]))
      (629473 'move' ret[629468](629472 'deref' call_tmp[923623]))
      gotoReturn _end_dsiHigh[629466] _end_dsiHigh[629466]
    }
    {
      unknown result[291821] "dead at end of block" "insert auto destroy"
      unknown call_tmp[923630] "expr temp" "maybe param" "maybe type" "temp"
      (923633 'move' call_tmp[923630](456107 call rank _mt[203] this[291806]))
      unknown call_tmp[923637] "expr temp" "maybe param" "maybe type" "temp"
      (923640 'move' call_tmp[923637](456112 call idxType _mt[203] this[291806]))
      unknown call_tmp[923642] "expr temp" "maybe param" "maybe type" "temp"
      (923645 'move' call_tmp[923642](291822 call * call_tmp[923630] call_tmp[923637]))
      (653062 'default init var' result[291821] call_tmp[923642])
      (291827 'end of statement')
      {
        unknown i[291828] "dead at end of block" "index var" "insert auto destroy"
        (653064 'init var' i[291828] 0)
        (567269 'end of statement')
        unknown tmp[291849] "maybe param" "temp"
        unknown call_tmp[923649] "expr temp" "maybe param" "maybe type" "temp"
        (923652 'move' call_tmp[923649](456117 call rank _mt[203] this[291806]))
        unknown call_tmp[923654] "expr temp" "maybe param" "maybe type" "temp"
        (923657 'move' call_tmp[923654](291831 call - call_tmp[923649] 1))
        (291861 'move' tmp[291849](291859 call chpl_compute_low_param_loop_bound 0 call_tmp[923654]))
        unknown tmp[291850] "maybe param" "temp"
        unknown call_tmp[923661] "expr temp" "maybe param" "maybe type" "temp"
        (923664 'move' call_tmp[923661](456130 call rank _mt[203] this[291806]))
        unknown call_tmp[923666] "expr temp" "maybe param" "maybe type" "temp"
        (923669 'move' call_tmp[923666](291866 call - call_tmp[923661] 1))
        (291871 'move' tmp[291850](291869 call chpl_compute_high_param_loop_bound 0 call_tmp[923666]))
        unknown tmp[291851] "maybe param" "temp"
        (291874 'move' tmp[291851] 1)
        ParamForLoop[291876]
        { i[291828] tmp[291849] tmp[291850] tmp[291851]
          unknown call_tmp[923671] "expr temp" "maybe param" "maybe type" "temp"
          (923674 'move' call_tmp[923671](291840 call result[291821] i[291828]))
          unknown call_tmp[923678] "expr temp" "maybe param" "maybe type" "temp"
          (923681 'move' call_tmp[923678](291843 call(456124 call (partial) ranges _mt[203] this[291806]) i[291828]))
          unknown call_tmp[923685] "expr temp" "maybe param" "maybe type" "temp"
          (923688 'move' call_tmp[923685](291845 call highBound _mt[203] call_tmp[923678]))
          (291837 call = call_tmp[923671] call_tmp[923685])
          (567270 'end of statement' result[291821] i[291828])
        }
        label _unused_continueLabel[291853]
        label _breakLabel[291852]
      }
      (629478 'move' ret[629468](629477 'deref' result[291821]))
      gotoReturn _end_dsiHigh[629466] _end_dsiHigh[629466]
      (567273 'end of statement' result[291821])
    }
    label _end_dsiHigh[629466]
    (629470 return ret[629468])
  }
  function DefaultRectangularDom[292740](?).dsiAlignedLow[291897](arg _mt[291901]:_MT[201], arg this[291899]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629484] "RVV" "temp"
    unknown call_tmp[923692] "expr temp" "maybe param" "maybe type" "temp"
    (923695 'move' call_tmp[923692](456175 call rank _mt[203] this[291899]))
    unknown call_tmp[923697] "expr temp" "maybe param" "maybe type" "temp"
    (923700 'move' call_tmp[923697](291980 call == call_tmp[923692] 1))
    unknown call_tmp[923702] "expr temp" "maybe param" "maybe type" "temp"
    (923705 'move' call_tmp[923702](291984 call _cond_test call_tmp[923697]))
    if call_tmp[923702]
    {
      unknown call_tmp[923709] "expr temp" "maybe param" "maybe type" "temp"
      (923712 'move' call_tmp[923709](291907 call(456141 call (partial) ranges _mt[203] this[291899]) 0))
      unknown call_tmp[923716] "expr temp" "maybe param" "maybe type" "temp"
      (923719 'move' call_tmp[923716](291909 call low _mt[203] call_tmp[923709]))
      (629489 'move' ret[629484](629488 'deref' call_tmp[923716]))
      gotoReturn _end_dsiAlignedLow[629482] _end_dsiAlignedLow[629482]
    }
    {
      unknown result[291914] "dead at end of block" "insert auto destroy"
      unknown call_tmp[923723] "expr temp" "maybe param" "maybe type" "temp"
      (923726 'move' call_tmp[923723](456146 call rank _mt[203] this[291899]))
      unknown call_tmp[923730] "expr temp" "maybe param" "maybe type" "temp"
      (923733 'move' call_tmp[923730](456151 call idxType _mt[203] this[291899]))
      unknown call_tmp[923735] "expr temp" "maybe param" "maybe type" "temp"
      (923738 'move' call_tmp[923735](291915 call * call_tmp[923723] call_tmp[923730]))
      (653066 'default init var' result[291914] call_tmp[923735])
      (291920 'end of statement')
      {
        unknown i[291921] "dead at end of block" "index var" "insert auto destroy"
        (653068 'init var' i[291921] 0)
        (567276 'end of statement')
        unknown tmp[291942] "maybe param" "temp"
        unknown call_tmp[923742] "expr temp" "maybe param" "maybe type" "temp"
        (923745 'move' call_tmp[923742](456156 call rank _mt[203] this[291899]))
        unknown call_tmp[923747] "expr temp" "maybe param" "maybe type" "temp"
        (923750 'move' call_tmp[923747](291924 call - call_tmp[923742] 1))
        (291954 'move' tmp[291942](291952 call chpl_compute_low_param_loop_bound 0 call_tmp[923747]))
        unknown tmp[291943] "maybe param" "temp"
        unknown call_tmp[923754] "expr temp" "maybe param" "maybe type" "temp"
        (923757 'move' call_tmp[923754](456169 call rank _mt[203] this[291899]))
        unknown call_tmp[923759] "expr temp" "maybe param" "maybe type" "temp"
        (923762 'move' call_tmp[923759](291959 call - call_tmp[923754] 1))
        (291964 'move' tmp[291943](291962 call chpl_compute_high_param_loop_bound 0 call_tmp[923759]))
        unknown tmp[291944] "maybe param" "temp"
        (291967 'move' tmp[291944] 1)
        ParamForLoop[291969]
        { i[291921] tmp[291942] tmp[291943] tmp[291944]
          unknown call_tmp[923764] "expr temp" "maybe param" "maybe type" "temp"
          (923767 'move' call_tmp[923764](291933 call result[291914] i[291921]))
          unknown call_tmp[923771] "expr temp" "maybe param" "maybe type" "temp"
          (923774 'move' call_tmp[923771](291936 call(456163 call (partial) ranges _mt[203] this[291899]) i[291921]))
          unknown call_tmp[923778] "expr temp" "maybe param" "maybe type" "temp"
          (923781 'move' call_tmp[923778](291938 call low _mt[203] call_tmp[923771]))
          (291930 call = call_tmp[923764] call_tmp[923778])
          (567277 'end of statement' result[291914] i[291921])
        }
        label _unused_continueLabel[291946]
        label _breakLabel[291945]
      }
      (629494 'move' ret[629484](629493 'deref' result[291914]))
      gotoReturn _end_dsiAlignedLow[629482] _end_dsiAlignedLow[629482]
      (567280 'end of statement' result[291914])
    }
    label _end_dsiAlignedLow[629482]
    (629486 return ret[629484])
  }
  function DefaultRectangularDom[292740](?).dsiAlignedHigh[291990](arg _mt[291994]:_MT[201], arg this[291992]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629500] "RVV" "temp"
    unknown call_tmp[923785] "expr temp" "maybe param" "maybe type" "temp"
    (923788 'move' call_tmp[923785](456214 call rank _mt[203] this[291992]))
    unknown call_tmp[923790] "expr temp" "maybe param" "maybe type" "temp"
    (923793 'move' call_tmp[923790](292073 call == call_tmp[923785] 1))
    unknown call_tmp[923795] "expr temp" "maybe param" "maybe type" "temp"
    (923798 'move' call_tmp[923795](292077 call _cond_test call_tmp[923790]))
    if call_tmp[923795]
    {
      unknown call_tmp[923802] "expr temp" "maybe param" "maybe type" "temp"
      (923805 'move' call_tmp[923802](292000 call(456180 call (partial) ranges _mt[203] this[291992]) 0))
      unknown call_tmp[923809] "expr temp" "maybe param" "maybe type" "temp"
      (923812 'move' call_tmp[923809](292002 call high _mt[203] call_tmp[923802]))
      (629505 'move' ret[629500](629504 'deref' call_tmp[923809]))
      gotoReturn _end_dsiAlignedHigh[629498] _end_dsiAlignedHigh[629498]
    }
    {
      unknown result[292007] "dead at end of block" "insert auto destroy"
      unknown call_tmp[923816] "expr temp" "maybe param" "maybe type" "temp"
      (923819 'move' call_tmp[923816](456185 call rank _mt[203] this[291992]))
      unknown call_tmp[923823] "expr temp" "maybe param" "maybe type" "temp"
      (923826 'move' call_tmp[923823](456190 call idxType _mt[203] this[291992]))
      unknown call_tmp[923828] "expr temp" "maybe param" "maybe type" "temp"
      (923831 'move' call_tmp[923828](292008 call * call_tmp[923816] call_tmp[923823]))
      (653070 'default init var' result[292007] call_tmp[923828])
      (292013 'end of statement')
      {
        unknown i[292014] "dead at end of block" "index var" "insert auto destroy"
        (653072 'init var' i[292014] 0)
        (567283 'end of statement')
        unknown tmp[292035] "maybe param" "temp"
        unknown call_tmp[923835] "expr temp" "maybe param" "maybe type" "temp"
        (923838 'move' call_tmp[923835](456195 call rank _mt[203] this[291992]))
        unknown call_tmp[923840] "expr temp" "maybe param" "maybe type" "temp"
        (923843 'move' call_tmp[923840](292017 call - call_tmp[923835] 1))
        (292047 'move' tmp[292035](292045 call chpl_compute_low_param_loop_bound 0 call_tmp[923840]))
        unknown tmp[292036] "maybe param" "temp"
        unknown call_tmp[923847] "expr temp" "maybe param" "maybe type" "temp"
        (923850 'move' call_tmp[923847](456208 call rank _mt[203] this[291992]))
        unknown call_tmp[923852] "expr temp" "maybe param" "maybe type" "temp"
        (923855 'move' call_tmp[923852](292052 call - call_tmp[923847] 1))
        (292057 'move' tmp[292036](292055 call chpl_compute_high_param_loop_bound 0 call_tmp[923852]))
        unknown tmp[292037] "maybe param" "temp"
        (292060 'move' tmp[292037] 1)
        ParamForLoop[292062]
        { i[292014] tmp[292035] tmp[292036] tmp[292037]
          unknown call_tmp[923857] "expr temp" "maybe param" "maybe type" "temp"
          (923860 'move' call_tmp[923857](292026 call result[292007] i[292014]))
          unknown call_tmp[923864] "expr temp" "maybe param" "maybe type" "temp"
          (923867 'move' call_tmp[923864](292029 call(456202 call (partial) ranges _mt[203] this[291992]) i[292014]))
          unknown call_tmp[923871] "expr temp" "maybe param" "maybe type" "temp"
          (923874 'move' call_tmp[923871](292031 call high _mt[203] call_tmp[923864]))
          (292023 call = call_tmp[923857] call_tmp[923871])
          (567284 'end of statement' result[292007] i[292014])
        }
        label _unused_continueLabel[292039]
        label _breakLabel[292038]
      }
      (629510 'move' ret[629500](629509 'deref' result[292007]))
      gotoReturn _end_dsiAlignedHigh[629498] _end_dsiAlignedHigh[629498]
      (567287 'end of statement' result[292007])
    }
    label _end_dsiAlignedHigh[629498]
    (629502 return ret[629500])
  }
  function DefaultRectangularDom[292740](?).dsiStride[292083](arg _mt[292087]:_MT[201], arg this[292085]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629516] "RVV" "temp"
    unknown call_tmp[923878] "expr temp" "maybe param" "maybe type" "temp"
    (923881 'move' call_tmp[923878](456252 call rank _mt[203] this[292085]))
    unknown call_tmp[923883] "expr temp" "maybe param" "maybe type" "temp"
    (923886 'move' call_tmp[923883](292168 call == call_tmp[923878] 1))
    unknown call_tmp[923888] "expr temp" "maybe param" "maybe type" "temp"
    (923891 'move' call_tmp[923888](292172 call _cond_test call_tmp[923883]))
    if call_tmp[923888]
    {
      unknown call_tmp[923895] "expr temp" "maybe param" "maybe type" "temp"
      (923898 'move' call_tmp[923895](292093 call(456219 call (partial) ranges _mt[203] this[292085]) 0))
      unknown call_tmp[923902] "expr temp" "maybe param" "maybe type" "temp"
      (923905 'move' call_tmp[923902](292095 call stride _mt[203] call_tmp[923895]))
      (629521 'move' ret[629516](629520 'deref' call_tmp[923902]))
      gotoReturn _end_dsiStride[629514] _end_dsiStride[629514]
    }
    {
      unknown result[292100] "dead at end of block" "insert auto destroy"
      unknown call_tmp[923909] "expr temp" "maybe param" "maybe type" "temp"
      (923912 'move' call_tmp[923909](456224 call rank _mt[203] this[292085]))
      unknown call_tmp[923916] "expr temp" "maybe param" "maybe type" "temp"
      (923919 'move' call_tmp[923916](456228 call chpl_integralIdxType _mt[203] this[292085]))
      unknown call_tmp[923921] "expr temp" "maybe param" "maybe type" "temp"
      (923924 'move' call_tmp[923921](292105 call chpl__signedType call_tmp[923916]))
      unknown call_tmp[923926] "expr temp" "maybe param" "maybe type" "temp"
      (923929 'move' call_tmp[923926](292101 call * call_tmp[923909] call_tmp[923921]))
      (653074 'default init var' result[292100] call_tmp[923926])
      (292108 'end of statement')
      {
        unknown i[292109] "dead at end of block" "index var" "insert auto destroy"
        (653076 'init var' i[292109] 0)
        (567290 'end of statement')
        unknown tmp[292130] "maybe param" "temp"
        unknown call_tmp[923933] "expr temp" "maybe param" "maybe type" "temp"
        (923936 'move' call_tmp[923933](456233 call rank _mt[203] this[292085]))
        unknown call_tmp[923938] "expr temp" "maybe param" "maybe type" "temp"
        (923941 'move' call_tmp[923938](292112 call - call_tmp[923933] 1))
        (292142 'move' tmp[292130](292140 call chpl_compute_low_param_loop_bound 0 call_tmp[923938]))
        unknown tmp[292131] "maybe param" "temp"
        unknown call_tmp[923945] "expr temp" "maybe param" "maybe type" "temp"
        (923948 'move' call_tmp[923945](456246 call rank _mt[203] this[292085]))
        unknown call_tmp[923950] "expr temp" "maybe param" "maybe type" "temp"
        (923953 'move' call_tmp[923950](292147 call - call_tmp[923945] 1))
        (292152 'move' tmp[292131](292150 call chpl_compute_high_param_loop_bound 0 call_tmp[923950]))
        unknown tmp[292132] "maybe param" "temp"
        (292155 'move' tmp[292132] 1)
        ParamForLoop[292157]
        { i[292109] tmp[292130] tmp[292131] tmp[292132]
          unknown call_tmp[923955] "expr temp" "maybe param" "maybe type" "temp"
          (923958 'move' call_tmp[923955](292121 call result[292100] i[292109]))
          unknown call_tmp[923962] "expr temp" "maybe param" "maybe type" "temp"
          (923965 'move' call_tmp[923962](292124 call(456240 call (partial) ranges _mt[203] this[292085]) i[292109]))
          unknown call_tmp[923969] "expr temp" "maybe param" "maybe type" "temp"
          (923972 'move' call_tmp[923969](292126 call stride _mt[203] call_tmp[923962]))
          (292118 call = call_tmp[923955] call_tmp[923969])
          (567291 'end of statement' result[292100] i[292109])
        }
        label _unused_continueLabel[292134]
        label _breakLabel[292133]
      }
      (629526 'move' ret[629516](629525 'deref' result[292100]))
      gotoReturn _end_dsiStride[629514] _end_dsiStride[629514]
      (567294 'end of statement' result[292100])
    }
    label _end_dsiStride[629514]
    (629518 return ret[629516])
  }
  function DefaultRectangularDom[292740](?).dsiAlignment[292178](arg _mt[292182]:_MT[201], arg this[292180]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629532] "RVV" "temp"
    unknown call_tmp[923976] "expr temp" "maybe param" "maybe type" "temp"
    (923979 'move' call_tmp[923976](456291 call rank _mt[203] this[292180]))
    unknown call_tmp[923981] "expr temp" "maybe param" "maybe type" "temp"
    (923984 'move' call_tmp[923981](292261 call == call_tmp[923976] 1))
    unknown call_tmp[923986] "expr temp" "maybe param" "maybe type" "temp"
    (923989 'move' call_tmp[923986](292265 call _cond_test call_tmp[923981]))
    if call_tmp[923986]
    {
      unknown call_tmp[923993] "expr temp" "maybe param" "maybe type" "temp"
      (923996 'move' call_tmp[923993](292188 call(456257 call (partial) ranges _mt[203] this[292180]) 0))
      unknown call_tmp[924000] "expr temp" "maybe param" "maybe type" "temp"
      (924003 'move' call_tmp[924000](292190 call alignment _mt[203] call_tmp[923993]))
      (629537 'move' ret[629532](629536 'deref' call_tmp[924000]))
      gotoReturn _end_dsiAlignment[629530] _end_dsiAlignment[629530]
    }
    {
      unknown result[292195] "dead at end of block" "insert auto destroy"
      unknown call_tmp[924007] "expr temp" "maybe param" "maybe type" "temp"
      (924010 'move' call_tmp[924007](456262 call rank _mt[203] this[292180]))
      unknown call_tmp[924014] "expr temp" "maybe param" "maybe type" "temp"
      (924017 'move' call_tmp[924014](456267 call idxType _mt[203] this[292180]))
      unknown call_tmp[924019] "expr temp" "maybe param" "maybe type" "temp"
      (924022 'move' call_tmp[924019](292196 call * call_tmp[924007] call_tmp[924014]))
      (653078 'default init var' result[292195] call_tmp[924019])
      (292201 'end of statement')
      {
        unknown i[292202] "dead at end of block" "index var" "insert auto destroy"
        (653080 'init var' i[292202] 0)
        (567297 'end of statement')
        unknown tmp[292223] "maybe param" "temp"
        unknown call_tmp[924026] "expr temp" "maybe param" "maybe type" "temp"
        (924029 'move' call_tmp[924026](456272 call rank _mt[203] this[292180]))
        unknown call_tmp[924031] "expr temp" "maybe param" "maybe type" "temp"
        (924034 'move' call_tmp[924031](292205 call - call_tmp[924026] 1))
        (292235 'move' tmp[292223](292233 call chpl_compute_low_param_loop_bound 0 call_tmp[924031]))
        unknown tmp[292224] "maybe param" "temp"
        unknown call_tmp[924038] "expr temp" "maybe param" "maybe type" "temp"
        (924041 'move' call_tmp[924038](456285 call rank _mt[203] this[292180]))
        unknown call_tmp[924043] "expr temp" "maybe param" "maybe type" "temp"
        (924046 'move' call_tmp[924043](292240 call - call_tmp[924038] 1))
        (292245 'move' tmp[292224](292243 call chpl_compute_high_param_loop_bound 0 call_tmp[924043]))
        unknown tmp[292225] "maybe param" "temp"
        (292248 'move' tmp[292225] 1)
        ParamForLoop[292250]
        { i[292202] tmp[292223] tmp[292224] tmp[292225]
          unknown call_tmp[924048] "expr temp" "maybe param" "maybe type" "temp"
          (924051 'move' call_tmp[924048](292214 call result[292195] i[292202]))
          unknown call_tmp[924055] "expr temp" "maybe param" "maybe type" "temp"
          (924058 'move' call_tmp[924055](292217 call(456279 call (partial) ranges _mt[203] this[292180]) i[292202]))
          unknown call_tmp[924062] "expr temp" "maybe param" "maybe type" "temp"
          (924065 'move' call_tmp[924062](292219 call alignment _mt[203] call_tmp[924055]))
          (292211 call = call_tmp[924048] call_tmp[924062])
          (567298 'end of statement' result[292195] i[292202])
        }
        label _unused_continueLabel[292227]
        label _breakLabel[292226]
      }
      (629542 'move' ret[629532](629541 'deref' result[292195]))
      gotoReturn _end_dsiAlignment[629530] _end_dsiAlignment[629530]
      (567301 'end of statement' result[292195])
    }
    label _end_dsiAlignment[629530]
    (629534 return ret[629532])
  }
  function DefaultRectangularDom[292740](?).dsiFirst[292271](arg _mt[292275]:_MT[201], arg this[292273]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629548] "RVV" "temp"
    unknown call_tmp[924069] "expr temp" "maybe param" "maybe type" "temp"
    (924072 'move' call_tmp[924069](456330 call rank _mt[203] this[292273]))
    unknown call_tmp[924074] "expr temp" "maybe param" "maybe type" "temp"
    (924077 'move' call_tmp[924074](292354 call == call_tmp[924069] 1))
    unknown call_tmp[924079] "expr temp" "maybe param" "maybe type" "temp"
    (924082 'move' call_tmp[924079](292358 call _cond_test call_tmp[924074]))
    if call_tmp[924079]
    {
      unknown call_tmp[924086] "expr temp" "maybe param" "maybe type" "temp"
      (924089 'move' call_tmp[924086](292281 call(456296 call (partial) ranges _mt[203] this[292273]) 0))
      unknown call_tmp[924093] "expr temp" "maybe param" "maybe type" "temp"
      (924096 'move' call_tmp[924093](292283 call first _mt[203] call_tmp[924086]))
      (629553 'move' ret[629548](629552 'deref' call_tmp[924093]))
      gotoReturn _end_dsiFirst[629546] _end_dsiFirst[629546]
    }
    {
      unknown result[292288] "dead at end of block" "insert auto destroy"
      unknown call_tmp[924100] "expr temp" "maybe param" "maybe type" "temp"
      (924103 'move' call_tmp[924100](456301 call rank _mt[203] this[292273]))
      unknown call_tmp[924107] "expr temp" "maybe param" "maybe type" "temp"
      (924110 'move' call_tmp[924107](456306 call idxType _mt[203] this[292273]))
      unknown call_tmp[924112] "expr temp" "maybe param" "maybe type" "temp"
      (924115 'move' call_tmp[924112](292289 call * call_tmp[924100] call_tmp[924107]))
      (653082 'default init var' result[292288] call_tmp[924112])
      (292294 'end of statement')
      {
        unknown i[292295] "dead at end of block" "index var" "insert auto destroy"
        (653084 'init var' i[292295] 0)
        (567304 'end of statement')
        unknown tmp[292316] "maybe param" "temp"
        unknown call_tmp[924119] "expr temp" "maybe param" "maybe type" "temp"
        (924122 'move' call_tmp[924119](456311 call rank _mt[203] this[292273]))
        unknown call_tmp[924124] "expr temp" "maybe param" "maybe type" "temp"
        (924127 'move' call_tmp[924124](292298 call - call_tmp[924119] 1))
        (292328 'move' tmp[292316](292326 call chpl_compute_low_param_loop_bound 0 call_tmp[924124]))
        unknown tmp[292317] "maybe param" "temp"
        unknown call_tmp[924131] "expr temp" "maybe param" "maybe type" "temp"
        (924134 'move' call_tmp[924131](456324 call rank _mt[203] this[292273]))
        unknown call_tmp[924136] "expr temp" "maybe param" "maybe type" "temp"
        (924139 'move' call_tmp[924136](292333 call - call_tmp[924131] 1))
        (292338 'move' tmp[292317](292336 call chpl_compute_high_param_loop_bound 0 call_tmp[924136]))
        unknown tmp[292318] "maybe param" "temp"
        (292341 'move' tmp[292318] 1)
        ParamForLoop[292343]
        { i[292295] tmp[292316] tmp[292317] tmp[292318]
          unknown call_tmp[924141] "expr temp" "maybe param" "maybe type" "temp"
          (924144 'move' call_tmp[924141](292307 call result[292288] i[292295]))
          unknown call_tmp[924148] "expr temp" "maybe param" "maybe type" "temp"
          (924151 'move' call_tmp[924148](292310 call(456318 call (partial) ranges _mt[203] this[292273]) i[292295]))
          unknown call_tmp[924155] "expr temp" "maybe param" "maybe type" "temp"
          (924158 'move' call_tmp[924155](292312 call first _mt[203] call_tmp[924148]))
          (292304 call = call_tmp[924141] call_tmp[924155])
          (567305 'end of statement' result[292288] i[292295])
        }
        label _unused_continueLabel[292320]
        label _breakLabel[292319]
      }
      (629558 'move' ret[629548](629557 'deref' result[292288]))
      gotoReturn _end_dsiFirst[629546] _end_dsiFirst[629546]
      (567308 'end of statement' result[292288])
    }
    label _end_dsiFirst[629546]
    (629550 return ret[629548])
  }
  function DefaultRectangularDom[292740](?).dsiLast[292364](arg _mt[292368]:_MT[201], arg this[292366]:DefaultRectangularDom[292740](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[629564] "RVV" "temp"
    unknown call_tmp[924162] "expr temp" "maybe param" "maybe type" "temp"
    (924165 'move' call_tmp[924162](456369 call rank _mt[203] this[292366]))
    unknown call_tmp[924167] "expr temp" "maybe param" "maybe type" "temp"
    (924170 'move' call_tmp[924167](292447 call == call_tmp[924162] 1))
    unknown call_tmp[924172] "expr temp" "maybe param" "maybe type" "temp"
    (924175 'move' call_tmp[924172](292451 call _cond_test call_tmp[924167]))
    if call_tmp[924172]
    {
      unknown call_tmp[924179] "expr temp" "maybe param" "maybe type" "temp"
      (924182 'move' call_tmp[924179](292374 call(456335 call (partial) ranges _mt[203] this[292366]) 0))
      unknown call_tmp[924186] "expr temp" "maybe param" "maybe type" "temp"
      (924189 'move' call_tmp[924186](292376 call last _mt[203] call_tmp[924179]))
      (629569 'move' ret[629564](629568 'deref' call_tmp[924186]))
      gotoReturn _end_dsiLast[629562] _end_dsiLast[629562]
    }
    {
      unknown result[292381] "dead at end of block" "insert auto destroy"
      unknown call_tmp[924193] "expr temp" "maybe param" "maybe type" "temp"
      (924196 'move' call_tmp[924193](456340 call rank _mt[203] this[292366]))
      unknown call_tmp[924200] "expr temp" "maybe param" "maybe type" "temp"
      (924203 'move' call_tmp[924200](456345 call idxType _mt[203] this[292366]))
      unknown call_tmp[924205] "expr temp" "maybe param" "maybe type" "temp"
      (924208 'move' call_tmp[924205](292382 call * call_tmp[924193] call_tmp[924200]))
      (653086 'default init var' result[292381] call_tmp[924205])
      (292387 'end of statement')
      {
        unknown i[292388] "dead at end of block" "index var" "insert auto destroy"
        (653088 'init var' i[292388] 0)
        (567311 'end of statement')
        unknown tmp[292409] "maybe param" "temp"
        unknown call_tmp[924212] "expr temp" "maybe param" "maybe type" "temp"
        (924215 'move' call_tmp[924212](456350 call rank _mt[203] this[292366]))
        unknown call_tmp[924217] "expr temp" "maybe param" "maybe type" "temp"
        (924220 'move' call_tmp[924217](292391 call - call_tmp[924212] 1))
        (292421 'move' tmp[292409](292419 call chpl_compute_low_param_loop_bound 0 call_tmp[924217]))
        unknown tmp[292410] "maybe param" "temp"
        unknown call_tmp[924224] "expr temp" "maybe param" "maybe type" "temp"
        (924227 'move' call_tmp[924224](456363 call rank _mt[203] this[292366]))
        unknown call_tmp[924229] "expr temp" "maybe param" "maybe type" "temp"
        (924232 'move' call_tmp[924229](292426 call - call_tmp[924224] 1))
        (292431 'move' tmp[292410](292429 call chpl_compute_high_param_loop_bound 0 call_tmp[924229]))
        unknown tmp[292411] "maybe param" "temp"
        (292434 'move' tmp[292411] 1)
        ParamForLoop[292436]
        { i[292388] tmp[292409] tmp[292410] tmp[292411]
          unknown call_tmp[924234] "expr temp" "maybe param" "maybe type" "temp"
          (924237 'move' call_tmp[924234](292400 call result[292381] i[292388]))
          unknown call_tmp[924241] "expr temp" "maybe param" "maybe type" "temp"
          (924244 'move' call_tmp[924241](292403 call(456357 call (partial) ranges _mt[203] this[292366]) i[292388]))
          unknown call_tmp[924248] "expr temp" "maybe param" "maybe type" "temp"
          (924251 'move' call_tmp[924248](292405 call last _mt[203] call_tmp[924241]))
          (292397 call = call_tmp[924234] call_tmp[924248])
          (567312 'end of statement' result[292381] i[292388])
        }
        label _unused_continueLabel[292413]
        label _breakLabel[292412]
      }
      (629574 'move' ret[629564](629573 'deref' result[292381]))
      gotoReturn _end_dsiLast[629562] _end_dsiLast[629562]
      (567315 'end of statement' result[292381])
    }
    label _end_dsiLast[629562]
    (629566 return ret[629564])
  }
  function DefaultRectangularDom[292740](?).dsiBuildArray[292457](arg _mt[292467]:_MT[201], arg this[292459]:DefaultRectangularDom[292740](?), arg eltType[292461]:_any[141](?), param arg initElts[292464]:bool[19]) : _unknown[42] "method" "primary method"
  {
    unknown ret[629580] "RVV" "temp"
    unknown call_tmp[924255] "expr temp" "maybe param" "maybe type" "temp"
    (924258 'move' call_tmp[924255](456377 call rank _mt[203] this[292459]))
    unknown call_tmp[924262] "expr temp" "maybe param" "maybe type" "temp"
    (924265 'move' call_tmp[924262](456382 call idxType _mt[203] this[292459]))
    unknown call_tmp[924269] "expr temp" "maybe param" "maybe type" "temp"
    (924272 'move' call_tmp[924269](456387 call strides _mt[203] this[292459]))
    unknown call_tmp[924274] "expr temp" "maybe param" "maybe type" "temp"
    (924277 'move' call_tmp[924274](292485 call _to_unmanaged this[292459]))
    unknown call_tmp[924279] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (924282 'move' call_tmp[924279](1000482 'new' DefaultRectangularArr[433493](?)(eltType = eltType[292461])(rank = call_tmp[924255])(idxType = call_tmp[924262])(strides = call_tmp[924269])(dom = call_tmp[924274])(initElts = initElts[292464])(_chpl_manager = unmanaged[183](?))))
    (629585 'move' ret[629580](629584 'deref' call_tmp[924279]))
    (629582 return ret[629580])
  }
  function DefaultRectangularDom[292740](?).doiTryCreateArray[292492](arg _mt[292498]:_MT[201], arg this[292494]:DefaultRectangularDom[292740](?), arg eltType[292496]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    unknown ret[629589] "RVV" "temp"
    unknown call_tmp[924286] "expr temp" "maybe param" "maybe type" "temp"
    (924289 'move' call_tmp[924286](456395 call rank _mt[203] this[292494]))
    unknown call_tmp[924291] "expr temp" "maybe param" "maybe type" "temp"
    (924294 'move' call_tmp[924291](292509 call != call_tmp[924286] 1))
    unknown call_tmp[924296] "expr temp" "maybe param" "maybe type" "temp"
    (924299 'move' call_tmp[924296](292513 call _cond_test call_tmp[924291]))
    if call_tmp[924296]
    {
      unknown call_tmp[924301] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (924304 'move' call_tmp[924301](1000483 'new' Error[316409](?) "'tryCreateArray' is only supported on domains of rank 1"))
      unknown call_tmp[924306] "expr temp" "maybe param" "maybe type" "temp"
      (924309 'move' call_tmp[924306](542459 call chpl_fix_thrown_error call_tmp[924301]))
      (292501 'throw' call_tmp[924306])
    }
    unknown call_tmp[924313] "expr temp" "maybe param" "maybe type" "temp"
    (924316 'move' call_tmp[924313](292524 call(456401 call (partial) ranges _mt[203] this[292494]) 0))
    unknown call_tmp[924320] "expr temp" "maybe param" "maybe type" "temp"
    (924323 'move' call_tmp[924320](292526 call size _mt[203] call_tmp[924313]))
    unknown call_tmp[924325] "maybe param" "maybe type" "temp"
    (924328 'move' call_tmp[924325](292521 call _try_ddata_allocate eltType[292496] call_tmp[924320]))
    unknown data[292519] "dead at end of block" "insert auto destroy"
    (653090 'init var' data[292519] call_tmp[924325])
    (292530 'end of statement')
    unknown call_tmp[924332] "expr temp" "maybe param" "maybe type" "temp"
    (924335 'move' call_tmp[924332](456408 call rank _mt[203] this[292494]))
    unknown call_tmp[924339] "expr temp" "maybe param" "maybe type" "temp"
    (924342 'move' call_tmp[924339](456413 call idxType _mt[203] this[292494]))
    unknown call_tmp[924346] "expr temp" "maybe param" "maybe type" "temp"
    (924349 'move' call_tmp[924346](456418 call strides _mt[203] this[292494]))
    unknown call_tmp[924351] "expr temp" "maybe param" "maybe type" "temp"
    (924354 'move' call_tmp[924351](292546 call _to_unmanaged this[292494]))
    unknown call_tmp[924356] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (924359 'move' call_tmp[924356](1000484 'new' DefaultRectangularArr[433493](?)(eltType = eltType[292496])(rank = call_tmp[924332])(idxType = call_tmp[924339])(strides = call_tmp[924346])(dom = call_tmp[924351])(data = data[292519])(_chpl_manager = unmanaged[183](?))))
    (629594 'move' ret[629589](629593 'deref' call_tmp[924356]))
    gotoReturn _end_doiTryCreateArray[629587] _end_doiTryCreateArray[629587]
    (567319 'end of statement' data[292519])
    label _end_doiTryCreateArray[629587]
    (629591 return ret[629589])
  }
  function DefaultRectangularDom[292740](?).dsiBuildArrayWith[292553](arg _mt[292569]:_MT[201], arg this[292555]:DefaultRectangularDom[292740](?), arg eltType[292557]:_any[141](?), arg data[292562] :
  (292560 call _ddata[67573](?) eltType[292557]), arg allocSize[292566]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[629600] "RVV" "temp"
    unknown call_tmp[924363] "expr temp" "maybe param" "maybe type" "temp"
    (924366 'move' call_tmp[924363](292580 call(456433 call (partial) ranges _mt[203] this[292555]) 0))
    unknown call_tmp[924370] "expr temp" "maybe param" "maybe type" "temp"
    (924373 'move' call_tmp[924370](292582 call lowBound _mt[203] call_tmp[924363]))
    unknown call_tmp[924375] "expr temp" "maybe param" "maybe type" "temp"
    (924378 'move' call_tmp[924375](292585 call chpl_build_low_bounded_range call_tmp[924370]))
    unknown call_tmp[924380] "maybe param" "maybe type" "temp"
    (924383 'move' call_tmp[924380](292577 call # call_tmp[924375] allocSize[292566]))
    unknown call_tmp[924387] "expr temp" "maybe param" "maybe type" "temp"
    (924390 'move' call_tmp[924387](456428 call idxType _mt[203] this[292555]))
    unknown call_tmp[924392] "maybe param" "maybe type" "temp"
    (924395 'move' call_tmp[924392](292575 call range[240](?) call_tmp[924387]))
    unknown allocRange[292573] "dead at end of block" "insert auto destroy"
    (653092 'init var' allocRange[292573] call_tmp[924380] call_tmp[924392])
    (292589 'end of statement')
    unknown call_tmp[924399] "expr temp" "maybe param" "maybe type" "temp"
    (924402 'move' call_tmp[924399](456441 call rank _mt[203] this[292555]))
    unknown call_tmp[924406] "expr temp" "maybe param" "maybe type" "temp"
    (924409 'move' call_tmp[924406](456446 call idxType _mt[203] this[292555]))
    unknown call_tmp[924413] "expr temp" "maybe param" "maybe type" "temp"
    (924416 'move' call_tmp[924413](456451 call strides _mt[203] this[292555]))
    unknown call_tmp[924418] "expr temp" "maybe param" "maybe type" "temp"
    (924421 'move' call_tmp[924418](292609 call _to_unmanaged this[292555]))
    unknown call_tmp[924423] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (924426 'move' call_tmp[924423](1000485 'new' DefaultRectangularArr[433493](?)(eltType = eltType[292557])(rank = call_tmp[924399])(idxType = call_tmp[924406])(strides = call_tmp[924413])(initElts = 0)(deinitElts = 1)(dom = call_tmp[924418])(data = data[292562])(_chpl_manager = unmanaged[183](?))))
    (629605 'move' ret[629600](629604 'deref' call_tmp[924423]))
    (629602 return ret[629600])
  }
  function DefaultRectangularDom[292740](?).dsiLocalSlice[292616](arg _mt[292622]:_MT[201], arg this[292618]:DefaultRectangularDom[292740](?), arg ranges[292620]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (292626 call halt "all dsiLocalSlice calls on DefaultRectangulars should be handled in ChapelArray.chpl")
    (629607 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiTargetLocales[292632](arg _mt[292636]:_MT[201], arg this[292634]:DefaultRectangularDom[292740](?)) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[629611] "RVV" "temp"
    unknown call_tmp[924428] "expr temp" "maybe param" "maybe type" "temp"
    (924431 'move' call_tmp[924428](292643 '_wide_get_locale' this[292634]))
    unknown call_tmp[924433] "expr temp" "maybe param" "maybe type" "temp"
    (924436 'move' call_tmp[924433](292644 call chpl_localeID_to_locale call_tmp[924428]))
    unknown call_tmp[924438] "expr temp" "maybe param" "maybe type" "temp"
    (924441 'move' call_tmp[924438](292641 call chpl_getSingletonLocaleArray call_tmp[924433]))
    (629616 'move' ret[629611](629615 'addr of' call_tmp[924438]))
    (629613 return ret[629611])
  }
  function DefaultRectangularDom[292740](?).dsiHasSingleLocalSubdomain[292648](arg _mt[292652]:_MT[201], arg this[292650]:DefaultRectangularDom[292740](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[629620] "RVV" "param" "temp"
    (629625 'move' ret[629620](629624 'deref' 1))
    (629622 return ret[629620])
  }
  function DefaultRectangularDom[292740](?).dsiLocalSubdomain[292659](arg _mt[292667]:_MT[201], arg this[292661]:DefaultRectangularDom[292740](?), arg loc[292664]:locale[234]) : _unknown[42] "method" "primary method"
  {
    unknown ret[629629] "RVV" "temp"
    unknown call_tmp[924443] "expr temp" "maybe param" "maybe type" "temp"
    (924446 'move' call_tmp[924443](292693 '_wide_get_locale' this[292661]))
    unknown call_tmp[924448] "expr temp" "maybe param" "maybe type" "temp"
    (924451 'move' call_tmp[924448](292694 call chpl_localeID_to_locale call_tmp[924443]))
    unknown call_tmp[924453] "expr temp" "maybe param" "maybe type" "temp"
    (924456 'move' call_tmp[924453](292690 call == call_tmp[924448] loc[292664]))
    unknown call_tmp[924458] "expr temp" "maybe param" "maybe type" "temp"
    (924461 'move' call_tmp[924458](292697 call _cond_test call_tmp[924453]))
    if call_tmp[924458]
    {
      unknown call_tmp[924463] "expr temp" "maybe param" "maybe type" "temp"
      (924466 'move' call_tmp[924463](292675 call _to_unmanaged this[292661]))
      unknown call_tmp[924468] "expr temp" "maybe param" "maybe type" "temp"
      (924471 'move' call_tmp[924468](292673 call _getDomain call_tmp[924463]))
      (629634 'move' ret[629629](629633 'deref' call_tmp[924468]))
      gotoReturn _end_dsiLocalSubdomain[629627] _end_dsiLocalSubdomain[629627]
    }
    {
      unknown a[292679] "dead at end of block" "insert auto destroy"
      unknown call_tmp[924475] "expr temp" "maybe param" "maybe type" "temp"
      (924478 'move' call_tmp[924475](456461 call rank _mt[203] this[292661]))
      unknown call_tmp[924482] "expr temp" "maybe param" "maybe type" "temp"
      (924485 'move' call_tmp[924482](456466 call idxType _mt[203] this[292661]))
      unknown call_tmp[924489] "expr temp" "maybe param" "maybe type" "temp"
      (924492 'move' call_tmp[924489](456471 call strides _mt[203] this[292661]))
      unknown call_tmp[924494] "expr temp" "maybe param" "maybe type" "temp"
      (924497 'move' call_tmp[924494](292681 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[924475] call_tmp[924482] call_tmp[924489]))
      (653094 'default init var' a[292679] call_tmp[924494])
      (292687 'end of statement')
      (629639 'move' ret[629629](629638 'deref' a[292679]))
      gotoReturn _end_dsiLocalSubdomain[629627] _end_dsiLocalSubdomain[629627]
      (567326 'end of statement' a[292679])
    }
    label _end_dsiLocalSubdomain[629627]
    (629631 return ret[629629])
  }
  function DefaultRectangularDom[292740](?).dsiLocalSubdomains[292703](arg _mt[292711]:_MT[201], arg this[292705]:DefaultRectangularDom[292740](?), arg loc[292708]:locale[234]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629645] "RVV" "temp"
    unknown yret[629649] "YVV" "temp"
    unknown call_tmp[924501] "expr temp" "maybe param" "maybe type" "temp"
    (924504 'move' call_tmp[924501](292716 call(456478 call (partial) dsiLocalSubdomain _mt[203] this[292705]) loc[292708]))
    (629652 'move' yret[629649](629651 'deref' call_tmp[924501]))
    (292714 yield yret[629649])
    (629647 return ret[629645])
  }
  function DefaultRectangularDom[292740](?).chpl_intToIdx[292720](arg _mt[292726]:_MT[201], arg this[292722]:DefaultRectangularDom[292740](?), arg i[292724]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629657] "RVV" "temp"
    unknown call_tmp[924508] "expr temp" "maybe param" "maybe type" "temp"
    (924511 'move' call_tmp[924508](292733 call idxType _mt[203] this[292722]))
    unknown call_tmp[924513] "expr temp" "maybe param" "maybe type" "temp"
    (924516 'move' call_tmp[924513](292731 call chpl__intToIdx call_tmp[924508] i[292724]))
    (629662 'move' ret[629657](629661 'deref' call_tmp[924513]))
    (629659 return ret[629657])
  }
  function DefaultRectangularDom[292740](?).super[1284149](arg _mt[1284151]:_MT[201], arg this[1284153]:DefaultRectangularDom[292740](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284163] "RVV" "temp"
    unknown call_tmp[1284170] "expr temp" "maybe param" "maybe type" "temp"
    (1284173 'move' call_tmp[1284170](1284157 '.v' this[1284153] c"super"))
    (1284168 'move' ret[1284163](1284167 'deref' call_tmp[1284170]))
    (1284165 return ret[1284163])
  }
  function DefaultRectangularDom[292740](?).dist[1284175](arg _mt[1284177]:_MT[201], arg this[1284179]:DefaultRectangularDom[292740](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284189] "RVV" "temp"
    unknown call_tmp[1284196] "expr temp" "maybe param" "maybe type" "temp"
    (1284199 'move' call_tmp[1284196](1284183 '.' this[1284179] c"dist"))
    (1284194 'move' ret[1284189](1284193 'addr of' call_tmp[1284196]))
    (1284191 return ret[1284189])
  }
  function DefaultRectangularDom[292740](?).ranges[1284201](arg _mt[1284203]:_MT[201], arg this[1284205]:DefaultRectangularDom[292740](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284215] "RVV" "temp"
    unknown call_tmp[1284222] "expr temp" "maybe param" "maybe type" "temp"
    (1284225 'move' call_tmp[1284222](1284209 '.' this[1284205] c"ranges"))
    (1284220 'move' ret[1284215](1284219 'addr of' call_tmp[1284222]))
    (1284217 return ret[1284215])
  }
  function DefaultRectangularDom[292740](?).deinit[1284227](arg _mt[1284229]:_MT[201], arg this[1284231]:DefaultRectangularDom[292740](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1284239 return _void[46])
  }
  function DefaultRectangularDom[292740](?).serialize[1284241](arg _mt[1284245]:_MT[201], arg this[1284243]:DefaultRectangularDom[292740](?), arg writer[1284244]:_any[141](?), ref arg serializer[1284249]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1284252 call serializeDefaultImpl writer[1284244] serializer[1284249] this[1284243])
    (1284258 return _void[46])
  }
  function DefaultRectangularDom[292740](?).deserialize[1284260](arg _mt[1284264]:_MT[201], arg this[1284262]:DefaultRectangularDom[292740](?), arg reader[1284263]:_any[141](?), ref arg deserializer[1284269]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1284271] "temp"
    (1284273 'move' _deser_temp[1284271] this[1284262])
    (1284276 call deserializeDefaultImpl reader[1284263] deserializer[1284269] _deser_temp[1284271])
    (1284282 return _void[46])
  }
  type DefaultRectangularDom[292740](?) val super[397687]:BaseRectangularDom[269884](?) "delay instantiation" "super class" val dist[288341]:unmanaged DefaultDist[468151] unmanaged DefaultDist[468151] unknown ranges[288347](288348 call * rank[269766](288352 call range[240](?) idxType[269771] both[107114] strides[269774]))
  type unmanaged DefaultRectangularDom?[468106](?)
  type DefaultRectangularDom?[468103](?)
  type unmanaged DefaultRectangularDom[468058](?)
  type DefaultRectangularDom[467912](?)
  type DefaultRectangularDom[424162](?)
  function chpl__intToIdx[292742](arg idxType[292744]:_any[141](?), arg i[292747]:integral[159](?), arg j[292751]:_any[141](?) ...) : _unknown[42] "inline"
  {
    unknown ret[629666] "RVV" "temp"
    unknown call_tmp[924518] "maybe param" "maybe type" "temp"
    (924521 'move' call_tmp[924518](292758 call chpl__intToIdx idxType[292744] i[292747]))
    const first[292756] "dead at end of block" "const" "insert auto destroy"
    (653096 'init var' first[292756] call_tmp[924518])
    (292762 'end of statement')
    unknown call_tmp[924523] "maybe param" "maybe type" "temp"
    (924526 'move' call_tmp[924523](292766 call chpl__intToIdx idxType[292744](292769 'expand_tuple' j[292751])))
    const rest[292764] "dead at end of block" "const" "insert auto destroy"
    (653098 'init var' rest[292764] call_tmp[924523])
    (292771 'end of statement')
    unknown call_tmp[924528] "expr temp" "maybe param" "maybe type" "temp"
    (924531 'move' call_tmp[924528](292777 call _build_tuple first[292756](292776 'expand_tuple' rest[292764])))
    (629671 'move' ret[629666](629670 'deref' call_tmp[924528]))
    gotoReturn _end_chpl__intToIdx[629664] _end_chpl__intToIdx[629664]
    (567330 'end of statement' first[292756] rest[292764])
    label _end_chpl__intToIdx[629664]
    (629668 return ret[629666])
  }
  function chpl__intToIdx[292781](arg idxType[292783]:_any[141](?), arg i[292786]:integral[159](?), arg j[292790]:integral[159](?)) : _unknown[42] "inline"
  {
    unknown ret[629677] "RVV" "temp"
    unknown call_tmp[924533] "expr temp" "maybe param" "maybe type" "temp"
    (924536 'move' call_tmp[924533](292797 call chpl__intToIdx idxType[292783] i[292786]))
    unknown call_tmp[924538] "expr temp" "maybe param" "maybe type" "temp"
    (924541 'move' call_tmp[924538](292801 call chpl__intToIdx idxType[292783] j[292790]))
    unknown call_tmp[924543] "expr temp" "maybe param" "maybe type" "temp"
    (924546 'move' call_tmp[924543](292804 call _build_tuple call_tmp[924533] call_tmp[924538]))
    (629682 'move' ret[629677](629681 'deref' call_tmp[924543]))
    (629679 return ret[629677])
  }
  function chpl__intToIdx[292808](arg idxType[292810]:_any[141](?), arg i[292813]:_tuple[246](?)) : _unknown[42] "inline"
  {
    unknown ret[629686] "RVV" "temp"
    unknown call_tmp[924548] "expr temp" "maybe param" "maybe type" "temp"
    (924551 'move' call_tmp[924548](292819 call chpl__intToIdx idxType[292810](292822 'expand_tuple' i[292813])))
    (629691 'move' ret[629686](629690 'deref' call_tmp[924548]))
    (629688 return ret[629686])
  }
  function _remoteAccessData[293000](?).hasUnitStride[292900](arg _mt[292904]:_MT[201], arg this[292902]:_remoteAccessData[293000](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[629695] "RVV" "param" "temp"
    unknown call_tmp[924555] "expr temp" "maybe param" "maybe type" "temp"
    (924558 'move' call_tmp[924555](456512 call strides _mt[203] this[292902]))
    unknown call_tmp[924560] "expr temp" "maybe param" "maybe type" "temp"
    (924563 'move' call_tmp[924560](292908 call == call_tmp[924555] one[107127]))
    (629700 'move' ret[629695](629699 'deref' call_tmp[924560]))
    (629697 return ret[629695])
  }
  function _remoteAccessData[293000](?).theData[292917](arg _mt[292921]:_MT[201], ref arg this[292919]:_remoteAccessData[293000](?)) ref : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[629704] "RVV" "temp"
    unknown call_tmp[924567] "expr temp" "maybe param" "maybe type" "temp"
    (924570 'move' call_tmp[924567](292933 call(456526 call (partial) hasUnitStride _mt[203] this[292919])))
    unknown call_tmp[924572] "expr temp" "maybe param" "maybe type" "temp"
    (924575 'move' call_tmp[924572](292930 call ! call_tmp[924567]))
    unknown call_tmp[924577] "expr temp" "maybe param" "maybe type" "temp"
    (924580 'move' call_tmp[924577](292934 call _cond_test call_tmp[924572]))
    if call_tmp[924577]
    {
      unknown call_tmp[924584] "expr temp" "maybe param" "maybe type" "temp"
      (924587 'move' call_tmp[924584](456517 call data _mt[203] this[292919]))
      (629709 'move' ret[629704](629708 'addr of' call_tmp[924584]))
      gotoReturn _end_theData[629702] _end_theData[629702]
    }
    {
      unknown call_tmp[924591] "expr temp" "maybe param" "maybe type" "temp"
      (924594 'move' call_tmp[924591](456522 call shiftedData _mt[203] this[292919]))
      (629714 'move' ret[629704](629713 'addr of' call_tmp[924591]))
      gotoReturn _end_theData[629702] _end_theData[629702]
    }
    label _end_theData[629702]
    (629706 return ret[629704])
  }
  function _remoteAccessData[293000](?).getDataElem[292940](arg _mt[292946]:_MT[201], arg this[292942]:_remoteAccessData[293000](?), arg i[292944]:_any[141](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629720] "RVV" "temp"
    unknown call_tmp[924598] "expr temp" "maybe param" "maybe type" "temp"
    (924601 'move' call_tmp[924598](292962 call(456544 call (partial) hasUnitStride _mt[203] this[292942])))
    unknown call_tmp[924603] "expr temp" "maybe param" "maybe type" "temp"
    (924606 'move' call_tmp[924603](292959 call ! call_tmp[924598]))
    unknown call_tmp[924608] "expr temp" "maybe param" "maybe type" "temp"
    (924611 'move' call_tmp[924608](292963 call _cond_test call_tmp[924603]))
    if call_tmp[924608]
    {
      unknown call_tmp[924615] "expr temp" "maybe param" "maybe type" "temp"
      (924618 'move' call_tmp[924615](292952 call(456532 call (partial) dataElem _mt[203] this[292942]) i[292944]))
      (629725 'move' ret[629720](629724 'addr of' call_tmp[924615]))
      gotoReturn _end_getDataElem[629718] _end_getDataElem[629718]
    }
    {
      unknown call_tmp[924622] "expr temp" "maybe param" "maybe type" "temp"
      (924625 'move' call_tmp[924622](292957 call(456539 call (partial) shiftedDataElem _mt[203] this[292942]) i[292944]))
      (629730 'move' ret[629720](629729 'addr of' call_tmp[924622]))
      gotoReturn _end_getDataElem[629718] _end_getDataElem[629718]
    }
    label _end_getDataElem[629718]
    (629722 return ret[629720])
  }
  function _remoteAccessData[293000](?).dataElem[292969](arg _mt[292975]:_MT[201], arg this[292971]:_remoteAccessData[293000](?), arg i[292973]:_any[141](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629736] "RVV" "temp"
    unknown call_tmp[924629] "expr temp" "maybe param" "maybe type" "temp"
    (924632 'move' call_tmp[924629](292980 call(456549 call (partial) data _mt[203] this[292971]) i[292973]))
    (629741 'move' ret[629736](629740 'addr of' call_tmp[924629]))
    (629738 return ret[629736])
  }
  function _remoteAccessData[293000](?).shiftedDataElem[292984](arg _mt[292990]:_MT[201], arg this[292986]:_remoteAccessData[293000](?), arg i[292988]:_any[141](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629745] "RVV" "temp"
    unknown call_tmp[924636] "expr temp" "maybe param" "maybe type" "temp"
    (924639 'move' call_tmp[924636](292995 call(456555 call (partial) shiftedData _mt[203] this[292986]) i[292988]))
    (629750 'move' ret[629745](629749 'addr of' call_tmp[924636]))
    (629747 return ret[629745])
  }
  function _remoteAccessData[293000](?).eltType[1284284](arg _mt[1284286]:_MT[201], arg this[1284288]:_remoteAccessData[293000](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284307] "RVV" "temp" "type variable"
    unknown call_tmp[1284321] "expr temp" "maybe param" "maybe type" "temp"
    (1284324 'move' call_tmp[1284321](1284293 'is bound' this[1284288] c"eltType"))
    if call_tmp[1284321]
    {
      unknown call_tmp[1284326] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1284329 'move' call_tmp[1284326](1284292 '.v' this[1284288] c"eltType"))
      (1284312 'move' ret[1284307](1284311 'deref' call_tmp[1284326]))
      gotoReturn _end_eltType[1284305] _end_eltType[1284305]
    }
    {
      (1284317 'move' ret[1284307](1284316 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1284305] _end_eltType[1284305]
    }
    label _end_eltType[1284305]
    (1284309 return ret[1284307])
  }
  function _remoteAccessData[293000](?).eltType[1284331](arg _mt[1284333]:_MT[201], arg this[1284335]:_remoteAccessData[293000](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284354] "RVV" "temp" "type variable"
    unknown call_tmp[1284368] "expr temp" "maybe param" "maybe type" "temp"
    (1284371 'move' call_tmp[1284368](1284340 'is bound' this[1284335] c"eltType"))
    if call_tmp[1284368]
    {
      unknown call_tmp[1284373] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1284376 'move' call_tmp[1284373](1284339 '.v' this[1284335] c"eltType"))
      (1284359 'move' ret[1284354](1284358 'deref' call_tmp[1284373]))
      gotoReturn _end_eltType[1284352] _end_eltType[1284352]
    }
    {
      (1284364 'move' ret[1284354](1284363 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1284352] _end_eltType[1284352]
    }
    label _end_eltType[1284352]
    (1284356 return ret[1284354])
  }
  function _remoteAccessData[293000](?).rank[1284378](arg _mt[1284380]:_MT[201], arg this[1284382]:_remoteAccessData[293000](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284401] "RVV" "param" "temp"
    unknown call_tmp[1284415] "expr temp" "maybe param" "maybe type" "temp"
    (1284418 'move' call_tmp[1284415](1284387 'is bound' this[1284382] c"rank"))
    if call_tmp[1284415]
    {
      unknown call_tmp[1284420] "expr temp" "maybe param" "maybe type" "temp"
      (1284423 'move' call_tmp[1284420](1284386 '.' this[1284382] c"rank"))
      (1284406 'move' ret[1284401](1284405 'deref' call_tmp[1284420]))
      gotoReturn _end_rank[1284399] _end_rank[1284399]
    }
    {
      (1284411 'move' ret[1284401](1284410 'deref' ?[227]))
      gotoReturn _end_rank[1284399] _end_rank[1284399]
    }
    label _end_rank[1284399]
    (1284403 return ret[1284401])
  }
  function _remoteAccessData[293000](?).rank[1284425](arg _mt[1284427]:_MT[201], arg this[1284429]:_remoteAccessData[293000](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284448] "RVV" "param" "temp"
    unknown call_tmp[1284462] "expr temp" "maybe param" "maybe type" "temp"
    (1284465 'move' call_tmp[1284462](1284434 'is bound' this[1284429] c"rank"))
    if call_tmp[1284462]
    {
      unknown call_tmp[1284467] "expr temp" "maybe param" "maybe type" "temp"
      (1284470 'move' call_tmp[1284467](1284433 '.' this[1284429] c"rank"))
      (1284453 'move' ret[1284448](1284452 'deref' call_tmp[1284467]))
      gotoReturn _end_rank[1284446] _end_rank[1284446]
    }
    {
      (1284458 'move' ret[1284448](1284457 'deref' ?[227]))
      gotoReturn _end_rank[1284446] _end_rank[1284446]
    }
    label _end_rank[1284446]
    (1284450 return ret[1284448])
  }
  function _remoteAccessData[293000](?).idxType[1284472](arg _mt[1284474]:_MT[201], arg this[1284476]:_remoteAccessData[293000](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284495] "RVV" "temp" "type variable"
    unknown call_tmp[1284509] "expr temp" "maybe param" "maybe type" "temp"
    (1284512 'move' call_tmp[1284509](1284481 'is bound' this[1284476] c"idxType"))
    if call_tmp[1284509]
    {
      unknown call_tmp[1284514] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1284517 'move' call_tmp[1284514](1284480 '.v' this[1284476] c"idxType"))
      (1284500 'move' ret[1284495](1284499 'deref' call_tmp[1284514]))
      gotoReturn _end_idxType[1284493] _end_idxType[1284493]
    }
    {
      (1284505 'move' ret[1284495](1284504 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1284493] _end_idxType[1284493]
    }
    label _end_idxType[1284493]
    (1284497 return ret[1284495])
  }
  function _remoteAccessData[293000](?).idxType[1284519](arg _mt[1284521]:_MT[201], arg this[1284523]:_remoteAccessData[293000](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284542] "RVV" "temp" "type variable"
    unknown call_tmp[1284556] "expr temp" "maybe param" "maybe type" "temp"
    (1284559 'move' call_tmp[1284556](1284528 'is bound' this[1284523] c"idxType"))
    if call_tmp[1284556]
    {
      unknown call_tmp[1284561] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1284564 'move' call_tmp[1284561](1284527 '.v' this[1284523] c"idxType"))
      (1284547 'move' ret[1284542](1284546 'deref' call_tmp[1284561]))
      gotoReturn _end_idxType[1284540] _end_idxType[1284540]
    }
    {
      (1284552 'move' ret[1284542](1284551 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1284540] _end_idxType[1284540]
    }
    label _end_idxType[1284540]
    (1284544 return ret[1284542])
  }
  function _remoteAccessData[293000](?).strides[1284566](arg _mt[1284568]:_MT[201], arg this[1284570]:_remoteAccessData[293000](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284589] "RVV" "param" "temp"
    unknown call_tmp[1284603] "expr temp" "maybe param" "maybe type" "temp"
    (1284606 'move' call_tmp[1284603](1284575 'is bound' this[1284570] c"strides"))
    if call_tmp[1284603]
    {
      unknown call_tmp[1284608] "expr temp" "maybe param" "maybe type" "temp"
      (1284611 'move' call_tmp[1284608](1284574 '.' this[1284570] c"strides"))
      (1284594 'move' ret[1284589](1284593 'deref' call_tmp[1284608]))
      gotoReturn _end_strides[1284587] _end_strides[1284587]
    }
    {
      (1284599 'move' ret[1284589](1284598 'deref' ?[227]))
      gotoReturn _end_strides[1284587] _end_strides[1284587]
    }
    label _end_strides[1284587]
    (1284591 return ret[1284589])
  }
  function _remoteAccessData[293000](?).strides[1284613](arg _mt[1284615]:_MT[201], arg this[1284617]:_remoteAccessData[293000](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284636] "RVV" "param" "temp"
    unknown call_tmp[1284650] "expr temp" "maybe param" "maybe type" "temp"
    (1284653 'move' call_tmp[1284650](1284622 'is bound' this[1284617] c"strides"))
    if call_tmp[1284650]
    {
      unknown call_tmp[1284655] "expr temp" "maybe param" "maybe type" "temp"
      (1284658 'move' call_tmp[1284655](1284621 '.' this[1284617] c"strides"))
      (1284641 'move' ret[1284636](1284640 'deref' call_tmp[1284655]))
      gotoReturn _end_strides[1284634] _end_strides[1284634]
    }
    {
      (1284646 'move' ret[1284636](1284645 'deref' ?[227]))
      gotoReturn _end_strides[1284634] _end_strides[1284634]
    }
    label _end_strides[1284634]
    (1284638 return ret[1284636])
  }
  function _remoteAccessData[293000](?).blkChanged[1284660](arg _mt[1284662]:_MT[201], arg this[1284664]:_remoteAccessData[293000](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284683] "RVV" "param" "temp"
    unknown call_tmp[1284697] "expr temp" "maybe param" "maybe type" "temp"
    (1284700 'move' call_tmp[1284697](1284669 'is bound' this[1284664] c"blkChanged"))
    if call_tmp[1284697]
    {
      unknown call_tmp[1284702] "expr temp" "maybe param" "maybe type" "temp"
      (1284705 'move' call_tmp[1284702](1284668 '.' this[1284664] c"blkChanged"))
      (1284688 'move' ret[1284683](1284687 'deref' call_tmp[1284702]))
      gotoReturn _end_blkChanged[1284681] _end_blkChanged[1284681]
    }
    {
      (1284693 'move' ret[1284683](1284692 'deref' ?[227]))
      gotoReturn _end_blkChanged[1284681] _end_blkChanged[1284681]
    }
    label _end_blkChanged[1284681]
    (1284685 return ret[1284683])
  }
  function _remoteAccessData[293000](?).blkChanged[1284707](arg _mt[1284709]:_MT[201], arg this[1284711]:_remoteAccessData[293000](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1284730] "RVV" "param" "temp"
    unknown call_tmp[1284744] "expr temp" "maybe param" "maybe type" "temp"
    (1284747 'move' call_tmp[1284744](1284716 'is bound' this[1284711] c"blkChanged"))
    if call_tmp[1284744]
    {
      unknown call_tmp[1284749] "expr temp" "maybe param" "maybe type" "temp"
      (1284752 'move' call_tmp[1284749](1284715 '.' this[1284711] c"blkChanged"))
      (1284735 'move' ret[1284730](1284734 'deref' call_tmp[1284749]))
      gotoReturn _end_blkChanged[1284728] _end_blkChanged[1284728]
    }
    {
      (1284740 'move' ret[1284730](1284739 'deref' ?[227]))
      gotoReturn _end_blkChanged[1284728] _end_blkChanged[1284728]
    }
    label _end_blkChanged[1284728]
    (1284732 return ret[1284730])
  }
  function _remoteAccessData[293000](?).off[1284754](arg _mt[1284756]:_MT[201], ref arg this[1284758]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284768] "RVV" "temp"
    unknown call_tmp[1284775] "expr temp" "maybe param" "maybe type" "temp"
    (1284778 'move' call_tmp[1284775](1284762 '.' this[1284758] c"off"))
    (1284773 'move' ret[1284768](1284772 'addr of' call_tmp[1284775]))
    (1284770 return ret[1284768])
  }
  function _remoteAccessData[293000](?).blk[1284780](arg _mt[1284782]:_MT[201], ref arg this[1284784]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284794] "RVV" "temp"
    unknown call_tmp[1284801] "expr temp" "maybe param" "maybe type" "temp"
    (1284804 'move' call_tmp[1284801](1284788 '.' this[1284784] c"blk"))
    (1284799 'move' ret[1284794](1284798 'addr of' call_tmp[1284801]))
    (1284796 return ret[1284794])
  }
  function _remoteAccessData[293000](?).str[1284806](arg _mt[1284808]:_MT[201], ref arg this[1284810]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284820] "RVV" "temp"
    unknown call_tmp[1284827] "expr temp" "maybe param" "maybe type" "temp"
    (1284830 'move' call_tmp[1284827](1284814 '.' this[1284810] c"str"))
    (1284825 'move' ret[1284820](1284824 'addr of' call_tmp[1284827]))
    (1284822 return ret[1284820])
  }
  function _remoteAccessData[293000](?).origin[1284832](arg _mt[1284834]:_MT[201], ref arg this[1284836]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284846] "RVV" "temp"
    unknown call_tmp[1284853] "expr temp" "maybe param" "maybe type" "temp"
    (1284856 'move' call_tmp[1284853](1284840 '.' this[1284836] c"origin"))
    (1284851 'move' ret[1284846](1284850 'addr of' call_tmp[1284853]))
    (1284848 return ret[1284846])
  }
  function _remoteAccessData[293000](?).factoredOffs[1284858](arg _mt[1284860]:_MT[201], ref arg this[1284862]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284872] "RVV" "temp"
    unknown call_tmp[1284879] "expr temp" "maybe param" "maybe type" "temp"
    (1284882 'move' call_tmp[1284879](1284866 '.' this[1284862] c"factoredOffs"))
    (1284877 'move' ret[1284872](1284876 'addr of' call_tmp[1284879]))
    (1284874 return ret[1284872])
  }
  function _remoteAccessData[293000](?).data[1284884](arg _mt[1284886]:_MT[201], ref arg this[1284888]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284898] "RVV" "temp"
    unknown call_tmp[1284905] "expr temp" "maybe param" "maybe type" "temp"
    (1284908 'move' call_tmp[1284905](1284892 '.' this[1284888] c"data"))
    (1284903 'move' ret[1284898](1284902 'addr of' call_tmp[1284905]))
    (1284900 return ret[1284898])
  }
  function _remoteAccessData[293000](?).shiftedData[1284910](arg _mt[1284912]:_MT[201], ref arg this[1284914]:_remoteAccessData[293000](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1284924] "RVV" "temp"
    unknown call_tmp[1284931] "expr temp" "maybe param" "maybe type" "temp"
    (1284934 'move' call_tmp[1284931](1284918 '.' this[1284914] c"shiftedData"))
    (1284929 'move' ret[1284924](1284928 'addr of' call_tmp[1284931]))
    (1284926 return ret[1284924])
  }
  function _remoteAccessData[293000](?).init[1284936](arg _mt[1284938]:_MT[201], ref arg this[1284939]:_remoteAccessData[293000](?), arg eltType[1284942]:_any[141](?), param arg rank[1284951]:int(64)[10], arg idxType[1284961]:_any[141](?), param arg strides[1284970]:strideKind[107137], param arg blkChanged[1284980]:bool[19] :
  bool[19] =
  0, in arg off[1284993] :
  (1284996 call * rank[1284951] idxType[1284961]) =
  _typeDefaultT[217], in arg blk[1285009] :
  (1285012 call * rank[1284951] int(64)[10]) =
  _typeDefaultT[217], in arg str[1285025] :
  unknown call_tmp[1285151] "expr temp" "maybe param" "maybe type" "temp" =
  _typeDefaultT[217], in arg origin[1285045]:int(64)[10] =
  _typeDefaultT[217], in arg factoredOffs[1285056]:int(64)[10] =
  _typeDefaultT[217], in arg data[1285067] :
  (1285070 call _ddata[67573](?) eltType[1284942]) =
  _typeDefaultT[217], in arg shiftedData[1285082] :
  (1285085 call _ddata[67573](?) eltType[1284942]) =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1285098 'init field' this[1284939] c"eltType" eltType[1284942])
    unknown call_tmp[1285161] "expr temp" "maybe param" "maybe type" "temp"
    (1285164 'move' call_tmp[1285161](1285102 call : rank[1284951] int(64)[10]))
    (1285104 'init field' this[1284939] c"rank" call_tmp[1285161])
    (1285143 'end of statement')
    (1285107 'init field' this[1284939] c"idxType" idxType[1284961])
    unknown call_tmp[1285166] "expr temp" "maybe param" "maybe type" "temp"
    (1285169 'move' call_tmp[1285166](1285111 call : strides[1284970] strideKind[107137]))
    (1285113 'init field' this[1284939] c"strides" call_tmp[1285166])
    (1285144 'end of statement')
    unknown call_tmp[1285171] "expr temp" "maybe param" "maybe type" "temp"
    (1285174 'move' call_tmp[1285171](1285117 call : blkChanged[1284980] bool[19]))
    (1285119 'init field' this[1284939] c"blkChanged" call_tmp[1285171])
    (1285122 'init field' this[1284939] c"off" off[1284993])
    (1285145 'end of statement')
    (1285125 'init field' this[1284939] c"blk" blk[1285009])
    (1285128 'init field' this[1284939] c"str" str[1285025])
    (1285146 'end of statement')
    (1285131 'init field' this[1284939] c"origin" origin[1285045])
    (1285134 'init field' this[1284939] c"factoredOffs" factoredOffs[1285056])
    (1285147 'end of statement')
    (1285137 'init field' this[1284939] c"data" data[1285067])
    (1285140 'init field' this[1284939] c"shiftedData" shiftedData[1285082])
    (1285148 'end of statement')
    (1285149 return _void[46])
  }
  function _remoteAccessData[293000](?).init=[1285176](arg _mt[1285179]:_MT[201], ref arg this[1285180]:_remoteAccessData[293000](?), arg other[1285183] :
  (1285182 'typeof' this[1285180])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown eltType[1285308] "temp" "type variable"
    (1285310 'move' eltType[1285308](1285192 call eltType _mt[203] other[1285183]))
    (1285312 'init field' this[1285180] c"eltType" eltType[1285308])
    unknown call_tmp[1285459] "expr temp" "maybe param" "maybe type" "temp"
    (1285462 'move' call_tmp[1285459](1285202 call rank _mt[203] other[1285183]))
    unknown call_tmp[1285464] "expr temp" "maybe param" "maybe type" "temp"
    (1285467 'move' call_tmp[1285464](1285317 call : call_tmp[1285459] int(64)[10]))
    (1285319 'init field' this[1285180] c"rank" call_tmp[1285464])
    (1285443 'end of statement')
    unknown idxType[1285322] "temp" "type variable"
    (1285324 'move' idxType[1285322](1285212 call idxType _mt[203] other[1285183]))
    (1285326 'init field' this[1285180] c"idxType" idxType[1285322])
    unknown call_tmp[1285473] "expr temp" "maybe param" "maybe type" "temp"
    (1285476 'move' call_tmp[1285473](1285222 call strides _mt[203] other[1285183]))
    unknown call_tmp[1285478] "expr temp" "maybe param" "maybe type" "temp"
    (1285481 'move' call_tmp[1285478](1285331 call : call_tmp[1285473] strideKind[107137]))
    (1285333 'init field' this[1285180] c"strides" call_tmp[1285478])
    (1285444 'end of statement')
    unknown call_tmp[1285485] "expr temp" "maybe param" "maybe type" "temp"
    (1285488 'move' call_tmp[1285485](1285232 call blkChanged _mt[203] other[1285183]))
    unknown call_tmp[1285490] "expr temp" "maybe param" "maybe type" "temp"
    (1285493 'move' call_tmp[1285490](1285337 call : call_tmp[1285485] bool[19]))
    (1285339 'init field' this[1285180] c"blkChanged" call_tmp[1285490])
    (1285445 'end of statement')
    unknown call_tmp[1285497] "maybe param" "maybe type" "temp"
    (1285500 'move' call_tmp[1285497](1285242 call off _mt[203] other[1285183]))
    unknown call_tmp[1285502] "expr temp" "maybe param" "maybe type" "temp"
    (1285505 'move' call_tmp[1285502](1285354 '.v' this[1285180] c"rank"))
    unknown call_tmp[1285507] "expr temp" "maybe param" "maybe type" "temp"
    (1285510 'move' call_tmp[1285507](1285357 '.v' this[1285180] c"idxType"))
    unknown call_tmp[1285512] "maybe param" "maybe type" "temp"
    (1285515 'move' call_tmp[1285512](1285345 call * call_tmp[1285502] call_tmp[1285507]))
    unknown off[1285342] "temp"
    (1285348 'init var' off[1285342] call_tmp[1285497] call_tmp[1285512])
    (1285350 'init field' this[1285180] c"off" off[1285342])
    (1285446 'end of statement')
    unknown call_tmp[1285519] "maybe param" "maybe type" "temp"
    (1285522 'move' call_tmp[1285519](1285252 call blk _mt[203] other[1285183]))
    unknown call_tmp[1285524] "expr temp" "maybe param" "maybe type" "temp"
    (1285527 'move' call_tmp[1285524](1285372 '.v' this[1285180] c"rank"))
    unknown call_tmp[1285529] "maybe param" "maybe type" "temp"
    (1285532 'move' call_tmp[1285529](1285363 call * call_tmp[1285524] int(64)[10]))
    unknown blk[1285360] "temp"
    (1285366 'init var' blk[1285360] call_tmp[1285519] call_tmp[1285529])
    (1285368 'init field' this[1285180] c"blk" blk[1285360])
    (1285447 'end of statement')
    unknown call_tmp[1285536] "maybe param" "maybe type" "temp"
    (1285539 'move' call_tmp[1285536](1285262 call str _mt[203] other[1285183]))
    unknown call_tmp[1285541] "expr temp" "maybe param" "maybe type" "temp"
    (1285544 'move' call_tmp[1285541](1285391 '.v' this[1285180] c"rank"))
    unknown call_tmp[1285546] "expr temp" "maybe param" "maybe type" "temp"
    (1285549 'move' call_tmp[1285546](1285394 '.v' this[1285180] c"idxType"))
    unknown call_tmp[1285551] "expr temp" "maybe param" "maybe type" "temp"
    (1285554 'move' call_tmp[1285551](1285383 call chpl__idxTypeToIntIdxType call_tmp[1285546]))
    unknown call_tmp[1285556] "expr temp" "maybe param" "maybe type" "temp"
    (1285559 'move' call_tmp[1285556](1285381 call chpl__signedType call_tmp[1285551]))
    unknown call_tmp[1285561] "maybe param" "maybe type" "temp"
    (1285564 'move' call_tmp[1285561](1285378 call * call_tmp[1285541] call_tmp[1285556]))
    unknown str[1285375] "temp"
    (1285385 'init var' str[1285375] call_tmp[1285536] call_tmp[1285561])
    (1285387 'init field' this[1285180] c"str" str[1285375])
    (1285448 'end of statement')
    unknown call_tmp[1285568] "maybe param" "maybe type" "temp"
    (1285571 'move' call_tmp[1285568](1285272 call origin _mt[203] other[1285183]))
    unknown origin[1285397] "temp"
    (1285400 'init var' origin[1285397] call_tmp[1285568] int(64)[10])
    (1285402 'init field' this[1285180] c"origin" origin[1285397])
    (1285449 'end of statement')
    unknown call_tmp[1285575] "maybe param" "maybe type" "temp"
    (1285578 'move' call_tmp[1285575](1285282 call factoredOffs _mt[203] other[1285183]))
    unknown factoredOffs[1285406] "temp"
    (1285409 'init var' factoredOffs[1285406] call_tmp[1285575] int(64)[10])
    (1285411 'init field' this[1285180] c"factoredOffs" factoredOffs[1285406])
    (1285450 'end of statement')
    unknown call_tmp[1285582] "maybe param" "maybe type" "temp"
    (1285585 'move' call_tmp[1285582](1285292 call data _mt[203] other[1285183]))
    unknown call_tmp[1285587] "expr temp" "maybe param" "maybe type" "temp"
    (1285590 'move' call_tmp[1285587](1285426 '.v' this[1285180] c"eltType"))
    unknown call_tmp[1285592] "maybe param" "maybe type" "temp"
    (1285595 'move' call_tmp[1285592](1285418 call _ddata[67573](?) call_tmp[1285587]))
    unknown data[1285415] "temp"
    (1285420 'init var' data[1285415] call_tmp[1285582] call_tmp[1285592])
    (1285422 'init field' this[1285180] c"data" data[1285415])
    (1285451 'end of statement')
    unknown call_tmp[1285599] "maybe param" "maybe type" "temp"
    (1285602 'move' call_tmp[1285599](1285302 call shiftedData _mt[203] other[1285183]))
    unknown call_tmp[1285604] "expr temp" "maybe param" "maybe type" "temp"
    (1285607 'move' call_tmp[1285604](1285440 '.v' this[1285180] c"eltType"))
    unknown call_tmp[1285609] "maybe param" "maybe type" "temp"
    (1285612 'move' call_tmp[1285609](1285432 call _ddata[67573](?) call_tmp[1285604]))
    unknown shiftedData[1285429] "temp"
    (1285434 'init var' shiftedData[1285429] call_tmp[1285599] call_tmp[1285609])
    (1285436 'init field' this[1285180] c"shiftedData" shiftedData[1285429])
    (1285452 'end of statement')
    (1285453 return _void[46])
  }
  function _remoteAccessData[293000](?).deinit[1285614](arg _mt[1285616]:_MT[201], arg this[1285618]:_remoteAccessData[293000](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1285626 return _void[46])
  }
  function _remoteAccessData[293000](?).serialize[1285628](arg _mt[1285632]:_MT[201], arg this[1285630]:_remoteAccessData[293000](?), arg writer[1285631]:_any[141](?), ref arg serializer[1285636]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1285639 call serializeDefaultImpl writer[1285631] serializer[1285636] this[1285630])
    (1285645 return _void[46])
  }
  function _remoteAccessData[293000](?).deserialize[1285647](arg _mt[1285651]:_MT[201], ref arg this[1285649]:_remoteAccessData[293000](?), arg reader[1285650]:_any[141](?), ref arg deserializer[1285656]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1285658] "temp"
    (1285660 'move' _deser_temp[1285658] this[1285649])
    (1285663 call deserializeDefaultImpl reader[1285650] deserializer[1285656] _deser_temp[1285658])
    (1285669 return _void[46])
  }
  function _remoteAccessData[293000](?).=[1285671](arg _mt[1285673]:_MT[201], arg this[1285675]:_remoteAccessData[293000](?), ref arg _arg1[1285677]:_remoteAccessData[293000](?), const?  ref arg _arg2[1285678]:_remoteAccessData[293000](?)) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1285770] "expr temp" "maybe param" "maybe type" "temp"
    (1285773 'move' call_tmp[1285770](1285688 call off _mt[203] _arg1[1285677]))
    unknown call_tmp[1285777] "expr temp" "maybe param" "maybe type" "temp"
    (1285780 'move' call_tmp[1285777](1285692 call off _mt[203] _arg2[1285678]))
    (1285696 call = call_tmp[1285770] call_tmp[1285777])
    (1285759 'end of statement')
    unknown call_tmp[1285784] "expr temp" "maybe param" "maybe type" "temp"
    (1285787 'move' call_tmp[1285784](1285698 call blk _mt[203] _arg1[1285677]))
    unknown call_tmp[1285791] "expr temp" "maybe param" "maybe type" "temp"
    (1285794 'move' call_tmp[1285791](1285702 call blk _mt[203] _arg2[1285678]))
    (1285706 call = call_tmp[1285784] call_tmp[1285791])
    (1285760 'end of statement')
    unknown call_tmp[1285798] "expr temp" "maybe param" "maybe type" "temp"
    (1285801 'move' call_tmp[1285798](1285708 call str _mt[203] _arg1[1285677]))
    unknown call_tmp[1285805] "expr temp" "maybe param" "maybe type" "temp"
    (1285808 'move' call_tmp[1285805](1285712 call str _mt[203] _arg2[1285678]))
    (1285716 call = call_tmp[1285798] call_tmp[1285805])
    (1285761 'end of statement')
    unknown call_tmp[1285812] "expr temp" "maybe param" "maybe type" "temp"
    (1285815 'move' call_tmp[1285812](1285718 call origin _mt[203] _arg1[1285677]))
    unknown call_tmp[1285819] "expr temp" "maybe param" "maybe type" "temp"
    (1285822 'move' call_tmp[1285819](1285722 call origin _mt[203] _arg2[1285678]))
    (1285726 call = call_tmp[1285812] call_tmp[1285819])
    (1285762 'end of statement')
    unknown call_tmp[1285826] "expr temp" "maybe param" "maybe type" "temp"
    (1285829 'move' call_tmp[1285826](1285728 call factoredOffs _mt[203] _arg1[1285677]))
    unknown call_tmp[1285833] "expr temp" "maybe param" "maybe type" "temp"
    (1285836 'move' call_tmp[1285833](1285732 call factoredOffs _mt[203] _arg2[1285678]))
    (1285736 call = call_tmp[1285826] call_tmp[1285833])
    (1285763 'end of statement')
    unknown call_tmp[1285840] "expr temp" "maybe param" "maybe type" "temp"
    (1285843 'move' call_tmp[1285840](1285738 call data _mt[203] _arg1[1285677]))
    unknown call_tmp[1285847] "expr temp" "maybe param" "maybe type" "temp"
    (1285850 'move' call_tmp[1285847](1285742 call data _mt[203] _arg2[1285678]))
    (1285746 call = call_tmp[1285840] call_tmp[1285847])
    (1285764 'end of statement')
    unknown call_tmp[1285854] "expr temp" "maybe param" "maybe type" "temp"
    (1285857 'move' call_tmp[1285854](1285748 call shiftedData _mt[203] _arg1[1285677]))
    unknown call_tmp[1285861] "expr temp" "maybe param" "maybe type" "temp"
    (1285864 'move' call_tmp[1285861](1285752 call shiftedData _mt[203] _arg2[1285678]))
    (1285756 call = call_tmp[1285854] call_tmp[1285861])
    (1285766 return _void[46])
  }
  where {
    unknown call_tmp[1285866] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1285869 'move' call_tmp[1285866](1285681 'typeof' _arg1[1285677]))
    unknown call_tmp[1285871] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1285874 'move' call_tmp[1285871](1285683 'typeof' _arg2[1285678]))
    (1285685 call == call_tmp[1285866] call_tmp[1285871])
  }
  function _remoteAccessData[293000](?).hash[1285876](arg _mt[1285879]:_MT[201], arg this[1285878]:_remoteAccessData[293000](?)) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1285953] "RVV" "temp"
    unknown call_tmp[1285960] "expr temp" "maybe param" "maybe type" "temp"
    (1285963 'move' call_tmp[1285960](1285938 call shiftedData _mt[203] this[1285878]))
    unknown call_tmp[1285965] "expr temp" "maybe param" "maybe type" "temp"
    (1285968 'move' call_tmp[1285965](1285942 call hash _mt[203] call_tmp[1285960]))
    unknown call_tmp[1285970] "expr temp" "maybe param" "maybe type" "temp"
    (1285973 'move' call_tmp[1285970](1285928 call data _mt[203] this[1285878]))
    unknown call_tmp[1285975] "expr temp" "maybe param" "maybe type" "temp"
    (1285978 'move' call_tmp[1285975](1285932 call hash _mt[203] call_tmp[1285970]))
    unknown call_tmp[1285980] "expr temp" "maybe param" "maybe type" "temp"
    (1285983 'move' call_tmp[1285980](1285918 call factoredOffs _mt[203] this[1285878]))
    unknown call_tmp[1285985] "expr temp" "maybe param" "maybe type" "temp"
    (1285988 'move' call_tmp[1285985](1285922 call hash _mt[203] call_tmp[1285980]))
    unknown call_tmp[1285990] "expr temp" "maybe param" "maybe type" "temp"
    (1285993 'move' call_tmp[1285990](1285908 call origin _mt[203] this[1285878]))
    unknown call_tmp[1285995] "expr temp" "maybe param" "maybe type" "temp"
    (1285998 'move' call_tmp[1285995](1285912 call hash _mt[203] call_tmp[1285990]))
    unknown call_tmp[1286000] "expr temp" "maybe param" "maybe type" "temp"
    (1286003 'move' call_tmp[1286000](1285898 call str _mt[203] this[1285878]))
    unknown call_tmp[1286005] "expr temp" "maybe param" "maybe type" "temp"
    (1286008 'move' call_tmp[1286005](1285902 call hash _mt[203] call_tmp[1286000]))
    unknown call_tmp[1286010] "expr temp" "maybe param" "maybe type" "temp"
    (1286013 'move' call_tmp[1286010](1285888 call blk _mt[203] this[1285878]))
    unknown call_tmp[1286015] "expr temp" "maybe param" "maybe type" "temp"
    (1286018 'move' call_tmp[1286015](1285892 call hash _mt[203] call_tmp[1286010]))
    unknown call_tmp[1286020] "expr temp" "maybe param" "maybe type" "temp"
    (1286023 'move' call_tmp[1286020](1285882 call off _mt[203] this[1285878]))
    unknown call_tmp[1286025] "expr temp" "maybe param" "maybe type" "temp"
    (1286028 'move' call_tmp[1286025](1285886 call chpl__defaultHashWrapperInner call_tmp[1286020]))
    unknown call_tmp[1286030] "expr temp" "maybe param" "maybe type" "temp"
    (1286033 'move' call_tmp[1286030](1285895 call chpl__defaultHashCombine call_tmp[1286015] call_tmp[1286025] 7))
    unknown call_tmp[1286035] "expr temp" "maybe param" "maybe type" "temp"
    (1286038 'move' call_tmp[1286035](1285905 call chpl__defaultHashCombine call_tmp[1286005] call_tmp[1286030] 8))
    unknown call_tmp[1286040] "expr temp" "maybe param" "maybe type" "temp"
    (1286043 'move' call_tmp[1286040](1285915 call chpl__defaultHashCombine call_tmp[1285995] call_tmp[1286035] 9))
    unknown call_tmp[1286045] "expr temp" "maybe param" "maybe type" "temp"
    (1286048 'move' call_tmp[1286045](1285925 call chpl__defaultHashCombine call_tmp[1285985] call_tmp[1286040] 10))
    unknown call_tmp[1286050] "expr temp" "maybe param" "maybe type" "temp"
    (1286053 'move' call_tmp[1286050](1285935 call chpl__defaultHashCombine call_tmp[1285975] call_tmp[1286045] 11))
    unknown call_tmp[1286055] "expr temp" "maybe param" "maybe type" "temp"
    (1286058 'move' call_tmp[1286055](1285945 call chpl__defaultHashCombine call_tmp[1285965] call_tmp[1286050] 12))
    (1285958 'move' ret[1285953](1285957 'deref' call_tmp[1286055]))
    (1285955 return ret[1285953])
  }
  function chpl_fields_are_comparable[1286076](arg _arg1[1286078]:_remoteAccessData[293000](?), arg _arg2[1286079]:_remoteAccessData[293000](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1286188]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1286195] "expr temp" "maybe param" "maybe type" "temp"
    (1286198 'move' call_tmp[1286195](1286082 call rank _mt[203] _arg1[1286078]))
    unknown call_tmp[1286200] "expr temp" "maybe param" "maybe type" "temp"
    (1286203 'move' call_tmp[1286200](1286086 call rank _mt[203] _arg2[1286079]))
    unknown call_tmp[1286205] "expr temp" "maybe param" "maybe type" "temp"
    (1286208 'move' call_tmp[1286205](1286090 'call resolves' c"==" call_tmp[1286195] call_tmp[1286200]))
    unknown call_tmp[1286210] "expr temp" "maybe param" "maybe type" "temp"
    (1286213 'move' call_tmp[1286210](1286092 call strides _mt[203] _arg1[1286078]))
    unknown call_tmp[1286215] "expr temp" "maybe param" "maybe type" "temp"
    (1286218 'move' call_tmp[1286215](1286096 call strides _mt[203] _arg2[1286079]))
    unknown call_tmp[1286220] "expr temp" "maybe param" "maybe type" "temp"
    (1286223 'move' call_tmp[1286220](1286100 'call resolves' c"==" call_tmp[1286210] call_tmp[1286215]))
    unknown call_tmp[1286225] "expr temp" "maybe param" "maybe type" "temp"
    (1286228 'move' call_tmp[1286225](1286102 call blkChanged _mt[203] _arg1[1286078]))
    unknown call_tmp[1286230] "expr temp" "maybe param" "maybe type" "temp"
    (1286233 'move' call_tmp[1286230](1286106 call blkChanged _mt[203] _arg2[1286079]))
    unknown call_tmp[1286235] "expr temp" "maybe param" "maybe type" "temp"
    (1286238 'move' call_tmp[1286235](1286110 'call resolves' c"==" call_tmp[1286225] call_tmp[1286230]))
    unknown call_tmp[1286240] "expr temp" "maybe param" "maybe type" "temp"
    (1286243 'move' call_tmp[1286240](1286112 call off _mt[203] _arg1[1286078]))
    unknown call_tmp[1286245] "expr temp" "maybe param" "maybe type" "temp"
    (1286248 'move' call_tmp[1286245](1286116 call off _mt[203] _arg2[1286079]))
    unknown call_tmp[1286250] "expr temp" "maybe param" "maybe type" "temp"
    (1286253 'move' call_tmp[1286250](1286120 'call resolves' c"==" call_tmp[1286240] call_tmp[1286245]))
    unknown call_tmp[1286255] "expr temp" "maybe param" "maybe type" "temp"
    (1286258 'move' call_tmp[1286255](1286122 call blk _mt[203] _arg1[1286078]))
    unknown call_tmp[1286260] "expr temp" "maybe param" "maybe type" "temp"
    (1286263 'move' call_tmp[1286260](1286126 call blk _mt[203] _arg2[1286079]))
    unknown call_tmp[1286265] "expr temp" "maybe param" "maybe type" "temp"
    (1286268 'move' call_tmp[1286265](1286130 'call resolves' c"==" call_tmp[1286255] call_tmp[1286260]))
    unknown call_tmp[1286270] "expr temp" "maybe param" "maybe type" "temp"
    (1286273 'move' call_tmp[1286270](1286132 call str _mt[203] _arg1[1286078]))
    unknown call_tmp[1286275] "expr temp" "maybe param" "maybe type" "temp"
    (1286278 'move' call_tmp[1286275](1286136 call str _mt[203] _arg2[1286079]))
    unknown call_tmp[1286280] "expr temp" "maybe param" "maybe type" "temp"
    (1286283 'move' call_tmp[1286280](1286140 'call resolves' c"==" call_tmp[1286270] call_tmp[1286275]))
    unknown call_tmp[1286285] "expr temp" "maybe param" "maybe type" "temp"
    (1286288 'move' call_tmp[1286285](1286142 call origin _mt[203] _arg1[1286078]))
    unknown call_tmp[1286290] "expr temp" "maybe param" "maybe type" "temp"
    (1286293 'move' call_tmp[1286290](1286146 call origin _mt[203] _arg2[1286079]))
    unknown call_tmp[1286295] "expr temp" "maybe param" "maybe type" "temp"
    (1286298 'move' call_tmp[1286295](1286150 'call resolves' c"==" call_tmp[1286285] call_tmp[1286290]))
    unknown call_tmp[1286300] "expr temp" "maybe param" "maybe type" "temp"
    (1286303 'move' call_tmp[1286300](1286152 call factoredOffs _mt[203] _arg1[1286078]))
    unknown call_tmp[1286305] "expr temp" "maybe param" "maybe type" "temp"
    (1286308 'move' call_tmp[1286305](1286156 call factoredOffs _mt[203] _arg2[1286079]))
    unknown call_tmp[1286310] "expr temp" "maybe param" "maybe type" "temp"
    (1286313 'move' call_tmp[1286310](1286160 'call resolves' c"==" call_tmp[1286300] call_tmp[1286305]))
    unknown call_tmp[1286315] "expr temp" "maybe param" "maybe type" "temp"
    (1286318 'move' call_tmp[1286315](1286162 call data _mt[203] _arg1[1286078]))
    unknown call_tmp[1286320] "expr temp" "maybe param" "maybe type" "temp"
    (1286323 'move' call_tmp[1286320](1286166 call data _mt[203] _arg2[1286079]))
    unknown call_tmp[1286325] "expr temp" "maybe param" "maybe type" "temp"
    (1286328 'move' call_tmp[1286325](1286170 'call resolves' c"==" call_tmp[1286315] call_tmp[1286320]))
    unknown call_tmp[1286330] "expr temp" "maybe param" "maybe type" "temp"
    (1286333 'move' call_tmp[1286330](1286172 call shiftedData _mt[203] _arg1[1286078]))
    unknown call_tmp[1286335] "expr temp" "maybe param" "maybe type" "temp"
    (1286338 'move' call_tmp[1286335](1286176 call shiftedData _mt[203] _arg2[1286079]))
    unknown call_tmp[1286340] "expr temp" "maybe param" "maybe type" "temp"
    (1286343 'move' call_tmp[1286340](1286180 'call resolves' c"==" call_tmp[1286330] call_tmp[1286335]))
    unknown call_tmp[1286345] "expr temp" "maybe param" "maybe type" "temp"
    (1286348 'move' call_tmp[1286345](1286182 '&' call_tmp[1286205] call_tmp[1286220] call_tmp[1286235] call_tmp[1286250] call_tmp[1286265] call_tmp[1286280] call_tmp[1286295] call_tmp[1286310] call_tmp[1286325] call_tmp[1286340]))
    (1286193 'move' ret[1286188](1286192 'deref' call_tmp[1286345]))
    (1286190 return ret[1286188])
  }
  function _remoteAccessData[293000](?).==[1286060](arg _mt[1286062]:_MT[201], arg this[1286064]:_remoteAccessData[293000](?), arg _arg1[1286066]:_remoteAccessData[293000](?), arg _arg2[1286067]:_remoteAccessData[293000](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1286512]:bool[19] "RVV" "temp"
    unknown call_tmp[1286569] "expr temp" "maybe param" "maybe type" "temp"
    (1286572 'move' call_tmp[1286569](1286356 call rank _mt[203] _arg1[1286066]))
    unknown call_tmp[1286574] "expr temp" "maybe param" "maybe type" "temp"
    (1286577 'move' call_tmp[1286574](1286360 call rank _mt[203] _arg2[1286067]))
    unknown call_tmp[1286579] "expr temp" "maybe param" "maybe type" "temp"
    (1286582 'move' call_tmp[1286579](1286364 call chpl_field_neq call_tmp[1286569] call_tmp[1286574]))
    if call_tmp[1286579]
    {
      (1286517 'move' ret[1286512](1286516 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286584] "expr temp" "maybe param" "maybe type" "temp"
    (1286587 'move' call_tmp[1286584](1286370 call strides _mt[203] _arg1[1286066]))
    unknown call_tmp[1286589] "expr temp" "maybe param" "maybe type" "temp"
    (1286592 'move' call_tmp[1286589](1286374 call strides _mt[203] _arg2[1286067]))
    unknown call_tmp[1286594] "expr temp" "maybe param" "maybe type" "temp"
    (1286597 'move' call_tmp[1286594](1286378 call chpl_field_neq call_tmp[1286584] call_tmp[1286589]))
    if call_tmp[1286594]
    {
      (1286522 'move' ret[1286512](1286521 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286599] "expr temp" "maybe param" "maybe type" "temp"
    (1286602 'move' call_tmp[1286599](1286384 call blkChanged _mt[203] _arg1[1286066]))
    unknown call_tmp[1286604] "expr temp" "maybe param" "maybe type" "temp"
    (1286607 'move' call_tmp[1286604](1286388 call blkChanged _mt[203] _arg2[1286067]))
    unknown call_tmp[1286609] "expr temp" "maybe param" "maybe type" "temp"
    (1286612 'move' call_tmp[1286609](1286392 call chpl_field_neq call_tmp[1286599] call_tmp[1286604]))
    if call_tmp[1286609]
    {
      (1286527 'move' ret[1286512](1286526 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286614] "expr temp" "maybe param" "maybe type" "temp"
    (1286617 'move' call_tmp[1286614](1286398 call off _mt[203] _arg1[1286066]))
    unknown call_tmp[1286619] "expr temp" "maybe param" "maybe type" "temp"
    (1286622 'move' call_tmp[1286619](1286402 call off _mt[203] _arg2[1286067]))
    unknown call_tmp[1286624] "expr temp" "maybe param" "maybe type" "temp"
    (1286627 'move' call_tmp[1286624](1286406 call chpl_field_neq call_tmp[1286614] call_tmp[1286619]))
    if call_tmp[1286624]
    {
      (1286532 'move' ret[1286512](1286531 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286629] "expr temp" "maybe param" "maybe type" "temp"
    (1286632 'move' call_tmp[1286629](1286412 call blk _mt[203] _arg1[1286066]))
    unknown call_tmp[1286634] "expr temp" "maybe param" "maybe type" "temp"
    (1286637 'move' call_tmp[1286634](1286416 call blk _mt[203] _arg2[1286067]))
    unknown call_tmp[1286639] "expr temp" "maybe param" "maybe type" "temp"
    (1286642 'move' call_tmp[1286639](1286420 call chpl_field_neq call_tmp[1286629] call_tmp[1286634]))
    if call_tmp[1286639]
    {
      (1286537 'move' ret[1286512](1286536 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286644] "expr temp" "maybe param" "maybe type" "temp"
    (1286647 'move' call_tmp[1286644](1286426 call str _mt[203] _arg1[1286066]))
    unknown call_tmp[1286649] "expr temp" "maybe param" "maybe type" "temp"
    (1286652 'move' call_tmp[1286649](1286430 call str _mt[203] _arg2[1286067]))
    unknown call_tmp[1286654] "expr temp" "maybe param" "maybe type" "temp"
    (1286657 'move' call_tmp[1286654](1286434 call chpl_field_neq call_tmp[1286644] call_tmp[1286649]))
    if call_tmp[1286654]
    {
      (1286542 'move' ret[1286512](1286541 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286659] "expr temp" "maybe param" "maybe type" "temp"
    (1286662 'move' call_tmp[1286659](1286440 call origin _mt[203] _arg1[1286066]))
    unknown call_tmp[1286664] "expr temp" "maybe param" "maybe type" "temp"
    (1286667 'move' call_tmp[1286664](1286444 call origin _mt[203] _arg2[1286067]))
    unknown call_tmp[1286669] "expr temp" "maybe param" "maybe type" "temp"
    (1286672 'move' call_tmp[1286669](1286448 call chpl_field_neq call_tmp[1286659] call_tmp[1286664]))
    if call_tmp[1286669]
    {
      (1286547 'move' ret[1286512](1286546 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286674] "expr temp" "maybe param" "maybe type" "temp"
    (1286677 'move' call_tmp[1286674](1286454 call factoredOffs _mt[203] _arg1[1286066]))
    unknown call_tmp[1286679] "expr temp" "maybe param" "maybe type" "temp"
    (1286682 'move' call_tmp[1286679](1286458 call factoredOffs _mt[203] _arg2[1286067]))
    unknown call_tmp[1286684] "expr temp" "maybe param" "maybe type" "temp"
    (1286687 'move' call_tmp[1286684](1286462 call chpl_field_neq call_tmp[1286674] call_tmp[1286679]))
    if call_tmp[1286684]
    {
      (1286552 'move' ret[1286512](1286551 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286689] "expr temp" "maybe param" "maybe type" "temp"
    (1286692 'move' call_tmp[1286689](1286468 call data _mt[203] _arg1[1286066]))
    unknown call_tmp[1286694] "expr temp" "maybe param" "maybe type" "temp"
    (1286697 'move' call_tmp[1286694](1286472 call data _mt[203] _arg2[1286067]))
    unknown call_tmp[1286699] "expr temp" "maybe param" "maybe type" "temp"
    (1286702 'move' call_tmp[1286699](1286476 call chpl_field_neq call_tmp[1286689] call_tmp[1286694]))
    if call_tmp[1286699]
    {
      (1286557 'move' ret[1286512](1286556 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    unknown call_tmp[1286704] "expr temp" "maybe param" "maybe type" "temp"
    (1286707 'move' call_tmp[1286704](1286482 call shiftedData _mt[203] _arg1[1286066]))
    unknown call_tmp[1286709] "expr temp" "maybe param" "maybe type" "temp"
    (1286712 'move' call_tmp[1286709](1286486 call shiftedData _mt[203] _arg2[1286067]))
    unknown call_tmp[1286714] "expr temp" "maybe param" "maybe type" "temp"
    (1286717 'move' call_tmp[1286714](1286490 call chpl_field_neq call_tmp[1286704] call_tmp[1286709]))
    if call_tmp[1286714]
    {
      (1286562 'move' ret[1286512](1286561 'deref' 0))
      gotoReturn _end_==[1286510] _end_==[1286510]
    }
    (1286567 'move' ret[1286512](1286566 'deref' 1))
    label _end_==[1286510]
    (1286514 return ret[1286512])
  }
  where {
    unknown call_tmp[1286719] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1286722 'move' call_tmp[1286719](1286070 'typeof' _arg1[1286066]))
    unknown call_tmp[1286724] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1286727 'move' call_tmp[1286724](1286072 'typeof' _arg2[1286067]))
    unknown call_tmp[1286729] "expr temp" "maybe param" "maybe type" "temp"
    (1286732 'move' call_tmp[1286729](1286074 call == call_tmp[1286719] call_tmp[1286724]))
    unknown call_tmp[1286734] "expr temp" "maybe param" "maybe type" "temp"
    (1286737 'move' call_tmp[1286734](1286350 call chpl_fields_are_comparable[1286076] _arg1[1286066] _arg2[1286067]))
    (1286354 '&' call_tmp[1286729] call_tmp[1286734])
  }
  function chpl_fields_are_comparable[1286755](arg _arg1[1286757]:_remoteAccessData[293000](?), arg _arg2[1286758]:_remoteAccessData[293000](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1286867]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1286874] "expr temp" "maybe param" "maybe type" "temp"
    (1286877 'move' call_tmp[1286874](1286761 call rank _mt[203] _arg1[1286757]))
    unknown call_tmp[1286879] "expr temp" "maybe param" "maybe type" "temp"
    (1286882 'move' call_tmp[1286879](1286765 call rank _mt[203] _arg2[1286758]))
    unknown call_tmp[1286884] "expr temp" "maybe param" "maybe type" "temp"
    (1286887 'move' call_tmp[1286884](1286769 'call resolves' c"!=" call_tmp[1286874] call_tmp[1286879]))
    unknown call_tmp[1286889] "expr temp" "maybe param" "maybe type" "temp"
    (1286892 'move' call_tmp[1286889](1286771 call strides _mt[203] _arg1[1286757]))
    unknown call_tmp[1286894] "expr temp" "maybe param" "maybe type" "temp"
    (1286897 'move' call_tmp[1286894](1286775 call strides _mt[203] _arg2[1286758]))
    unknown call_tmp[1286899] "expr temp" "maybe param" "maybe type" "temp"
    (1286902 'move' call_tmp[1286899](1286779 'call resolves' c"!=" call_tmp[1286889] call_tmp[1286894]))
    unknown call_tmp[1286904] "expr temp" "maybe param" "maybe type" "temp"
    (1286907 'move' call_tmp[1286904](1286781 call blkChanged _mt[203] _arg1[1286757]))
    unknown call_tmp[1286909] "expr temp" "maybe param" "maybe type" "temp"
    (1286912 'move' call_tmp[1286909](1286785 call blkChanged _mt[203] _arg2[1286758]))
    unknown call_tmp[1286914] "expr temp" "maybe param" "maybe type" "temp"
    (1286917 'move' call_tmp[1286914](1286789 'call resolves' c"!=" call_tmp[1286904] call_tmp[1286909]))
    unknown call_tmp[1286919] "expr temp" "maybe param" "maybe type" "temp"
    (1286922 'move' call_tmp[1286919](1286791 call off _mt[203] _arg1[1286757]))
    unknown call_tmp[1286924] "expr temp" "maybe param" "maybe type" "temp"
    (1286927 'move' call_tmp[1286924](1286795 call off _mt[203] _arg2[1286758]))
    unknown call_tmp[1286929] "expr temp" "maybe param" "maybe type" "temp"
    (1286932 'move' call_tmp[1286929](1286799 'call resolves' c"!=" call_tmp[1286919] call_tmp[1286924]))
    unknown call_tmp[1286934] "expr temp" "maybe param" "maybe type" "temp"
    (1286937 'move' call_tmp[1286934](1286801 call blk _mt[203] _arg1[1286757]))
    unknown call_tmp[1286939] "expr temp" "maybe param" "maybe type" "temp"
    (1286942 'move' call_tmp[1286939](1286805 call blk _mt[203] _arg2[1286758]))
    unknown call_tmp[1286944] "expr temp" "maybe param" "maybe type" "temp"
    (1286947 'move' call_tmp[1286944](1286809 'call resolves' c"!=" call_tmp[1286934] call_tmp[1286939]))
    unknown call_tmp[1286949] "expr temp" "maybe param" "maybe type" "temp"
    (1286952 'move' call_tmp[1286949](1286811 call str _mt[203] _arg1[1286757]))
    unknown call_tmp[1286954] "expr temp" "maybe param" "maybe type" "temp"
    (1286957 'move' call_tmp[1286954](1286815 call str _mt[203] _arg2[1286758]))
    unknown call_tmp[1286959] "expr temp" "maybe param" "maybe type" "temp"
    (1286962 'move' call_tmp[1286959](1286819 'call resolves' c"!=" call_tmp[1286949] call_tmp[1286954]))
    unknown call_tmp[1286964] "expr temp" "maybe param" "maybe type" "temp"
    (1286967 'move' call_tmp[1286964](1286821 call origin _mt[203] _arg1[1286757]))
    unknown call_tmp[1286969] "expr temp" "maybe param" "maybe type" "temp"
    (1286972 'move' call_tmp[1286969](1286825 call origin _mt[203] _arg2[1286758]))
    unknown call_tmp[1286974] "expr temp" "maybe param" "maybe type" "temp"
    (1286977 'move' call_tmp[1286974](1286829 'call resolves' c"!=" call_tmp[1286964] call_tmp[1286969]))
    unknown call_tmp[1286979] "expr temp" "maybe param" "maybe type" "temp"
    (1286982 'move' call_tmp[1286979](1286831 call factoredOffs _mt[203] _arg1[1286757]))
    unknown call_tmp[1286984] "expr temp" "maybe param" "maybe type" "temp"
    (1286987 'move' call_tmp[1286984](1286835 call factoredOffs _mt[203] _arg2[1286758]))
    unknown call_tmp[1286989] "expr temp" "maybe param" "maybe type" "temp"
    (1286992 'move' call_tmp[1286989](1286839 'call resolves' c"!=" call_tmp[1286979] call_tmp[1286984]))
    unknown call_tmp[1286994] "expr temp" "maybe param" "maybe type" "temp"
    (1286997 'move' call_tmp[1286994](1286841 call data _mt[203] _arg1[1286757]))
    unknown call_tmp[1286999] "expr temp" "maybe param" "maybe type" "temp"
    (1287002 'move' call_tmp[1286999](1286845 call data _mt[203] _arg2[1286758]))
    unknown call_tmp[1287004] "expr temp" "maybe param" "maybe type" "temp"
    (1287007 'move' call_tmp[1287004](1286849 'call resolves' c"!=" call_tmp[1286994] call_tmp[1286999]))
    unknown call_tmp[1287009] "expr temp" "maybe param" "maybe type" "temp"
    (1287012 'move' call_tmp[1287009](1286851 call shiftedData _mt[203] _arg1[1286757]))
    unknown call_tmp[1287014] "expr temp" "maybe param" "maybe type" "temp"
    (1287017 'move' call_tmp[1287014](1286855 call shiftedData _mt[203] _arg2[1286758]))
    unknown call_tmp[1287019] "expr temp" "maybe param" "maybe type" "temp"
    (1287022 'move' call_tmp[1287019](1286859 'call resolves' c"!=" call_tmp[1287009] call_tmp[1287014]))
    unknown call_tmp[1287024] "expr temp" "maybe param" "maybe type" "temp"
    (1287027 'move' call_tmp[1287024](1286861 '&' call_tmp[1286884] call_tmp[1286899] call_tmp[1286914] call_tmp[1286929] call_tmp[1286944] call_tmp[1286959] call_tmp[1286974] call_tmp[1286989] call_tmp[1287004] call_tmp[1287019]))
    (1286872 'move' ret[1286867](1286871 'deref' call_tmp[1287024]))
    (1286869 return ret[1286867])
  }
  function _remoteAccessData[293000](?).!=[1286739](arg _mt[1286741]:_MT[201], arg this[1286743]:_remoteAccessData[293000](?), arg _arg1[1286745]:_remoteAccessData[293000](?), arg _arg2[1286746]:_remoteAccessData[293000](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1287191]:bool[19] "RVV" "temp"
    unknown call_tmp[1287248] "expr temp" "maybe param" "maybe type" "temp"
    (1287251 'move' call_tmp[1287248](1287035 call rank _mt[203] _arg1[1286745]))
    unknown call_tmp[1287253] "expr temp" "maybe param" "maybe type" "temp"
    (1287256 'move' call_tmp[1287253](1287039 call rank _mt[203] _arg2[1286746]))
    unknown call_tmp[1287258] "expr temp" "maybe param" "maybe type" "temp"
    (1287261 'move' call_tmp[1287258](1287043 call chpl_field_neq call_tmp[1287248] call_tmp[1287253]))
    if call_tmp[1287258]
    {
      (1287196 'move' ret[1287191](1287195 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287263] "expr temp" "maybe param" "maybe type" "temp"
    (1287266 'move' call_tmp[1287263](1287049 call strides _mt[203] _arg1[1286745]))
    unknown call_tmp[1287268] "expr temp" "maybe param" "maybe type" "temp"
    (1287271 'move' call_tmp[1287268](1287053 call strides _mt[203] _arg2[1286746]))
    unknown call_tmp[1287273] "expr temp" "maybe param" "maybe type" "temp"
    (1287276 'move' call_tmp[1287273](1287057 call chpl_field_neq call_tmp[1287263] call_tmp[1287268]))
    if call_tmp[1287273]
    {
      (1287201 'move' ret[1287191](1287200 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287278] "expr temp" "maybe param" "maybe type" "temp"
    (1287281 'move' call_tmp[1287278](1287063 call blkChanged _mt[203] _arg1[1286745]))
    unknown call_tmp[1287283] "expr temp" "maybe param" "maybe type" "temp"
    (1287286 'move' call_tmp[1287283](1287067 call blkChanged _mt[203] _arg2[1286746]))
    unknown call_tmp[1287288] "expr temp" "maybe param" "maybe type" "temp"
    (1287291 'move' call_tmp[1287288](1287071 call chpl_field_neq call_tmp[1287278] call_tmp[1287283]))
    if call_tmp[1287288]
    {
      (1287206 'move' ret[1287191](1287205 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287293] "expr temp" "maybe param" "maybe type" "temp"
    (1287296 'move' call_tmp[1287293](1287077 call off _mt[203] _arg1[1286745]))
    unknown call_tmp[1287298] "expr temp" "maybe param" "maybe type" "temp"
    (1287301 'move' call_tmp[1287298](1287081 call off _mt[203] _arg2[1286746]))
    unknown call_tmp[1287303] "expr temp" "maybe param" "maybe type" "temp"
    (1287306 'move' call_tmp[1287303](1287085 call chpl_field_neq call_tmp[1287293] call_tmp[1287298]))
    if call_tmp[1287303]
    {
      (1287211 'move' ret[1287191](1287210 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287308] "expr temp" "maybe param" "maybe type" "temp"
    (1287311 'move' call_tmp[1287308](1287091 call blk _mt[203] _arg1[1286745]))
    unknown call_tmp[1287313] "expr temp" "maybe param" "maybe type" "temp"
    (1287316 'move' call_tmp[1287313](1287095 call blk _mt[203] _arg2[1286746]))
    unknown call_tmp[1287318] "expr temp" "maybe param" "maybe type" "temp"
    (1287321 'move' call_tmp[1287318](1287099 call chpl_field_neq call_tmp[1287308] call_tmp[1287313]))
    if call_tmp[1287318]
    {
      (1287216 'move' ret[1287191](1287215 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287323] "expr temp" "maybe param" "maybe type" "temp"
    (1287326 'move' call_tmp[1287323](1287105 call str _mt[203] _arg1[1286745]))
    unknown call_tmp[1287328] "expr temp" "maybe param" "maybe type" "temp"
    (1287331 'move' call_tmp[1287328](1287109 call str _mt[203] _arg2[1286746]))
    unknown call_tmp[1287333] "expr temp" "maybe param" "maybe type" "temp"
    (1287336 'move' call_tmp[1287333](1287113 call chpl_field_neq call_tmp[1287323] call_tmp[1287328]))
    if call_tmp[1287333]
    {
      (1287221 'move' ret[1287191](1287220 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287338] "expr temp" "maybe param" "maybe type" "temp"
    (1287341 'move' call_tmp[1287338](1287119 call origin _mt[203] _arg1[1286745]))
    unknown call_tmp[1287343] "expr temp" "maybe param" "maybe type" "temp"
    (1287346 'move' call_tmp[1287343](1287123 call origin _mt[203] _arg2[1286746]))
    unknown call_tmp[1287348] "expr temp" "maybe param" "maybe type" "temp"
    (1287351 'move' call_tmp[1287348](1287127 call chpl_field_neq call_tmp[1287338] call_tmp[1287343]))
    if call_tmp[1287348]
    {
      (1287226 'move' ret[1287191](1287225 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287353] "expr temp" "maybe param" "maybe type" "temp"
    (1287356 'move' call_tmp[1287353](1287133 call factoredOffs _mt[203] _arg1[1286745]))
    unknown call_tmp[1287358] "expr temp" "maybe param" "maybe type" "temp"
    (1287361 'move' call_tmp[1287358](1287137 call factoredOffs _mt[203] _arg2[1286746]))
    unknown call_tmp[1287363] "expr temp" "maybe param" "maybe type" "temp"
    (1287366 'move' call_tmp[1287363](1287141 call chpl_field_neq call_tmp[1287353] call_tmp[1287358]))
    if call_tmp[1287363]
    {
      (1287231 'move' ret[1287191](1287230 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287368] "expr temp" "maybe param" "maybe type" "temp"
    (1287371 'move' call_tmp[1287368](1287147 call data _mt[203] _arg1[1286745]))
    unknown call_tmp[1287373] "expr temp" "maybe param" "maybe type" "temp"
    (1287376 'move' call_tmp[1287373](1287151 call data _mt[203] _arg2[1286746]))
    unknown call_tmp[1287378] "expr temp" "maybe param" "maybe type" "temp"
    (1287381 'move' call_tmp[1287378](1287155 call chpl_field_neq call_tmp[1287368] call_tmp[1287373]))
    if call_tmp[1287378]
    {
      (1287236 'move' ret[1287191](1287235 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    unknown call_tmp[1287383] "expr temp" "maybe param" "maybe type" "temp"
    (1287386 'move' call_tmp[1287383](1287161 call shiftedData _mt[203] _arg1[1286745]))
    unknown call_tmp[1287388] "expr temp" "maybe param" "maybe type" "temp"
    (1287391 'move' call_tmp[1287388](1287165 call shiftedData _mt[203] _arg2[1286746]))
    unknown call_tmp[1287393] "expr temp" "maybe param" "maybe type" "temp"
    (1287396 'move' call_tmp[1287393](1287169 call chpl_field_neq call_tmp[1287383] call_tmp[1287388]))
    if call_tmp[1287393]
    {
      (1287241 'move' ret[1287191](1287240 'deref' 1))
      gotoReturn _end_!=[1287189] _end_!=[1287189]
    }
    (1287246 'move' ret[1287191](1287245 'deref' 0))
    label _end_!=[1287189]
    (1287193 return ret[1287191])
  }
  where {
    unknown call_tmp[1287398] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1287401 'move' call_tmp[1287398](1286749 'typeof' _arg1[1286745]))
    unknown call_tmp[1287403] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1287406 'move' call_tmp[1287403](1286751 'typeof' _arg2[1286746]))
    unknown call_tmp[1287408] "expr temp" "maybe param" "maybe type" "temp"
    (1287411 'move' call_tmp[1287408](1286753 call == call_tmp[1287398] call_tmp[1287403]))
    unknown call_tmp[1287413] "expr temp" "maybe param" "maybe type" "temp"
    (1287416 'move' call_tmp[1287413](1287029 call chpl_fields_are_comparable[1286755] _arg1[1286745] _arg2[1286746]))
    (1287033 '&' call_tmp[1287408] call_tmp[1287413])
  }
  function chpl_fields_are_comparable[1287434](arg _arg1[1287436]:_remoteAccessData[293000](?), arg _arg2[1287437]:_remoteAccessData[293000](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1287546]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1287553] "expr temp" "maybe param" "maybe type" "temp"
    (1287556 'move' call_tmp[1287553](1287440 call rank _mt[203] _arg1[1287436]))
    unknown call_tmp[1287558] "expr temp" "maybe param" "maybe type" "temp"
    (1287561 'move' call_tmp[1287558](1287444 call rank _mt[203] _arg2[1287437]))
    unknown call_tmp[1287563] "expr temp" "maybe param" "maybe type" "temp"
    (1287566 'move' call_tmp[1287563](1287448 'call resolves' c"<" call_tmp[1287553] call_tmp[1287558]))
    unknown call_tmp[1287568] "expr temp" "maybe param" "maybe type" "temp"
    (1287571 'move' call_tmp[1287568](1287450 call strides _mt[203] _arg1[1287436]))
    unknown call_tmp[1287573] "expr temp" "maybe param" "maybe type" "temp"
    (1287576 'move' call_tmp[1287573](1287454 call strides _mt[203] _arg2[1287437]))
    unknown call_tmp[1287578] "expr temp" "maybe param" "maybe type" "temp"
    (1287581 'move' call_tmp[1287578](1287458 'call resolves' c"<" call_tmp[1287568] call_tmp[1287573]))
    unknown call_tmp[1287583] "expr temp" "maybe param" "maybe type" "temp"
    (1287586 'move' call_tmp[1287583](1287460 call blkChanged _mt[203] _arg1[1287436]))
    unknown call_tmp[1287588] "expr temp" "maybe param" "maybe type" "temp"
    (1287591 'move' call_tmp[1287588](1287464 call blkChanged _mt[203] _arg2[1287437]))
    unknown call_tmp[1287593] "expr temp" "maybe param" "maybe type" "temp"
    (1287596 'move' call_tmp[1287593](1287468 'call resolves' c"<" call_tmp[1287583] call_tmp[1287588]))
    unknown call_tmp[1287598] "expr temp" "maybe param" "maybe type" "temp"
    (1287601 'move' call_tmp[1287598](1287470 call off _mt[203] _arg1[1287436]))
    unknown call_tmp[1287603] "expr temp" "maybe param" "maybe type" "temp"
    (1287606 'move' call_tmp[1287603](1287474 call off _mt[203] _arg2[1287437]))
    unknown call_tmp[1287608] "expr temp" "maybe param" "maybe type" "temp"
    (1287611 'move' call_tmp[1287608](1287478 'call resolves' c"<" call_tmp[1287598] call_tmp[1287603]))
    unknown call_tmp[1287613] "expr temp" "maybe param" "maybe type" "temp"
    (1287616 'move' call_tmp[1287613](1287480 call blk _mt[203] _arg1[1287436]))
    unknown call_tmp[1287618] "expr temp" "maybe param" "maybe type" "temp"
    (1287621 'move' call_tmp[1287618](1287484 call blk _mt[203] _arg2[1287437]))
    unknown call_tmp[1287623] "expr temp" "maybe param" "maybe type" "temp"
    (1287626 'move' call_tmp[1287623](1287488 'call resolves' c"<" call_tmp[1287613] call_tmp[1287618]))
    unknown call_tmp[1287628] "expr temp" "maybe param" "maybe type" "temp"
    (1287631 'move' call_tmp[1287628](1287490 call str _mt[203] _arg1[1287436]))
    unknown call_tmp[1287633] "expr temp" "maybe param" "maybe type" "temp"
    (1287636 'move' call_tmp[1287633](1287494 call str _mt[203] _arg2[1287437]))
    unknown call_tmp[1287638] "expr temp" "maybe param" "maybe type" "temp"
    (1287641 'move' call_tmp[1287638](1287498 'call resolves' c"<" call_tmp[1287628] call_tmp[1287633]))
    unknown call_tmp[1287643] "expr temp" "maybe param" "maybe type" "temp"
    (1287646 'move' call_tmp[1287643](1287500 call origin _mt[203] _arg1[1287436]))
    unknown call_tmp[1287648] "expr temp" "maybe param" "maybe type" "temp"
    (1287651 'move' call_tmp[1287648](1287504 call origin _mt[203] _arg2[1287437]))
    unknown call_tmp[1287653] "expr temp" "maybe param" "maybe type" "temp"
    (1287656 'move' call_tmp[1287653](1287508 'call resolves' c"<" call_tmp[1287643] call_tmp[1287648]))
    unknown call_tmp[1287658] "expr temp" "maybe param" "maybe type" "temp"
    (1287661 'move' call_tmp[1287658](1287510 call factoredOffs _mt[203] _arg1[1287436]))
    unknown call_tmp[1287663] "expr temp" "maybe param" "maybe type" "temp"
    (1287666 'move' call_tmp[1287663](1287514 call factoredOffs _mt[203] _arg2[1287437]))
    unknown call_tmp[1287668] "expr temp" "maybe param" "maybe type" "temp"
    (1287671 'move' call_tmp[1287668](1287518 'call resolves' c"<" call_tmp[1287658] call_tmp[1287663]))
    unknown call_tmp[1287673] "expr temp" "maybe param" "maybe type" "temp"
    (1287676 'move' call_tmp[1287673](1287520 call data _mt[203] _arg1[1287436]))
    unknown call_tmp[1287678] "expr temp" "maybe param" "maybe type" "temp"
    (1287681 'move' call_tmp[1287678](1287524 call data _mt[203] _arg2[1287437]))
    unknown call_tmp[1287683] "expr temp" "maybe param" "maybe type" "temp"
    (1287686 'move' call_tmp[1287683](1287528 'call resolves' c"<" call_tmp[1287673] call_tmp[1287678]))
    unknown call_tmp[1287688] "expr temp" "maybe param" "maybe type" "temp"
    (1287691 'move' call_tmp[1287688](1287530 call shiftedData _mt[203] _arg1[1287436]))
    unknown call_tmp[1287693] "expr temp" "maybe param" "maybe type" "temp"
    (1287696 'move' call_tmp[1287693](1287534 call shiftedData _mt[203] _arg2[1287437]))
    unknown call_tmp[1287698] "expr temp" "maybe param" "maybe type" "temp"
    (1287701 'move' call_tmp[1287698](1287538 'call resolves' c"<" call_tmp[1287688] call_tmp[1287693]))
    unknown call_tmp[1287703] "expr temp" "maybe param" "maybe type" "temp"
    (1287706 'move' call_tmp[1287703](1287540 '&' call_tmp[1287563] call_tmp[1287578] call_tmp[1287593] call_tmp[1287608] call_tmp[1287623] call_tmp[1287638] call_tmp[1287653] call_tmp[1287668] call_tmp[1287683] call_tmp[1287698]))
    (1287551 'move' ret[1287546](1287550 'deref' call_tmp[1287703]))
    (1287548 return ret[1287546])
  }
  function _remoteAccessData[293000](?).<[1287418](arg _mt[1287420]:_MT[201], arg this[1287422]:_remoteAccessData[293000](?), arg _arg1[1287424]:_remoteAccessData[293000](?), arg _arg2[1287425]:_remoteAccessData[293000](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1288020]:bool[19] "RVV" "temp"
    unknown call_tmp[1288127] "expr temp" "maybe param" "maybe type" "temp"
    (1288130 'move' call_tmp[1288127](1287714 call rank _mt[203] _arg1[1287424]))
    unknown call_tmp[1288132] "expr temp" "maybe param" "maybe type" "temp"
    (1288135 'move' call_tmp[1288132](1287718 call rank _mt[203] _arg2[1287425]))
    unknown call_tmp[1288137] "expr temp" "maybe param" "maybe type" "temp"
    (1288140 'move' call_tmp[1288137](1287722 call chpl_field_lt call_tmp[1288127] call_tmp[1288132]))
    if call_tmp[1288137]
    {
      (1288025 'move' ret[1288020](1288024 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288142] "expr temp" "maybe param" "maybe type" "temp"
    (1288145 'move' call_tmp[1288142](1287728 call rank _mt[203] _arg1[1287424]))
    unknown call_tmp[1288147] "expr temp" "maybe param" "maybe type" "temp"
    (1288150 'move' call_tmp[1288147](1287732 call rank _mt[203] _arg2[1287425]))
    unknown call_tmp[1288152] "expr temp" "maybe param" "maybe type" "temp"
    (1288155 'move' call_tmp[1288152](1287736 call chpl_field_gt call_tmp[1288142] call_tmp[1288147]))
    if call_tmp[1288152]
    {
      (1288030 'move' ret[1288020](1288029 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288157] "expr temp" "maybe param" "maybe type" "temp"
    (1288160 'move' call_tmp[1288157](1287742 call strides _mt[203] _arg1[1287424]))
    unknown call_tmp[1288162] "expr temp" "maybe param" "maybe type" "temp"
    (1288165 'move' call_tmp[1288162](1287746 call strides _mt[203] _arg2[1287425]))
    unknown call_tmp[1288167] "expr temp" "maybe param" "maybe type" "temp"
    (1288170 'move' call_tmp[1288167](1287750 call chpl_field_lt call_tmp[1288157] call_tmp[1288162]))
    if call_tmp[1288167]
    {
      (1288035 'move' ret[1288020](1288034 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288172] "expr temp" "maybe param" "maybe type" "temp"
    (1288175 'move' call_tmp[1288172](1287756 call strides _mt[203] _arg1[1287424]))
    unknown call_tmp[1288177] "expr temp" "maybe param" "maybe type" "temp"
    (1288180 'move' call_tmp[1288177](1287760 call strides _mt[203] _arg2[1287425]))
    unknown call_tmp[1288182] "expr temp" "maybe param" "maybe type" "temp"
    (1288185 'move' call_tmp[1288182](1287764 call chpl_field_gt call_tmp[1288172] call_tmp[1288177]))
    if call_tmp[1288182]
    {
      (1288040 'move' ret[1288020](1288039 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288187] "expr temp" "maybe param" "maybe type" "temp"
    (1288190 'move' call_tmp[1288187](1287770 call blkChanged _mt[203] _arg1[1287424]))
    unknown call_tmp[1288192] "expr temp" "maybe param" "maybe type" "temp"
    (1288195 'move' call_tmp[1288192](1287774 call blkChanged _mt[203] _arg2[1287425]))
    unknown call_tmp[1288197] "expr temp" "maybe param" "maybe type" "temp"
    (1288200 'move' call_tmp[1288197](1287778 call chpl_field_lt call_tmp[1288187] call_tmp[1288192]))
    if call_tmp[1288197]
    {
      (1288045 'move' ret[1288020](1288044 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288202] "expr temp" "maybe param" "maybe type" "temp"
    (1288205 'move' call_tmp[1288202](1287784 call blkChanged _mt[203] _arg1[1287424]))
    unknown call_tmp[1288207] "expr temp" "maybe param" "maybe type" "temp"
    (1288210 'move' call_tmp[1288207](1287788 call blkChanged _mt[203] _arg2[1287425]))
    unknown call_tmp[1288212] "expr temp" "maybe param" "maybe type" "temp"
    (1288215 'move' call_tmp[1288212](1287792 call chpl_field_gt call_tmp[1288202] call_tmp[1288207]))
    if call_tmp[1288212]
    {
      (1288050 'move' ret[1288020](1288049 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288217] "expr temp" "maybe param" "maybe type" "temp"
    (1288220 'move' call_tmp[1288217](1287798 call off _mt[203] _arg1[1287424]))
    unknown call_tmp[1288222] "expr temp" "maybe param" "maybe type" "temp"
    (1288225 'move' call_tmp[1288222](1287802 call off _mt[203] _arg2[1287425]))
    unknown call_tmp[1288227] "expr temp" "maybe param" "maybe type" "temp"
    (1288230 'move' call_tmp[1288227](1287806 call chpl_field_lt call_tmp[1288217] call_tmp[1288222]))
    if call_tmp[1288227]
    {
      (1288055 'move' ret[1288020](1288054 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288232] "expr temp" "maybe param" "maybe type" "temp"
    (1288235 'move' call_tmp[1288232](1287812 call off _mt[203] _arg1[1287424]))
    unknown call_tmp[1288237] "expr temp" "maybe param" "maybe type" "temp"
    (1288240 'move' call_tmp[1288237](1287816 call off _mt[203] _arg2[1287425]))
    unknown call_tmp[1288242] "expr temp" "maybe param" "maybe type" "temp"
    (1288245 'move' call_tmp[1288242](1287820 call chpl_field_gt call_tmp[1288232] call_tmp[1288237]))
    if call_tmp[1288242]
    {
      (1288060 'move' ret[1288020](1288059 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288247] "expr temp" "maybe param" "maybe type" "temp"
    (1288250 'move' call_tmp[1288247](1287826 call blk _mt[203] _arg1[1287424]))
    unknown call_tmp[1288252] "expr temp" "maybe param" "maybe type" "temp"
    (1288255 'move' call_tmp[1288252](1287830 call blk _mt[203] _arg2[1287425]))
    unknown call_tmp[1288257] "expr temp" "maybe param" "maybe type" "temp"
    (1288260 'move' call_tmp[1288257](1287834 call chpl_field_lt call_tmp[1288247] call_tmp[1288252]))
    if call_tmp[1288257]
    {
      (1288065 'move' ret[1288020](1288064 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288262] "expr temp" "maybe param" "maybe type" "temp"
    (1288265 'move' call_tmp[1288262](1287840 call blk _mt[203] _arg1[1287424]))
    unknown call_tmp[1288267] "expr temp" "maybe param" "maybe type" "temp"
    (1288270 'move' call_tmp[1288267](1287844 call blk _mt[203] _arg2[1287425]))
    unknown call_tmp[1288272] "expr temp" "maybe param" "maybe type" "temp"
    (1288275 'move' call_tmp[1288272](1287848 call chpl_field_gt call_tmp[1288262] call_tmp[1288267]))
    if call_tmp[1288272]
    {
      (1288070 'move' ret[1288020](1288069 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288277] "expr temp" "maybe param" "maybe type" "temp"
    (1288280 'move' call_tmp[1288277](1287854 call str _mt[203] _arg1[1287424]))
    unknown call_tmp[1288282] "expr temp" "maybe param" "maybe type" "temp"
    (1288285 'move' call_tmp[1288282](1287858 call str _mt[203] _arg2[1287425]))
    unknown call_tmp[1288287] "expr temp" "maybe param" "maybe type" "temp"
    (1288290 'move' call_tmp[1288287](1287862 call chpl_field_lt call_tmp[1288277] call_tmp[1288282]))
    if call_tmp[1288287]
    {
      (1288075 'move' ret[1288020](1288074 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288292] "expr temp" "maybe param" "maybe type" "temp"
    (1288295 'move' call_tmp[1288292](1287868 call str _mt[203] _arg1[1287424]))
    unknown call_tmp[1288297] "expr temp" "maybe param" "maybe type" "temp"
    (1288300 'move' call_tmp[1288297](1287872 call str _mt[203] _arg2[1287425]))
    unknown call_tmp[1288302] "expr temp" "maybe param" "maybe type" "temp"
    (1288305 'move' call_tmp[1288302](1287876 call chpl_field_gt call_tmp[1288292] call_tmp[1288297]))
    if call_tmp[1288302]
    {
      (1288080 'move' ret[1288020](1288079 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288307] "expr temp" "maybe param" "maybe type" "temp"
    (1288310 'move' call_tmp[1288307](1287882 call origin _mt[203] _arg1[1287424]))
    unknown call_tmp[1288312] "expr temp" "maybe param" "maybe type" "temp"
    (1288315 'move' call_tmp[1288312](1287886 call origin _mt[203] _arg2[1287425]))
    unknown call_tmp[1288317] "expr temp" "maybe param" "maybe type" "temp"
    (1288320 'move' call_tmp[1288317](1287890 call chpl_field_lt call_tmp[1288307] call_tmp[1288312]))
    if call_tmp[1288317]
    {
      (1288085 'move' ret[1288020](1288084 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288322] "expr temp" "maybe param" "maybe type" "temp"
    (1288325 'move' call_tmp[1288322](1287896 call origin _mt[203] _arg1[1287424]))
    unknown call_tmp[1288327] "expr temp" "maybe param" "maybe type" "temp"
    (1288330 'move' call_tmp[1288327](1287900 call origin _mt[203] _arg2[1287425]))
    unknown call_tmp[1288332] "expr temp" "maybe param" "maybe type" "temp"
    (1288335 'move' call_tmp[1288332](1287904 call chpl_field_gt call_tmp[1288322] call_tmp[1288327]))
    if call_tmp[1288332]
    {
      (1288090 'move' ret[1288020](1288089 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288337] "expr temp" "maybe param" "maybe type" "temp"
    (1288340 'move' call_tmp[1288337](1287910 call factoredOffs _mt[203] _arg1[1287424]))
    unknown call_tmp[1288342] "expr temp" "maybe param" "maybe type" "temp"
    (1288345 'move' call_tmp[1288342](1287914 call factoredOffs _mt[203] _arg2[1287425]))
    unknown call_tmp[1288347] "expr temp" "maybe param" "maybe type" "temp"
    (1288350 'move' call_tmp[1288347](1287918 call chpl_field_lt call_tmp[1288337] call_tmp[1288342]))
    if call_tmp[1288347]
    {
      (1288095 'move' ret[1288020](1288094 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288352] "expr temp" "maybe param" "maybe type" "temp"
    (1288355 'move' call_tmp[1288352](1287924 call factoredOffs _mt[203] _arg1[1287424]))
    unknown call_tmp[1288357] "expr temp" "maybe param" "maybe type" "temp"
    (1288360 'move' call_tmp[1288357](1287928 call factoredOffs _mt[203] _arg2[1287425]))
    unknown call_tmp[1288362] "expr temp" "maybe param" "maybe type" "temp"
    (1288365 'move' call_tmp[1288362](1287932 call chpl_field_gt call_tmp[1288352] call_tmp[1288357]))
    if call_tmp[1288362]
    {
      (1288100 'move' ret[1288020](1288099 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288367] "expr temp" "maybe param" "maybe type" "temp"
    (1288370 'move' call_tmp[1288367](1287938 call data _mt[203] _arg1[1287424]))
    unknown call_tmp[1288372] "expr temp" "maybe param" "maybe type" "temp"
    (1288375 'move' call_tmp[1288372](1287942 call data _mt[203] _arg2[1287425]))
    unknown call_tmp[1288377] "expr temp" "maybe param" "maybe type" "temp"
    (1288380 'move' call_tmp[1288377](1287946 call chpl_field_lt call_tmp[1288367] call_tmp[1288372]))
    if call_tmp[1288377]
    {
      (1288105 'move' ret[1288020](1288104 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288382] "expr temp" "maybe param" "maybe type" "temp"
    (1288385 'move' call_tmp[1288382](1287952 call data _mt[203] _arg1[1287424]))
    unknown call_tmp[1288387] "expr temp" "maybe param" "maybe type" "temp"
    (1288390 'move' call_tmp[1288387](1287956 call data _mt[203] _arg2[1287425]))
    unknown call_tmp[1288392] "expr temp" "maybe param" "maybe type" "temp"
    (1288395 'move' call_tmp[1288392](1287960 call chpl_field_gt call_tmp[1288382] call_tmp[1288387]))
    if call_tmp[1288392]
    {
      (1288110 'move' ret[1288020](1288109 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288397] "expr temp" "maybe param" "maybe type" "temp"
    (1288400 'move' call_tmp[1288397](1287966 call shiftedData _mt[203] _arg1[1287424]))
    unknown call_tmp[1288402] "expr temp" "maybe param" "maybe type" "temp"
    (1288405 'move' call_tmp[1288402](1287970 call shiftedData _mt[203] _arg2[1287425]))
    unknown call_tmp[1288407] "expr temp" "maybe param" "maybe type" "temp"
    (1288410 'move' call_tmp[1288407](1287974 call chpl_field_lt call_tmp[1288397] call_tmp[1288402]))
    if call_tmp[1288407]
    {
      (1288115 'move' ret[1288020](1288114 'deref' 1))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    unknown call_tmp[1288412] "expr temp" "maybe param" "maybe type" "temp"
    (1288415 'move' call_tmp[1288412](1287980 call shiftedData _mt[203] _arg1[1287424]))
    unknown call_tmp[1288417] "expr temp" "maybe param" "maybe type" "temp"
    (1288420 'move' call_tmp[1288417](1287984 call shiftedData _mt[203] _arg2[1287425]))
    unknown call_tmp[1288422] "expr temp" "maybe param" "maybe type" "temp"
    (1288425 'move' call_tmp[1288422](1287988 call chpl_field_gt call_tmp[1288412] call_tmp[1288417]))
    if call_tmp[1288422]
    {
      (1288120 'move' ret[1288020](1288119 'deref' 0))
      gotoReturn _end_<[1288018] _end_<[1288018]
    }
    (1288125 'move' ret[1288020](1288124 'deref' 0))
    label _end_<[1288018]
    (1288022 return ret[1288020])
  }
  where {
    unknown call_tmp[1288427] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1288430 'move' call_tmp[1288427](1287428 'typeof' _arg1[1287424]))
    unknown call_tmp[1288432] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1288435 'move' call_tmp[1288432](1287430 'typeof' _arg2[1287425]))
    unknown call_tmp[1288437] "expr temp" "maybe param" "maybe type" "temp"
    (1288440 'move' call_tmp[1288437](1287432 call == call_tmp[1288427] call_tmp[1288432]))
    unknown call_tmp[1288442] "expr temp" "maybe param" "maybe type" "temp"
    (1288445 'move' call_tmp[1288442](1287708 call chpl_fields_are_comparable[1287434] _arg1[1287424] _arg2[1287425]))
    (1287712 '&' call_tmp[1288437] call_tmp[1288442])
  }
  function chpl_fields_are_comparable[1288463](arg _arg1[1288465]:_remoteAccessData[293000](?), arg _arg2[1288466]:_remoteAccessData[293000](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1288575]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1288582] "expr temp" "maybe param" "maybe type" "temp"
    (1288585 'move' call_tmp[1288582](1288469 call rank _mt[203] _arg1[1288465]))
    unknown call_tmp[1288587] "expr temp" "maybe param" "maybe type" "temp"
    (1288590 'move' call_tmp[1288587](1288473 call rank _mt[203] _arg2[1288466]))
    unknown call_tmp[1288592] "expr temp" "maybe param" "maybe type" "temp"
    (1288595 'move' call_tmp[1288592](1288477 'call resolves' c"<=" call_tmp[1288582] call_tmp[1288587]))
    unknown call_tmp[1288597] "expr temp" "maybe param" "maybe type" "temp"
    (1288600 'move' call_tmp[1288597](1288479 call strides _mt[203] _arg1[1288465]))
    unknown call_tmp[1288602] "expr temp" "maybe param" "maybe type" "temp"
    (1288605 'move' call_tmp[1288602](1288483 call strides _mt[203] _arg2[1288466]))
    unknown call_tmp[1288607] "expr temp" "maybe param" "maybe type" "temp"
    (1288610 'move' call_tmp[1288607](1288487 'call resolves' c"<=" call_tmp[1288597] call_tmp[1288602]))
    unknown call_tmp[1288612] "expr temp" "maybe param" "maybe type" "temp"
    (1288615 'move' call_tmp[1288612](1288489 call blkChanged _mt[203] _arg1[1288465]))
    unknown call_tmp[1288617] "expr temp" "maybe param" "maybe type" "temp"
    (1288620 'move' call_tmp[1288617](1288493 call blkChanged _mt[203] _arg2[1288466]))
    unknown call_tmp[1288622] "expr temp" "maybe param" "maybe type" "temp"
    (1288625 'move' call_tmp[1288622](1288497 'call resolves' c"<=" call_tmp[1288612] call_tmp[1288617]))
    unknown call_tmp[1288627] "expr temp" "maybe param" "maybe type" "temp"
    (1288630 'move' call_tmp[1288627](1288499 call off _mt[203] _arg1[1288465]))
    unknown call_tmp[1288632] "expr temp" "maybe param" "maybe type" "temp"
    (1288635 'move' call_tmp[1288632](1288503 call off _mt[203] _arg2[1288466]))
    unknown call_tmp[1288637] "expr temp" "maybe param" "maybe type" "temp"
    (1288640 'move' call_tmp[1288637](1288507 'call resolves' c"<=" call_tmp[1288627] call_tmp[1288632]))
    unknown call_tmp[1288642] "expr temp" "maybe param" "maybe type" "temp"
    (1288645 'move' call_tmp[1288642](1288509 call blk _mt[203] _arg1[1288465]))
    unknown call_tmp[1288647] "expr temp" "maybe param" "maybe type" "temp"
    (1288650 'move' call_tmp[1288647](1288513 call blk _mt[203] _arg2[1288466]))
    unknown call_tmp[1288652] "expr temp" "maybe param" "maybe type" "temp"
    (1288655 'move' call_tmp[1288652](1288517 'call resolves' c"<=" call_tmp[1288642] call_tmp[1288647]))
    unknown call_tmp[1288657] "expr temp" "maybe param" "maybe type" "temp"
    (1288660 'move' call_tmp[1288657](1288519 call str _mt[203] _arg1[1288465]))
    unknown call_tmp[1288662] "expr temp" "maybe param" "maybe type" "temp"
    (1288665 'move' call_tmp[1288662](1288523 call str _mt[203] _arg2[1288466]))
    unknown call_tmp[1288667] "expr temp" "maybe param" "maybe type" "temp"
    (1288670 'move' call_tmp[1288667](1288527 'call resolves' c"<=" call_tmp[1288657] call_tmp[1288662]))
    unknown call_tmp[1288672] "expr temp" "maybe param" "maybe type" "temp"
    (1288675 'move' call_tmp[1288672](1288529 call origin _mt[203] _arg1[1288465]))
    unknown call_tmp[1288677] "expr temp" "maybe param" "maybe type" "temp"
    (1288680 'move' call_tmp[1288677](1288533 call origin _mt[203] _arg2[1288466]))
    unknown call_tmp[1288682] "expr temp" "maybe param" "maybe type" "temp"
    (1288685 'move' call_tmp[1288682](1288537 'call resolves' c"<=" call_tmp[1288672] call_tmp[1288677]))
    unknown call_tmp[1288687] "expr temp" "maybe param" "maybe type" "temp"
    (1288690 'move' call_tmp[1288687](1288539 call factoredOffs _mt[203] _arg1[1288465]))
    unknown call_tmp[1288692] "expr temp" "maybe param" "maybe type" "temp"
    (1288695 'move' call_tmp[1288692](1288543 call factoredOffs _mt[203] _arg2[1288466]))
    unknown call_tmp[1288697] "expr temp" "maybe param" "maybe type" "temp"
    (1288700 'move' call_tmp[1288697](1288547 'call resolves' c"<=" call_tmp[1288687] call_tmp[1288692]))
    unknown call_tmp[1288702] "expr temp" "maybe param" "maybe type" "temp"
    (1288705 'move' call_tmp[1288702](1288549 call data _mt[203] _arg1[1288465]))
    unknown call_tmp[1288707] "expr temp" "maybe param" "maybe type" "temp"
    (1288710 'move' call_tmp[1288707](1288553 call data _mt[203] _arg2[1288466]))
    unknown call_tmp[1288712] "expr temp" "maybe param" "maybe type" "temp"
    (1288715 'move' call_tmp[1288712](1288557 'call resolves' c"<=" call_tmp[1288702] call_tmp[1288707]))
    unknown call_tmp[1288717] "expr temp" "maybe param" "maybe type" "temp"
    (1288720 'move' call_tmp[1288717](1288559 call shiftedData _mt[203] _arg1[1288465]))
    unknown call_tmp[1288722] "expr temp" "maybe param" "maybe type" "temp"
    (1288725 'move' call_tmp[1288722](1288563 call shiftedData _mt[203] _arg2[1288466]))
    unknown call_tmp[1288727] "expr temp" "maybe param" "maybe type" "temp"
    (1288730 'move' call_tmp[1288727](1288567 'call resolves' c"<=" call_tmp[1288717] call_tmp[1288722]))
    unknown call_tmp[1288732] "expr temp" "maybe param" "maybe type" "temp"
    (1288735 'move' call_tmp[1288732](1288569 '&' call_tmp[1288592] call_tmp[1288607] call_tmp[1288622] call_tmp[1288637] call_tmp[1288652] call_tmp[1288667] call_tmp[1288682] call_tmp[1288697] call_tmp[1288712] call_tmp[1288727]))
    (1288580 'move' ret[1288575](1288579 'deref' call_tmp[1288732]))
    (1288577 return ret[1288575])
  }
  function _remoteAccessData[293000](?).<=[1288447](arg _mt[1288449]:_MT[201], arg this[1288451]:_remoteAccessData[293000](?), arg _arg1[1288453]:_remoteAccessData[293000](?), arg _arg2[1288454]:_remoteAccessData[293000](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1289049]:bool[19] "RVV" "temp"
    unknown call_tmp[1289156] "expr temp" "maybe param" "maybe type" "temp"
    (1289159 'move' call_tmp[1289156](1288743 call rank _mt[203] _arg1[1288453]))
    unknown call_tmp[1289161] "expr temp" "maybe param" "maybe type" "temp"
    (1289164 'move' call_tmp[1289161](1288747 call rank _mt[203] _arg2[1288454]))
    unknown call_tmp[1289166] "expr temp" "maybe param" "maybe type" "temp"
    (1289169 'move' call_tmp[1289166](1288751 call chpl_field_lt call_tmp[1289156] call_tmp[1289161]))
    if call_tmp[1289166]
    {
      (1289054 'move' ret[1289049](1289053 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289171] "expr temp" "maybe param" "maybe type" "temp"
    (1289174 'move' call_tmp[1289171](1288757 call rank _mt[203] _arg1[1288453]))
    unknown call_tmp[1289176] "expr temp" "maybe param" "maybe type" "temp"
    (1289179 'move' call_tmp[1289176](1288761 call rank _mt[203] _arg2[1288454]))
    unknown call_tmp[1289181] "expr temp" "maybe param" "maybe type" "temp"
    (1289184 'move' call_tmp[1289181](1288765 call chpl_field_gt call_tmp[1289171] call_tmp[1289176]))
    if call_tmp[1289181]
    {
      (1289059 'move' ret[1289049](1289058 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289186] "expr temp" "maybe param" "maybe type" "temp"
    (1289189 'move' call_tmp[1289186](1288771 call strides _mt[203] _arg1[1288453]))
    unknown call_tmp[1289191] "expr temp" "maybe param" "maybe type" "temp"
    (1289194 'move' call_tmp[1289191](1288775 call strides _mt[203] _arg2[1288454]))
    unknown call_tmp[1289196] "expr temp" "maybe param" "maybe type" "temp"
    (1289199 'move' call_tmp[1289196](1288779 call chpl_field_lt call_tmp[1289186] call_tmp[1289191]))
    if call_tmp[1289196]
    {
      (1289064 'move' ret[1289049](1289063 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289201] "expr temp" "maybe param" "maybe type" "temp"
    (1289204 'move' call_tmp[1289201](1288785 call strides _mt[203] _arg1[1288453]))
    unknown call_tmp[1289206] "expr temp" "maybe param" "maybe type" "temp"
    (1289209 'move' call_tmp[1289206](1288789 call strides _mt[203] _arg2[1288454]))
    unknown call_tmp[1289211] "expr temp" "maybe param" "maybe type" "temp"
    (1289214 'move' call_tmp[1289211](1288793 call chpl_field_gt call_tmp[1289201] call_tmp[1289206]))
    if call_tmp[1289211]
    {
      (1289069 'move' ret[1289049](1289068 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289216] "expr temp" "maybe param" "maybe type" "temp"
    (1289219 'move' call_tmp[1289216](1288799 call blkChanged _mt[203] _arg1[1288453]))
    unknown call_tmp[1289221] "expr temp" "maybe param" "maybe type" "temp"
    (1289224 'move' call_tmp[1289221](1288803 call blkChanged _mt[203] _arg2[1288454]))
    unknown call_tmp[1289226] "expr temp" "maybe param" "maybe type" "temp"
    (1289229 'move' call_tmp[1289226](1288807 call chpl_field_lt call_tmp[1289216] call_tmp[1289221]))
    if call_tmp[1289226]
    {
      (1289074 'move' ret[1289049](1289073 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289231] "expr temp" "maybe param" "maybe type" "temp"
    (1289234 'move' call_tmp[1289231](1288813 call blkChanged _mt[203] _arg1[1288453]))
    unknown call_tmp[1289236] "expr temp" "maybe param" "maybe type" "temp"
    (1289239 'move' call_tmp[1289236](1288817 call blkChanged _mt[203] _arg2[1288454]))
    unknown call_tmp[1289241] "expr temp" "maybe param" "maybe type" "temp"
    (1289244 'move' call_tmp[1289241](1288821 call chpl_field_gt call_tmp[1289231] call_tmp[1289236]))
    if call_tmp[1289241]
    {
      (1289079 'move' ret[1289049](1289078 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289246] "expr temp" "maybe param" "maybe type" "temp"
    (1289249 'move' call_tmp[1289246](1288827 call off _mt[203] _arg1[1288453]))
    unknown call_tmp[1289251] "expr temp" "maybe param" "maybe type" "temp"
    (1289254 'move' call_tmp[1289251](1288831 call off _mt[203] _arg2[1288454]))
    unknown call_tmp[1289256] "expr temp" "maybe param" "maybe type" "temp"
    (1289259 'move' call_tmp[1289256](1288835 call chpl_field_lt call_tmp[1289246] call_tmp[1289251]))
    if call_tmp[1289256]
    {
      (1289084 'move' ret[1289049](1289083 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289261] "expr temp" "maybe param" "maybe type" "temp"
    (1289264 'move' call_tmp[1289261](1288841 call off _mt[203] _arg1[1288453]))
    unknown call_tmp[1289266] "expr temp" "maybe param" "maybe type" "temp"
    (1289269 'move' call_tmp[1289266](1288845 call off _mt[203] _arg2[1288454]))
    unknown call_tmp[1289271] "expr temp" "maybe param" "maybe type" "temp"
    (1289274 'move' call_tmp[1289271](1288849 call chpl_field_gt call_tmp[1289261] call_tmp[1289266]))
    if call_tmp[1289271]
    {
      (1289089 'move' ret[1289049](1289088 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289276] "expr temp" "maybe param" "maybe type" "temp"
    (1289279 'move' call_tmp[1289276](1288855 call blk _mt[203] _arg1[1288453]))
    unknown call_tmp[1289281] "expr temp" "maybe param" "maybe type" "temp"
    (1289284 'move' call_tmp[1289281](1288859 call blk _mt[203] _arg2[1288454]))
    unknown call_tmp[1289286] "expr temp" "maybe param" "maybe type" "temp"
    (1289289 'move' call_tmp[1289286](1288863 call chpl_field_lt call_tmp[1289276] call_tmp[1289281]))
    if call_tmp[1289286]
    {
      (1289094 'move' ret[1289049](1289093 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289291] "expr temp" "maybe param" "maybe type" "temp"
    (1289294 'move' call_tmp[1289291](1288869 call blk _mt[203] _arg1[1288453]))
    unknown call_tmp[1289296] "expr temp" "maybe param" "maybe type" "temp"
    (1289299 'move' call_tmp[1289296](1288873 call blk _mt[203] _arg2[1288454]))
    unknown call_tmp[1289301] "expr temp" "maybe param" "maybe type" "temp"
    (1289304 'move' call_tmp[1289301](1288877 call chpl_field_gt call_tmp[1289291] call_tmp[1289296]))
    if call_tmp[1289301]
    {
      (1289099 'move' ret[1289049](1289098 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289306] "expr temp" "maybe param" "maybe type" "temp"
    (1289309 'move' call_tmp[1289306](1288883 call str _mt[203] _arg1[1288453]))
    unknown call_tmp[1289311] "expr temp" "maybe param" "maybe type" "temp"
    (1289314 'move' call_tmp[1289311](1288887 call str _mt[203] _arg2[1288454]))
    unknown call_tmp[1289316] "expr temp" "maybe param" "maybe type" "temp"
    (1289319 'move' call_tmp[1289316](1288891 call chpl_field_lt call_tmp[1289306] call_tmp[1289311]))
    if call_tmp[1289316]
    {
      (1289104 'move' ret[1289049](1289103 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289321] "expr temp" "maybe param" "maybe type" "temp"
    (1289324 'move' call_tmp[1289321](1288897 call str _mt[203] _arg1[1288453]))
    unknown call_tmp[1289326] "expr temp" "maybe param" "maybe type" "temp"
    (1289329 'move' call_tmp[1289326](1288901 call str _mt[203] _arg2[1288454]))
    unknown call_tmp[1289331] "expr temp" "maybe param" "maybe type" "temp"
    (1289334 'move' call_tmp[1289331](1288905 call chpl_field_gt call_tmp[1289321] call_tmp[1289326]))
    if call_tmp[1289331]
    {
      (1289109 'move' ret[1289049](1289108 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289336] "expr temp" "maybe param" "maybe type" "temp"
    (1289339 'move' call_tmp[1289336](1288911 call origin _mt[203] _arg1[1288453]))
    unknown call_tmp[1289341] "expr temp" "maybe param" "maybe type" "temp"
    (1289344 'move' call_tmp[1289341](1288915 call origin _mt[203] _arg2[1288454]))
    unknown call_tmp[1289346] "expr temp" "maybe param" "maybe type" "temp"
    (1289349 'move' call_tmp[1289346](1288919 call chpl_field_lt call_tmp[1289336] call_tmp[1289341]))
    if call_tmp[1289346]
    {
      (1289114 'move' ret[1289049](1289113 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289351] "expr temp" "maybe param" "maybe type" "temp"
    (1289354 'move' call_tmp[1289351](1288925 call origin _mt[203] _arg1[1288453]))
    unknown call_tmp[1289356] "expr temp" "maybe param" "maybe type" "temp"
    (1289359 'move' call_tmp[1289356](1288929 call origin _mt[203] _arg2[1288454]))
    unknown call_tmp[1289361] "expr temp" "maybe param" "maybe type" "temp"
    (1289364 'move' call_tmp[1289361](1288933 call chpl_field_gt call_tmp[1289351] call_tmp[1289356]))
    if call_tmp[1289361]
    {
      (1289119 'move' ret[1289049](1289118 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289366] "expr temp" "maybe param" "maybe type" "temp"
    (1289369 'move' call_tmp[1289366](1288939 call factoredOffs _mt[203] _arg1[1288453]))
    unknown call_tmp[1289371] "expr temp" "maybe param" "maybe type" "temp"
    (1289374 'move' call_tmp[1289371](1288943 call factoredOffs _mt[203] _arg2[1288454]))
    unknown call_tmp[1289376] "expr temp" "maybe param" "maybe type" "temp"
    (1289379 'move' call_tmp[1289376](1288947 call chpl_field_lt call_tmp[1289366] call_tmp[1289371]))
    if call_tmp[1289376]
    {
      (1289124 'move' ret[1289049](1289123 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289381] "expr temp" "maybe param" "maybe type" "temp"
    (1289384 'move' call_tmp[1289381](1288953 call factoredOffs _mt[203] _arg1[1288453]))
    unknown call_tmp[1289386] "expr temp" "maybe param" "maybe type" "temp"
    (1289389 'move' call_tmp[1289386](1288957 call factoredOffs _mt[203] _arg2[1288454]))
    unknown call_tmp[1289391] "expr temp" "maybe param" "maybe type" "temp"
    (1289394 'move' call_tmp[1289391](1288961 call chpl_field_gt call_tmp[1289381] call_tmp[1289386]))
    if call_tmp[1289391]
    {
      (1289129 'move' ret[1289049](1289128 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289396] "expr temp" "maybe param" "maybe type" "temp"
    (1289399 'move' call_tmp[1289396](1288967 call data _mt[203] _arg1[1288453]))
    unknown call_tmp[1289401] "expr temp" "maybe param" "maybe type" "temp"
    (1289404 'move' call_tmp[1289401](1288971 call data _mt[203] _arg2[1288454]))
    unknown call_tmp[1289406] "expr temp" "maybe param" "maybe type" "temp"
    (1289409 'move' call_tmp[1289406](1288975 call chpl_field_lt call_tmp[1289396] call_tmp[1289401]))
    if call_tmp[1289406]
    {
      (1289134 'move' ret[1289049](1289133 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289411] "expr temp" "maybe param" "maybe type" "temp"
    (1289414 'move' call_tmp[1289411](1288981 call data _mt[203] _arg1[1288453]))
    unknown call_tmp[1289416] "expr temp" "maybe param" "maybe type" "temp"
    (1289419 'move' call_tmp[1289416](1288985 call data _mt[203] _arg2[1288454]))
    unknown call_tmp[1289421] "expr temp" "maybe param" "maybe type" "temp"
    (1289424 'move' call_tmp[1289421](1288989 call chpl_field_gt call_tmp[1289411] call_tmp[1289416]))
    if call_tmp[1289421]
    {
      (1289139 'move' ret[1289049](1289138 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289426] "expr temp" "maybe param" "maybe type" "temp"
    (1289429 'move' call_tmp[1289426](1288995 call shiftedData _mt[203] _arg1[1288453]))
    unknown call_tmp[1289431] "expr temp" "maybe param" "maybe type" "temp"
    (1289434 'move' call_tmp[1289431](1288999 call shiftedData _mt[203] _arg2[1288454]))
    unknown call_tmp[1289436] "expr temp" "maybe param" "maybe type" "temp"
    (1289439 'move' call_tmp[1289436](1289003 call chpl_field_lt call_tmp[1289426] call_tmp[1289431]))
    if call_tmp[1289436]
    {
      (1289144 'move' ret[1289049](1289143 'deref' 1))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    unknown call_tmp[1289441] "expr temp" "maybe param" "maybe type" "temp"
    (1289444 'move' call_tmp[1289441](1289009 call shiftedData _mt[203] _arg1[1288453]))
    unknown call_tmp[1289446] "expr temp" "maybe param" "maybe type" "temp"
    (1289449 'move' call_tmp[1289446](1289013 call shiftedData _mt[203] _arg2[1288454]))
    unknown call_tmp[1289451] "expr temp" "maybe param" "maybe type" "temp"
    (1289454 'move' call_tmp[1289451](1289017 call chpl_field_gt call_tmp[1289441] call_tmp[1289446]))
    if call_tmp[1289451]
    {
      (1289149 'move' ret[1289049](1289148 'deref' 0))
      gotoReturn _end_<=[1289047] _end_<=[1289047]
    }
    (1289154 'move' ret[1289049](1289153 'deref' 1))
    label _end_<=[1289047]
    (1289051 return ret[1289049])
  }
  where {
    unknown call_tmp[1289456] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1289459 'move' call_tmp[1289456](1288457 'typeof' _arg1[1288453]))
    unknown call_tmp[1289461] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1289464 'move' call_tmp[1289461](1288459 'typeof' _arg2[1288454]))
    unknown call_tmp[1289466] "expr temp" "maybe param" "maybe type" "temp"
    (1289469 'move' call_tmp[1289466](1288461 call == call_tmp[1289456] call_tmp[1289461]))
    unknown call_tmp[1289471] "expr temp" "maybe param" "maybe type" "temp"
    (1289474 'move' call_tmp[1289471](1288737 call chpl_fields_are_comparable[1288463] _arg1[1288453] _arg2[1288454]))
    (1288741 '&' call_tmp[1289466] call_tmp[1289471])
  }
  function chpl_fields_are_comparable[1289492](arg _arg1[1289494]:_remoteAccessData[293000](?), arg _arg2[1289495]:_remoteAccessData[293000](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1289604]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1289611] "expr temp" "maybe param" "maybe type" "temp"
    (1289614 'move' call_tmp[1289611](1289498 call rank _mt[203] _arg1[1289494]))
    unknown call_tmp[1289616] "expr temp" "maybe param" "maybe type" "temp"
    (1289619 'move' call_tmp[1289616](1289502 call rank _mt[203] _arg2[1289495]))
    unknown call_tmp[1289621] "expr temp" "maybe param" "maybe type" "temp"
    (1289624 'move' call_tmp[1289621](1289506 'call resolves' c">" call_tmp[1289611] call_tmp[1289616]))
    unknown call_tmp[1289626] "expr temp" "maybe param" "maybe type" "temp"
    (1289629 'move' call_tmp[1289626](1289508 call strides _mt[203] _arg1[1289494]))
    unknown call_tmp[1289631] "expr temp" "maybe param" "maybe type" "temp"
    (1289634 'move' call_tmp[1289631](1289512 call strides _mt[203] _arg2[1289495]))
    unknown call_tmp[1289636] "expr temp" "maybe param" "maybe type" "temp"
    (1289639 'move' call_tmp[1289636](1289516 'call resolves' c">" call_tmp[1289626] call_tmp[1289631]))
    unknown call_tmp[1289641] "expr temp" "maybe param" "maybe type" "temp"
    (1289644 'move' call_tmp[1289641](1289518 call blkChanged _mt[203] _arg1[1289494]))
    unknown call_tmp[1289646] "expr temp" "maybe param" "maybe type" "temp"
    (1289649 'move' call_tmp[1289646](1289522 call blkChanged _mt[203] _arg2[1289495]))
    unknown call_tmp[1289651] "expr temp" "maybe param" "maybe type" "temp"
    (1289654 'move' call_tmp[1289651](1289526 'call resolves' c">" call_tmp[1289641] call_tmp[1289646]))
    unknown call_tmp[1289656] "expr temp" "maybe param" "maybe type" "temp"
    (1289659 'move' call_tmp[1289656](1289528 call off _mt[203] _arg1[1289494]))
    unknown call_tmp[1289661] "expr temp" "maybe param" "maybe type" "temp"
    (1289664 'move' call_tmp[1289661](1289532 call off _mt[203] _arg2[1289495]))
    unknown call_tmp[1289666] "expr temp" "maybe param" "maybe type" "temp"
    (1289669 'move' call_tmp[1289666](1289536 'call resolves' c">" call_tmp[1289656] call_tmp[1289661]))
    unknown call_tmp[1289671] "expr temp" "maybe param" "maybe type" "temp"
    (1289674 'move' call_tmp[1289671](1289538 call blk _mt[203] _arg1[1289494]))
    unknown call_tmp[1289676] "expr temp" "maybe param" "maybe type" "temp"
    (1289679 'move' call_tmp[1289676](1289542 call blk _mt[203] _arg2[1289495]))
    unknown call_tmp[1289681] "expr temp" "maybe param" "maybe type" "temp"
    (1289684 'move' call_tmp[1289681](1289546 'call resolves' c">" call_tmp[1289671] call_tmp[1289676]))
    unknown call_tmp[1289686] "expr temp" "maybe param" "maybe type" "temp"
    (1289689 'move' call_tmp[1289686](1289548 call str _mt[203] _arg1[1289494]))
    unknown call_tmp[1289691] "expr temp" "maybe param" "maybe type" "temp"
    (1289694 'move' call_tmp[1289691](1289552 call str _mt[203] _arg2[1289495]))
    unknown call_tmp[1289696] "expr temp" "maybe param" "maybe type" "temp"
    (1289699 'move' call_tmp[1289696](1289556 'call resolves' c">" call_tmp[1289686] call_tmp[1289691]))
    unknown call_tmp[1289701] "expr temp" "maybe param" "maybe type" "temp"
    (1289704 'move' call_tmp[1289701](1289558 call origin _mt[203] _arg1[1289494]))
    unknown call_tmp[1289706] "expr temp" "maybe param" "maybe type" "temp"
    (1289709 'move' call_tmp[1289706](1289562 call origin _mt[203] _arg2[1289495]))
    unknown call_tmp[1289711] "expr temp" "maybe param" "maybe type" "temp"
    (1289714 'move' call_tmp[1289711](1289566 'call resolves' c">" call_tmp[1289701] call_tmp[1289706]))
    unknown call_tmp[1289716] "expr temp" "maybe param" "maybe type" "temp"
    (1289719 'move' call_tmp[1289716](1289568 call factoredOffs _mt[203] _arg1[1289494]))
    unknown call_tmp[1289721] "expr temp" "maybe param" "maybe type" "temp"
    (1289724 'move' call_tmp[1289721](1289572 call factoredOffs _mt[203] _arg2[1289495]))
    unknown call_tmp[1289726] "expr temp" "maybe param" "maybe type" "temp"
    (1289729 'move' call_tmp[1289726](1289576 'call resolves' c">" call_tmp[1289716] call_tmp[1289721]))
    unknown call_tmp[1289731] "expr temp" "maybe param" "maybe type" "temp"
    (1289734 'move' call_tmp[1289731](1289578 call data _mt[203] _arg1[1289494]))
    unknown call_tmp[1289736] "expr temp" "maybe param" "maybe type" "temp"
    (1289739 'move' call_tmp[1289736](1289582 call data _mt[203] _arg2[1289495]))
    unknown call_tmp[1289741] "expr temp" "maybe param" "maybe type" "temp"
    (1289744 'move' call_tmp[1289741](1289586 'call resolves' c">" call_tmp[1289731] call_tmp[1289736]))
    unknown call_tmp[1289746] "expr temp" "maybe param" "maybe type" "temp"
    (1289749 'move' call_tmp[1289746](1289588 call shiftedData _mt[203] _arg1[1289494]))
    unknown call_tmp[1289751] "expr temp" "maybe param" "maybe type" "temp"
    (1289754 'move' call_tmp[1289751](1289592 call shiftedData _mt[203] _arg2[1289495]))
    unknown call_tmp[1289756] "expr temp" "maybe param" "maybe type" "temp"
    (1289759 'move' call_tmp[1289756](1289596 'call resolves' c">" call_tmp[1289746] call_tmp[1289751]))
    unknown call_tmp[1289761] "expr temp" "maybe param" "maybe type" "temp"
    (1289764 'move' call_tmp[1289761](1289598 '&' call_tmp[1289621] call_tmp[1289636] call_tmp[1289651] call_tmp[1289666] call_tmp[1289681] call_tmp[1289696] call_tmp[1289711] call_tmp[1289726] call_tmp[1289741] call_tmp[1289756]))
    (1289609 'move' ret[1289604](1289608 'deref' call_tmp[1289761]))
    (1289606 return ret[1289604])
  }
  function _remoteAccessData[293000](?).>[1289476](arg _mt[1289478]:_MT[201], arg this[1289480]:_remoteAccessData[293000](?), arg _arg1[1289482]:_remoteAccessData[293000](?), arg _arg2[1289483]:_remoteAccessData[293000](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1290078]:bool[19] "RVV" "temp"
    unknown call_tmp[1290185] "expr temp" "maybe param" "maybe type" "temp"
    (1290188 'move' call_tmp[1290185](1289772 call rank _mt[203] _arg1[1289482]))
    unknown call_tmp[1290190] "expr temp" "maybe param" "maybe type" "temp"
    (1290193 'move' call_tmp[1290190](1289776 call rank _mt[203] _arg2[1289483]))
    unknown call_tmp[1290195] "expr temp" "maybe param" "maybe type" "temp"
    (1290198 'move' call_tmp[1290195](1289780 call chpl_field_gt call_tmp[1290185] call_tmp[1290190]))
    if call_tmp[1290195]
    {
      (1290083 'move' ret[1290078](1290082 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290200] "expr temp" "maybe param" "maybe type" "temp"
    (1290203 'move' call_tmp[1290200](1289786 call rank _mt[203] _arg1[1289482]))
    unknown call_tmp[1290205] "expr temp" "maybe param" "maybe type" "temp"
    (1290208 'move' call_tmp[1290205](1289790 call rank _mt[203] _arg2[1289483]))
    unknown call_tmp[1290210] "expr temp" "maybe param" "maybe type" "temp"
    (1290213 'move' call_tmp[1290210](1289794 call chpl_field_lt call_tmp[1290200] call_tmp[1290205]))
    if call_tmp[1290210]
    {
      (1290088 'move' ret[1290078](1290087 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290215] "expr temp" "maybe param" "maybe type" "temp"
    (1290218 'move' call_tmp[1290215](1289800 call strides _mt[203] _arg1[1289482]))
    unknown call_tmp[1290220] "expr temp" "maybe param" "maybe type" "temp"
    (1290223 'move' call_tmp[1290220](1289804 call strides _mt[203] _arg2[1289483]))
    unknown call_tmp[1290225] "expr temp" "maybe param" "maybe type" "temp"
    (1290228 'move' call_tmp[1290225](1289808 call chpl_field_gt call_tmp[1290215] call_tmp[1290220]))
    if call_tmp[1290225]
    {
      (1290093 'move' ret[1290078](1290092 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290230] "expr temp" "maybe param" "maybe type" "temp"
    (1290233 'move' call_tmp[1290230](1289814 call strides _mt[203] _arg1[1289482]))
    unknown call_tmp[1290235] "expr temp" "maybe param" "maybe type" "temp"
    (1290238 'move' call_tmp[1290235](1289818 call strides _mt[203] _arg2[1289483]))
    unknown call_tmp[1290240] "expr temp" "maybe param" "maybe type" "temp"
    (1290243 'move' call_tmp[1290240](1289822 call chpl_field_lt call_tmp[1290230] call_tmp[1290235]))
    if call_tmp[1290240]
    {
      (1290098 'move' ret[1290078](1290097 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290245] "expr temp" "maybe param" "maybe type" "temp"
    (1290248 'move' call_tmp[1290245](1289828 call blkChanged _mt[203] _arg1[1289482]))
    unknown call_tmp[1290250] "expr temp" "maybe param" "maybe type" "temp"
    (1290253 'move' call_tmp[1290250](1289832 call blkChanged _mt[203] _arg2[1289483]))
    unknown call_tmp[1290255] "expr temp" "maybe param" "maybe type" "temp"
    (1290258 'move' call_tmp[1290255](1289836 call chpl_field_gt call_tmp[1290245] call_tmp[1290250]))
    if call_tmp[1290255]
    {
      (1290103 'move' ret[1290078](1290102 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290260] "expr temp" "maybe param" "maybe type" "temp"
    (1290263 'move' call_tmp[1290260](1289842 call blkChanged _mt[203] _arg1[1289482]))
    unknown call_tmp[1290265] "expr temp" "maybe param" "maybe type" "temp"
    (1290268 'move' call_tmp[1290265](1289846 call blkChanged _mt[203] _arg2[1289483]))
    unknown call_tmp[1290270] "expr temp" "maybe param" "maybe type" "temp"
    (1290273 'move' call_tmp[1290270](1289850 call chpl_field_lt call_tmp[1290260] call_tmp[1290265]))
    if call_tmp[1290270]
    {
      (1290108 'move' ret[1290078](1290107 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290275] "expr temp" "maybe param" "maybe type" "temp"
    (1290278 'move' call_tmp[1290275](1289856 call off _mt[203] _arg1[1289482]))
    unknown call_tmp[1290280] "expr temp" "maybe param" "maybe type" "temp"
    (1290283 'move' call_tmp[1290280](1289860 call off _mt[203] _arg2[1289483]))
    unknown call_tmp[1290285] "expr temp" "maybe param" "maybe type" "temp"
    (1290288 'move' call_tmp[1290285](1289864 call chpl_field_gt call_tmp[1290275] call_tmp[1290280]))
    if call_tmp[1290285]
    {
      (1290113 'move' ret[1290078](1290112 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290290] "expr temp" "maybe param" "maybe type" "temp"
    (1290293 'move' call_tmp[1290290](1289870 call off _mt[203] _arg1[1289482]))
    unknown call_tmp[1290295] "expr temp" "maybe param" "maybe type" "temp"
    (1290298 'move' call_tmp[1290295](1289874 call off _mt[203] _arg2[1289483]))
    unknown call_tmp[1290300] "expr temp" "maybe param" "maybe type" "temp"
    (1290303 'move' call_tmp[1290300](1289878 call chpl_field_lt call_tmp[1290290] call_tmp[1290295]))
    if call_tmp[1290300]
    {
      (1290118 'move' ret[1290078](1290117 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290305] "expr temp" "maybe param" "maybe type" "temp"
    (1290308 'move' call_tmp[1290305](1289884 call blk _mt[203] _arg1[1289482]))
    unknown call_tmp[1290310] "expr temp" "maybe param" "maybe type" "temp"
    (1290313 'move' call_tmp[1290310](1289888 call blk _mt[203] _arg2[1289483]))
    unknown call_tmp[1290315] "expr temp" "maybe param" "maybe type" "temp"
    (1290318 'move' call_tmp[1290315](1289892 call chpl_field_gt call_tmp[1290305] call_tmp[1290310]))
    if call_tmp[1290315]
    {
      (1290123 'move' ret[1290078](1290122 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290320] "expr temp" "maybe param" "maybe type" "temp"
    (1290323 'move' call_tmp[1290320](1289898 call blk _mt[203] _arg1[1289482]))
    unknown call_tmp[1290325] "expr temp" "maybe param" "maybe type" "temp"
    (1290328 'move' call_tmp[1290325](1289902 call blk _mt[203] _arg2[1289483]))
    unknown call_tmp[1290330] "expr temp" "maybe param" "maybe type" "temp"
    (1290333 'move' call_tmp[1290330](1289906 call chpl_field_lt call_tmp[1290320] call_tmp[1290325]))
    if call_tmp[1290330]
    {
      (1290128 'move' ret[1290078](1290127 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290335] "expr temp" "maybe param" "maybe type" "temp"
    (1290338 'move' call_tmp[1290335](1289912 call str _mt[203] _arg1[1289482]))
    unknown call_tmp[1290340] "expr temp" "maybe param" "maybe type" "temp"
    (1290343 'move' call_tmp[1290340](1289916 call str _mt[203] _arg2[1289483]))
    unknown call_tmp[1290345] "expr temp" "maybe param" "maybe type" "temp"
    (1290348 'move' call_tmp[1290345](1289920 call chpl_field_gt call_tmp[1290335] call_tmp[1290340]))
    if call_tmp[1290345]
    {
      (1290133 'move' ret[1290078](1290132 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290350] "expr temp" "maybe param" "maybe type" "temp"
    (1290353 'move' call_tmp[1290350](1289926 call str _mt[203] _arg1[1289482]))
    unknown call_tmp[1290355] "expr temp" "maybe param" "maybe type" "temp"
    (1290358 'move' call_tmp[1290355](1289930 call str _mt[203] _arg2[1289483]))
    unknown call_tmp[1290360] "expr temp" "maybe param" "maybe type" "temp"
    (1290363 'move' call_tmp[1290360](1289934 call chpl_field_lt call_tmp[1290350] call_tmp[1290355]))
    if call_tmp[1290360]
    {
      (1290138 'move' ret[1290078](1290137 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290365] "expr temp" "maybe param" "maybe type" "temp"
    (1290368 'move' call_tmp[1290365](1289940 call origin _mt[203] _arg1[1289482]))
    unknown call_tmp[1290370] "expr temp" "maybe param" "maybe type" "temp"
    (1290373 'move' call_tmp[1290370](1289944 call origin _mt[203] _arg2[1289483]))
    unknown call_tmp[1290375] "expr temp" "maybe param" "maybe type" "temp"
    (1290378 'move' call_tmp[1290375](1289948 call chpl_field_gt call_tmp[1290365] call_tmp[1290370]))
    if call_tmp[1290375]
    {
      (1290143 'move' ret[1290078](1290142 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290380] "expr temp" "maybe param" "maybe type" "temp"
    (1290383 'move' call_tmp[1290380](1289954 call origin _mt[203] _arg1[1289482]))
    unknown call_tmp[1290385] "expr temp" "maybe param" "maybe type" "temp"
    (1290388 'move' call_tmp[1290385](1289958 call origin _mt[203] _arg2[1289483]))
    unknown call_tmp[1290390] "expr temp" "maybe param" "maybe type" "temp"
    (1290393 'move' call_tmp[1290390](1289962 call chpl_field_lt call_tmp[1290380] call_tmp[1290385]))
    if call_tmp[1290390]
    {
      (1290148 'move' ret[1290078](1290147 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290395] "expr temp" "maybe param" "maybe type" "temp"
    (1290398 'move' call_tmp[1290395](1289968 call factoredOffs _mt[203] _arg1[1289482]))
    unknown call_tmp[1290400] "expr temp" "maybe param" "maybe type" "temp"
    (1290403 'move' call_tmp[1290400](1289972 call factoredOffs _mt[203] _arg2[1289483]))
    unknown call_tmp[1290405] "expr temp" "maybe param" "maybe type" "temp"
    (1290408 'move' call_tmp[1290405](1289976 call chpl_field_gt call_tmp[1290395] call_tmp[1290400]))
    if call_tmp[1290405]
    {
      (1290153 'move' ret[1290078](1290152 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290410] "expr temp" "maybe param" "maybe type" "temp"
    (1290413 'move' call_tmp[1290410](1289982 call factoredOffs _mt[203] _arg1[1289482]))
    unknown call_tmp[1290415] "expr temp" "maybe param" "maybe type" "temp"
    (1290418 'move' call_tmp[1290415](1289986 call factoredOffs _mt[203] _arg2[1289483]))
    unknown call_tmp[1290420] "expr temp" "maybe param" "maybe type" "temp"
    (1290423 'move' call_tmp[1290420](1289990 call chpl_field_lt call_tmp[1290410] call_tmp[1290415]))
    if call_tmp[1290420]
    {
      (1290158 'move' ret[1290078](1290157 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290425] "expr temp" "maybe param" "maybe type" "temp"
    (1290428 'move' call_tmp[1290425](1289996 call data _mt[203] _arg1[1289482]))
    unknown call_tmp[1290430] "expr temp" "maybe param" "maybe type" "temp"
    (1290433 'move' call_tmp[1290430](1290000 call data _mt[203] _arg2[1289483]))
    unknown call_tmp[1290435] "expr temp" "maybe param" "maybe type" "temp"
    (1290438 'move' call_tmp[1290435](1290004 call chpl_field_gt call_tmp[1290425] call_tmp[1290430]))
    if call_tmp[1290435]
    {
      (1290163 'move' ret[1290078](1290162 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290440] "expr temp" "maybe param" "maybe type" "temp"
    (1290443 'move' call_tmp[1290440](1290010 call data _mt[203] _arg1[1289482]))
    unknown call_tmp[1290445] "expr temp" "maybe param" "maybe type" "temp"
    (1290448 'move' call_tmp[1290445](1290014 call data _mt[203] _arg2[1289483]))
    unknown call_tmp[1290450] "expr temp" "maybe param" "maybe type" "temp"
    (1290453 'move' call_tmp[1290450](1290018 call chpl_field_lt call_tmp[1290440] call_tmp[1290445]))
    if call_tmp[1290450]
    {
      (1290168 'move' ret[1290078](1290167 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290455] "expr temp" "maybe param" "maybe type" "temp"
    (1290458 'move' call_tmp[1290455](1290024 call shiftedData _mt[203] _arg1[1289482]))
    unknown call_tmp[1290460] "expr temp" "maybe param" "maybe type" "temp"
    (1290463 'move' call_tmp[1290460](1290028 call shiftedData _mt[203] _arg2[1289483]))
    unknown call_tmp[1290465] "expr temp" "maybe param" "maybe type" "temp"
    (1290468 'move' call_tmp[1290465](1290032 call chpl_field_gt call_tmp[1290455] call_tmp[1290460]))
    if call_tmp[1290465]
    {
      (1290173 'move' ret[1290078](1290172 'deref' 1))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    unknown call_tmp[1290470] "expr temp" "maybe param" "maybe type" "temp"
    (1290473 'move' call_tmp[1290470](1290038 call shiftedData _mt[203] _arg1[1289482]))
    unknown call_tmp[1290475] "expr temp" "maybe param" "maybe type" "temp"
    (1290478 'move' call_tmp[1290475](1290042 call shiftedData _mt[203] _arg2[1289483]))
    unknown call_tmp[1290480] "expr temp" "maybe param" "maybe type" "temp"
    (1290483 'move' call_tmp[1290480](1290046 call chpl_field_lt call_tmp[1290470] call_tmp[1290475]))
    if call_tmp[1290480]
    {
      (1290178 'move' ret[1290078](1290177 'deref' 0))
      gotoReturn _end_>[1290076] _end_>[1290076]
    }
    (1290183 'move' ret[1290078](1290182 'deref' 0))
    label _end_>[1290076]
    (1290080 return ret[1290078])
  }
  where {
    unknown call_tmp[1290485] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1290488 'move' call_tmp[1290485](1289486 'typeof' _arg1[1289482]))
    unknown call_tmp[1290490] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1290493 'move' call_tmp[1290490](1289488 'typeof' _arg2[1289483]))
    unknown call_tmp[1290495] "expr temp" "maybe param" "maybe type" "temp"
    (1290498 'move' call_tmp[1290495](1289490 call == call_tmp[1290485] call_tmp[1290490]))
    unknown call_tmp[1290500] "expr temp" "maybe param" "maybe type" "temp"
    (1290503 'move' call_tmp[1290500](1289766 call chpl_fields_are_comparable[1289492] _arg1[1289482] _arg2[1289483]))
    (1289770 '&' call_tmp[1290495] call_tmp[1290500])
  }
  function chpl_fields_are_comparable[1290521](arg _arg1[1290523]:_remoteAccessData[293000](?), arg _arg2[1290524]:_remoteAccessData[293000](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1290633]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1290640] "expr temp" "maybe param" "maybe type" "temp"
    (1290643 'move' call_tmp[1290640](1290527 call rank _mt[203] _arg1[1290523]))
    unknown call_tmp[1290645] "expr temp" "maybe param" "maybe type" "temp"
    (1290648 'move' call_tmp[1290645](1290531 call rank _mt[203] _arg2[1290524]))
    unknown call_tmp[1290650] "expr temp" "maybe param" "maybe type" "temp"
    (1290653 'move' call_tmp[1290650](1290535 'call resolves' c">=" call_tmp[1290640] call_tmp[1290645]))
    unknown call_tmp[1290655] "expr temp" "maybe param" "maybe type" "temp"
    (1290658 'move' call_tmp[1290655](1290537 call strides _mt[203] _arg1[1290523]))
    unknown call_tmp[1290660] "expr temp" "maybe param" "maybe type" "temp"
    (1290663 'move' call_tmp[1290660](1290541 call strides _mt[203] _arg2[1290524]))
    unknown call_tmp[1290665] "expr temp" "maybe param" "maybe type" "temp"
    (1290668 'move' call_tmp[1290665](1290545 'call resolves' c">=" call_tmp[1290655] call_tmp[1290660]))
    unknown call_tmp[1290670] "expr temp" "maybe param" "maybe type" "temp"
    (1290673 'move' call_tmp[1290670](1290547 call blkChanged _mt[203] _arg1[1290523]))
    unknown call_tmp[1290675] "expr temp" "maybe param" "maybe type" "temp"
    (1290678 'move' call_tmp[1290675](1290551 call blkChanged _mt[203] _arg2[1290524]))
    unknown call_tmp[1290680] "expr temp" "maybe param" "maybe type" "temp"
    (1290683 'move' call_tmp[1290680](1290555 'call resolves' c">=" call_tmp[1290670] call_tmp[1290675]))
    unknown call_tmp[1290685] "expr temp" "maybe param" "maybe type" "temp"
    (1290688 'move' call_tmp[1290685](1290557 call off _mt[203] _arg1[1290523]))
    unknown call_tmp[1290690] "expr temp" "maybe param" "maybe type" "temp"
    (1290693 'move' call_tmp[1290690](1290561 call off _mt[203] _arg2[1290524]))
    unknown call_tmp[1290695] "expr temp" "maybe param" "maybe type" "temp"
    (1290698 'move' call_tmp[1290695](1290565 'call resolves' c">=" call_tmp[1290685] call_tmp[1290690]))
    unknown call_tmp[1290700] "expr temp" "maybe param" "maybe type" "temp"
    (1290703 'move' call_tmp[1290700](1290567 call blk _mt[203] _arg1[1290523]))
    unknown call_tmp[1290705] "expr temp" "maybe param" "maybe type" "temp"
    (1290708 'move' call_tmp[1290705](1290571 call blk _mt[203] _arg2[1290524]))
    unknown call_tmp[1290710] "expr temp" "maybe param" "maybe type" "temp"
    (1290713 'move' call_tmp[1290710](1290575 'call resolves' c">=" call_tmp[1290700] call_tmp[1290705]))
    unknown call_tmp[1290715] "expr temp" "maybe param" "maybe type" "temp"
    (1290718 'move' call_tmp[1290715](1290577 call str _mt[203] _arg1[1290523]))
    unknown call_tmp[1290720] "expr temp" "maybe param" "maybe type" "temp"
    (1290723 'move' call_tmp[1290720](1290581 call str _mt[203] _arg2[1290524]))
    unknown call_tmp[1290725] "expr temp" "maybe param" "maybe type" "temp"
    (1290728 'move' call_tmp[1290725](1290585 'call resolves' c">=" call_tmp[1290715] call_tmp[1290720]))
    unknown call_tmp[1290730] "expr temp" "maybe param" "maybe type" "temp"
    (1290733 'move' call_tmp[1290730](1290587 call origin _mt[203] _arg1[1290523]))
    unknown call_tmp[1290735] "expr temp" "maybe param" "maybe type" "temp"
    (1290738 'move' call_tmp[1290735](1290591 call origin _mt[203] _arg2[1290524]))
    unknown call_tmp[1290740] "expr temp" "maybe param" "maybe type" "temp"
    (1290743 'move' call_tmp[1290740](1290595 'call resolves' c">=" call_tmp[1290730] call_tmp[1290735]))
    unknown call_tmp[1290745] "expr temp" "maybe param" "maybe type" "temp"
    (1290748 'move' call_tmp[1290745](1290597 call factoredOffs _mt[203] _arg1[1290523]))
    unknown call_tmp[1290750] "expr temp" "maybe param" "maybe type" "temp"
    (1290753 'move' call_tmp[1290750](1290601 call factoredOffs _mt[203] _arg2[1290524]))
    unknown call_tmp[1290755] "expr temp" "maybe param" "maybe type" "temp"
    (1290758 'move' call_tmp[1290755](1290605 'call resolves' c">=" call_tmp[1290745] call_tmp[1290750]))
    unknown call_tmp[1290760] "expr temp" "maybe param" "maybe type" "temp"
    (1290763 'move' call_tmp[1290760](1290607 call data _mt[203] _arg1[1290523]))
    unknown call_tmp[1290765] "expr temp" "maybe param" "maybe type" "temp"
    (1290768 'move' call_tmp[1290765](1290611 call data _mt[203] _arg2[1290524]))
    unknown call_tmp[1290770] "expr temp" "maybe param" "maybe type" "temp"
    (1290773 'move' call_tmp[1290770](1290615 'call resolves' c">=" call_tmp[1290760] call_tmp[1290765]))
    unknown call_tmp[1290775] "expr temp" "maybe param" "maybe type" "temp"
    (1290778 'move' call_tmp[1290775](1290617 call shiftedData _mt[203] _arg1[1290523]))
    unknown call_tmp[1290780] "expr temp" "maybe param" "maybe type" "temp"
    (1290783 'move' call_tmp[1290780](1290621 call shiftedData _mt[203] _arg2[1290524]))
    unknown call_tmp[1290785] "expr temp" "maybe param" "maybe type" "temp"
    (1290788 'move' call_tmp[1290785](1290625 'call resolves' c">=" call_tmp[1290775] call_tmp[1290780]))
    unknown call_tmp[1290790] "expr temp" "maybe param" "maybe type" "temp"
    (1290793 'move' call_tmp[1290790](1290627 '&' call_tmp[1290650] call_tmp[1290665] call_tmp[1290680] call_tmp[1290695] call_tmp[1290710] call_tmp[1290725] call_tmp[1290740] call_tmp[1290755] call_tmp[1290770] call_tmp[1290785]))
    (1290638 'move' ret[1290633](1290637 'deref' call_tmp[1290790]))
    (1290635 return ret[1290633])
  }
  function _remoteAccessData[293000](?).>=[1290505](arg _mt[1290507]:_MT[201], arg this[1290509]:_remoteAccessData[293000](?), arg _arg1[1290511]:_remoteAccessData[293000](?), arg _arg2[1290512]:_remoteAccessData[293000](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1291107]:bool[19] "RVV" "temp"
    unknown call_tmp[1291214] "expr temp" "maybe param" "maybe type" "temp"
    (1291217 'move' call_tmp[1291214](1290801 call rank _mt[203] _arg1[1290511]))
    unknown call_tmp[1291219] "expr temp" "maybe param" "maybe type" "temp"
    (1291222 'move' call_tmp[1291219](1290805 call rank _mt[203] _arg2[1290512]))
    unknown call_tmp[1291224] "expr temp" "maybe param" "maybe type" "temp"
    (1291227 'move' call_tmp[1291224](1290809 call chpl_field_gt call_tmp[1291214] call_tmp[1291219]))
    if call_tmp[1291224]
    {
      (1291112 'move' ret[1291107](1291111 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291229] "expr temp" "maybe param" "maybe type" "temp"
    (1291232 'move' call_tmp[1291229](1290815 call rank _mt[203] _arg1[1290511]))
    unknown call_tmp[1291234] "expr temp" "maybe param" "maybe type" "temp"
    (1291237 'move' call_tmp[1291234](1290819 call rank _mt[203] _arg2[1290512]))
    unknown call_tmp[1291239] "expr temp" "maybe param" "maybe type" "temp"
    (1291242 'move' call_tmp[1291239](1290823 call chpl_field_lt call_tmp[1291229] call_tmp[1291234]))
    if call_tmp[1291239]
    {
      (1291117 'move' ret[1291107](1291116 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291244] "expr temp" "maybe param" "maybe type" "temp"
    (1291247 'move' call_tmp[1291244](1290829 call strides _mt[203] _arg1[1290511]))
    unknown call_tmp[1291249] "expr temp" "maybe param" "maybe type" "temp"
    (1291252 'move' call_tmp[1291249](1290833 call strides _mt[203] _arg2[1290512]))
    unknown call_tmp[1291254] "expr temp" "maybe param" "maybe type" "temp"
    (1291257 'move' call_tmp[1291254](1290837 call chpl_field_gt call_tmp[1291244] call_tmp[1291249]))
    if call_tmp[1291254]
    {
      (1291122 'move' ret[1291107](1291121 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291259] "expr temp" "maybe param" "maybe type" "temp"
    (1291262 'move' call_tmp[1291259](1290843 call strides _mt[203] _arg1[1290511]))
    unknown call_tmp[1291264] "expr temp" "maybe param" "maybe type" "temp"
    (1291267 'move' call_tmp[1291264](1290847 call strides _mt[203] _arg2[1290512]))
    unknown call_tmp[1291269] "expr temp" "maybe param" "maybe type" "temp"
    (1291272 'move' call_tmp[1291269](1290851 call chpl_field_lt call_tmp[1291259] call_tmp[1291264]))
    if call_tmp[1291269]
    {
      (1291127 'move' ret[1291107](1291126 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291274] "expr temp" "maybe param" "maybe type" "temp"
    (1291277 'move' call_tmp[1291274](1290857 call blkChanged _mt[203] _arg1[1290511]))
    unknown call_tmp[1291279] "expr temp" "maybe param" "maybe type" "temp"
    (1291282 'move' call_tmp[1291279](1290861 call blkChanged _mt[203] _arg2[1290512]))
    unknown call_tmp[1291284] "expr temp" "maybe param" "maybe type" "temp"
    (1291287 'move' call_tmp[1291284](1290865 call chpl_field_gt call_tmp[1291274] call_tmp[1291279]))
    if call_tmp[1291284]
    {
      (1291132 'move' ret[1291107](1291131 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291289] "expr temp" "maybe param" "maybe type" "temp"
    (1291292 'move' call_tmp[1291289](1290871 call blkChanged _mt[203] _arg1[1290511]))
    unknown call_tmp[1291294] "expr temp" "maybe param" "maybe type" "temp"
    (1291297 'move' call_tmp[1291294](1290875 call blkChanged _mt[203] _arg2[1290512]))
    unknown call_tmp[1291299] "expr temp" "maybe param" "maybe type" "temp"
    (1291302 'move' call_tmp[1291299](1290879 call chpl_field_lt call_tmp[1291289] call_tmp[1291294]))
    if call_tmp[1291299]
    {
      (1291137 'move' ret[1291107](1291136 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291304] "expr temp" "maybe param" "maybe type" "temp"
    (1291307 'move' call_tmp[1291304](1290885 call off _mt[203] _arg1[1290511]))
    unknown call_tmp[1291309] "expr temp" "maybe param" "maybe type" "temp"
    (1291312 'move' call_tmp[1291309](1290889 call off _mt[203] _arg2[1290512]))
    unknown call_tmp[1291314] "expr temp" "maybe param" "maybe type" "temp"
    (1291317 'move' call_tmp[1291314](1290893 call chpl_field_gt call_tmp[1291304] call_tmp[1291309]))
    if call_tmp[1291314]
    {
      (1291142 'move' ret[1291107](1291141 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291319] "expr temp" "maybe param" "maybe type" "temp"
    (1291322 'move' call_tmp[1291319](1290899 call off _mt[203] _arg1[1290511]))
    unknown call_tmp[1291324] "expr temp" "maybe param" "maybe type" "temp"
    (1291327 'move' call_tmp[1291324](1290903 call off _mt[203] _arg2[1290512]))
    unknown call_tmp[1291329] "expr temp" "maybe param" "maybe type" "temp"
    (1291332 'move' call_tmp[1291329](1290907 call chpl_field_lt call_tmp[1291319] call_tmp[1291324]))
    if call_tmp[1291329]
    {
      (1291147 'move' ret[1291107](1291146 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291334] "expr temp" "maybe param" "maybe type" "temp"
    (1291337 'move' call_tmp[1291334](1290913 call blk _mt[203] _arg1[1290511]))
    unknown call_tmp[1291339] "expr temp" "maybe param" "maybe type" "temp"
    (1291342 'move' call_tmp[1291339](1290917 call blk _mt[203] _arg2[1290512]))
    unknown call_tmp[1291344] "expr temp" "maybe param" "maybe type" "temp"
    (1291347 'move' call_tmp[1291344](1290921 call chpl_field_gt call_tmp[1291334] call_tmp[1291339]))
    if call_tmp[1291344]
    {
      (1291152 'move' ret[1291107](1291151 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291349] "expr temp" "maybe param" "maybe type" "temp"
    (1291352 'move' call_tmp[1291349](1290927 call blk _mt[203] _arg1[1290511]))
    unknown call_tmp[1291354] "expr temp" "maybe param" "maybe type" "temp"
    (1291357 'move' call_tmp[1291354](1290931 call blk _mt[203] _arg2[1290512]))
    unknown call_tmp[1291359] "expr temp" "maybe param" "maybe type" "temp"
    (1291362 'move' call_tmp[1291359](1290935 call chpl_field_lt call_tmp[1291349] call_tmp[1291354]))
    if call_tmp[1291359]
    {
      (1291157 'move' ret[1291107](1291156 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291364] "expr temp" "maybe param" "maybe type" "temp"
    (1291367 'move' call_tmp[1291364](1290941 call str _mt[203] _arg1[1290511]))
    unknown call_tmp[1291369] "expr temp" "maybe param" "maybe type" "temp"
    (1291372 'move' call_tmp[1291369](1290945 call str _mt[203] _arg2[1290512]))
    unknown call_tmp[1291374] "expr temp" "maybe param" "maybe type" "temp"
    (1291377 'move' call_tmp[1291374](1290949 call chpl_field_gt call_tmp[1291364] call_tmp[1291369]))
    if call_tmp[1291374]
    {
      (1291162 'move' ret[1291107](1291161 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291379] "expr temp" "maybe param" "maybe type" "temp"
    (1291382 'move' call_tmp[1291379](1290955 call str _mt[203] _arg1[1290511]))
    unknown call_tmp[1291384] "expr temp" "maybe param" "maybe type" "temp"
    (1291387 'move' call_tmp[1291384](1290959 call str _mt[203] _arg2[1290512]))
    unknown call_tmp[1291389] "expr temp" "maybe param" "maybe type" "temp"
    (1291392 'move' call_tmp[1291389](1290963 call chpl_field_lt call_tmp[1291379] call_tmp[1291384]))
    if call_tmp[1291389]
    {
      (1291167 'move' ret[1291107](1291166 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291394] "expr temp" "maybe param" "maybe type" "temp"
    (1291397 'move' call_tmp[1291394](1290969 call origin _mt[203] _arg1[1290511]))
    unknown call_tmp[1291399] "expr temp" "maybe param" "maybe type" "temp"
    (1291402 'move' call_tmp[1291399](1290973 call origin _mt[203] _arg2[1290512]))
    unknown call_tmp[1291404] "expr temp" "maybe param" "maybe type" "temp"
    (1291407 'move' call_tmp[1291404](1290977 call chpl_field_gt call_tmp[1291394] call_tmp[1291399]))
    if call_tmp[1291404]
    {
      (1291172 'move' ret[1291107](1291171 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291409] "expr temp" "maybe param" "maybe type" "temp"
    (1291412 'move' call_tmp[1291409](1290983 call origin _mt[203] _arg1[1290511]))
    unknown call_tmp[1291414] "expr temp" "maybe param" "maybe type" "temp"
    (1291417 'move' call_tmp[1291414](1290987 call origin _mt[203] _arg2[1290512]))
    unknown call_tmp[1291419] "expr temp" "maybe param" "maybe type" "temp"
    (1291422 'move' call_tmp[1291419](1290991 call chpl_field_lt call_tmp[1291409] call_tmp[1291414]))
    if call_tmp[1291419]
    {
      (1291177 'move' ret[1291107](1291176 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291424] "expr temp" "maybe param" "maybe type" "temp"
    (1291427 'move' call_tmp[1291424](1290997 call factoredOffs _mt[203] _arg1[1290511]))
    unknown call_tmp[1291429] "expr temp" "maybe param" "maybe type" "temp"
    (1291432 'move' call_tmp[1291429](1291001 call factoredOffs _mt[203] _arg2[1290512]))
    unknown call_tmp[1291434] "expr temp" "maybe param" "maybe type" "temp"
    (1291437 'move' call_tmp[1291434](1291005 call chpl_field_gt call_tmp[1291424] call_tmp[1291429]))
    if call_tmp[1291434]
    {
      (1291182 'move' ret[1291107](1291181 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291439] "expr temp" "maybe param" "maybe type" "temp"
    (1291442 'move' call_tmp[1291439](1291011 call factoredOffs _mt[203] _arg1[1290511]))
    unknown call_tmp[1291444] "expr temp" "maybe param" "maybe type" "temp"
    (1291447 'move' call_tmp[1291444](1291015 call factoredOffs _mt[203] _arg2[1290512]))
    unknown call_tmp[1291449] "expr temp" "maybe param" "maybe type" "temp"
    (1291452 'move' call_tmp[1291449](1291019 call chpl_field_lt call_tmp[1291439] call_tmp[1291444]))
    if call_tmp[1291449]
    {
      (1291187 'move' ret[1291107](1291186 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291454] "expr temp" "maybe param" "maybe type" "temp"
    (1291457 'move' call_tmp[1291454](1291025 call data _mt[203] _arg1[1290511]))
    unknown call_tmp[1291459] "expr temp" "maybe param" "maybe type" "temp"
    (1291462 'move' call_tmp[1291459](1291029 call data _mt[203] _arg2[1290512]))
    unknown call_tmp[1291464] "expr temp" "maybe param" "maybe type" "temp"
    (1291467 'move' call_tmp[1291464](1291033 call chpl_field_gt call_tmp[1291454] call_tmp[1291459]))
    if call_tmp[1291464]
    {
      (1291192 'move' ret[1291107](1291191 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291469] "expr temp" "maybe param" "maybe type" "temp"
    (1291472 'move' call_tmp[1291469](1291039 call data _mt[203] _arg1[1290511]))
    unknown call_tmp[1291474] "expr temp" "maybe param" "maybe type" "temp"
    (1291477 'move' call_tmp[1291474](1291043 call data _mt[203] _arg2[1290512]))
    unknown call_tmp[1291479] "expr temp" "maybe param" "maybe type" "temp"
    (1291482 'move' call_tmp[1291479](1291047 call chpl_field_lt call_tmp[1291469] call_tmp[1291474]))
    if call_tmp[1291479]
    {
      (1291197 'move' ret[1291107](1291196 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291484] "expr temp" "maybe param" "maybe type" "temp"
    (1291487 'move' call_tmp[1291484](1291053 call shiftedData _mt[203] _arg1[1290511]))
    unknown call_tmp[1291489] "expr temp" "maybe param" "maybe type" "temp"
    (1291492 'move' call_tmp[1291489](1291057 call shiftedData _mt[203] _arg2[1290512]))
    unknown call_tmp[1291494] "expr temp" "maybe param" "maybe type" "temp"
    (1291497 'move' call_tmp[1291494](1291061 call chpl_field_gt call_tmp[1291484] call_tmp[1291489]))
    if call_tmp[1291494]
    {
      (1291202 'move' ret[1291107](1291201 'deref' 1))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    unknown call_tmp[1291499] "expr temp" "maybe param" "maybe type" "temp"
    (1291502 'move' call_tmp[1291499](1291067 call shiftedData _mt[203] _arg1[1290511]))
    unknown call_tmp[1291504] "expr temp" "maybe param" "maybe type" "temp"
    (1291507 'move' call_tmp[1291504](1291071 call shiftedData _mt[203] _arg2[1290512]))
    unknown call_tmp[1291509] "expr temp" "maybe param" "maybe type" "temp"
    (1291512 'move' call_tmp[1291509](1291075 call chpl_field_lt call_tmp[1291499] call_tmp[1291504]))
    if call_tmp[1291509]
    {
      (1291207 'move' ret[1291107](1291206 'deref' 0))
      gotoReturn _end_>=[1291105] _end_>=[1291105]
    }
    (1291212 'move' ret[1291107](1291211 'deref' 1))
    label _end_>=[1291105]
    (1291109 return ret[1291107])
  }
  where {
    unknown call_tmp[1291514] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1291517 'move' call_tmp[1291514](1290515 'typeof' _arg1[1290511]))
    unknown call_tmp[1291519] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1291522 'move' call_tmp[1291519](1290517 'typeof' _arg2[1290512]))
    unknown call_tmp[1291524] "expr temp" "maybe param" "maybe type" "temp"
    (1291527 'move' call_tmp[1291524](1290519 call == call_tmp[1291514] call_tmp[1291519]))
    unknown call_tmp[1291529] "expr temp" "maybe param" "maybe type" "temp"
    (1291532 'move' call_tmp[1291529](1290795 call chpl_fields_are_comparable[1290521] _arg1[1290511] _arg2[1290512]))
    (1290799 '&' call_tmp[1291524] call_tmp[1291529])
  }
  type _remoteAccessData[293000](?) unknown eltType[292827] "type variable" unknown rank[292830] "param" int(64)[10] unknown idxType[292835] "type variable" unknown strides[292838] "param" strideKind[107137] unknown blkChanged[292843] "param" 0 bool[19] unknown off[292849](292850 call * rank[292830] idxType[292835]) unknown blk[292857](292858 call * rank[292830] int(64)[10]) unknown str[292865](292866 call * rank[292830](292870 call chpl__signedType(292872 call chpl__idxTypeToIntIdxType idxType[292835]))) val origin[292877]:int(64)[10] int(64)[10] val factoredOffs[292882]:int(64)[10] int(64)[10] unknown data[292887](292889 call _ddata[67573](?) eltType[292827]) unknown shiftedData[292894](292896 call _ddata[67573](?) eltType[292827])
  function _remoteAccessData[293000](?).getDataIndex[293002](arg _mt[293012]:_MT[201], arg this[293005]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg ind[293009] :
  (456561 call idxType _mt[203] this[293005])) : _unknown[42] "inline" "method"
  {
    unknown ret[629754] "RVV" "temp"
    unknown call_tmp[924645] "expr temp" "maybe param" "maybe type" "temp"
    (924648 'move' call_tmp[924645](293022 call chpl__tuplify ind[293009]))
    unknown call_tmp[924650] "expr temp" "maybe param" "maybe type" "temp"
    (924653 'move' call_tmp[924650](293020 call(293017 call (partial) getDataIndex _mt[203] this[293005]) call_tmp[924645]))
    (629759 'move' ret[629754](629758 'deref' call_tmp[924650]))
    (629756 return ret[629754])
  }
  function _remoteAccessData[293000](?).getDataIndex[293026](arg _mt[293039]:_MT[201], arg this[293029]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg ind[293036] :
  unknown call_tmp[924657] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method"
  {
    unknown ret[629763] "RVV" "temp"
    unknown call_tmp[924671] "expr temp" "maybe param" "maybe type" "temp"
    (924674 'move' call_tmp[924671](293431 call(456717 call (partial) hasUnitStride _mt[203] this[293029])))
    unknown call_tmp[924676] "expr temp" "maybe param" "maybe type" "temp"
    (924679 'move' call_tmp[924676](293428 call ! call_tmp[924671]))
    unknown call_tmp[924681] "expr temp" "maybe param" "maybe type" "temp"
    (924684 'move' call_tmp[924681](293432 call _cond_test call_tmp[924676]))
    if call_tmp[924681]
    {
      unknown call_tmp[924688] "maybe param" "maybe type" "temp"
      (924691 'move' call_tmp[924688](456577 call origin _mt[203] this[293029]))
      unknown sum[293044] "dead at end of block" "insert auto destroy"
      (653100 'init var' sum[293044] call_tmp[924688])
      (293047 'end of statement')
      {
        unknown i[293048] "dead at end of block" "index var" "insert auto destroy"
        (653102 'init var' i[293048] 0)
        (567343 'end of statement')
        unknown tmp[293090] "maybe param" "temp"
        unknown call_tmp[924695] "expr temp" "maybe param" "maybe type" "temp"
        (924698 'move' call_tmp[924695](456582 call rank _mt[203] this[293029]))
        unknown call_tmp[924700] "expr temp" "maybe param" "maybe type" "temp"
        (924703 'move' call_tmp[924700](293051 call - call_tmp[924695] 1))
        (293102 'move' tmp[293090](293100 call chpl_compute_low_param_loop_bound 0 call_tmp[924700]))
        unknown tmp[293091] "maybe param" "temp"
        unknown call_tmp[924707] "expr temp" "maybe param" "maybe type" "temp"
        (924710 'move' call_tmp[924707](456608 call rank _mt[203] this[293029]))
        unknown call_tmp[924712] "expr temp" "maybe param" "maybe type" "temp"
        (924715 'move' call_tmp[924712](293107 call - call_tmp[924707] 1))
        (293112 'move' tmp[293091](293110 call chpl_compute_high_param_loop_bound 0 call_tmp[924712]))
        unknown tmp[293092] "maybe param" "temp"
        (293115 'move' tmp[293092] 1)
        ParamForLoop[293117]
        { i[293048] tmp[293090] tmp[293091] tmp[293092]
          unknown call_tmp[924717] "expr temp" "maybe param" "maybe type" "temp"
          (924720 'move' call_tmp[924717](293069 call ind[293036] i[293048]))
          unknown call_tmp[924722] "expr temp" "maybe param" "maybe type" "temp"
          (924725 'move' call_tmp[924722](293067 call chpl__idxToInt call_tmp[924717]))
          unknown call_tmp[924729] "expr temp" "maybe param" "maybe type" "temp"
          (924732 'move' call_tmp[924729](293074 call(456590 call (partial) off _mt[203] this[293029]) i[293048]))
          unknown call_tmp[924734] "expr temp" "maybe param" "maybe type" "temp"
          (924737 'move' call_tmp[924734](293072 call chpl__idxToInt call_tmp[924729]))
          unknown call_tmp[924739] "expr temp" "maybe param" "maybe type" "temp"
          (924742 'move' call_tmp[924739](293064 call - call_tmp[924722] call_tmp[924734]))
          unknown call_tmp[924746] "expr temp" "maybe param" "maybe type" "temp"
          (924749 'move' call_tmp[924746](293079 call(293076 call (partial) safeCast _mt[203] call_tmp[924739]) int(64)[10]))
          unknown call_tmp[924753] "expr temp" "maybe param" "maybe type" "temp"
          (924756 'move' call_tmp[924753](293082 call(456596 call (partial) blk _mt[203] this[293029]) i[293048]))
          unknown call_tmp[924758] "expr temp" "maybe param" "maybe type" "temp"
          (924761 'move' call_tmp[924758](293062 call * call_tmp[924746] call_tmp[924753]))
          unknown call_tmp[924765] "expr temp" "maybe param" "maybe type" "temp"
          (924768 'move' call_tmp[924765](293087 call(456602 call (partial) str _mt[203] this[293029]) i[293048]))
          unknown call_tmp[924770] "expr temp" "maybe param" "maybe type" "temp"
          (924773 'move' call_tmp[924770](293085 call abs call_tmp[924765]))
          unknown call_tmp[924775] "expr temp" "maybe param" "maybe type" "temp"
          (924778 'move' call_tmp[924775](293060 call / call_tmp[924758] call_tmp[924770]))
          (293057 call += sum[293044] call_tmp[924775])
          (567344 'end of statement' sum[293044] i[293048])
        }
        label _unused_continueLabel[293094]
        label _breakLabel[293093]
      }
      (629768 'move' ret[629763](629767 'deref' sum[293044]))
      gotoReturn _end_getDataIndex[629761] _end_getDataIndex[629761]
      (567347 'end of statement' sum[293044])
    }
    {
      unknown tmp[503100] "maybe param" "temp"
      unknown call_tmp[924782] "expr temp" "maybe param" "maybe type" "temp"
      (924785 'move' call_tmp[924782](456712 call rank _mt[203] this[293029]))
      (503111 'move' tmp[503100](293419 call == call_tmp[924782] 1))
      unknown call_tmp[924787] "expr temp" "maybe param" "maybe type" "temp"
      (924790 'move' call_tmp[924787](503113 call _cond_invalid tmp[503100]))
      if call_tmp[924787]
      {
        (503116 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[704492] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704493] "maybe param" "temp"
      unknown call_tmp[924792] "expr temp" "maybe param" "maybe type" "temp"
      (924795 'move' call_tmp[924792](503101 call isTrue tmp[503100]))
      (704498 'move' tmp[704493](704496 call _cond_test call_tmp[924792]))
      if tmp[704493]
      {
        unknown tmp[704500] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (704502 'move' tmp[704500](503104 call isTrue earlyShiftData[287723]))
        (704507 'move' tmp[704492](704504 '_paramFoldLogical' tmp[704493] tmp[704500]))
      }
      {
        (704512 'move' tmp[704492](704509 '_paramFoldLogical' tmp[704493] 0))
      }
      unknown call_tmp[924797] "expr temp" "maybe param" "maybe type" "temp"
      (924800 'move' call_tmp[924797](293424 call _cond_test tmp[704492]))
      if call_tmp[924797]
      {
        unknown call_tmp[924804] "expr temp" "maybe param" "maybe type" "temp"
        (924807 'move' call_tmp[924804](456621 call blkChanged _mt[203] this[293029]))
        unknown call_tmp[924809] "expr temp" "maybe param" "maybe type" "temp"
        (924812 'move' call_tmp[924809](293156 call _cond_test call_tmp[924804]))
        if call_tmp[924809]
        {
          unknown call_tmp[924814] "expr temp" "maybe param" "maybe type" "temp"
          (924817 'move' call_tmp[924814](293139 call ind[293036] 0))
          unknown call_tmp[924819] "expr temp" "maybe param" "maybe type" "temp"
          (924822 'move' call_tmp[924819](293137 call chpl__idxToInt call_tmp[924814]))
          unknown call_tmp[924824] "expr temp" "maybe param" "maybe type" "temp"
          (924827 'move' call_tmp[924824](293134 call : call_tmp[924819] int(64)[10]))
          unknown call_tmp[924831] "expr temp" "maybe param" "maybe type" "temp"
          (924834 'move' call_tmp[924831](293143 call(456615 call (partial) blk _mt[203] this[293029]) 0))
          unknown call_tmp[924836] "expr temp" "maybe param" "maybe type" "temp"
          (924839 'move' call_tmp[924836](293132 call * call_tmp[924824] call_tmp[924831]))
          (629773 'move' ret[629763](629772 'deref' call_tmp[924836]))
          gotoReturn _end_getDataIndex[629761] _end_getDataIndex[629761]
        }
        {
          unknown call_tmp[924841] "expr temp" "maybe param" "maybe type" "temp"
          (924844 'move' call_tmp[924841](293152 call ind[293036] 0))
          unknown call_tmp[924846] "expr temp" "maybe param" "maybe type" "temp"
          (924849 'move' call_tmp[924846](293150 call chpl__idxToInt call_tmp[924841]))
          unknown call_tmp[924851] "expr temp" "maybe param" "maybe type" "temp"
          (924854 'move' call_tmp[924851](293147 call : call_tmp[924846] int(64)[10]))
          (629778 'move' ret[629763](629777 'deref' call_tmp[924851]))
          gotoReturn _end_getDataIndex[629761] _end_getDataIndex[629761]
        }
      }
      {
        unknown sum[293162] "dead at end of block" "insert auto destroy"
        unknown tmp[704519] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[704520] "maybe param" "temp"
        (704525 'move' tmp[704520](704523 call _cond_test earlyShiftData[287723]))
        if tmp[704520]
        {
          (704530 'move' tmp[704519](704527 '_paramFoldLogical' tmp[704520] 0))
        }
        {
          unknown tmp[704532] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (704534 'move' tmp[704532](456627 call origin _mt[203] this[293029]))
          (704539 'move' tmp[704519](704536 '_paramFoldLogical' tmp[704520] tmp[704532]))
        }
        (653104 'init var' sum[293162] tmp[704519])
        (293170 'end of statement')
        unknown call_tmp[924860] "expr temp" "maybe param" "maybe type" "temp"
        (924863 'move' call_tmp[924860](456699 call blkChanged _mt[203] this[293029]))
        unknown call_tmp[924865] "expr temp" "maybe param" "maybe type" "temp"
        (924868 'move' call_tmp[924865](293398 call _cond_test call_tmp[924860]))
        if call_tmp[924865]
        {
          {
            unknown i[293172] "dead at end of block" "index var" "insert auto destroy"
            (653106 'init var' i[293172] 0)
            (567352 'end of statement')
            unknown tmp[293198] "maybe param" "temp"
            unknown call_tmp[924872] "expr temp" "maybe param" "maybe type" "temp"
            (924875 'move' call_tmp[924872](456632 call rank _mt[203] this[293029]))
            unknown call_tmp[924877] "expr temp" "maybe param" "maybe type" "temp"
            (924880 'move' call_tmp[924877](293175 call - call_tmp[924872] 1))
            (293210 'move' tmp[293198](293208 call chpl_compute_low_param_loop_bound 0 call_tmp[924877]))
            unknown tmp[293199] "maybe param" "temp"
            unknown call_tmp[924884] "expr temp" "maybe param" "maybe type" "temp"
            (924887 'move' call_tmp[924884](456646 call rank _mt[203] this[293029]))
            unknown call_tmp[924889] "expr temp" "maybe param" "maybe type" "temp"
            (924892 'move' call_tmp[924889](293215 call - call_tmp[924884] 1))
            (293220 'move' tmp[293199](293218 call chpl_compute_high_param_loop_bound 0 call_tmp[924889]))
            unknown tmp[293200] "maybe param" "temp"
            (293223 'move' tmp[293200] 1)
            ParamForLoop[293225]
            { i[293172] tmp[293198] tmp[293199] tmp[293200]
              {
                unknown call_tmp[924894] "expr temp" "maybe param" "maybe type" "temp"
                (924897 'move' call_tmp[924894](293192 call ind[293036] i[293172]))
                unknown call_tmp[924899] "expr temp" "maybe param" "maybe type" "temp"
                (924902 'move' call_tmp[924899](293190 call chpl__idxToInt call_tmp[924894]))
                unknown call_tmp[924904] "expr temp" "maybe param" "maybe type" "temp"
                (924907 'move' call_tmp[924904](293187 call : call_tmp[924899] int(64)[10]))
                unknown call_tmp[924911] "expr temp" "maybe param" "maybe type" "temp"
                (924914 'move' call_tmp[924911](293196 call(456640 call (partial) blk _mt[203] this[293029]) i[293172]))
                unknown call_tmp[924916] "expr temp" "maybe param" "maybe type" "temp"
                (924919 'move' call_tmp[924916](293185 call * call_tmp[924904] call_tmp[924911]))
                (293182 call += sum[293162] call_tmp[924916])
                (567353 'end of statement' sum[293162] i[293172])
              }
            }
            label _unused_continueLabel[293202]
            label _breakLabel[293201]
          }
        }
        {
          unknown call_tmp[924921] "expr temp" "maybe param" "maybe type" "temp"
          (924924 'move' call_tmp[924921](293386 call == storageOrder[287756] RMO[287738]))
          unknown call_tmp[924926] "expr temp" "maybe param" "maybe type" "temp"
          (924929 'move' call_tmp[924926](293393 call _cond_test call_tmp[924921]))
          if call_tmp[924926]
          {
            {
              unknown i[293236] "dead at end of block" "index var" "insert auto destroy"
              (653108 'init var' i[293236] 0)
              (567356 'end of statement')
              unknown tmp[293262] "maybe param" "temp"
              unknown call_tmp[924933] "expr temp" "maybe param" "maybe type" "temp"
              (924936 'move' call_tmp[924933](456651 call rank _mt[203] this[293029]))
              unknown call_tmp[924938] "expr temp" "maybe param" "maybe type" "temp"
              (924941 'move' call_tmp[924938](293239 call - call_tmp[924933] 2))
              (293274 'move' tmp[293262](293272 call chpl_compute_low_param_loop_bound 0 call_tmp[924938]))
              unknown tmp[293263] "maybe param" "temp"
              unknown call_tmp[924945] "expr temp" "maybe param" "maybe type" "temp"
              (924948 'move' call_tmp[924945](456665 call rank _mt[203] this[293029]))
              unknown call_tmp[924950] "expr temp" "maybe param" "maybe type" "temp"
              (924953 'move' call_tmp[924950](293279 call - call_tmp[924945] 2))
              (293284 'move' tmp[293263](293282 call chpl_compute_high_param_loop_bound 0 call_tmp[924950]))
              unknown tmp[293264] "maybe param" "temp"
              (293287 'move' tmp[293264] 1)
              ParamForLoop[293289]
              { i[293236] tmp[293262] tmp[293263] tmp[293264]
                {
                  unknown call_tmp[924955] "expr temp" "maybe param" "maybe type" "temp"
                  (924958 'move' call_tmp[924955](293256 call ind[293036] i[293236]))
                  unknown call_tmp[924960] "expr temp" "maybe param" "maybe type" "temp"
                  (924963 'move' call_tmp[924960](293254 call chpl__idxToInt call_tmp[924955]))
                  unknown call_tmp[924965] "expr temp" "maybe param" "maybe type" "temp"
                  (924968 'move' call_tmp[924965](293251 call : call_tmp[924960] int(64)[10]))
                  unknown call_tmp[924972] "expr temp" "maybe param" "maybe type" "temp"
                  (924975 'move' call_tmp[924972](293260 call(456659 call (partial) blk _mt[203] this[293029]) i[293236]))
                  unknown call_tmp[924977] "expr temp" "maybe param" "maybe type" "temp"
                  (924980 'move' call_tmp[924977](293249 call * call_tmp[924965] call_tmp[924972]))
                  (293246 call += sum[293162] call_tmp[924977])
                  (567357 'end of statement' sum[293162] i[293236])
                }
              }
              label _unused_continueLabel[293266]
              label _breakLabel[293265]
            }
            unknown call_tmp[924984] "expr temp" "maybe param" "maybe type" "temp"
            (924987 'move' call_tmp[924984](456672 call rank _mt[203] this[293029]))
            unknown call_tmp[924989] "expr temp" "maybe param" "maybe type" "temp"
            (924992 'move' call_tmp[924989](293307 call - call_tmp[924984] 1))
            unknown call_tmp[924994] "expr temp" "maybe param" "maybe type" "temp"
            (924997 'move' call_tmp[924994](293306 call ind[293036] call_tmp[924989]))
            unknown call_tmp[924999] "expr temp" "maybe param" "maybe type" "temp"
            (925002 'move' call_tmp[924999](293304 call chpl__idxToInt call_tmp[924994]))
            unknown call_tmp[925004] "expr temp" "maybe param" "maybe type" "temp"
            (925007 'move' call_tmp[925004](293301 call : call_tmp[924999] int(64)[10]))
            (293298 call += sum[293162] call_tmp[925004])
            (567360 'end of statement' sum[293162])
          }
          {
            {
              unknown i[293313] "dead at end of block" "index var" "insert auto destroy"
              (653110 'init var' i[293313] 0)
              (567362 'end of statement')
              unknown tmp[293339] "maybe param" "temp"
              unknown call_tmp[925011] "expr temp" "maybe param" "maybe type" "temp"
              (925014 'move' call_tmp[925011](456677 call rank _mt[203] this[293029]))
              unknown call_tmp[925016] "expr temp" "maybe param" "maybe type" "temp"
              (925019 'move' call_tmp[925016](293316 call - call_tmp[925011] 1))
              (293351 'move' tmp[293339](293349 call chpl_compute_low_param_loop_bound 1 call_tmp[925016]))
              unknown tmp[293340] "maybe param" "temp"
              unknown call_tmp[925023] "expr temp" "maybe param" "maybe type" "temp"
              (925026 'move' call_tmp[925023](456691 call rank _mt[203] this[293029]))
              unknown call_tmp[925028] "expr temp" "maybe param" "maybe type" "temp"
              (925031 'move' call_tmp[925028](293356 call - call_tmp[925023] 1))
              (293361 'move' tmp[293340](293359 call chpl_compute_high_param_loop_bound 1 call_tmp[925028]))
              unknown tmp[293341] "maybe param" "temp"
              (293364 'move' tmp[293341] 1)
              ParamForLoop[293366]
              { i[293313] tmp[293339] tmp[293340] tmp[293341]
                {
                  unknown call_tmp[925033] "expr temp" "maybe param" "maybe type" "temp"
                  (925036 'move' call_tmp[925033](293333 call ind[293036] i[293313]))
                  unknown call_tmp[925038] "expr temp" "maybe param" "maybe type" "temp"
                  (925041 'move' call_tmp[925038](293331 call chpl__idxToInt call_tmp[925033]))
                  unknown call_tmp[925043] "expr temp" "maybe param" "maybe type" "temp"
                  (925046 'move' call_tmp[925043](293328 call : call_tmp[925038] int(64)[10]))
                  unknown call_tmp[925050] "expr temp" "maybe param" "maybe type" "temp"
                  (925053 'move' call_tmp[925050](293337 call(456685 call (partial) blk _mt[203] this[293029]) i[293313]))
                  unknown call_tmp[925055] "expr temp" "maybe param" "maybe type" "temp"
                  (925058 'move' call_tmp[925055](293326 call * call_tmp[925043] call_tmp[925050]))
                  (293323 call += sum[293162] call_tmp[925055])
                  (567363 'end of statement' sum[293162] i[293313])
                }
              }
              label _unused_continueLabel[293343]
              label _breakLabel[293342]
            }
            unknown call_tmp[925060] "expr temp" "maybe param" "maybe type" "temp"
            (925063 'move' call_tmp[925060](293383 call ind[293036] 0))
            unknown call_tmp[925065] "expr temp" "maybe param" "maybe type" "temp"
            (925068 'move' call_tmp[925065](293381 call chpl__idxToInt call_tmp[925060]))
            unknown call_tmp[925070] "expr temp" "maybe param" "maybe type" "temp"
            (925073 'move' call_tmp[925070](293378 call : call_tmp[925065] int(64)[10]))
            (293375 call += sum[293162] call_tmp[925070])
            (567366 'end of statement' sum[293162])
          }
        }
        unknown call_tmp[925075] "expr temp" "maybe param" "maybe type" "temp"
        (925078 'move' call_tmp[925075](293407 call ! earlyShiftData[287723]))
        unknown call_tmp[925080] "expr temp" "maybe param" "maybe type" "temp"
        (925083 'move' call_tmp[925080](293410 call _cond_test call_tmp[925075]))
        if call_tmp[925080]
        {
          unknown call_tmp[925087] "expr temp" "maybe param" "maybe type" "temp"
          (925090 'move' call_tmp[925087](456705 call factoredOffs _mt[203] this[293029]))
          (293402 call -= sum[293162] call_tmp[925087])
          (567368 'end of statement' sum[293162])
        }
        (629783 'move' ret[629763](629782 'deref' sum[293162]))
        gotoReturn _end_getDataIndex[629761] _end_getDataIndex[629761]
        (567370 'end of statement' sum[293162])
      }
    }
    label _end_getDataIndex[629761]
    (629765 return ret[629763])
  }
  function _remoteAccessData[293000](?).computeFactoredOffs[293438](arg _mt[293444]:_MT[201], ref arg this[293441]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?)) : _unknown[42] "method" "no return value for void"
  {
    unknown call_tmp[925094] "expr temp" "maybe param" "maybe type" "temp"
    (925097 'move' call_tmp[925094](456722 call factoredOffs _mt[203] this[293441]))
    (293447 call = call_tmp[925094] 0)
    (567372 'end of statement')
    {
      unknown i[293451] "dead at end of block" "index var" "insert auto destroy"
      (653112 'init var' i[293451] 0)
      (567373 'end of statement')
      unknown tmp[293480] "maybe param" "temp"
      unknown call_tmp[925101] "expr temp" "maybe param" "maybe type" "temp"
      (925104 'move' call_tmp[925101](456727 call rank _mt[203] this[293441]))
      unknown call_tmp[925106] "expr temp" "maybe param" "maybe type" "temp"
      (925109 'move' call_tmp[925106](293454 call - call_tmp[925101] 1))
      (293492 'move' tmp[293480](293490 call chpl_compute_low_param_loop_bound 0 call_tmp[925106]))
      unknown tmp[293481] "maybe param" "temp"
      unknown call_tmp[925113] "expr temp" "maybe param" "maybe type" "temp"
      (925116 'move' call_tmp[925113](456754 call rank _mt[203] this[293441]))
      unknown call_tmp[925118] "expr temp" "maybe param" "maybe type" "temp"
      (925121 'move' call_tmp[925118](293497 call - call_tmp[925113] 1))
      (293502 'move' tmp[293481](293500 call chpl_compute_high_param_loop_bound 0 call_tmp[925118]))
      unknown tmp[293482] "maybe param" "temp"
      (293505 'move' tmp[293482] 1)
      ParamForLoop[293507]
      { i[293451] tmp[293480] tmp[293481] tmp[293482]
        {
          unknown call_tmp[925125] "expr temp" "maybe param" "maybe type" "temp"
          (925128 'move' call_tmp[925125](456732 call factoredOffs _mt[203] this[293441]))
          unknown call_tmp[925132] "expr temp" "maybe param" "maybe type" "temp"
          (925135 'move' call_tmp[925132](456737 call factoredOffs _mt[203] this[293441]))
          unknown call_tmp[925139] "expr temp" "maybe param" "maybe type" "temp"
          (925142 'move' call_tmp[925139](293470 call(456742 call (partial) blk _mt[203] this[293441]) i[293451]))
          unknown call_tmp[925146] "expr temp" "maybe param" "maybe type" "temp"
          (925149 'move' call_tmp[925146](293477 call(456748 call (partial) off _mt[203] this[293441]) i[293451]))
          unknown call_tmp[925151] "expr temp" "maybe param" "maybe type" "temp"
          (925154 'move' call_tmp[925151](293475 call chpl__idxToInt call_tmp[925146]))
          unknown call_tmp[925156] "expr temp" "maybe param" "maybe type" "temp"
          (925159 'move' call_tmp[925156](293472 call : call_tmp[925151] int(64)[10]))
          unknown call_tmp[925161] "expr temp" "maybe param" "maybe type" "temp"
          (925164 'move' call_tmp[925161](293467 call * call_tmp[925139] call_tmp[925156]))
          unknown call_tmp[925166] "expr temp" "maybe param" "maybe type" "temp"
          (925169 'move' call_tmp[925166](293464 call + call_tmp[925132] call_tmp[925161]))
          (293461 call = call_tmp[925125] call_tmp[925166])
          (567374 'end of statement' i[293451])
        }
      }
      label _unused_continueLabel[293484]
      label _breakLabel[293483]
    }
    (629787 return _void[46])
  }
  function _remoteAccessData[293000](?).initShiftedData[293518](arg _mt[293524]:_MT[201], ref arg this[293521]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?)) : _unknown[42] "method" "no return value for void"
  {
    unknown tmp[503121] "maybe param" "temp"
    (503132 'move' tmp[503121] earlyShiftData[287723])
    unknown call_tmp[925171] "expr temp" "maybe param" "maybe type" "temp"
    (925174 'move' call_tmp[925171](503134 call _cond_invalid tmp[503121]))
    if call_tmp[925171]
    {
      (503137 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[704546] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704547] "maybe param" "temp"
    unknown call_tmp[925176] "expr temp" "maybe param" "maybe type" "temp"
    (925179 'move' call_tmp[925176](503122 call isTrue tmp[503121]))
    (704552 'move' tmp[704547](704550 call _cond_test call_tmp[925176]))
    if tmp[704547]
    {
      unknown tmp[704554] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[925183] "expr temp" "maybe param" "maybe type" "temp"
      (925186 'move' call_tmp[925183](293572 call(456807 call (partial) hasUnitStride _mt[203] this[293521])))
      (704556 'move' tmp[704554](503125 call isTrue call_tmp[925183]))
      (704561 'move' tmp[704546](704558 '_paramFoldLogical' tmp[704547] tmp[704554]))
    }
    {
      (704566 'move' tmp[704546](704563 '_paramFoldLogical' tmp[704547] 0))
    }
    unknown call_tmp[925188] "expr temp" "maybe param" "maybe type" "temp"
    (925191 'move' call_tmp[925188](293573 call _cond_test tmp[704546]))
    if call_tmp[925188]
    {
      unknown idxSignedType[293529] "dead at end of block" "insert auto destroy" "type variable"
      unknown call_tmp[925195] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (925198 'move' call_tmp[925195](653119 call idxType _mt[203] this[293521]))
      unknown call_tmp[925200] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (925203 'move' call_tmp[925200](653117 call chpl__idxTypeToIntIdxType call_tmp[925195]))
      (653122 'move' idxSignedType[293529](653115 call chpl__signedType call_tmp[925200]))
      const shiftDist[293537] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[704573] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704574] "maybe param" "temp"
      unknown call_tmp[925207] "expr temp" "maybe param" "maybe type" "temp"
      (925210 'move' call_tmp[925207](456764 call idxType _mt[203] this[293521]))
      unknown call_tmp[925212] "expr temp" "maybe param" "maybe type" "temp"
      (925215 'move' call_tmp[925212](293539 call isIntType call_tmp[925207]))
      (704579 'move' tmp[704574](704577 call _cond_test call_tmp[925212]))
      if tmp[704574]
      {
        unknown tmp[704581] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[925219] "expr temp" "maybe param" "maybe type" "temp"
        (925222 'move' call_tmp[925219](456769 call origin _mt[203] this[293521]))
        unknown call_tmp[925226] "expr temp" "maybe param" "maybe type" "temp"
        (925229 'move' call_tmp[925226](456774 call factoredOffs _mt[203] this[293521]))
        (704583 'move' tmp[704581](293541 call - call_tmp[925219] call_tmp[925226]))
        (704588 'move' tmp[704573](704585 '_paramFoldLogical' tmp[704574] tmp[704581]))
      }
      {
        unknown tmp[704590] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[925233] "expr temp" "maybe param" "maybe type" "temp"
        (925236 'move' call_tmp[925233](456779 call origin _mt[203] this[293521]))
        unknown call_tmp[925238] "expr temp" "maybe param" "maybe type" "temp"
        (925241 'move' call_tmp[925238](293547 call : call_tmp[925233] idxSignedType[293529]))
        unknown call_tmp[925245] "expr temp" "maybe param" "maybe type" "temp"
        (925248 'move' call_tmp[925245](456785 call factoredOffs _mt[203] this[293521]))
        unknown call_tmp[925250] "expr temp" "maybe param" "maybe type" "temp"
        (925253 'move' call_tmp[925250](293551 call : call_tmp[925245] idxSignedType[293529]))
        (704592 'move' tmp[704590](293545 call - call_tmp[925238] call_tmp[925250]))
        (704597 'move' tmp[704573](704594 '_paramFoldLogical' tmp[704574] tmp[704590]))
      }
      (653124 'init var' shiftDist[293537] tmp[704573])
      (293559 'end of statement' idxSignedType[293529])
      unknown call_tmp[925257] "expr temp" "maybe param" "maybe type" "temp"
      (925260 'move' call_tmp[925257](456791 call shiftedData _mt[203] this[293521]))
      unknown call_tmp[925264] "expr temp" "maybe param" "maybe type" "temp"
      (925267 'move' call_tmp[925264](456796 call eltType _mt[203] this[293521]))
      unknown call_tmp[925271] "expr temp" "maybe param" "maybe type" "temp"
      (925274 'move' call_tmp[925271](456801 call data _mt[203] this[293521]))
      unknown call_tmp[925276] "expr temp" "maybe param" "maybe type" "temp"
      (925279 'move' call_tmp[925276](293564 call _ddata_shift call_tmp[925264] call_tmp[925271] shiftDist[293537]))
      (293560 call = call_tmp[925257] call_tmp[925276])
      (567378 'end of statement' shiftDist[293537])
    }
    (629789 return _void[46])
  }
  function _remoteAccessData[293000](?).strideAlignUp[293579](arg _mt[293589]:_MT[201], arg this[293582]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg lo[293585]:_any[141](?), arg r[293587]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[629793] "RVV" "temp"
    unknown call_tmp[925283] "expr temp" "maybe param" "maybe type" "temp"
    (925286 'move' call_tmp[925283](293596 call lowBound _mt[203] r[293587]))
    unknown call_tmp[925290] "expr temp" "maybe param" "maybe type" "temp"
    (925293 'move' call_tmp[925290](293611 call lowBound _mt[203] r[293587]))
    unknown call_tmp[925295] "expr temp" "maybe param" "maybe type" "temp"
    (925298 'move' call_tmp[925295](293607 call - lo[293585] call_tmp[925290]))
    unknown call_tmp[925302] "expr temp" "maybe param" "maybe type" "temp"
    (925305 'move' call_tmp[925302](293619 call stride _mt[203] r[293587]))
    unknown call_tmp[925307] "expr temp" "maybe param" "maybe type" "temp"
    (925310 'move' call_tmp[925307](293617 call abs call_tmp[925302]))
    unknown call_tmp[925314] "expr temp" "maybe param" "maybe type" "temp"
    (925317 'move' call_tmp[925314](456813 call idxType _mt[203] this[293582]))
    unknown call_tmp[925319] "expr temp" "maybe param" "maybe type" "temp"
    (925322 'move' call_tmp[925319](293614 call : call_tmp[925307] call_tmp[925314]))
    unknown call_tmp[925324] "expr temp" "maybe param" "maybe type" "temp"
    (925327 'move' call_tmp[925324](293605 call + call_tmp[925295] call_tmp[925319]))
    unknown call_tmp[925329] "expr temp" "maybe param" "maybe type" "temp"
    (925332 'move' call_tmp[925329](293603 call - call_tmp[925324] 1))
    unknown call_tmp[925336] "expr temp" "maybe param" "maybe type" "temp"
    (925339 'move' call_tmp[925336](293629 call stride _mt[203] r[293587]))
    unknown call_tmp[925341] "expr temp" "maybe param" "maybe type" "temp"
    (925344 'move' call_tmp[925341](293627 call abs call_tmp[925336]))
    unknown call_tmp[925348] "expr temp" "maybe param" "maybe type" "temp"
    (925351 'move' call_tmp[925348](456818 call idxType _mt[203] this[293582]))
    unknown call_tmp[925353] "expr temp" "maybe param" "maybe type" "temp"
    (925356 'move' call_tmp[925353](293624 call : call_tmp[925341] call_tmp[925348]))
    unknown call_tmp[925358] "expr temp" "maybe param" "maybe type" "temp"
    (925361 'move' call_tmp[925358](293601 call / call_tmp[925329] call_tmp[925353]))
    unknown call_tmp[925365] "expr temp" "maybe param" "maybe type" "temp"
    (925368 'move' call_tmp[925365](293638 call stride _mt[203] r[293587]))
    unknown call_tmp[925370] "expr temp" "maybe param" "maybe type" "temp"
    (925373 'move' call_tmp[925370](293636 call abs call_tmp[925365]))
    unknown call_tmp[925377] "expr temp" "maybe param" "maybe type" "temp"
    (925380 'move' call_tmp[925377](456823 call idxType _mt[203] this[293582]))
    unknown call_tmp[925382] "expr temp" "maybe param" "maybe type" "temp"
    (925385 'move' call_tmp[925382](293633 call : call_tmp[925370] call_tmp[925377]))
    unknown call_tmp[925387] "expr temp" "maybe param" "maybe type" "temp"
    (925390 'move' call_tmp[925387](293599 call * call_tmp[925358] call_tmp[925382]))
    unknown call_tmp[925392] "expr temp" "maybe param" "maybe type" "temp"
    (925395 'move' call_tmp[925392](293593 call + call_tmp[925283] call_tmp[925387]))
    (629798 'move' ret[629793](629797 'deref' call_tmp[925392]))
    (629795 return ret[629793])
  }
  function _remoteAccessData[293000](?).strideAlignDown[293644](arg _mt[293654]:_MT[201], arg this[293647]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg hi[293650]:_any[141](?), arg r[293652]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[629802] "RVV" "temp"
    unknown call_tmp[925399] "expr temp" "maybe param" "maybe type" "temp"
    (925402 'move' call_tmp[925399](293667 call lowBound _mt[203] r[293652]))
    unknown call_tmp[925404] "expr temp" "maybe param" "maybe type" "temp"
    (925407 'move' call_tmp[925404](293663 call - hi[293650] call_tmp[925399]))
    unknown call_tmp[925411] "expr temp" "maybe param" "maybe type" "temp"
    (925414 'move' call_tmp[925411](293675 call stride _mt[203] r[293652]))
    unknown call_tmp[925416] "expr temp" "maybe param" "maybe type" "temp"
    (925419 'move' call_tmp[925416](293673 call abs call_tmp[925411]))
    unknown call_tmp[925423] "expr temp" "maybe param" "maybe type" "temp"
    (925426 'move' call_tmp[925423](456830 call idxType _mt[203] this[293647]))
    unknown call_tmp[925428] "expr temp" "maybe param" "maybe type" "temp"
    (925431 'move' call_tmp[925428](293670 call : call_tmp[925416] call_tmp[925423]))
    unknown call_tmp[925433] "expr temp" "maybe param" "maybe type" "temp"
    (925436 'move' call_tmp[925433](293661 call % call_tmp[925404] call_tmp[925428]))
    unknown call_tmp[925438] "expr temp" "maybe param" "maybe type" "temp"
    (925441 'move' call_tmp[925438](293658 call - hi[293650] call_tmp[925433]))
    (629807 'move' ret[629802](629806 'deref' call_tmp[925438]))
    (629804 return ret[629802])
  }
  function _remoteAccessData[293000](?).initDataFrom[293681](arg _mt[293691]:_MT[201], ref arg this[293684]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg other[293688]:_remoteAccessData[293000](?)) : _unknown[42] "method" "no return value for void"
  {
    unknown call_tmp[925445] "expr temp" "maybe param" "maybe type" "temp"
    (925448 'move' call_tmp[925445](293697 call data _mt[203] this[293684]))
    unknown call_tmp[925452] "expr temp" "maybe param" "maybe type" "temp"
    (925455 'move' call_tmp[925452](293701 call data _mt[203] other[293688]))
    (293694 call = call_tmp[925445] call_tmp[925452])
    (629809 return _void[46])
  }
  function _remoteAccessData[293000](?).toSlice[293706](arg _mt[293714]:_MT[201], arg this[293709]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg newDom[293712]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[629813] "RVV" "temp"
    unknown call_tmp[925459] "expr temp" "maybe param" "maybe type" "temp"
    (925462 'move' call_tmp[925459](293722 call rank _mt[203] this[293709]))
    unknown call_tmp[925466] "expr temp" "maybe param" "maybe type" "temp"
    (925469 'move' call_tmp[925466](293726 call rank _mt[203] newDom[293712]))
    unknown call_tmp[925471] "expr temp" "maybe param" "maybe type" "temp"
    (925474 'move' call_tmp[925471](293719 call == call_tmp[925459] call_tmp[925466]))
    (293718 call compilerAssert call_tmp[925471])
    (567383 'end of statement')
    unknown tmp[503142] "maybe param" "temp"
    unknown call_tmp[925478] "expr temp" "maybe param" "maybe type" "temp"
    (925481 'move' call_tmp[925478](293754 call(293751 call (partial) hasUnitStride _mt[203] newDom[293712])))
    (503153 'move' tmp[503142](293748 call ! call_tmp[925478]))
    unknown call_tmp[925483] "expr temp" "maybe param" "maybe type" "temp"
    (925486 'move' call_tmp[925483](503155 call _cond_invalid tmp[503142]))
    if call_tmp[925483]
    {
      (503158 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown rad[293730] "dead at end of block" "insert auto destroy"
    unknown tmp[704604] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704605] "maybe param" "temp"
    unknown call_tmp[925488] "expr temp" "maybe param" "maybe type" "temp"
    (925491 'move' call_tmp[925488](503143 call isTrue tmp[503142]))
    (704610 'move' tmp[704605](704608 call _cond_test call_tmp[925488]))
    if tmp[704605]
    {
      (704615 'move' tmp[704604](704612 '_paramFoldLogical' tmp[704605] 1))
    }
    {
      unknown tmp[704617] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[925495] "expr temp" "maybe param" "maybe type" "temp"
      (925498 'move' call_tmp[925495](293758 call blkChanged _mt[203] this[293709]))
      (704619 'move' tmp[704617](503147 call isTrue call_tmp[925495]))
      (704624 'move' tmp[704604](704621 '_paramFoldLogical' tmp[704605] tmp[704617]))
    }
    unknown call_tmp[925502] "expr temp" "maybe param" "maybe type" "temp"
    (925505 'move' call_tmp[925502](456837 call eltType _mt[203] this[293709]))
    unknown call_tmp[925509] "expr temp" "maybe param" "maybe type" "temp"
    (925512 'move' call_tmp[925509](293735 call rank _mt[203] newDom[293712]))
    unknown call_tmp[925516] "expr temp" "maybe param" "maybe type" "temp"
    (925519 'move' call_tmp[925516](293739 call idxType _mt[203] newDom[293712]))
    unknown call_tmp[925523] "expr temp" "maybe param" "maybe type" "temp"
    (925526 'move' call_tmp[925523](293743 call strides _mt[203] newDom[293712]))
    unknown call_tmp[925528] "expr temp" "maybe param" "maybe type" "temp"
    (925531 'move' call_tmp[925528](293732 call _remoteAccessData[293000](?) call_tmp[925502] call_tmp[925509] call_tmp[925516] call_tmp[925523] tmp[704604]))
    (653126 'default init var' rad[293730] call_tmp[925528])
    (293762 'end of statement')
    (293769 call(293766 call (partial) initDataFrom _mt[203] rad[293730]) this[293709])
    (567385 'end of statement' rad[293730])
    unknown tmp[704631] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704632] "maybe param" "temp"
    unknown call_tmp[925537] "expr temp" "maybe param" "maybe type" "temp"
    (925540 'move' call_tmp[925537](293785 call(293782 call (partial) hasUnitStride _mt[203] newDom[293712])))
    unknown call_tmp[925542] "expr temp" "maybe param" "maybe type" "temp"
    (925545 'move' call_tmp[925542](293779 call ! call_tmp[925537]))
    (704637 'move' tmp[704632](704635 call _cond_test call_tmp[925542]))
    if tmp[704632]
    {
      unknown tmp[704639] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704641 'move' tmp[704639](293787 call data _mt[203] this[293709]))
      (704646 'move' tmp[704631](704643 '_paramFoldLogical' tmp[704632] tmp[704639]))
    }
    {
      unknown tmp[704648] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704650 'move' tmp[704648](293791 call shiftedData _mt[203] this[293709]))
      (704655 'move' tmp[704631](704652 '_paramFoldLogical' tmp[704632] tmp[704648]))
    }
    unknown call_tmp[925553] "expr temp" "maybe param" "maybe type" "temp"
    (925556 'move' call_tmp[925553](293776 call shiftedData _mt[203] rad[293730]))
    (293771 call = call_tmp[925553] tmp[704631])
    (567387 'end of statement' rad[293730])
    unknown call_tmp[925560] "expr temp" "maybe param" "maybe type" "temp"
    (925563 'move' call_tmp[925560](293802 call origin _mt[203] rad[293730]))
    unknown call_tmp[925567] "expr temp" "maybe param" "maybe type" "temp"
    (925570 'move' call_tmp[925567](293806 call origin _mt[203] this[293709]))
    (293797 call = call_tmp[925560] call_tmp[925567])
    (567389 'end of statement' rad[293730])
    unknown call_tmp[925574] "expr temp" "maybe param" "maybe type" "temp"
    (925577 'move' call_tmp[925574](293814 call off _mt[203] rad[293730]))
    unknown call_tmp[925581] "expr temp" "maybe param" "maybe type" "temp"
    (925584 'move' call_tmp[925581](293820 call dsiLow _mt[203] newDom[293712]))
    unknown call_tmp[925586] "expr temp" "maybe param" "maybe type" "temp"
    (925589 'move' call_tmp[925586](293818 call chpl__tuplify call_tmp[925581]))
    (293809 call = call_tmp[925574] call_tmp[925586])
    (567391 'end of statement' rad[293730])
    unknown call_tmp[925593] "expr temp" "maybe param" "maybe type" "temp"
    (925596 'move' call_tmp[925593](293828 call str _mt[203] rad[293730]))
    unknown call_tmp[925600] "expr temp" "maybe param" "maybe type" "temp"
    (925603 'move' call_tmp[925600](293834 call dsiStride _mt[203] newDom[293712]))
    unknown call_tmp[925605] "expr temp" "maybe param" "maybe type" "temp"
    (925608 'move' call_tmp[925605](293832 call chpl__tuplify call_tmp[925600]))
    (293823 call = call_tmp[925593] call_tmp[925605])
    (567393 'end of statement' rad[293730])
    {
      unknown i[293837] "dead at end of block" "index var" "insert auto destroy"
      (653128 'init var' i[293837] 0)
      (567395 'end of statement')
      unknown tmp[293964] "maybe param" "temp"
      unknown call_tmp[925612] "expr temp" "maybe param" "maybe type" "temp"
      (925615 'move' call_tmp[925612](456843 call rank _mt[203] this[293709]))
      unknown call_tmp[925617] "expr temp" "maybe param" "maybe type" "temp"
      (925620 'move' call_tmp[925617](293840 call - call_tmp[925612] 1))
      (293976 'move' tmp[293964](293974 call chpl_compute_low_param_loop_bound 0 call_tmp[925617]))
      unknown tmp[293965] "maybe param" "temp"
      unknown call_tmp[925624] "expr temp" "maybe param" "maybe type" "temp"
      (925627 'move' call_tmp[925624](456860 call rank _mt[203] this[293709]))
      unknown call_tmp[925629] "expr temp" "maybe param" "maybe type" "temp"
      (925632 'move' call_tmp[925629](293981 call - call_tmp[925624] 1))
      (293986 'move' tmp[293965](293984 call chpl_compute_high_param_loop_bound 0 call_tmp[925629]))
      unknown tmp[293966] "maybe param" "temp"
      (293989 'move' tmp[293966] 1)
      ParamForLoop[293991]
      { i[293837] tmp[293964] tmp[293965] tmp[293966]
        {
          unknown call_tmp[925636] "expr temp" "maybe param" "maybe type" "temp"
          (925639 'move' call_tmp[925636](293859 call(293856 call (partial) blk _mt[203] this[293709]) i[293837]))
          unknown call_tmp[925643] "expr temp" "maybe param" "maybe type" "temp"
          (925646 'move' call_tmp[925643](293869 call(293866 call (partial) dsiDim _mt[203] newDom[293712]) i[293837]))
          unknown call_tmp[925650] "expr temp" "maybe param" "maybe type" "temp"
          (925653 'move' call_tmp[925650](293871 call lowBound _mt[203] call_tmp[925643]))
          unknown call_tmp[925655] "expr temp" "maybe param" "maybe type" "temp"
          (925658 'move' call_tmp[925655](293864 call chpl__idxToInt call_tmp[925650]))
          unknown call_tmp[925662] "expr temp" "maybe param" "maybe type" "temp"
          (925665 'move' call_tmp[925662](293880 call(293877 call (partial) off _mt[203] this[293709]) i[293837]))
          unknown call_tmp[925667] "expr temp" "maybe param" "maybe type" "temp"
          (925670 'move' call_tmp[925667](293875 call chpl__idxToInt call_tmp[925662]))
          unknown call_tmp[925672] "expr temp" "maybe param" "maybe type" "temp"
          (925675 'move' call_tmp[925672](293861 call - call_tmp[925655] call_tmp[925667]))
          unknown call_tmp[925679] "expr temp" "maybe param" "maybe type" "temp"
          (925682 'move' call_tmp[925679](293885 call(293882 call (partial) safeCast _mt[203] call_tmp[925672]) int(64)[10]))
          unknown call_tmp[925684] "expr temp" "maybe param" "maybe type" "temp"
          (925687 'move' call_tmp[925684](293851 call * call_tmp[925636] call_tmp[925679]))
          unknown call_tmp[925691] "expr temp" "maybe param" "maybe type" "temp"
          (925694 'move' call_tmp[925691](293893 call(293890 call (partial) str _mt[203] this[293709]) i[293837]))
          unknown call_tmp[925696] "expr temp" "maybe param" "maybe type" "temp"
          (925699 'move' call_tmp[925696](293888 call abs call_tmp[925691]))
          unknown call_tmp[925701] "maybe param" "maybe type" "temp"
          (925704 'move' call_tmp[925701](293849 call / call_tmp[925684] call_tmp[925696]))
          const shift[293848] "dead at end of block" "const" "insert auto destroy"
          (653130 'init var' shift[293848] call_tmp[925701])
          (293896 'end of statement')
          unknown call_tmp[925708] "expr temp" "maybe param" "maybe type" "temp"
          (925711 'move' call_tmp[925708](293919 call(293916 call (partial) str _mt[203] this[293709]) i[293837]))
          unknown call_tmp[925713] "expr temp" "maybe param" "maybe type" "temp"
          (925716 'move' call_tmp[925713](293913 call > call_tmp[925708] 0))
          unknown call_tmp[925718] "expr temp" "maybe param" "maybe type" "temp"
          (925721 'move' call_tmp[925718](293922 call _cond_test call_tmp[925713]))
          if call_tmp[925718]
          {
            unknown call_tmp[925725] "expr temp" "maybe param" "maybe type" "temp"
            (925728 'move' call_tmp[925725](293901 call origin _mt[203] rad[293730]))
            (293898 call += call_tmp[925725] shift[293848])
            (567397 'end of statement' rad[293730] shift[293848])
          }
          {
            unknown call_tmp[925732] "expr temp" "maybe param" "maybe type" "temp"
            (925735 'move' call_tmp[925732](293909 call origin _mt[203] rad[293730]))
            (293906 call -= call_tmp[925732] shift[293848])
            (567400 'end of statement' rad[293730] shift[293848])
          }
          unknown call_tmp[925739] "expr temp" "maybe param" "maybe type" "temp"
          (925742 'move' call_tmp[925739](293934 call(293931 call (partial) dsiDim _mt[203] newDom[293712]) i[293837]))
          unknown call_tmp[925746] "expr temp" "maybe param" "maybe type" "temp"
          (925749 'move' call_tmp[925746](293936 call stride _mt[203] call_tmp[925739]))
          unknown call_tmp[925753] "expr temp" "maybe param" "maybe type" "temp"
          (925756 'move' call_tmp[925753](293943 call(293940 call (partial) str _mt[203] this[293709]) i[293837]))
          unknown call_tmp[925758] "maybe param" "maybe type" "temp"
          (925761 'move' call_tmp[925758](293928 call / call_tmp[925746] call_tmp[925753]))
          const mult[293927] "dead at end of block" "const" "insert auto destroy"
          (653132 'init var' mult[293927] call_tmp[925758])
          (293946 'end of statement' i[293837])
          unknown call_tmp[925765] "expr temp" "maybe param" "maybe type" "temp"
          (925768 'move' call_tmp[925765](293953 call(293950 call (partial) blk _mt[203] rad[293730]) i[293837]))
          unknown call_tmp[925772] "expr temp" "maybe param" "maybe type" "temp"
          (925775 'move' call_tmp[925772](293961 call(293958 call (partial) blk _mt[203] this[293709]) i[293837]))
          unknown call_tmp[925777] "expr temp" "maybe param" "maybe type" "temp"
          (925780 'move' call_tmp[925777](293955 call * call_tmp[925772] mult[293927]))
          (293947 call = call_tmp[925765] call_tmp[925777])
          (567403 'end of statement' rad[293730] i[293837] mult[293927])
        }
      }
      label _unused_continueLabel[293968]
      label _breakLabel[293967]
    }
    (294006 call(294003 call (partial) computeFactoredOffs _mt[203] rad[293730]))
    (567407 'end of statement' rad[293730])
    (294013 call(294010 call (partial) initShiftedData _mt[203] rad[293730]))
    (567409 'end of statement' rad[293730])
    (629818 'move' ret[629813](629817 'deref' rad[293730]))
    gotoReturn _end_toSlice[629811] _end_toSlice[629811]
    (567411 'end of statement' rad[293730])
    label _end_toSlice[629811]
    (629815 return ret[629813])
  }
  function _remoteAccessData[293000](?).toReindex[294018](arg _mt[294026]:_MT[201], arg this[294021]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg newDom[294024]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[629824] "RVV" "temp"
    unknown call_tmp[925788] "expr temp" "maybe param" "maybe type" "temp"
    (925791 'move' call_tmp[925788](294034 call rank _mt[203] this[294021]))
    unknown call_tmp[925795] "expr temp" "maybe param" "maybe type" "temp"
    (925798 'move' call_tmp[925795](294038 call rank _mt[203] newDom[294024]))
    unknown call_tmp[925800] "expr temp" "maybe param" "maybe type" "temp"
    (925803 'move' call_tmp[925800](294031 call == call_tmp[925788] call_tmp[925795]))
    (294030 call compilerAssert call_tmp[925800])
    (567413 'end of statement')
    unknown rad[294042] "dead at end of block" "insert auto destroy"
    unknown call_tmp[925807] "expr temp" "maybe param" "maybe type" "temp"
    (925810 'move' call_tmp[925807](456867 call eltType _mt[203] this[294021]))
    unknown call_tmp[925814] "expr temp" "maybe param" "maybe type" "temp"
    (925817 'move' call_tmp[925814](294047 call rank _mt[203] newDom[294024]))
    unknown call_tmp[925821] "expr temp" "maybe param" "maybe type" "temp"
    (925824 'move' call_tmp[925821](294051 call idxType _mt[203] newDom[294024]))
    unknown call_tmp[925828] "expr temp" "maybe param" "maybe type" "temp"
    (925831 'move' call_tmp[925828](294055 call strides _mt[203] newDom[294024]))
    unknown call_tmp[925835] "expr temp" "maybe param" "maybe type" "temp"
    (925838 'move' call_tmp[925835](456872 call blkChanged _mt[203] this[294021]))
    unknown call_tmp[925840] "expr temp" "maybe param" "maybe type" "temp"
    (925843 'move' call_tmp[925840](294044 call _remoteAccessData[293000](?) call_tmp[925807] call_tmp[925814] call_tmp[925821] call_tmp[925828] call_tmp[925835]))
    (653134 'default init var' rad[294042] call_tmp[925840])
    (294060 'end of statement')
    (294065 call(294062 call (partial) initDataFrom _mt[203] rad[294042]) this[294021])
    (567414 'end of statement' rad[294042])
    unknown tmp[704662] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704663] "maybe param" "temp"
    unknown call_tmp[925849] "expr temp" "maybe param" "maybe type" "temp"
    (925852 'move' call_tmp[925849](294079 call(294076 call (partial) hasUnitStride _mt[203] newDom[294024])))
    unknown call_tmp[925854] "expr temp" "maybe param" "maybe type" "temp"
    (925857 'move' call_tmp[925854](294073 call ! call_tmp[925849]))
    (704668 'move' tmp[704663](704666 call _cond_test call_tmp[925854]))
    if tmp[704663]
    {
      unknown tmp[704670] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704672 'move' tmp[704670](294081 call data _mt[203] this[294021]))
      (704677 'move' tmp[704662](704674 '_paramFoldLogical' tmp[704663] tmp[704670]))
    }
    {
      unknown tmp[704679] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704681 'move' tmp[704679](294085 call shiftedData _mt[203] this[294021]))
      (704686 'move' tmp[704662](704683 '_paramFoldLogical' tmp[704663] tmp[704679]))
    }
    unknown call_tmp[925865] "expr temp" "maybe param" "maybe type" "temp"
    (925868 'move' call_tmp[925865](294070 call shiftedData _mt[203] rad[294042]))
    (294067 call = call_tmp[925865] tmp[704662])
    (567416 'end of statement' rad[294042])
    unknown call_tmp[925872] "expr temp" "maybe param" "maybe type" "temp"
    (925875 'move' call_tmp[925872](294094 call origin _mt[203] rad[294042]))
    unknown call_tmp[925879] "expr temp" "maybe param" "maybe type" "temp"
    (925882 'move' call_tmp[925879](294098 call origin _mt[203] this[294021]))
    (294091 call = call_tmp[925872] call_tmp[925879])
    (567418 'end of statement' rad[294042])
    unknown call_tmp[925886] "expr temp" "maybe param" "maybe type" "temp"
    (925889 'move' call_tmp[925886](294104 call blk _mt[203] rad[294042]))
    unknown call_tmp[925893] "expr temp" "maybe param" "maybe type" "temp"
    (925896 'move' call_tmp[925893](294108 call blk _mt[203] this[294021]))
    (294101 call = call_tmp[925886] call_tmp[925893])
    (567420 'end of statement' rad[294042])
    unknown call_tmp[925900] "expr temp" "maybe param" "maybe type" "temp"
    (925903 'move' call_tmp[925900](294114 call off _mt[203] rad[294042]))
    unknown call_tmp[925907] "expr temp" "maybe param" "maybe type" "temp"
    (925910 'move' call_tmp[925907](294120 call dsiLow _mt[203] newDom[294024]))
    unknown call_tmp[925912] "expr temp" "maybe param" "maybe type" "temp"
    (925915 'move' call_tmp[925912](294118 call chpl__tuplify call_tmp[925907]))
    (294111 call = call_tmp[925900] call_tmp[925912])
    (567422 'end of statement' rad[294042])
    unknown call_tmp[925919] "expr temp" "maybe param" "maybe type" "temp"
    (925922 'move' call_tmp[925919](294126 call str _mt[203] rad[294042]))
    unknown call_tmp[925926] "expr temp" "maybe param" "maybe type" "temp"
    (925929 'move' call_tmp[925926](294132 call dsiStride _mt[203] newDom[294024]))
    unknown call_tmp[925931] "expr temp" "maybe param" "maybe type" "temp"
    (925934 'move' call_tmp[925931](294130 call chpl__tuplify call_tmp[925926]))
    (294123 call = call_tmp[925919] call_tmp[925931])
    (567424 'end of statement' rad[294042])
    unknown call_tmp[925938] "expr temp" "maybe param" "maybe type" "temp"
    (925941 'move' call_tmp[925938](294140 call factoredOffs _mt[203] rad[294042]))
    (294135 call = call_tmp[925938] 0)
    (567426 'end of statement' rad[294042])
    (294148 call(294145 call (partial) computeFactoredOffs _mt[203] rad[294042]))
    (567428 'end of statement' rad[294042])
    (294153 call(294150 call (partial) initShiftedData _mt[203] rad[294042]))
    (567430 'end of statement' rad[294042])
    (629829 'move' ret[629824](629828 'deref' rad[294042]))
    gotoReturn _end_toReindex[629822] _end_toReindex[629822]
    (567432 'end of statement' rad[294042])
    label _end_toReindex[629822]
    (629826 return ret[629824])
  }
  function _remoteAccessData[293000](?).toRankChange[294158](arg _mt[294170]:_MT[201], arg this[294161]:_remoteAccessData[293000](?) :
  _remoteAccessData[293000](?), arg newDom[294164]:_any[141](?), arg cd[294166]:_any[141](?), arg idx[294168]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[629835] "RVV" "temp"
    unknown tmp[503163] "maybe param" "temp"
    unknown call_tmp[925949] "expr temp" "maybe param" "maybe type" "temp"
    (925952 'move' call_tmp[925949](294180 call rank _mt[203] this[294161]))
    unknown call_tmp[925956] "expr temp" "maybe param" "maybe type" "temp"
    (925959 'move' call_tmp[925956](294184 call size _mt[203] idx[294168]))
    (503174 'move' tmp[503163](294177 call == call_tmp[925949] call_tmp[925956]))
    unknown call_tmp[925961] "expr temp" "maybe param" "maybe type" "temp"
    (925964 'move' call_tmp[925961](503176 call _cond_invalid tmp[503163]))
    if call_tmp[925961]
    {
      (503179 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[704693] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704694] "maybe param" "temp"
    unknown call_tmp[925966] "expr temp" "maybe param" "maybe type" "temp"
    (925969 'move' call_tmp[925966](503164 call isTrue tmp[503163]))
    (704699 'move' tmp[704694](704697 call _cond_test call_tmp[925966]))
    if tmp[704694]
    {
      unknown tmp[704701] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[925973] "expr temp" "maybe param" "maybe type" "temp"
      (925976 'move' call_tmp[925973](294190 call rank _mt[203] this[294161]))
      unknown call_tmp[925980] "expr temp" "maybe param" "maybe type" "temp"
      (925983 'move' call_tmp[925980](294194 call rank _mt[203] newDom[294164]))
      unknown call_tmp[925985] "expr temp" "maybe param" "maybe type" "temp"
      (925988 'move' call_tmp[925985](294187 call != call_tmp[925973] call_tmp[925980]))
      (704703 'move' tmp[704701](503167 call isTrue call_tmp[925985]))
      (704708 'move' tmp[704693](704705 '_paramFoldLogical' tmp[704694] tmp[704701]))
    }
    {
      (704713 'move' tmp[704693](704710 '_paramFoldLogical' tmp[704694] 0))
    }
    (294174 call compilerAssert tmp[704693])
    (567435 'end of statement')
    unknown chpl_integralIdxType[294198] "dead at end of block" "insert auto destroy" "type variable"
    (653140 'move' chpl_integralIdxType[294198](653137 call chpl_integralIdxType _mt[203] newDom[294164]))
    unknown idxSignedType[294205] "dead at end of block" "insert auto destroy" "type variable"
    (653145 'move' idxSignedType[294205](653143 call chpl__signedType chpl_integralIdxType[294198]))
    unknown rad[294211] "dead at end of block" "insert auto destroy"
    unknown call_tmp[925994] "expr temp" "maybe param" "maybe type" "temp"
    (925997 'move' call_tmp[925994](456881 call eltType _mt[203] this[294161]))
    unknown call_tmp[926001] "expr temp" "maybe param" "maybe type" "temp"
    (926004 'move' call_tmp[926001](294216 call rank _mt[203] newDom[294164]))
    unknown call_tmp[926008] "expr temp" "maybe param" "maybe type" "temp"
    (926011 'move' call_tmp[926008](294220 call idxType _mt[203] newDom[294164]))
    unknown call_tmp[926015] "expr temp" "maybe param" "maybe type" "temp"
    (926018 'move' call_tmp[926015](294224 call strides _mt[203] newDom[294164]))
    unknown call_tmp[926020] "expr temp" "maybe param" "maybe type" "temp"
    (926023 'move' call_tmp[926020](294213 call _remoteAccessData[293000](?) call_tmp[925994] call_tmp[926001] call_tmp[926008] call_tmp[926015] 1))
    (653147 'default init var' rad[294211] call_tmp[926020])
    (294229 'end of statement')
    unknown call_tmp[926025] "maybe param" "maybe type" "temp"
    (926028 'move' call_tmp[926025](294233 call chpl__tuplify cd[294166]))
    const collapsedDims[294231] "dead at end of block" "const" "insert auto destroy"
    (653149 'init var' collapsedDims[294231] call_tmp[926025])
    (294236 'end of statement')
    (294241 call(294238 call (partial) initDataFrom _mt[203] rad[294211]) this[294161])
    (567437 'end of statement' rad[294211])
    unknown tmp[704720] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704721] "maybe param" "temp"
    unknown call_tmp[926034] "expr temp" "maybe param" "maybe type" "temp"
    (926037 'move' call_tmp[926034](294255 call(294252 call (partial) hasUnitStride _mt[203] newDom[294164])))
    unknown call_tmp[926039] "expr temp" "maybe param" "maybe type" "temp"
    (926042 'move' call_tmp[926039](294249 call ! call_tmp[926034]))
    (704726 'move' tmp[704721](704724 call _cond_test call_tmp[926039]))
    if tmp[704721]
    {
      unknown tmp[704728] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704730 'move' tmp[704728](294257 call data _mt[203] this[294161]))
      (704735 'move' tmp[704720](704732 '_paramFoldLogical' tmp[704721] tmp[704728]))
    }
    {
      unknown tmp[704737] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704739 'move' tmp[704737](294261 call shiftedData _mt[203] this[294161]))
      (704744 'move' tmp[704720](704741 '_paramFoldLogical' tmp[704721] tmp[704737]))
    }
    unknown call_tmp[926050] "expr temp" "maybe param" "maybe type" "temp"
    (926053 'move' call_tmp[926050](294246 call shiftedData _mt[203] rad[294211]))
    (294243 call = call_tmp[926050] tmp[704720])
    (567439 'end of statement' rad[294211])
    unknown call_tmp[926057] "expr temp" "maybe param" "maybe type" "temp"
    (926060 'move' call_tmp[926057](294270 call origin _mt[203] rad[294211]))
    unknown call_tmp[926064] "expr temp" "maybe param" "maybe type" "temp"
    (926067 'move' call_tmp[926064](294274 call origin _mt[203] this[294161]))
    (294267 call = call_tmp[926057] call_tmp[926064])
    (567441 'end of statement' rad[294211])
    unknown curDim[294278] "dead at end of block" "insert auto destroy"
    (653151 'init var' curDim[294278] 0)
    (294281 'end of statement' chpl_integralIdxType[294198])
    {
      unknown j[294282] "dead at end of block" "index var" "insert auto destroy"
      (653153 'init var' j[294282] 0)
      (567443 'end of statement')
      unknown tmp[294458] "maybe param" "temp"
      unknown call_tmp[926071] "expr temp" "maybe param" "maybe type" "temp"
      (926074 'move' call_tmp[926071](294288 call size _mt[203] idx[294168]))
      unknown call_tmp[926076] "expr temp" "maybe param" "maybe type" "temp"
      (926079 'move' call_tmp[926076](294285 call - call_tmp[926071] 1))
      (294470 'move' tmp[294458](294468 call chpl_compute_low_param_loop_bound 0 call_tmp[926076]))
      unknown tmp[294459] "maybe param" "temp"
      unknown call_tmp[926083] "expr temp" "maybe param" "maybe type" "temp"
      (926086 'move' call_tmp[926083](294477 call size _mt[203] idx[294168]))
      unknown call_tmp[926088] "expr temp" "maybe param" "maybe type" "temp"
      (926091 'move' call_tmp[926088](294475 call - call_tmp[926083] 1))
      (294483 'move' tmp[294459](294481 call chpl_compute_high_param_loop_bound 0 call_tmp[926088]))
      unknown tmp[294460] "maybe param" "temp"
      (294486 'move' tmp[294460] 1)
      ParamForLoop[294488]
      { j[294282] tmp[294458] tmp[294459] tmp[294460]
        {
          unknown call_tmp[926093] "expr temp" "maybe param" "maybe type" "temp"
          (926096 'move' call_tmp[926093](294452 call collapsedDims[294231] j[294282]))
          unknown call_tmp[926098] "expr temp" "maybe param" "maybe type" "temp"
          (926101 'move' call_tmp[926098](294449 call ! call_tmp[926093]))
          unknown call_tmp[926103] "expr temp" "maybe param" "maybe type" "temp"
          (926106 'move' call_tmp[926103](294454 call _cond_test call_tmp[926098]))
          if call_tmp[926103]
          {
            unknown call_tmp[926110] "expr temp" "maybe param" "maybe type" "temp"
            (926113 'move' call_tmp[926110](294302 call(294299 call (partial) off _mt[203] rad[294211]) curDim[294278]))
            unknown call_tmp[926117] "expr temp" "maybe param" "maybe type" "temp"
            (926120 'move' call_tmp[926117](294308 call(294305 call (partial) dsiDim _mt[203] newDom[294164]) curDim[294278]))
            unknown call_tmp[926124] "expr temp" "maybe param" "maybe type" "temp"
            (926127 'move' call_tmp[926124](294310 call lowBound _mt[203] call_tmp[926117]))
            (294296 call = call_tmp[926110] call_tmp[926124])
            (567444 'end of statement' rad[294211] curDim[294278])
            unknown call_tmp[926131] "expr temp" "maybe param" "maybe type" "temp"
            (926134 'move' call_tmp[926131](294325 call(294322 call (partial) off _mt[203] rad[294211]) curDim[294278]))
            unknown call_tmp[926136] "expr temp" "maybe param" "maybe type" "temp"
            (926139 'move' call_tmp[926136](294320 call chpl__idxToInt call_tmp[926131]))
            unknown call_tmp[926143] "expr temp" "maybe param" "maybe type" "temp"
            (926146 'move' call_tmp[926143](294333 call(294330 call (partial) off _mt[203] this[294161]) j[294282]))
            unknown call_tmp[926148] "expr temp" "maybe param" "maybe type" "temp"
            (926151 'move' call_tmp[926148](294328 call chpl__idxToInt call_tmp[926143]))
            unknown call_tmp[926153] "expr temp" "maybe param" "maybe type" "temp"
            (926156 'move' call_tmp[926153](294317 call - call_tmp[926136] call_tmp[926148]))
            unknown call_tmp[926158] "maybe param" "maybe type" "temp"
            (926161 'move' call_tmp[926158](294315 call : call_tmp[926153] idxSignedType[294205]))
            const off[294314] "dead at end of block" "const" "insert auto destroy"
            (653155 'init var' off[294314] call_tmp[926158])
            (294337 'end of statement' rad[294211] curDim[294278] j[294282] idxSignedType[294205])
            unknown call_tmp[926165] "expr temp" "maybe param" "maybe type" "temp"
            (926168 'move' call_tmp[926165](294341 call origin _mt[203] rad[294211]))
            unknown call_tmp[926172] "expr temp" "maybe param" "maybe type" "temp"
            (926175 'move' call_tmp[926172](294352 call(294349 call (partial) blk _mt[203] this[294161]) j[294282]))
            unknown call_tmp[926179] "expr temp" "maybe param" "maybe type" "temp"
            (926182 'move' call_tmp[926179](294358 call(294355 call (partial) safeCast _mt[203] off[294314]) int(64)[10]))
            unknown call_tmp[926184] "expr temp" "maybe param" "maybe type" "temp"
            (926187 'move' call_tmp[926184](294346 call * call_tmp[926172] call_tmp[926179]))
            unknown call_tmp[926191] "expr temp" "maybe param" "maybe type" "temp"
            (926194 'move' call_tmp[926191](294364 call(294361 call (partial) str _mt[203] this[294161]) j[294282]))
            unknown call_tmp[926196] "expr temp" "maybe param" "maybe type" "temp"
            (926199 'move' call_tmp[926196](294344 call / call_tmp[926184] call_tmp[926191]))
            (294338 call += call_tmp[926165] call_tmp[926196])
            (567451 'end of statement' rad[294211] j[294282] off[294314] j[294282])
            unknown call_tmp[926203] "expr temp" "maybe param" "maybe type" "temp"
            (926206 'move' call_tmp[926203](294372 call(294369 call (partial) blk _mt[203] rad[294211]) curDim[294278]))
            unknown call_tmp[926210] "expr temp" "maybe param" "maybe type" "temp"
            (926213 'move' call_tmp[926210](294378 call(294375 call (partial) blk _mt[203] this[294161]) j[294282]))
            (294366 call = call_tmp[926203] call_tmp[926210])
            (567456 'end of statement' rad[294211] curDim[294278] j[294282])
            unknown call_tmp[926217] "expr temp" "maybe param" "maybe type" "temp"
            (926220 'move' call_tmp[926217](294386 call(294383 call (partial) str _mt[203] rad[294211]) curDim[294278]))
            unknown call_tmp[926224] "expr temp" "maybe param" "maybe type" "temp"
            (926227 'move' call_tmp[926224](294392 call(294389 call (partial) str _mt[203] this[294161]) j[294282]))
            (294380 call = call_tmp[926217] call_tmp[926224])
            (567460 'end of statement' rad[294211] curDim[294278] j[294282])
            (294394 call += curDim[294278] 1)
            (567464 'end of statement' curDim[294278])
          }
          {
            unknown call_tmp[926229] "expr temp" "maybe param" "maybe type" "temp"
            (926232 'move' call_tmp[926229](294408 call idx[294168] j[294282]))
            unknown call_tmp[926234] "expr temp" "maybe param" "maybe type" "temp"
            (926237 'move' call_tmp[926234](294406 call chpl__idxToInt call_tmp[926229]))
            unknown call_tmp[926241] "expr temp" "maybe param" "maybe type" "temp"
            (926244 'move' call_tmp[926241](294416 call(294413 call (partial) off _mt[203] this[294161]) j[294282]))
            unknown call_tmp[926246] "expr temp" "maybe param" "maybe type" "temp"
            (926249 'move' call_tmp[926246](294411 call chpl__idxToInt call_tmp[926241]))
            unknown call_tmp[926251] "expr temp" "maybe param" "maybe type" "temp"
            (926254 'move' call_tmp[926251](294403 call - call_tmp[926234] call_tmp[926246]))
            unknown call_tmp[926256] "maybe param" "maybe type" "temp"
            (926259 'move' call_tmp[926256](294401 call : call_tmp[926251] idxSignedType[294205]))
            const off[294400] "dead at end of block" "const" "insert auto destroy"
            (653157 'init var' off[294400] call_tmp[926256])
            (294420 'end of statement' j[294282] idxSignedType[294205])
            unknown call_tmp[926263] "expr temp" "maybe param" "maybe type" "temp"
            (926266 'move' call_tmp[926263](294424 call origin _mt[203] rad[294211]))
            unknown call_tmp[926270] "expr temp" "maybe param" "maybe type" "temp"
            (926273 'move' call_tmp[926270](294435 call(294432 call (partial) blk _mt[203] this[294161]) j[294282]))
            unknown call_tmp[926277] "expr temp" "maybe param" "maybe type" "temp"
            (926280 'move' call_tmp[926277](294441 call(294438 call (partial) safeCast _mt[203] off[294400]) int(64)[10]))
            unknown call_tmp[926282] "expr temp" "maybe param" "maybe type" "temp"
            (926285 'move' call_tmp[926282](294429 call * call_tmp[926270] call_tmp[926277]))
            unknown call_tmp[926289] "expr temp" "maybe param" "maybe type" "temp"
            (926292 'move' call_tmp[926289](294447 call(294444 call (partial) str _mt[203] this[294161]) j[294282]))
            unknown call_tmp[926294] "expr temp" "maybe param" "maybe type" "temp"
            (926297 'move' call_tmp[926294](294427 call / call_tmp[926282] call_tmp[926289]))
            (294421 call += call_tmp[926263] call_tmp[926294])
            (567468 'end of statement' rad[294211] j[294282] off[294400] j[294282])
          }
        }
      }
      label _unused_continueLabel[294462]
      label _breakLabel[294461]
    }
    (294501 call(294498 call (partial) computeFactoredOffs _mt[203] rad[294211]))
    (567473 'end of statement' rad[294211])
    (294506 call(294503 call (partial) initShiftedData _mt[203] rad[294211]))
    (567475 'end of statement' rad[294211])
    (629840 'move' ret[629835](629839 'deref' rad[294211]))
    gotoReturn _end_toRankChange[629833] _end_toRankChange[629833]
    (567477 'end of statement' rad[294211])
    label _end_toRankChange[629833]
    (629837 return ret[629835])
  }
  function LocRADCache[294658](?).init[294561](arg _mt[294584]:_MT[201], arg this[294563]:LocRADCache[294658](?), arg eltType[294565]:_any[141](?), param arg rank[294568]:int(64)[10], arg idxType[294571]:_any[141](?), param arg strides[294574]:strideKind[107137], arg newTargetLocDom[294581] :
  (294578 call chpl__buildDomainRuntimeType defaultDist[288287] rank[294568])) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[533355] "temporary of super field" "temp"
    (533363 'move' super_tmp[533355](533356 '.v' this[294563] c"super"))
    (533359 call init _mt[203] super_tmp[533355])
    (567479 'end of statement')
    unknown tmp[533242] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578961] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[926303] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (926306 'move' call_tmp[926303](533244 '.v' this[294563] c"super"))
      (578965 'move' call_type_tmp[578961](533247 'typeof' call_tmp[926303]))
    }
    (533248 'move' tmp[533242] call_type_tmp[578961])
    unknown call_tmp[926308] "maybe param" "maybe type" "temp"
    (926311 'move' call_tmp[926308](533253 'cast' tmp[533242] this[294563]))
    unknown chpl__thisAsParent[533250] "dead at end of block" "insert auto destroy" "temp"
    (653159 'init var' chpl__thisAsParent[533250] call_tmp[926308] tmp[533242])
    (533256 'setcid' chpl__thisAsParent[533250])
    (567480 'end of statement')
    unknown eltType[533258] "temp" "type variable"
    (533260 'move' eltType[533258] eltType[294565])
    (533262 'init field' this[294563] c"eltType" eltType[533258])
    unknown call_tmp[926313] "expr temp" "maybe param" "maybe type" "temp"
    (926316 'move' call_tmp[926313](533267 call : rank[294568] int(64)[10]))
    (533269 'init field' this[294563] c"rank" call_tmp[926313])
    (567481 'end of statement')
    unknown idxType[533272] "temp" "type variable"
    (533274 'move' idxType[533272] idxType[294571])
    (533276 'init field' this[294563] c"idxType" idxType[533272])
    unknown call_tmp[926318] "expr temp" "maybe param" "maybe type" "temp"
    (926321 'move' call_tmp[926318](533281 call : strides[294574] strideKind[107137]))
    (533283 'init field' this[294563] c"strides" call_tmp[926318])
    (567482 'end of statement')
    unknown call_tmp[926323] "expr temp" "maybe param" "maybe type" "temp"
    (926326 'move' call_tmp[926323](533298 '.v' this[294563] c"rank"))
    unknown call_tmp[926328] "maybe param" "maybe type" "temp"
    (926331 'move' call_tmp[926328](533289 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[926323]))
    unknown targetLocDom[533286] "temp"
    (533292 'init var' targetLocDom[533286] newTargetLocDom[294581] call_tmp[926328])
    (533294 'init field' this[294563] c"targetLocDom" targetLocDom[533286])
    (567483 'end of statement')
    unknown RAD[533302] "temp"
    unknown call_tmp[926333] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926336 'move' call_tmp[926333](533323 '.' this[294563] c"targetLocDom"))
    unknown call_tmp[926338] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926341 'move' call_tmp[926338](533307 call chpl__ensureDomainExpr call_tmp[926333]))
    unknown call_tmp[926343] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926346 'move' call_tmp[926343](533326 '.v' this[294563] c"eltType"))
    unknown call_tmp[926348] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926351 'move' call_tmp[926348](533329 '.v' this[294563] c"rank"))
    unknown call_tmp[926353] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926356 'move' call_tmp[926353](533332 '.v' this[294563] c"idxType"))
    unknown call_tmp[926358] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926361 'move' call_tmp[926358](533335 '.v' this[294563] c"strides"))
    unknown call_tmp[926363] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926366 'move' call_tmp[926363](533310 call _remoteAccessData[293000](?) call_tmp[926343] call_tmp[926348] call_tmp[926353] call_tmp[926358]))
    unknown call_tmp[926368] "expr temp" "maybe param" "maybe type" "temp"
    (926371 'move' call_tmp[926368](533305 call chpl__buildArrayRuntimeType call_tmp[926338] call_tmp[926363]))
    (533315 'default init var' RAD[533302] call_tmp[926368])
    (533319 '.=' this[294563] c"RAD" RAD[533302])
    (567484 'end of statement')
    unknown RADLocks[533338] "temp"
    unknown call_tmp[926373] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926376 'move' call_tmp[926373](533352 '.' this[294563] c"targetLocDom"))
    unknown call_tmp[926378] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926381 'move' call_tmp[926378](533343 call chpl__ensureDomainExpr call_tmp[926373]))
    unknown call_tmp[926383] "expr temp" "maybe param" "maybe type" "temp"
    (926386 'move' call_tmp[926383](533341 call chpl__buildArrayRuntimeType call_tmp[926378] chpl_LocalSpinlock[85418]))
    (533346 'default init var' RADLocks[533338] call_tmp[926383])
    (533348 '.=' this[294563] c"RADLocks" RADLocks[533338])
    (567485 'end of statement')
    (533366 'setcid' this[294563])
    (629844 return _void[46])
  }
  function LocRADCache[294658](?).lockRAD[294621](arg _mt[294627]:_MT[201], arg this[294623]:LocRADCache[294658](?), arg rlocIdx[294625]:_any[141](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[926390] "expr temp" "maybe param" "maybe type" "temp"
    (926393 'move' call_tmp[926390](294631 call(456937 call (partial) RADLocks _mt[203] this[294623]) rlocIdx[294625]))
    (294636 call(294633 call (partial) lock _mt[203] call_tmp[926390]))
    (629846 return _void[46])
  }
  function LocRADCache[294658](?).unlockRAD[294639](arg _mt[294645]:_MT[201], arg this[294641]:LocRADCache[294658](?), arg rlocIdx[294643]:_any[141](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[926399] "expr temp" "maybe param" "maybe type" "temp"
    (926402 'move' call_tmp[926399](294649 call(456943 call (partial) RADLocks _mt[203] this[294641]) rlocIdx[294643]))
    (294654 call(294651 call (partial) unlock _mt[203] call_tmp[926399]))
    (629848 return _void[46])
  }
  function LocRADCache[294658](?).super[1291534](arg _mt[1291536]:_MT[201], arg this[1291538]:LocRADCache[294658](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291548] "RVV" "temp"
    unknown call_tmp[1291555] "expr temp" "maybe param" "maybe type" "temp"
    (1291558 'move' call_tmp[1291555](1291542 '.v' this[1291538] c"super"))
    (1291553 'move' ret[1291548](1291552 'deref' call_tmp[1291555]))
    (1291550 return ret[1291548])
  }
  function LocRADCache[1291565](?).eltType[1291560](arg _mt[1291562]:_MT[201], arg this[1291567]:LocRADCache[1291565](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291602] "RVV" "temp" "type variable"
    unknown borrowOfThis[1291569]
    (1291594 'end of statement')
    (1291575 'move' borrowOfThis[1291569](1291571 call : this[1291567] _borrowedNonNilable[177](?)))
    (1291595 'end of statement' borrowOfThis[1291569])
    unknown call_tmp[1291616] "expr temp" "maybe param" "maybe type" "temp"
    (1291619 'move' call_tmp[1291616](1291584 'is bound' borrowOfThis[1291569] c"eltType"))
    if call_tmp[1291616]
    {
      unknown call_tmp[1291621] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291624 'move' call_tmp[1291621](1291579 '.v' borrowOfThis[1291569] c"eltType"))
      unknown call_tmp[1291626] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291629 'move' call_tmp[1291626](1291580 call chpl_checkLegalTypeFieldAccessor this[1291567] call_tmp[1291621] "eltType"))
      (1291607 'move' ret[1291602](1291606 'deref' call_tmp[1291626]))
      gotoReturn _end_eltType[1291600] _end_eltType[1291600]
      (1291597 'end of statement' borrowOfThis[1291569])
    }
    {
      (1291612 'move' ret[1291602](1291611 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1291600] _end_eltType[1291600]
    }
    label _end_eltType[1291600]
    (1291604 return ret[1291602])
  }
  function LocRADCache[1291565](?).eltType[1291631](arg _mt[1291633]:_MT[201], arg this[1291635]:LocRADCache[1291565](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291670] "RVV" "temp" "type variable"
    unknown borrowOfThis[1291637] "type variable"
    (1291662 'end of statement')
    (1291643 'move' borrowOfThis[1291637](1291639 call : this[1291635] _borrowedNonNilable[177](?)))
    (1291663 'end of statement' borrowOfThis[1291637])
    unknown call_tmp[1291684] "expr temp" "maybe param" "maybe type" "temp"
    (1291687 'move' call_tmp[1291684](1291652 'is bound' borrowOfThis[1291637] c"eltType"))
    if call_tmp[1291684]
    {
      unknown call_tmp[1291689] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291692 'move' call_tmp[1291689](1291647 '.v' borrowOfThis[1291637] c"eltType"))
      unknown call_tmp[1291694] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291697 'move' call_tmp[1291694](1291648 call chpl_checkLegalTypeFieldAccessor this[1291635] call_tmp[1291689] "eltType"))
      (1291675 'move' ret[1291670](1291674 'deref' call_tmp[1291694]))
      gotoReturn _end_eltType[1291668] _end_eltType[1291668]
      (1291665 'end of statement' borrowOfThis[1291637])
    }
    {
      (1291680 'move' ret[1291670](1291679 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1291668] _end_eltType[1291668]
    }
    label _end_eltType[1291668]
    (1291672 return ret[1291670])
  }
  function LocRADCache[1291565](?).rank[1291699](arg _mt[1291701]:_MT[201], arg this[1291703]:LocRADCache[1291565](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291734] "RVV" "param" "temp"
    unknown borrowOfThis[1291705]
    (1291726 'end of statement')
    (1291711 'move' borrowOfThis[1291705](1291707 call : this[1291703] _borrowedNonNilable[177](?)))
    (1291727 'end of statement' borrowOfThis[1291705])
    unknown call_tmp[1291748] "expr temp" "maybe param" "maybe type" "temp"
    (1291751 'move' call_tmp[1291748](1291716 'is bound' borrowOfThis[1291705] c"rank"))
    if call_tmp[1291748]
    {
      unknown call_tmp[1291753] "expr temp" "maybe param" "maybe type" "temp"
      (1291756 'move' call_tmp[1291753](1291715 '.' borrowOfThis[1291705] c"rank"))
      (1291739 'move' ret[1291734](1291738 'deref' call_tmp[1291753]))
      gotoReturn _end_rank[1291732] _end_rank[1291732]
      (1291729 'end of statement' borrowOfThis[1291705])
    }
    {
      (1291744 'move' ret[1291734](1291743 'deref' ?[227]))
      gotoReturn _end_rank[1291732] _end_rank[1291732]
    }
    label _end_rank[1291732]
    (1291736 return ret[1291734])
  }
  function LocRADCache[1291565](?).rank[1291758](arg _mt[1291760]:_MT[201], arg this[1291762]:LocRADCache[1291565](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291793] "RVV" "param" "temp"
    unknown borrowOfThis[1291764] "type variable"
    (1291785 'end of statement')
    (1291770 'move' borrowOfThis[1291764](1291766 call : this[1291762] _borrowedNonNilable[177](?)))
    (1291786 'end of statement' borrowOfThis[1291764])
    unknown call_tmp[1291807] "expr temp" "maybe param" "maybe type" "temp"
    (1291810 'move' call_tmp[1291807](1291775 'is bound' borrowOfThis[1291764] c"rank"))
    if call_tmp[1291807]
    {
      unknown call_tmp[1291812] "expr temp" "maybe param" "maybe type" "temp"
      (1291815 'move' call_tmp[1291812](1291774 '.' borrowOfThis[1291764] c"rank"))
      (1291798 'move' ret[1291793](1291797 'deref' call_tmp[1291812]))
      gotoReturn _end_rank[1291791] _end_rank[1291791]
      (1291788 'end of statement' borrowOfThis[1291764])
    }
    {
      (1291803 'move' ret[1291793](1291802 'deref' ?[227]))
      gotoReturn _end_rank[1291791] _end_rank[1291791]
    }
    label _end_rank[1291791]
    (1291795 return ret[1291793])
  }
  function LocRADCache[1291565](?).idxType[1291817](arg _mt[1291819]:_MT[201], arg this[1291821]:LocRADCache[1291565](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291856] "RVV" "temp" "type variable"
    unknown borrowOfThis[1291823]
    (1291848 'end of statement')
    (1291829 'move' borrowOfThis[1291823](1291825 call : this[1291821] _borrowedNonNilable[177](?)))
    (1291849 'end of statement' borrowOfThis[1291823])
    unknown call_tmp[1291870] "expr temp" "maybe param" "maybe type" "temp"
    (1291873 'move' call_tmp[1291870](1291838 'is bound' borrowOfThis[1291823] c"idxType"))
    if call_tmp[1291870]
    {
      unknown call_tmp[1291875] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291878 'move' call_tmp[1291875](1291833 '.v' borrowOfThis[1291823] c"idxType"))
      unknown call_tmp[1291880] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291883 'move' call_tmp[1291880](1291834 call chpl_checkLegalTypeFieldAccessor this[1291821] call_tmp[1291875] "idxType"))
      (1291861 'move' ret[1291856](1291860 'deref' call_tmp[1291880]))
      gotoReturn _end_idxType[1291854] _end_idxType[1291854]
      (1291851 'end of statement' borrowOfThis[1291823])
    }
    {
      (1291866 'move' ret[1291856](1291865 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1291854] _end_idxType[1291854]
    }
    label _end_idxType[1291854]
    (1291858 return ret[1291856])
  }
  function LocRADCache[1291565](?).idxType[1291885](arg _mt[1291887]:_MT[201], arg this[1291889]:LocRADCache[1291565](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291924] "RVV" "temp" "type variable"
    unknown borrowOfThis[1291891] "type variable"
    (1291916 'end of statement')
    (1291897 'move' borrowOfThis[1291891](1291893 call : this[1291889] _borrowedNonNilable[177](?)))
    (1291917 'end of statement' borrowOfThis[1291891])
    unknown call_tmp[1291938] "expr temp" "maybe param" "maybe type" "temp"
    (1291941 'move' call_tmp[1291938](1291906 'is bound' borrowOfThis[1291891] c"idxType"))
    if call_tmp[1291938]
    {
      unknown call_tmp[1291943] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291946 'move' call_tmp[1291943](1291901 '.v' borrowOfThis[1291891] c"idxType"))
      unknown call_tmp[1291948] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1291951 'move' call_tmp[1291948](1291902 call chpl_checkLegalTypeFieldAccessor this[1291889] call_tmp[1291943] "idxType"))
      (1291929 'move' ret[1291924](1291928 'deref' call_tmp[1291948]))
      gotoReturn _end_idxType[1291922] _end_idxType[1291922]
      (1291919 'end of statement' borrowOfThis[1291891])
    }
    {
      (1291934 'move' ret[1291924](1291933 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1291922] _end_idxType[1291922]
    }
    label _end_idxType[1291922]
    (1291926 return ret[1291924])
  }
  function LocRADCache[1291565](?).strides[1291953](arg _mt[1291955]:_MT[201], arg this[1291957]:LocRADCache[1291565](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1291988] "RVV" "param" "temp"
    unknown borrowOfThis[1291959]
    (1291980 'end of statement')
    (1291965 'move' borrowOfThis[1291959](1291961 call : this[1291957] _borrowedNonNilable[177](?)))
    (1291981 'end of statement' borrowOfThis[1291959])
    unknown call_tmp[1292002] "expr temp" "maybe param" "maybe type" "temp"
    (1292005 'move' call_tmp[1292002](1291970 'is bound' borrowOfThis[1291959] c"strides"))
    if call_tmp[1292002]
    {
      unknown call_tmp[1292007] "expr temp" "maybe param" "maybe type" "temp"
      (1292010 'move' call_tmp[1292007](1291969 '.' borrowOfThis[1291959] c"strides"))
      (1291993 'move' ret[1291988](1291992 'deref' call_tmp[1292007]))
      gotoReturn _end_strides[1291986] _end_strides[1291986]
      (1291983 'end of statement' borrowOfThis[1291959])
    }
    {
      (1291998 'move' ret[1291988](1291997 'deref' ?[227]))
      gotoReturn _end_strides[1291986] _end_strides[1291986]
    }
    label _end_strides[1291986]
    (1291990 return ret[1291988])
  }
  function LocRADCache[1291565](?).strides[1292012](arg _mt[1292014]:_MT[201], arg this[1292016]:LocRADCache[1291565](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292047] "RVV" "param" "temp"
    unknown borrowOfThis[1292018] "type variable"
    (1292039 'end of statement')
    (1292024 'move' borrowOfThis[1292018](1292020 call : this[1292016] _borrowedNonNilable[177](?)))
    (1292040 'end of statement' borrowOfThis[1292018])
    unknown call_tmp[1292061] "expr temp" "maybe param" "maybe type" "temp"
    (1292064 'move' call_tmp[1292061](1292029 'is bound' borrowOfThis[1292018] c"strides"))
    if call_tmp[1292061]
    {
      unknown call_tmp[1292066] "expr temp" "maybe param" "maybe type" "temp"
      (1292069 'move' call_tmp[1292066](1292028 '.' borrowOfThis[1292018] c"strides"))
      (1292052 'move' ret[1292047](1292051 'deref' call_tmp[1292066]))
      gotoReturn _end_strides[1292045] _end_strides[1292045]
      (1292042 'end of statement' borrowOfThis[1292018])
    }
    {
      (1292057 'move' ret[1292047](1292056 'deref' ?[227]))
      gotoReturn _end_strides[1292045] _end_strides[1292045]
    }
    label _end_strides[1292045]
    (1292049 return ret[1292047])
  }
  function LocRADCache[294658](?).targetLocDom[1292071](arg _mt[1292073]:_MT[201], arg this[1292075]:LocRADCache[294658](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292085] "RVV" "temp"
    unknown call_tmp[1292092] "expr temp" "maybe param" "maybe type" "temp"
    (1292095 'move' call_tmp[1292092](1292079 '.' this[1292075] c"targetLocDom"))
    (1292090 'move' ret[1292085](1292089 'addr of' call_tmp[1292092]))
    (1292087 return ret[1292085])
  }
  function LocRADCache[294658](?).RAD[1292097](arg _mt[1292099]:_MT[201], arg this[1292101]:LocRADCache[294658](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292111] "RVV" "temp"
    unknown call_tmp[1292118] "expr temp" "maybe param" "maybe type" "temp"
    (1292121 'move' call_tmp[1292118](1292105 '.' this[1292101] c"RAD"))
    (1292116 'move' ret[1292111](1292115 'addr of' call_tmp[1292118]))
    (1292113 return ret[1292111])
  }
  function LocRADCache[294658](?).RADLocks[1292123](arg _mt[1292125]:_MT[201], arg this[1292127]:LocRADCache[294658](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292137] "RVV" "temp"
    unknown call_tmp[1292144] "expr temp" "maybe param" "maybe type" "temp"
    (1292147 'move' call_tmp[1292144](1292131 '.' this[1292127] c"RADLocks"))
    (1292142 'move' ret[1292137](1292141 'addr of' call_tmp[1292144]))
    (1292139 return ret[1292137])
  }
  function LocRADCache[294658](?).deinit[1292149](arg _mt[1292151]:_MT[201], arg this[1292153]:LocRADCache[294658](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1292161 return _void[46])
  }
  function LocRADCache[294658](?).serialize[1292163](arg _mt[1292167]:_MT[201], arg this[1292165]:LocRADCache[294658](?), arg writer[1292166]:_any[141](?), ref arg serializer[1292171]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1292174 call serializeDefaultImpl writer[1292166] serializer[1292171] this[1292165])
    (1292180 return _void[46])
  }
  function LocRADCache[294658](?).deserialize[1292182](arg _mt[1292186]:_MT[201], arg this[1292184]:LocRADCache[294658](?), arg reader[1292185]:_any[141](?), ref arg deserializer[1292191]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1292193] "temp"
    (1292195 'move' _deser_temp[1292193] this[1292184])
    (1292198 call deserializeDefaultImpl reader[1292185] deserializer[1292191] _deser_temp[1292193])
    (1292204 return _void[46])
  }
  type LocRADCache[294658](?) val super[397689]:RootClass[236] "super class" unknown eltType[294513] "type variable" unknown rank[294516] "param" int(64)[10] unknown idxType[294521] "type variable" unknown strides[294524] "param" strideKind[107137] unknown targetLocDom[294529](294531 call chpl__buildDomainRuntimeType defaultDist[288287] rank[294516]) unknown RAD[294537] "unsafe"(294547 call chpl__buildArrayRuntimeType(294539 call chpl__ensureDomainExpr targetLocDom[294529])(294542 call _remoteAccessData[293000](?) eltType[294513] rank[294516] idxType[294521] strides[294524])) unknown RADLocks[294552](294557 call chpl__buildArrayRuntimeType(294554 call chpl__ensureDomainExpr targetLocDom[294529]) chpl_LocalSpinlock[85418])
  type LocRADCache[1291565](?)
  function DefaultRectangularArr[298194](?).init[294766](arg _mt[294822]:_MT[201], arg this[294768]:DefaultRectangularArr[298194](?), arg eltType[294770]:_any[141](?), param arg rank[294772]:_any[141](?), arg idxType[294774]:_any[141](?), param arg strides[294776]:_any[141](?), arg dom[294787] :
  (294780 call unmanaged DefaultRectangularDom[468058](?)(rank = rank[294772])(idxType = idxType[294774])(strides = strides[294776])), param arg initElts[294791] :
  1 =
  1, param arg deinitElts[294795] :
  initElts[294791] =
  initElts[294791], arg data[294802] :
  (294799 call _ddata[67573](?) eltType[294770]) =
  nil[32], arg externArr[294807] :
  0 =
  0, arg _borrowed[294811] :
  0 =
  0, arg externFreeFunc[294818] :
  (294815 call c_ptr[46891](?) void[4]) =
  nil[32]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[533369] "temporary of super field" "temp"
    (533371 'move' super_tmp[533369](533368 '.v' this[294768] c"super"))
    (294829 call(294826 call (partial) init _mt[203] super_tmp[533369])(eltType = eltType[294770])(rank = rank[294772])(idxType = idxType[294774])(strides = strides[294776]))
    (567489 'end of statement')
    unknown tmp[533374] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578967] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[926408] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (926411 'move' call_tmp[926408](533376 '.v' this[294768] c"super"))
      (578971 'move' call_type_tmp[578967](533379 'typeof' call_tmp[926408]))
    }
    (533380 'move' tmp[533374] call_type_tmp[578967])
    unknown call_tmp[926413] "maybe param" "maybe type" "temp"
    (926416 'move' call_tmp[926413](533385 'cast' tmp[533374] this[294768]))
    unknown chpl__thisAsParent[533382] "dead at end of block" "insert auto destroy" "temp"
    (653161 'init var' chpl__thisAsParent[533382] call_tmp[926413] tmp[533374])
    (533388 'setcid' chpl__thisAsParent[533382])
    (567490 'end of statement')
    unknown idxSignedType[533395] "temp" "type variable"
    unknown call_tmp[926418] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926421 'move' call_tmp[926418](533403 '.v' this[294768] c"idxType"))
    unknown call_tmp[926423] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926426 'move' call_tmp[926423](533393 call chpl__idxTypeToIntIdxType call_tmp[926418]))
    (533397 'move' idxSignedType[533395](533391 call chpl__signedType call_tmp[926423]))
    (533399 'init field' this[294768] c"idxSignedType" idxSignedType[533395])
    (567491 'end of statement')
    unknown call_tmp[926428] "expr temp" "maybe param" "maybe type" "temp"
    (926431 'move' call_tmp[926428](533422 '.v' this[294768] c"rank"))
    unknown call_tmp[926433] "expr temp" "maybe param" "maybe type" "temp"
    (926436 'move' call_tmp[926433](533425 '.v' this[294768] c"idxType"))
    unknown call_tmp[926438] "expr temp" "maybe param" "maybe type" "temp"
    (926441 'move' call_tmp[926438](533428 '.v' this[294768] c"strides"))
    unknown call_tmp[926443] "maybe param" "maybe type" "temp"
    (926446 'move' call_tmp[926443](533409 call unmanaged DefaultRectangularDom[468058](?)(rank = call_tmp[926428])(idxType = call_tmp[926433])(strides = call_tmp[926438])))
    unknown dom[533406] "temp"
    (533416 'init var' dom[533406] dom[294787] call_tmp[926443])
    (533418 'init field' this[294768] c"dom" dom[533406])
    (567492 'end of statement')
    unknown off[533431] "temp"
    unknown call_tmp[926448] "expr temp" "maybe param" "maybe type" "temp"
    (926451 'move' call_tmp[926448](533443 '.v' this[294768] c"rank"))
    unknown call_tmp[926453] "expr temp" "maybe param" "maybe type" "temp"
    (926456 'move' call_tmp[926453](533446 '.v' this[294768] c"idxType"))
    unknown call_tmp[926458] "expr temp" "maybe param" "maybe type" "temp"
    (926461 'move' call_tmp[926458](533434 call * call_tmp[926448] call_tmp[926453]))
    (533437 'default init var' off[533431] call_tmp[926458])
    (533439 '.=' this[294768] c"off" off[533431])
    (567493 'end of statement')
    unknown blk[533449] "temp"
    unknown call_tmp[926463] "expr temp" "maybe param" "maybe type" "temp"
    (926466 'move' call_tmp[926463](533461 '.v' this[294768] c"rank"))
    unknown call_tmp[926468] "expr temp" "maybe param" "maybe type" "temp"
    (926471 'move' call_tmp[926468](533452 call * call_tmp[926463] int(64)[10]))
    (533455 'default init var' blk[533449] call_tmp[926468])
    (533457 '.=' this[294768] c"blk" blk[533449])
    (567494 'end of statement')
    unknown sizesPerDim[533464] "temp"
    unknown call_tmp[926473] "expr temp" "maybe param" "maybe type" "temp"
    (926476 'move' call_tmp[926473](533476 '.v' this[294768] c"rank"))
    unknown call_tmp[926478] "expr temp" "maybe param" "maybe type" "temp"
    (926481 'move' call_tmp[926478](533467 call * call_tmp[926473] int(64)[10]))
    (533470 'default init var' sizesPerDim[533464] call_tmp[926478])
    (533472 '.=' this[294768] c"sizesPerDim" sizesPerDim[533464])
    (567495 'end of statement')
    unknown str[533479] "temp"
    unknown call_tmp[926483] "expr temp" "maybe param" "maybe type" "temp"
    (926486 'move' call_tmp[926483](533491 '.v' this[294768] c"rank"))
    unknown call_tmp[926488] "expr temp" "maybe param" "maybe type" "temp"
    (926491 'move' call_tmp[926488](533494 '.v' this[294768] c"idxSignedType"))
    unknown call_tmp[926493] "expr temp" "maybe param" "maybe type" "temp"
    (926496 'move' call_tmp[926493](533482 call * call_tmp[926483] call_tmp[926488]))
    (533485 'default init var' str[533479] call_tmp[926493])
    (533487 '.=' this[294768] c"str" str[533479])
    (567496 'end of statement')
    val factoredOffs[533497]:int(64)[10] "temp"
    (533500 'default init var' factoredOffs[533497] int(64)[10])
    (533502 '.=' this[294768] c"factoredOffs" factoredOffs[533497])
    (567497 'end of statement')
    unknown call_tmp[926498] "expr temp" "maybe param" "maybe type" "temp"
    (926501 'move' call_tmp[926498](533517 '.v' this[294768] c"eltType"))
    unknown call_tmp[926503] "maybe param" "maybe type" "temp"
    (926506 'move' call_tmp[926503](533509 call _ddata[67573](?) call_tmp[926498]))
    unknown data[533506] "temp"
    (533511 'init var' data[533506] data[294802] call_tmp[926503])
    (533513 'init field' this[294768] c"data" data[533506])
    (567498 'end of statement')
    unknown shiftedData[533520] "temp"
    unknown call_tmp[926508] "expr temp" "maybe param" "maybe type" "temp"
    (926511 'move' call_tmp[926508](533531 '.v' this[294768] c"eltType"))
    unknown call_tmp[926513] "expr temp" "maybe param" "maybe type" "temp"
    (926516 'move' call_tmp[926513](533523 call _ddata[67573](?) call_tmp[926508]))
    (533525 'default init var' shiftedData[533520] call_tmp[926513])
    (533527 '.=' this[294768] c"shiftedData" shiftedData[533520])
    (567499 'end of statement')
    unknown call_tmp[926518] "maybe param" "maybe type" "temp"
    (926521 'move' call_tmp[926518](533537 call c_ptr[46891](?) void[4]))
    unknown externFreeFunc[533534] "temp"
    (533539 'init var' externFreeFunc[533534] externFreeFunc[294818] call_tmp[926518])
    (533541 'init field' this[294768] c"externFreeFunc" externFreeFunc[533534])
    (567500 'end of statement')
    unknown externArr[533545] "temp"
    (533548 'init var' externArr[533545] externArr[294807] bool[19])
    (533550 'init field' this[294768] c"externArr" externArr[533545])
    (567501 'end of statement')
    unknown _borrowed[533554] "temp"
    (533557 'init var' _borrowed[533554] _borrowed[294811] bool[19])
    (533559 'init field' this[294768] c"_borrowed" _borrowed[533554])
    (567502 'end of statement')
    unknown callPostAlloc[533563] "temp"
    (533566 'init var' callPostAlloc[533563] 0 bool[19])
    (533568 'init field' this[294768] c"callPostAlloc" callPostAlloc[533563])
    (567503 'end of statement')
    unknown deinitElts[533572] "temp"
    (533575 'init var' deinitElts[533572] deinitElts[294795] bool[19])
    (533577 'init field' this[294768] c"deinitElts" deinitElts[533572])
    (567504 'end of statement')
    (533583 'init done')
    (567505 'end of statement')
    (533582 'setcid' this[294768])
    (567506 'end of statement')
    (294904 call(294901 call (partial) setupFieldsAndAllocate _mt[203] this[294768]) initElts[294791])
    (629850 return _void[46])
  }
  function DefaultRectangularArr[467915](?).chpl_integralIdxType[294908](arg _mt[294912]:_MT[201], arg this[294910]:DefaultRectangularArr[467915](?)) type : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[629854] "RVV" "temp" "type variable"
    unknown call_tmp[926527] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926530 'move' call_tmp[926527](456988 call idxType _mt[203] this[294910]))
    unknown call_tmp[926532] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (926535 'move' call_tmp[926532](294917 call chpl__idxTypeToIntIdxType call_tmp[926527]))
    (629859 'move' ret[629854](629858 'deref' call_tmp[926532]))
    (629856 return ret[629854])
  }
  function DefaultRectangularArr[298194](?).dsiDisplayRepresentation[294921](arg _mt[294925]:_MT[201], arg this[294923]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[926539] "expr temp" "maybe param" "maybe type" "temp"
    (926542 'move' call_tmp[926539](456993 call off _mt[203] this[294923]))
    (294929 call writeln "off=" call_tmp[926539])
    (567509 'end of statement')
    unknown call_tmp[926546] "expr temp" "maybe param" "maybe type" "temp"
    (926549 'move' call_tmp[926546](456998 call blk _mt[203] this[294923]))
    (294935 call writeln "blk=" call_tmp[926546])
    (567510 'end of statement')
    unknown call_tmp[926553] "expr temp" "maybe param" "maybe type" "temp"
    (926556 'move' call_tmp[926553](457003 call str _mt[203] this[294923]))
    (294941 call writeln "str=" call_tmp[926553])
    (567511 'end of statement')
    unknown call_tmp[926560] "expr temp" "maybe param" "maybe type" "temp"
    (926563 'move' call_tmp[926560](457008 call factoredOffs _mt[203] this[294923]))
    (294947 call writeln "factoredOffs=" call_tmp[926560])
    (629861 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiGetBaseDom[294954](arg _mt[294958]:_MT[201], arg this[294956]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629865] "RVV" "temp"
    unknown call_tmp[926567] "expr temp" "maybe param" "maybe type" "temp"
    (926570 'move' call_tmp[926567](457013 call dom _mt[203] this[294956]))
    (629870 'move' ret[629865](629869 'deref' call_tmp[926567]))
    (629867 return ret[629865])
  }
  function DefaultRectangularArr[298194](?).dsiElementInitializationComplete[294965](arg _mt[294969]:_MT[201], arg this[294967]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    const size[294973] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[704751] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704752] "maybe param" "temp"
    unknown call_tmp[926572] "expr temp" "maybe param" "maybe type" "temp"
    (926575 'move' call_tmp[926572](294974 call == storageOrder[287756] RMO[287738]))
    (704757 'move' tmp[704752](704755 call _cond_test call_tmp[926572]))
    if tmp[704752]
    {
      unknown tmp[704759] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[926579] "expr temp" "maybe param" "maybe type" "temp"
      (926582 'move' call_tmp[926579](294984 call(457019 call (partial) blk _mt[203] this[294967]) 0))
      unknown call_tmp[926586] "expr temp" "maybe param" "maybe type" "temp"
      (926589 'move' call_tmp[926586](409782 call dom _mt[203] this[294967]))
      unknown call_tmp[926593] "expr temp" "maybe param" "maybe type" "temp"
      (926596 'move' call_tmp[926593](294990 call(294987 call (partial) dsiDim _mt[203] call_tmp[926586]) 0))
      unknown call_tmp[926600] "expr temp" "maybe param" "maybe type" "temp"
      (926603 'move' call_tmp[926600](294995 call(294992 call (partial) sizeAs _mt[203] call_tmp[926593]) int(64)[10]))
      (704761 'move' tmp[704759](294981 call * call_tmp[926579] call_tmp[926600]))
      (704766 'move' tmp[704751](704763 '_paramFoldLogical' tmp[704752] tmp[704759]))
    }
    {
      unknown tmp[704768] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[926609] "expr temp" "maybe param" "maybe type" "temp"
      (926612 'move' call_tmp[926609](457029 call rank _mt[203] this[294967]))
      unknown call_tmp[926614] "expr temp" "maybe param" "maybe type" "temp"
      (926617 'move' call_tmp[926614](295001 call - call_tmp[926609] 1))
      unknown call_tmp[926619] "expr temp" "maybe param" "maybe type" "temp"
      (926622 'move' call_tmp[926619](295000 call(457024 call (partial) blk _mt[203] this[294967]) call_tmp[926614]))
      unknown call_tmp[926626] "expr temp" "maybe param" "maybe type" "temp"
      (926629 'move' call_tmp[926626](409787 call dom _mt[203] this[294967]))
      unknown call_tmp[926635] "expr temp" "maybe param" "maybe type" "temp"
      (926638 'move' call_tmp[926635](457034 call rank _mt[203] this[294967]))
      unknown call_tmp[926640] "expr temp" "maybe param" "maybe type" "temp"
      (926643 'move' call_tmp[926640](295010 call - call_tmp[926635] 1))
      unknown call_tmp[926645] "expr temp" "maybe param" "maybe type" "temp"
      (926648 'move' call_tmp[926645](295009 call(295006 call (partial) dsiDim _mt[203] call_tmp[926626]) call_tmp[926640]))
      unknown call_tmp[926652] "expr temp" "maybe param" "maybe type" "temp"
      (926655 'move' call_tmp[926652](295017 call(295014 call (partial) sizeAs _mt[203] call_tmp[926645]) int(64)[10]))
      (704770 'move' tmp[704768](294997 call * call_tmp[926619] call_tmp[926652]))
      (704775 'move' tmp[704751](704772 '_paramFoldLogical' tmp[704752] tmp[704768]))
    }
    (653163 'init var' size[294973] tmp[704751])
    (295023 'end of statement')
    unknown call_tmp[926657] "expr temp" "maybe param" "maybe type" "temp"
    (926660 'move' call_tmp[926657](295037 call _cond_test debugDefaultDist[287662]))
    if call_tmp[926657]
    {
      unknown call_tmp[926664] "expr temp" "maybe param" "maybe type" "temp"
      (926667 'move' call_tmp[926664](457039 call eltType _mt[203] this[294967]))
      unknown call_tmp[926669] "expr temp" "maybe param" "maybe type" "temp"
      (926672 'move' call_tmp[926669](295030 call : call_tmp[926664] string[244]))
      (295026 call chpl_debug_writeln "*** DR calling postalloc " call_tmp[926669] " " size[294973])
      (567514 'end of statement' size[294973])
    }
    unknown call_tmp[926676] "expr temp" "maybe param" "maybe type" "temp"
    (926679 'move' call_tmp[926676](457057 call callPostAlloc _mt[203] this[294967]))
    unknown call_tmp[926681] "expr temp" "maybe param" "maybe type" "temp"
    (926684 'move' call_tmp[926681](295051 call _cond_test call_tmp[926676]))
    if call_tmp[926681]
    {
      unknown call_tmp[926688] "expr temp" "maybe param" "maybe type" "temp"
      (926691 'move' call_tmp[926688](457046 call data _mt[203] this[294967]))
      (295043 call _ddata_allocate_postalloc call_tmp[926688] size[294973])
      (567516 'end of statement' size[294973])
      unknown call_tmp[926695] "expr temp" "maybe param" "maybe type" "temp"
      (926698 'move' call_tmp[926695](457052 call callPostAlloc _mt[203] this[294967]))
      (295046 call = call_tmp[926695] 0)
    }
    unknown call_tmp[926702] "expr temp" "maybe param" "maybe type" "temp"
    (926705 'move' call_tmp[926702](457062 call deinitElts _mt[203] this[294967]))
    (295055 call = call_tmp[926702] 1)
    (629872 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiElementDeinitializationComplete[295061](arg _mt[295065]:_MT[201], arg this[295063]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[926709] "expr temp" "maybe param" "maybe type" "temp"
    (926712 'move' call_tmp[926709](457067 call deinitElts _mt[203] this[295063]))
    (295068 call = call_tmp[926709] 0)
    (629874 return _void[46])
  }
  function DefaultRectangularArr[298194](?).chpl_unsafeAssignIsClassElementNil[295074](arg _mt[295082]:_MT[201], arg this[295076]:DefaultRectangularArr[298194](?), arg manager[295078]:_any[141](?), arg idx[295080]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[629878] "RVV" "temp"
    unknown elem[295094] "dead at end of block" "ref var"
    (653168 'init ref decl' elem[295094])
    unknown call_tmp[926716] "expr temp" "maybe param" "maybe type" "temp"
    (926719 'move' call_tmp[926716](295099 call(295096 call (partial) dsiAccess _mt[203] this[295076]) idx[295080]))
    (653166 'move' elem[295094](653165 'addr of' call_tmp[926716]))
    (295102 'end of statement')
    unknown call_tmp[926723] "expr temp" "maybe param" "maybe type" "temp"
    (926726 'move' call_tmp[926723](295108 call(295105 call (partial) isClassReferenceNil _mt[203] manager[295078]) elem[295094]))
    (629883 'move' ret[629878](629882 'deref' call_tmp[926723]))
    gotoReturn _end_chpl_unsafeAssignIsClassElementNil[629876] _end_chpl_unsafeAssignIsClassElementNil[629876]
    (567521 'end of statement' elem[295094])
    label _end_chpl_unsafeAssignIsClassElementNil[629876]
    (629880 return ret[629878])
  }
  where {
    unknown call_tmp[926728] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (926731 'move' call_tmp[926728](295087 'typeof' idx[295080]))
    unknown call_tmp[926735] "expr temp" "maybe param" "maybe type" "temp"
    (926738 'move' call_tmp[926735](457073 call rank _mt[203] this[295076]))
    unknown call_tmp[926742] "expr temp" "maybe param" "maybe type" "temp"
    (926745 'move' call_tmp[926742](457078 call idxType _mt[203] this[295076]))
    unknown call_tmp[926747] "expr temp" "maybe param" "maybe type" "temp"
    (926750 'move' call_tmp[926747](295088 call * call_tmp[926735] call_tmp[926742]))
    (295084 call == call_tmp[926728] call_tmp[926747])
  }
  function DefaultRectangularArr[298194](?).dsiDestroyArr[295113](arg _mt[295121]:_MT[201], arg this[295115]:DefaultRectangularArr[298194](?), arg deinitElts[295118]:bool[19]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[926752] "expr temp" "maybe param" "maybe type" "temp"
    (926755 'move' call_tmp[926752](295135 call _cond_test debugDefaultDist[287662]))
    if call_tmp[926752]
    {
      unknown call_tmp[926759] "expr temp" "maybe param" "maybe type" "temp"
      (926762 'move' call_tmp[926759](457086 call eltType _mt[203] this[295115]))
      unknown call_tmp[926764] "expr temp" "maybe param" "maybe type" "temp"
      (926767 'move' call_tmp[926764](295130 call : call_tmp[926759] string[244]))
      (295126 call chpl_debug_writeln "*** DR calling dealloc " call_tmp[926764])
    }
    unknown call_tmp[926771] "expr temp" "maybe param" "maybe type" "temp"
    (926774 'move' call_tmp[926771](457142 call externArr _mt[203] this[295115]))
    unknown call_tmp[926776] "expr temp" "maybe param" "maybe type" "temp"
    (926779 'move' call_tmp[926776](295288 call _cond_test call_tmp[926771]))
    if call_tmp[926776]
    {
      unknown call_tmp[926783] "expr temp" "maybe param" "maybe type" "temp"
      (926786 'move' call_tmp[926783](457102 call _borrowed _mt[203] this[295115]))
      unknown call_tmp[926788] "expr temp" "maybe param" "maybe type" "temp"
      (926791 'move' call_tmp[926788](295147 call ! call_tmp[926783]))
      unknown call_tmp[926793] "expr temp" "maybe param" "maybe type" "temp"
      (926796 'move' call_tmp[926793](295150 call _cond_test call_tmp[926788]))
      if call_tmp[926793]
      {
        unknown call_tmp[926800] "expr temp" "maybe param" "maybe type" "temp"
        (926803 'move' call_tmp[926800](457092 call externFreeFunc _mt[203] this[295115]))
        unknown call_tmp[926807] "expr temp" "maybe param" "maybe type" "temp"
        (926810 'move' call_tmp[926807](457097 call data _mt[203] this[295115]))
        unknown call_tmp[926812] "expr temp" "maybe param" "maybe type" "temp"
        (926815 'move' call_tmp[926812](295145 call c_ptrTo call_tmp[926807]))
        (295142 call chpl_call_free_func call_tmp[926800] call_tmp[926812])
      }
    }
    {
      unknown call_tmp[926819] "expr temp" "maybe param" "maybe type" "temp"
      (926822 'move' call_tmp[926819](409794 call dom _mt[203] this[295115]))
      unknown call_tmp[926826] "maybe param" "maybe type" "temp"
      (926829 'move' call_tmp[926826](295158 call dsiNumIndices _mt[203] call_tmp[926819]))
      unknown numInd[295156] "dead at end of block" "insert auto destroy"
      (653170 'init var' numInd[295156] call_tmp[926826])
      (295162 'end of statement')
      unknown numElts[295164] "dead at end of block" "insert auto destroy"
      (653172 'init var' numElts[295164] numInd[295156])
      (295167 'end of statement' numInd[295156])
      unknown tmp[503184] "maybe param" "temp"
      unknown tmp[503205] "maybe param" "temp"
      (503216 'move' tmp[503205] deinitElts[295118])
      unknown call_tmp[926831] "expr temp" "maybe param" "maybe type" "temp"
      (926834 'move' call_tmp[926831](503218 call _cond_invalid tmp[503205]))
      if call_tmp[926831]
      {
        (503221 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[704782] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704783] "maybe param" "temp"
      unknown call_tmp[926836] "expr temp" "maybe param" "maybe type" "temp"
      (926839 'move' call_tmp[926836](503206 call isTrue tmp[503205]))
      (704788 'move' tmp[704783](704786 call _cond_test call_tmp[926836]))
      if tmp[704783]
      {
        unknown tmp[704790] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[926843] "expr temp" "maybe param" "maybe type" "temp"
        (926846 'move' call_tmp[926843](295272 call deinitElts _mt[203] this[295115]))
        (704792 'move' tmp[704790](503209 call isTrue call_tmp[926843]))
        (704797 'move' tmp[704782](704794 '_paramFoldLogical' tmp[704783] tmp[704790]))
      }
      {
        (704802 'move' tmp[704782](704799 '_paramFoldLogical' tmp[704783] 0))
      }
      (503195 'move' tmp[503184] tmp[704782])
      unknown call_tmp[926848] "expr temp" "maybe param" "maybe type" "temp"
      (926851 'move' call_tmp[926848](503197 call _cond_invalid tmp[503184]))
      if call_tmp[926848]
      {
        (503200 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[704809] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704810] "maybe param" "temp"
      unknown call_tmp[926853] "expr temp" "maybe param" "maybe type" "temp"
      (926856 'move' call_tmp[926853](503185 call isTrue tmp[503184]))
      (704815 'move' tmp[704810](704813 call _cond_test call_tmp[926853]))
      if tmp[704810]
      {
        unknown tmp[704817] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[926858] "expr temp" "maybe param" "maybe type" "temp"
        (926861 'move' call_tmp[926858](295275 call > numInd[295156] 0))
        (704819 'move' tmp[704817](503188 call isTrue call_tmp[926858]))
        (704824 'move' tmp[704809](704821 '_paramFoldLogical' tmp[704810] tmp[704817]))
      }
      {
        (704829 'move' tmp[704809](704826 '_paramFoldLogical' tmp[704810] 0))
      }
      unknown call_tmp[926863] "expr temp" "maybe param" "maybe type" "temp"
      (926866 'move' call_tmp[926863](295279 call _cond_test tmp[704809]))
      if call_tmp[926863]
      {
        unknown call_tmp[926870] "expr temp" "maybe param" "maybe type" "temp"
        (926873 'move' call_tmp[926870](295174 call(457108 call (partial) data _mt[203] this[295115]) 0))
        unknown call_tmp[926875] "expr temp" "maybe param" "maybe type" "temp"
        (926878 'move' call_tmp[926875](295172 'deref' call_tmp[926870]))
        unknown call_tmp[926880] "maybe param" "maybe type" "temp"
        (926883 'move' call_tmp[926880](295171 'needs auto destroy' call_tmp[926875]))
        unknown needsDestroy[295170] "dead at end of block" "param"
        (653174 'init var' needsDestroy[295170] call_tmp[926880])
        (295177 'end of statement')
        unknown call_tmp[926885] "expr temp" "maybe param" "maybe type" "temp"
        (926888 'move' call_tmp[926885](295262 call _cond_test needsDestroy[295170]))
        if call_tmp[926885]
        {
          unknown call_tmp[926892] "expr temp" "maybe param" "maybe type" "temp"
          (926895 'move' call_tmp[926892](457127 call eltType _mt[203] this[295115]))
          unknown call_tmp[926897] "expr temp" "maybe param" "maybe type" "temp"
          (926900 'move' call_tmp[926897](295254 call _deinitElementsIsParallel call_tmp[926892] numElts[295164]))
          unknown call_tmp[926902] "expr temp" "maybe param" "maybe type" "temp"
          (926905 'move' call_tmp[926902](295257 call _cond_test call_tmp[926897]))
          if call_tmp[926902]
          {
            unknown call_tmp[470451] "expr temp" "maybe param" "maybe type" "temp"
            unknown call_tmp[926907] "expr temp" "maybe param" "maybe type" "temp"
            (926910 'move' call_tmp[926907](295185 call chpl_build_low_bounded_range 0))
            (470454 'move' call_tmp[470451](295182 call # call_tmp[926907] numElts[295164]))
            Forall[295196] {
              induction variables:
                
                unknown i[295180] "index var" "insert auto destroy"
              iterated expressions:
                call_tmp[470451]
              shadow variables:
              other variables
                forall body
              {
                unknown call_tmp[926914] "expr temp" "maybe param" "maybe type" "temp"
                (926917 'move' call_tmp[926914](295192 call(457114 call (partial) data _mt[203] this[295115]) i[295180]))
                (295190 call chpl__autoDestroy call_tmp[926914])
                (567528 'end of statement' i[295180])
              }
            }
          }
          {
            {
              unknown _indexOfInterest[295214] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[295215] "expr temp" "temp"
              unknown call_tmp[926919] "expr temp" "maybe param" "maybe type" "temp"
              (926922 'move' call_tmp[926919](295231 call chpl_direct_counted_range_iter 0 numElts[295164]))
              (295224 'move' _iterator[295215](295222 call _getIterator call_tmp[926919]))
              Defer
              {
                {
                  (295246 call _freeIterator _iterator[295215])
                }
              }
              { scopeless type
                (295236 'move' _indexOfInterest[295214](295233 call iteratorIndex _iterator[295215]))
              }
              ForLoop[295216]
              {
                unknown i[295200] "index var" "insert auto destroy"
                (567531 'end of statement')
                (295241 'move' i[295200] _indexOfInterest[295214])
                (567532 'end of statement' i[295200])
                {
                  unknown call_tmp[926926] "expr temp" "maybe param" "maybe type" "temp"
                  (926929 'move' call_tmp[926926](295212 call(457120 call (partial) data _mt[203] this[295115]) i[295200]))
                  (295210 call chpl__autoDestroy call_tmp[926926])
                  (567534 'end of statement' i[295200])
                }
                label _continueLabel[295219]
                _indexOfInterest[295214]
                _iterator[295215]
              }
              label _breakLabel[295220]
            }
          }
        }
      }
      unknown call_tmp[926933] "expr temp" "maybe param" "maybe type" "temp"
      (926936 'move' call_tmp[926933](457136 call data _mt[203] this[295115]))
      (295284 call _ddata_free call_tmp[926933] numInd[295156])
      (567536 'end of statement' numInd[295156])
    }
    (629887 return _void[46])
  }
  function DefaultRectangularArr[298194](?).theData[295294](arg _mt[295298]:_MT[201], arg this[295296]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[629891] "RVV" "temp"
    unknown tmp[503226] "maybe param" "temp"
    (503237 'move' tmp[503226] earlyShiftData[287723])
    unknown call_tmp[926938] "expr temp" "maybe param" "maybe type" "temp"
    (926941 'move' call_tmp[926938](503239 call _cond_invalid tmp[503226]))
    if call_tmp[926938]
    {
      (503242 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[704836] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704837] "maybe param" "temp"
    unknown call_tmp[926943] "expr temp" "maybe param" "maybe type" "temp"
    (926946 'move' call_tmp[926943](503227 call isTrue tmp[503226]))
    (704842 'move' tmp[704837](704840 call _cond_test call_tmp[926943]))
    if tmp[704837]
    {
      unknown tmp[704844] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[926950] "expr temp" "maybe param" "maybe type" "temp"
      (926953 'move' call_tmp[926950](295311 call(457157 call (partial) hasUnitStride _mt[203] this[295296])))
      (704846 'move' tmp[704844](503230 call isTrue call_tmp[926950]))
      (704851 'move' tmp[704836](704848 '_paramFoldLogical' tmp[704837] tmp[704844]))
    }
    {
      (704856 'move' tmp[704836](704853 '_paramFoldLogical' tmp[704837] 0))
    }
    unknown call_tmp[926955] "expr temp" "maybe param" "maybe type" "temp"
    (926958 'move' call_tmp[926955](295312 call _cond_test tmp[704836]))
    if call_tmp[926955]
    {
      unknown call_tmp[926962] "expr temp" "maybe param" "maybe type" "temp"
      (926965 'move' call_tmp[926962](457147 call shiftedData _mt[203] this[295296]))
      (629896 'move' ret[629891](629895 'addr of' call_tmp[926962]))
      gotoReturn _end_theData[629889] _end_theData[629889]
    }
    {
      unknown call_tmp[926969] "expr temp" "maybe param" "maybe type" "temp"
      (926972 'move' call_tmp[926969](457152 call data _mt[203] this[295296]))
      (629901 'move' ret[629891](629900 'addr of' call_tmp[926969]))
      gotoReturn _end_theData[629889] _end_theData[629889]
    }
    label _end_theData[629889]
    (629893 return ret[629891])
  }
  function DefaultRectangularArr[298194](?).these[295320](arg _mt[295342]:_MT[201], arg this[295322]:DefaultRectangularArr[298194](?), arg tasksPerLocale[295326]:int(64)[10] =
  dataParTasksPerLocale[287582], arg ignoreRunning[295332]:bool[19] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[295338]:int(64)[10] =
  dataParMinGranularity[287592]) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629907] "RVV" "temp"
    unknown call_tmp[926974] "expr temp" "maybe param" "maybe type" "temp"
    (926977 'move' call_tmp[926974](295352 call _cond_test debugDefaultDist[287662]))
    if call_tmp[926974]
    {
      (295347 call chpl_debug_writeln "*** In defRectArr simple-dd serial iterator")
    }
    {
      unknown _indexOfInterest[295365] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[295366] "expr temp" "temp"
      unknown call_tmp[926981] "expr temp" "maybe param" "maybe type" "temp"
      (926984 'move' call_tmp[926981](457168 call dom _mt[203] this[295322]))
      unknown call_tmp[926986] "expr temp" "maybe param" "maybe type" "temp"
      (926989 'move' call_tmp[926986](295359 call chpl__serialViewIter this[295322] call_tmp[926981]))
      (295375 'move' _iterator[295366](295373 call _getIterator call_tmp[926986]))
      Defer
      {
        {
          (295390 call _freeIterator _iterator[295366])
        }
      }
      { scopeless type
        (295380 'move' _indexOfInterest[295365](295377 call iteratorIndex _iterator[295366]))
      }
      ForLoop[295367]
      {
        unknown elem[295356] "index var" "insert auto destroy"
        (567543 'end of statement')
        (295385 'move' elem[295356] _indexOfInterest[295365])
        (567544 'end of statement' elem[295356])
        ref yret[629911] "YVV" "temp"
        (629914 'move' yret[629911](629913 'addr of' elem[295356]))
        (295362 yield yret[629911])
        (567546 'end of statement' elem[295356])
        label _continueLabel[295370]
        _indexOfInterest[295365]
        _iterator[295366]
      }
      label _breakLabel[295371]
    }
    (629909 return ret[629907])
  }
  function DefaultRectangularArr[298194](?).these[295399](arg _mt[295419]:_MT[201], arg this[295401]:DefaultRectangularArr[298194](?), param arg tag[295404]:iterKind[52144], arg tasksPerLocale[295408] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[295412] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[295416] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592]) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629919] "RVV" "temp"
    unknown call_tmp[926991] "expr temp" "maybe param" "maybe type" "temp"
    (926994 'move' call_tmp[926991](295436 call _cond_test debugDefaultDist[287662]))
    if call_tmp[926991]
    {
      (295431 call chpl_debug_writeln "*** In defRectArr simple-dd standalone iterator")
    }
    {
      unknown _indexOfInterest[295464] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[295465] "expr temp" "temp"
      unknown call_tmp[926998] "expr temp" "maybe param" "maybe type" "temp"
      (927001 'move' call_tmp[926998](409801 call dom _mt[203] this[295401]))
      unknown call_tmp[927005] "expr temp" "maybe param" "maybe type" "temp"
      (927008 'move' call_tmp[927005](295446 call(295443 call (partial) these _mt[203] call_tmp[926998]) tag[295404] tasksPerLocale[295408] ignoreRunning[295412] minIndicesPerTask[295416]))
      (295474 'move' _iterator[295465](295472 call _getIterator call_tmp[927005]))
      Defer
      {
        {
          (295489 call _freeIterator _iterator[295465])
        }
      }
      { scopeless type
        (295479 'move' _indexOfInterest[295464](295476 call iteratorIndex _iterator[295465]))
      }
      ForLoop[295466] order-independent
      {
        unknown i[295440] "index var" "insert auto destroy"
        (567550 'end of statement')
        (295484 'move' i[295440] _indexOfInterest[295464])
        (567551 'end of statement' i[295440])
        {
          ref yret[629923] "YVV" "temp"
          unknown call_tmp[927012] "expr temp" "maybe param" "maybe type" "temp"
          (927015 'move' call_tmp[927012](295460 call(457183 call (partial) dsiAccess _mt[203] this[295401]) i[295440]))
          (629926 'move' yret[629923](629925 'addr of' call_tmp[927012]))
          (295458 yield yret[629923])
          (567553 'end of statement' i[295440])
        }
        label _continueLabel[295469]
        _indexOfInterest[295464]
        _iterator[295465]
      }
      label _breakLabel[295470]
    }
    (629921 return ret[629919])
  }
  where {
    (295421 call == tag[295404] standalone[52142])
  }
  function DefaultRectangularArr[298194](?).these[295499](arg _mt[295519]:_MT[201], arg this[295501]:DefaultRectangularArr[298194](?), param arg tag[295504]:iterKind[52144], arg tasksPerLocale[295508] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[295512] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[295516] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629931] "RVV" "temp"
    unknown call_tmp[927017] "expr temp" "maybe param" "maybe type" "temp"
    (927020 'move' call_tmp[927017](295536 call _cond_test debugDefaultDist[287662]))
    if call_tmp[927017]
    {
      (295531 call chpl_debug_writeln "*** In defRectArr simple-dd leader iterator")
    }
    {
      unknown _indexOfInterest[295554] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[295555] "expr temp" "temp"
      unknown call_tmp[927024] "expr temp" "maybe param" "maybe type" "temp"
      (927027 'move' call_tmp[927024](409807 call dom _mt[203] this[295501]))
      unknown call_tmp[927031] "expr temp" "maybe param" "maybe type" "temp"
      (927034 'move' call_tmp[927031](295546 call(295543 call (partial) these _mt[203] call_tmp[927024]) tag[295504] tasksPerLocale[295508] ignoreRunning[295512] minIndicesPerTask[295516]))
      (295564 'move' _iterator[295555](295562 call _getIterator call_tmp[927031]))
      Defer
      {
        {
          (295579 call _freeIterator _iterator[295555])
        }
      }
      { scopeless type
        (295569 'move' _indexOfInterest[295554](295566 call iteratorIndex _iterator[295555]))
      }
      ForLoop[295556]
      {
        unknown followThis[295540] "index var" "insert auto destroy"
        (567557 'end of statement')
        (295574 'move' followThis[295540] _indexOfInterest[295554])
        (567558 'end of statement' followThis[295540])
        unknown yret[629935] "YVV" "temp"
        (629938 'move' yret[629935](629937 'deref' followThis[295540]))
        (295551 yield yret[629935])
        (567560 'end of statement' followThis[295540])
        label _continueLabel[295559]
        _indexOfInterest[295554]
        _iterator[295555]
      }
      label _breakLabel[295560]
    }
    (629933 return ret[629931])
  }
  where {
    (295521 call == tag[295504] leader[52138])
  }
  function DefaultRectangularArr[298194](?).these[295589](arg _mt[295611]:_MT[201], arg this[295591]:DefaultRectangularArr[298194](?), param arg tag[295594]:iterKind[52144], arg followThis[295597]:_any[141](?), arg tasksPerLocale[295600] :
  dataParTasksPerLocale[287582] =
  dataParTasksPerLocale[287582], arg ignoreRunning[295604] :
  dataParIgnoreRunningTasks[287587] =
  dataParIgnoreRunningTasks[287587], arg minIndicesPerTask[295608] :
  dataParMinGranularity[287592] =
  dataParMinGranularity[287592]) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[629943] "RVV" "temp"
    unknown call_tmp[927038] "expr temp" "maybe param" "maybe type" "temp"
    (927041 'move' call_tmp[927038](295654 call size _mt[203] followThis[295597]))
    unknown call_tmp[927045] "expr temp" "maybe param" "maybe type" "temp"
    (927048 'move' call_tmp[927045](295658 call rank _mt[203] this[295591]))
    unknown call_tmp[927050] "expr temp" "maybe param" "maybe type" "temp"
    (927053 'move' call_tmp[927050](295651 call != call_tmp[927038] call_tmp[927045]))
    unknown call_tmp[927055] "expr temp" "maybe param" "maybe type" "temp"
    (927058 'move' call_tmp[927055](295661 call _cond_test call_tmp[927050]))
    if call_tmp[927055]
    {
      unknown call_tmp[927062] "expr temp" "maybe param" "maybe type" "temp"
      (927065 'move' call_tmp[927062](295635 call size _mt[203] followThis[295597]))
      unknown call_tmp[927067] "expr temp" "maybe param" "maybe type" "temp"
      (927070 'move' call_tmp[927067](295632 call : call_tmp[927062] string[244]))
      unknown call_tmp[927072] "expr temp" "maybe param" "maybe type" "temp"
      (927075 'move' call_tmp[927072](295629 call + "rank mismatch in zippered iteration (can't zip a " call_tmp[927067]))
      unknown call_tmp[927077] "expr temp" "maybe param" "maybe type" "temp"
      (927080 'move' call_tmp[927077](295627 call + call_tmp[927072] "D expression with a "))
      unknown call_tmp[927084] "expr temp" "maybe param" "maybe type" "temp"
      (927087 'move' call_tmp[927084](295643 call rank _mt[203] this[295591]))
      unknown call_tmp[927089] "expr temp" "maybe param" "maybe type" "temp"
      (927092 'move' call_tmp[927089](295640 call : call_tmp[927084] string[244]))
      unknown call_tmp[927094] "expr temp" "maybe param" "maybe type" "temp"
      (927097 'move' call_tmp[927094](295625 call + call_tmp[927077] call_tmp[927089]))
      unknown call_tmp[927099] "expr temp" "maybe param" "maybe type" "temp"
      (927102 'move' call_tmp[927099](295623 call + call_tmp[927094] "D array)"))
      (295622 call compilerError call_tmp[927099])
    }
    unknown call_tmp[927104] "expr temp" "maybe param" "maybe type" "temp"
    (927107 'move' call_tmp[927104](295674 call _cond_test debugDefaultDist[287662]))
    if call_tmp[927104]
    {
      (295668 call chpl_debug_writeln "*** In defRectArr simple-dd follower iterator: " followThis[295597])
    }
    {
      unknown _indexOfInterest[295701] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[295702] "expr temp" "temp"
      unknown call_tmp[927111] "expr temp" "maybe param" "maybe type" "temp"
      (927114 'move' call_tmp[927111](409817 call dom _mt[203] this[295591]))
      unknown call_tmp[927118] "expr temp" "maybe param" "maybe type" "temp"
      (927121 'move' call_tmp[927118](295684 call(295681 call (partial) these _mt[203] call_tmp[927111])(tag = follower[52140]) followThis[295597] tasksPerLocale[295600] ignoreRunning[295604] minIndicesPerTask[295608]))
      (295711 'move' _iterator[295702](295709 call _getIterator call_tmp[927118]))
      Defer
      {
        {
          (295726 call _freeIterator _iterator[295702])
        }
      }
      { scopeless type
        (295716 'move' _indexOfInterest[295701](295713 call iteratorIndex _iterator[295702]))
      }
      ForLoop[295703] order-independent
      {
        unknown i[295678] "index var" "insert auto destroy"
        (567565 'end of statement')
        (295721 'move' i[295678] _indexOfInterest[295701])
        (567566 'end of statement' i[295678])
        ref yret[629947] "YVV" "temp"
        unknown call_tmp[927125] "expr temp" "maybe param" "maybe type" "temp"
        (927128 'move' call_tmp[927125](295696 call(457210 call (partial) dsiAccess _mt[203] this[295591]) i[295678]))
        (629950 'move' yret[629947](629949 'addr of' call_tmp[927125]))
        (295694 yield yret[629947])
        (567568 'end of statement' i[295678])
        label _continueLabel[295706]
        _indexOfInterest[295701]
        _iterator[295702]
      }
      label _breakLabel[295707]
    }
    (629945 return ret[629943])
  }
  where {
    (295613 call == tag[295594] follower[52140])
  }
  function DefaultRectangularArr[298194](?).computeFactoredOffs[295736](arg _mt[295740]:_MT[201], arg this[295738]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[927132] "expr temp" "maybe param" "maybe type" "temp"
    (927135 'move' call_tmp[927132](457216 call factoredOffs _mt[203] this[295738]))
    (295743 call = call_tmp[927132] 0)
    (567570 'end of statement')
    {
      unknown i[295747] "dead at end of block" "index var" "insert auto destroy"
      (653176 'init var' i[295747] 0)
      (567571 'end of statement')
      unknown tmp[295776] "maybe param" "temp"
      unknown call_tmp[927139] "expr temp" "maybe param" "maybe type" "temp"
      (927142 'move' call_tmp[927139](457221 call rank _mt[203] this[295738]))
      unknown call_tmp[927144] "expr temp" "maybe param" "maybe type" "temp"
      (927147 'move' call_tmp[927144](295750 call - call_tmp[927139] 1))
      (295788 'move' tmp[295776](295786 call chpl_compute_low_param_loop_bound 0 call_tmp[927144]))
      unknown tmp[295777] "maybe param" "temp"
      unknown call_tmp[927151] "expr temp" "maybe param" "maybe type" "temp"
      (927154 'move' call_tmp[927151](457248 call rank _mt[203] this[295738]))
      unknown call_tmp[927156] "expr temp" "maybe param" "maybe type" "temp"
      (927159 'move' call_tmp[927156](295793 call - call_tmp[927151] 1))
      (295798 'move' tmp[295777](295796 call chpl_compute_high_param_loop_bound 0 call_tmp[927156]))
      unknown tmp[295778] "maybe param" "temp"
      (295801 'move' tmp[295778] 1)
      ParamForLoop[295803]
      { i[295747] tmp[295776] tmp[295777] tmp[295778]
        {
          unknown call_tmp[927163] "expr temp" "maybe param" "maybe type" "temp"
          (927166 'move' call_tmp[927163](457226 call factoredOffs _mt[203] this[295738]))
          unknown call_tmp[927170] "expr temp" "maybe param" "maybe type" "temp"
          (927173 'move' call_tmp[927170](457231 call factoredOffs _mt[203] this[295738]))
          unknown call_tmp[927177] "expr temp" "maybe param" "maybe type" "temp"
          (927180 'move' call_tmp[927177](295766 call(457236 call (partial) blk _mt[203] this[295738]) i[295747]))
          unknown call_tmp[927184] "expr temp" "maybe param" "maybe type" "temp"
          (927187 'move' call_tmp[927184](295773 call(457242 call (partial) off _mt[203] this[295738]) i[295747]))
          unknown call_tmp[927189] "expr temp" "maybe param" "maybe type" "temp"
          (927192 'move' call_tmp[927189](295771 call chpl__idxToInt call_tmp[927184]))
          unknown call_tmp[927194] "expr temp" "maybe param" "maybe type" "temp"
          (927197 'move' call_tmp[927194](295768 call : call_tmp[927189] int(64)[10]))
          unknown call_tmp[927199] "expr temp" "maybe param" "maybe type" "temp"
          (927202 'move' call_tmp[927199](295763 call * call_tmp[927177] call_tmp[927194]))
          unknown call_tmp[927204] "expr temp" "maybe param" "maybe type" "temp"
          (927207 'move' call_tmp[927204](295760 call + call_tmp[927170] call_tmp[927199]))
          (295757 call = call_tmp[927163] call_tmp[927204])
          (567572 'end of statement' i[295747])
        }
      }
      label _unused_continueLabel[295780]
      label _breakLabel[295779]
    }
    (629953 return _void[46])
  }
  function DefaultRectangularArr[298194](?).initShiftedData[295814](arg _mt[295818]:_MT[201], arg this[295816]:DefaultRectangularArr[298194](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown tmp[503247] "maybe param" "temp"
    (503258 'move' tmp[503247] earlyShiftData[287723])
    unknown call_tmp[927209] "expr temp" "maybe param" "maybe type" "temp"
    (927212 'move' call_tmp[927209](503260 call _cond_invalid tmp[503247]))
    if call_tmp[927209]
    {
      (503263 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[704863] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704864] "maybe param" "temp"
    unknown call_tmp[927214] "expr temp" "maybe param" "maybe type" "temp"
    (927217 'move' call_tmp[927214](503248 call isTrue tmp[503247]))
    (704869 'move' tmp[704864](704867 call _cond_test call_tmp[927214]))
    if tmp[704864]
    {
      unknown tmp[704871] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[927221] "expr temp" "maybe param" "maybe type" "temp"
      (927224 'move' call_tmp[927221](295873 call(457301 call (partial) hasUnitStride _mt[203] this[295816])))
      (704873 'move' tmp[704871](503251 call isTrue call_tmp[927221]))
      (704878 'move' tmp[704863](704875 '_paramFoldLogical' tmp[704864] tmp[704871]))
    }
    {
      (704883 'move' tmp[704863](704880 '_paramFoldLogical' tmp[704864] 0))
    }
    unknown call_tmp[927226] "expr temp" "maybe param" "maybe type" "temp"
    (927229 'move' call_tmp[927226](295874 call _cond_test tmp[704863]))
    if call_tmp[927226]
    {
      unknown call_tmp[927233] "expr temp" "maybe param" "maybe type" "temp"
      (927236 'move' call_tmp[927233](409823 call dom _mt[203] this[295816]))
      unknown call_tmp[927240] "expr temp" "maybe param" "maybe type" "temp"
      (927243 'move' call_tmp[927240](295861 call dsiNumIndices _mt[203] call_tmp[927233]))
      unknown call_tmp[927245] "expr temp" "maybe param" "maybe type" "temp"
      (927248 'move' call_tmp[927245](295858 call > call_tmp[927240] 0))
      unknown call_tmp[927250] "expr temp" "maybe param" "maybe type" "temp"
      (927253 'move' call_tmp[927250](295865 call _cond_test call_tmp[927245]))
      if call_tmp[927250]
      {
        const shiftDist[295824] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[704890] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[704891] "maybe param" "temp"
        unknown call_tmp[927257] "expr temp" "maybe param" "maybe type" "temp"
        (927260 'move' call_tmp[927257](457253 call idxType _mt[203] this[295816]))
        unknown call_tmp[927262] "expr temp" "maybe param" "maybe type" "temp"
        (927265 'move' call_tmp[927262](295826 call isIntType call_tmp[927257]))
        (704896 'move' tmp[704891](704894 call _cond_test call_tmp[927262]))
        if tmp[704891]
        {
          unknown tmp[704898] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[927269] "expr temp" "maybe param" "maybe type" "temp"
          (927272 'move' call_tmp[927269](457258 call idxType _mt[203] this[295816]))
          unknown call_tmp[927274] "expr temp" "maybe param" "maybe type" "temp"
          (927277 'move' call_tmp[927274](295830 call : 0 call_tmp[927269]))
          unknown call_tmp[927281] "expr temp" "maybe param" "maybe type" "temp"
          (927284 'move' call_tmp[927281](457263 call factoredOffs _mt[203] this[295816]))
          (704900 'move' tmp[704898](295828 call - call_tmp[927274] call_tmp[927281]))
          (704905 'move' tmp[704890](704902 '_paramFoldLogical' tmp[704891] tmp[704898]))
        }
        {
          unknown tmp[704907] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[927288] "expr temp" "maybe param" "maybe type" "temp"
          (927291 'move' call_tmp[927288](457270 call idxSignedType _mt[203] this[295816]))
          unknown call_tmp[927293] "expr temp" "maybe param" "maybe type" "temp"
          (927296 'move' call_tmp[927293](295837 call : 0 call_tmp[927288]))
          unknown call_tmp[927300] "expr temp" "maybe param" "maybe type" "temp"
          (927303 'move' call_tmp[927300](457275 call factoredOffs _mt[203] this[295816]))
          unknown call_tmp[927307] "expr temp" "maybe param" "maybe type" "temp"
          (927310 'move' call_tmp[927307](457280 call idxSignedType _mt[203] this[295816]))
          unknown call_tmp[927312] "expr temp" "maybe param" "maybe type" "temp"
          (927315 'move' call_tmp[927312](295841 call : call_tmp[927300] call_tmp[927307]))
          (704909 'move' tmp[704907](295835 call - call_tmp[927293] call_tmp[927312]))
          (704914 'move' tmp[704890](704911 '_paramFoldLogical' tmp[704891] tmp[704907]))
        }
        (653178 'init var' shiftDist[295824] tmp[704890])
        (295849 'end of statement')
        unknown call_tmp[927319] "expr temp" "maybe param" "maybe type" "temp"
        (927322 'move' call_tmp[927319](457285 call shiftedData _mt[203] this[295816]))
        unknown call_tmp[927326] "expr temp" "maybe param" "maybe type" "temp"
        (927329 'move' call_tmp[927326](457290 call eltType _mt[203] this[295816]))
        unknown call_tmp[927333] "expr temp" "maybe param" "maybe type" "temp"
        (927336 'move' call_tmp[927333](457295 call data _mt[203] this[295816]))
        unknown call_tmp[927338] "expr temp" "maybe param" "maybe type" "temp"
        (927341 'move' call_tmp[927338](295854 call _ddata_shift call_tmp[927326] call_tmp[927333] shiftDist[295824]))
        (295850 call = call_tmp[927319] call_tmp[927338])
        (567575 'end of statement' shiftDist[295824])
      }
    }
    (629955 return _void[46])
  }
  function DefaultRectangularArr[298194](?).setupFieldsAndAllocate[295880](arg _mt[295886]:_MT[201], arg this[295882]:DefaultRectangularArr[298194](?), param arg initElts[295884]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    {
      unknown dim[295889] "dead at end of block" "index var" "insert auto destroy"
      (653180 'init var' dim[295889] 0)
      (567577 'end of statement')
      unknown tmp[295927] "maybe param" "temp"
      unknown call_tmp[927345] "expr temp" "maybe param" "maybe type" "temp"
      (927348 'move' call_tmp[927345](457306 call rank _mt[203] this[295882]))
      unknown call_tmp[927350] "expr temp" "maybe param" "maybe type" "temp"
      (927353 'move' call_tmp[927350](295892 call - call_tmp[927345] 1))
      (295939 'move' tmp[295927](295937 call chpl_compute_low_param_loop_bound 0 call_tmp[927350]))
      unknown tmp[295928] "maybe param" "temp"
      unknown call_tmp[927357] "expr temp" "maybe param" "maybe type" "temp"
      (927360 'move' call_tmp[927357](457325 call rank _mt[203] this[295882]))
      unknown call_tmp[927362] "expr temp" "maybe param" "maybe type" "temp"
      (927365 'move' call_tmp[927362](295944 call - call_tmp[927357] 1))
      (295949 'move' tmp[295928](295947 call chpl_compute_high_param_loop_bound 0 call_tmp[927362]))
      unknown tmp[295929] "maybe param" "temp"
      (295952 'move' tmp[295929] 1)
      ParamForLoop[295954]
      { dim[295889] tmp[295927] tmp[295928] tmp[295929]
        {
          unknown call_tmp[927369] "expr temp" "maybe param" "maybe type" "temp"
          (927372 'move' call_tmp[927369](295902 call(457311 call (partial) off _mt[203] this[295882]) dim[295889]))
          unknown call_tmp[927376] "expr temp" "maybe param" "maybe type" "temp"
          (927379 'move' call_tmp[927376](409828 call dom _mt[203] this[295882]))
          unknown call_tmp[927383] "expr temp" "maybe param" "maybe type" "temp"
          (927386 'move' call_tmp[927383](295908 call(295905 call (partial) dsiDim _mt[203] call_tmp[927376]) dim[295889]))
          unknown call_tmp[927390] "expr temp" "maybe param" "maybe type" "temp"
          (927393 'move' call_tmp[927390](295910 call low _mt[203] call_tmp[927383]))
          (295899 call = call_tmp[927369] call_tmp[927390])
          (567578 'end of statement' dim[295889])
          unknown call_tmp[927397] "expr temp" "maybe param" "maybe type" "temp"
          (927400 'move' call_tmp[927397](295916 call(457318 call (partial) str _mt[203] this[295882]) dim[295889]))
          unknown call_tmp[927404] "expr temp" "maybe param" "maybe type" "temp"
          (927407 'move' call_tmp[927404](409833 call dom _mt[203] this[295882]))
          unknown call_tmp[927411] "expr temp" "maybe param" "maybe type" "temp"
          (927414 'move' call_tmp[927411](295922 call(295919 call (partial) dsiDim _mt[203] call_tmp[927404]) dim[295889]))
          unknown call_tmp[927418] "expr temp" "maybe param" "maybe type" "temp"
          (927421 'move' call_tmp[927418](295924 call stride _mt[203] call_tmp[927411]))
          (295913 call = call_tmp[927397] call_tmp[927418])
          (567580 'end of statement' dim[295889])
        }
      }
      label _unused_continueLabel[295931]
      label _breakLabel[295930]
    }
    unknown call_tmp[927423] "expr temp" "maybe param" "maybe type" "temp"
    (927426 'move' call_tmp[927423](296149 call == storageOrder[287756] RMO[287738]))
    unknown call_tmp[927428] "expr temp" "maybe param" "maybe type" "temp"
    (927431 'move' call_tmp[927428](296156 call _cond_test call_tmp[927423]))
    if call_tmp[927428]
    {
      unknown call_tmp[927437] "expr temp" "maybe param" "maybe type" "temp"
      (927440 'move' call_tmp[927437](457335 call rank _mt[203] this[295882]))
      unknown call_tmp[927442] "expr temp" "maybe param" "maybe type" "temp"
      (927445 'move' call_tmp[927442](295968 call - call_tmp[927437] 1))
      unknown call_tmp[927447] "expr temp" "maybe param" "maybe type" "temp"
      (927450 'move' call_tmp[927447](295967 call(457330 call (partial) blk _mt[203] this[295882]) call_tmp[927442]))
      (295964 call = call_tmp[927447] 1)
      (567582 'end of statement')
      {
        unknown dim[295973] "dead at end of block" "index var" "insert auto destroy"
        (653182 'init var' dim[295973] 0)
        (567583 'end of statement')
        unknown tmp[296015] "maybe param" "temp"
        unknown call_tmp[927454] "expr temp" "maybe param" "maybe type" "temp"
        (927457 'move' call_tmp[927454](457340 call rank _mt[203] this[295882]))
        unknown call_tmp[927459] "expr temp" "maybe param" "maybe type" "temp"
        (927462 'move' call_tmp[927459](295978 call - call_tmp[927454] 2))
        (296026 'move' tmp[296015](296024 call chpl_compute_low_param_loop_bound 0 call_tmp[927459]))
        unknown tmp[296016] "maybe param" "temp"
        unknown call_tmp[927466] "expr temp" "maybe param" "maybe type" "temp"
        (927469 'move' call_tmp[927466](457358 call rank _mt[203] this[295882]))
        unknown call_tmp[927471] "expr temp" "maybe param" "maybe type" "temp"
        (927474 'move' call_tmp[927471](296031 call - call_tmp[927466] 2))
        (296036 'move' tmp[296016](296034 call chpl_compute_high_param_loop_bound 0 call_tmp[927471]))
        unknown tmp[296017] "maybe param" "temp"
        (296039 'move' tmp[296017](295984 call - 1))
        ParamForLoop[296041]
        { dim[295973] tmp[296015] tmp[296016] tmp[296017]
          unknown call_tmp[927478] "expr temp" "maybe param" "maybe type" "temp"
          (927481 'move' call_tmp[927478](295990 call(457345 call (partial) blk _mt[203] this[295882]) dim[295973]))
          unknown call_tmp[927485] "expr temp" "maybe param" "maybe type" "temp"
          (927488 'move' call_tmp[927485](295996 call + dim[295973] 1))
          unknown call_tmp[927490] "expr temp" "maybe param" "maybe type" "temp"
          (927493 'move' call_tmp[927490](295995 call(457351 call (partial) blk _mt[203] this[295882]) call_tmp[927485]))
          unknown call_tmp[927497] "expr temp" "maybe param" "maybe type" "temp"
          (927500 'move' call_tmp[927497](409838 call dom _mt[203] this[295882]))
          unknown call_tmp[927504] "expr temp" "maybe param" "maybe type" "temp"
          (927507 'move' call_tmp[927504](296005 call + dim[295973] 1))
          unknown call_tmp[927509] "expr temp" "maybe param" "maybe type" "temp"
          (927512 'move' call_tmp[927509](296004 call(296001 call (partial) dsiDim _mt[203] call_tmp[927497]) call_tmp[927504]))
          unknown call_tmp[927516] "expr temp" "maybe param" "maybe type" "temp"
          (927519 'move' call_tmp[927516](296012 call(296009 call (partial) sizeAs _mt[203] call_tmp[927509]) int(64)[10]))
          unknown call_tmp[927521] "expr temp" "maybe param" "maybe type" "temp"
          (927524 'move' call_tmp[927521](295992 call * call_tmp[927490] call_tmp[927516]))
          (295987 call = call_tmp[927478] call_tmp[927521])
          (567584 'end of statement' dim[295973])
        }
        label _unused_continueLabel[296019]
        label _breakLabel[296018]
      }
    }
    {
      unknown call_tmp[927526] "expr temp" "maybe param" "maybe type" "temp"
      (927529 'move' call_tmp[927526](296136 call == storageOrder[287756] CMO[287740]))
      unknown call_tmp[927531] "expr temp" "maybe param" "maybe type" "temp"
      (927534 'move' call_tmp[927531](296145 call _cond_test call_tmp[927526]))
      if call_tmp[927531]
      {
        unknown call_tmp[927538] "expr temp" "maybe param" "maybe type" "temp"
        (927541 'move' call_tmp[927538](296054 call(457363 call (partial) blk _mt[203] this[295882]) 0))
        (296051 call = call_tmp[927538] 1)
        (567586 'end of statement')
        {
          unknown dim[296057] "dead at end of block" "index var" "insert auto destroy"
          (653184 'init var' dim[296057] 0)
          (567587 'end of statement')
          unknown tmp[296094] "maybe param" "temp"
          unknown call_tmp[927545] "expr temp" "maybe param" "maybe type" "temp"
          (927548 'move' call_tmp[927545](457368 call rank _mt[203] this[295882]))
          unknown call_tmp[927550] "expr temp" "maybe param" "maybe type" "temp"
          (927553 'move' call_tmp[927550](296060 call - call_tmp[927545] 1))
          (296106 'move' tmp[296094](296104 call chpl_compute_low_param_loop_bound 1 call_tmp[927550]))
          unknown tmp[296095] "maybe param" "temp"
          unknown call_tmp[927557] "expr temp" "maybe param" "maybe type" "temp"
          (927560 'move' call_tmp[927557](457386 call rank _mt[203] this[295882]))
          unknown call_tmp[927562] "expr temp" "maybe param" "maybe type" "temp"
          (927565 'move' call_tmp[927562](296111 call - call_tmp[927557] 1))
          (296116 'move' tmp[296095](296114 call chpl_compute_high_param_loop_bound 1 call_tmp[927562]))
          unknown tmp[296096] "maybe param" "temp"
          (296119 'move' tmp[296096] 1)
          ParamForLoop[296121]
          { dim[296057] tmp[296094] tmp[296095] tmp[296096]
            {
              unknown call_tmp[927569] "expr temp" "maybe param" "maybe type" "temp"
              (927572 'move' call_tmp[927569](296070 call(457373 call (partial) blk _mt[203] this[295882]) dim[296057]))
              unknown call_tmp[927576] "expr temp" "maybe param" "maybe type" "temp"
              (927579 'move' call_tmp[927576](296076 call - dim[296057] 1))
              unknown call_tmp[927581] "expr temp" "maybe param" "maybe type" "temp"
              (927584 'move' call_tmp[927581](296075 call(457379 call (partial) blk _mt[203] this[295882]) call_tmp[927576]))
              unknown call_tmp[927588] "expr temp" "maybe param" "maybe type" "temp"
              (927591 'move' call_tmp[927588](409843 call dom _mt[203] this[295882]))
              unknown call_tmp[927595] "expr temp" "maybe param" "maybe type" "temp"
              (927598 'move' call_tmp[927595](296085 call - dim[296057] 1))
              unknown call_tmp[927600] "expr temp" "maybe param" "maybe type" "temp"
              (927603 'move' call_tmp[927600](296084 call(296081 call (partial) dsiDim _mt[203] call_tmp[927588]) call_tmp[927595]))
              unknown call_tmp[927607] "expr temp" "maybe param" "maybe type" "temp"
              (927610 'move' call_tmp[927607](296092 call(296089 call (partial) sizeAs _mt[203] call_tmp[927600]) int(64)[10]))
              unknown call_tmp[927612] "expr temp" "maybe param" "maybe type" "temp"
              (927615 'move' call_tmp[927612](296072 call * call_tmp[927581] call_tmp[927607]))
              (296067 call = call_tmp[927569] call_tmp[927612])
              (567588 'end of statement' dim[296057])
            }
          }
          label _unused_continueLabel[296098]
          label _breakLabel[296097]
        }
      }
      {
        (296132 call halt "unknown array storage order")
      }
    }
    (296162 call(457392 call (partial) computeFactoredOffs _mt[203] this[295882]))
    (567591 'end of statement')
    const size[296164] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[704921] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704922] "maybe param" "temp"
    unknown call_tmp[927619] "expr temp" "maybe param" "maybe type" "temp"
    (927622 'move' call_tmp[927619](296165 call == storageOrder[287756] RMO[287738]))
    (704927 'move' tmp[704922](704925 call _cond_test call_tmp[927619]))
    if tmp[704922]
    {
      unknown tmp[704929] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[927626] "expr temp" "maybe param" "maybe type" "temp"
      (927629 'move' call_tmp[927626](296175 call(457398 call (partial) blk _mt[203] this[295882]) 0))
      unknown call_tmp[927633] "expr temp" "maybe param" "maybe type" "temp"
      (927636 'move' call_tmp[927633](409851 call dom _mt[203] this[295882]))
      unknown call_tmp[927640] "expr temp" "maybe param" "maybe type" "temp"
      (927643 'move' call_tmp[927640](296181 call(296178 call (partial) dsiDim _mt[203] call_tmp[927633]) 0))
      unknown call_tmp[927647] "expr temp" "maybe param" "maybe type" "temp"
      (927650 'move' call_tmp[927647](296186 call(296183 call (partial) sizeAs _mt[203] call_tmp[927640]) int(64)[10]))
      (704931 'move' tmp[704929](296172 call * call_tmp[927626] call_tmp[927647]))
      (704936 'move' tmp[704921](704933 '_paramFoldLogical' tmp[704922] tmp[704929]))
    }
    {
      unknown tmp[704938] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[927656] "expr temp" "maybe param" "maybe type" "temp"
      (927659 'move' call_tmp[927656](457408 call rank _mt[203] this[295882]))
      unknown call_tmp[927661] "expr temp" "maybe param" "maybe type" "temp"
      (927664 'move' call_tmp[927661](296192 call - call_tmp[927656] 1))
      unknown call_tmp[927666] "expr temp" "maybe param" "maybe type" "temp"
      (927669 'move' call_tmp[927666](296191 call(457403 call (partial) blk _mt[203] this[295882]) call_tmp[927661]))
      unknown call_tmp[927673] "expr temp" "maybe param" "maybe type" "temp"
      (927676 'move' call_tmp[927673](409856 call dom _mt[203] this[295882]))
      unknown call_tmp[927682] "expr temp" "maybe param" "maybe type" "temp"
      (927685 'move' call_tmp[927682](457413 call rank _mt[203] this[295882]))
      unknown call_tmp[927687] "expr temp" "maybe param" "maybe type" "temp"
      (927690 'move' call_tmp[927687](296201 call - call_tmp[927682] 1))
      unknown call_tmp[927692] "expr temp" "maybe param" "maybe type" "temp"
      (927695 'move' call_tmp[927692](296200 call(296197 call (partial) dsiDim _mt[203] call_tmp[927673]) call_tmp[927687]))
      unknown call_tmp[927699] "expr temp" "maybe param" "maybe type" "temp"
      (927702 'move' call_tmp[927699](296208 call(296205 call (partial) sizeAs _mt[203] call_tmp[927692]) int(64)[10]))
      (704940 'move' tmp[704938](296188 call * call_tmp[927666] call_tmp[927699]))
      (704945 'move' tmp[704921](704942 '_paramFoldLogical' tmp[704922] tmp[704938]))
    }
    (653186 'init var' size[296164] tmp[704921])
    (296214 'end of statement')
    unknown call_tmp[927704] "expr temp" "maybe param" "maybe type" "temp"
    (927707 'move' call_tmp[927704](296279 call _cond_test usePollyArrayIndex[287728]))
    if call_tmp[927704]
    {
      {
        unknown dim[296216] "dead at end of block" "index var" "insert auto destroy"
        (653188 'init var' dim[296216] 0)
        (567592 'end of statement')
        unknown tmp[296242] "maybe param" "temp"
        unknown call_tmp[927711] "expr temp" "maybe param" "maybe type" "temp"
        (927714 'move' call_tmp[927711](457418 call rank _mt[203] this[295882]))
        unknown call_tmp[927716] "expr temp" "maybe param" "maybe type" "temp"
        (927719 'move' call_tmp[927716](296219 call - call_tmp[927711] 1))
        (296254 'move' tmp[296242](296252 call chpl_compute_low_param_loop_bound 0 call_tmp[927716]))
        unknown tmp[296243] "maybe param" "temp"
        unknown call_tmp[927723] "expr temp" "maybe param" "maybe type" "temp"
        (927726 'move' call_tmp[927723](457432 call rank _mt[203] this[295882]))
        unknown call_tmp[927728] "expr temp" "maybe param" "maybe type" "temp"
        (927731 'move' call_tmp[927728](296259 call - call_tmp[927723] 1))
        (296264 'move' tmp[296243](296262 call chpl_compute_high_param_loop_bound 0 call_tmp[927728]))
        unknown tmp[296244] "maybe param" "temp"
        (296267 'move' tmp[296244] 1)
        ParamForLoop[296269]
        { dim[296216] tmp[296242] tmp[296243] tmp[296244]
          {
            unknown call_tmp[927735] "expr temp" "maybe param" "maybe type" "temp"
            (927738 'move' call_tmp[927735](296229 call(457425 call (partial) sizesPerDim _mt[203] this[295882]) dim[296216]))
            unknown call_tmp[927742] "expr temp" "maybe param" "maybe type" "temp"
            (927745 'move' call_tmp[927742](409861 call dom _mt[203] this[295882]))
            unknown call_tmp[927749] "expr temp" "maybe param" "maybe type" "temp"
            (927752 'move' call_tmp[927749](296235 call(296232 call (partial) dsiDim _mt[203] call_tmp[927742]) dim[296216]))
            unknown call_tmp[927756] "expr temp" "maybe param" "maybe type" "temp"
            (927759 'move' call_tmp[927756](296240 call(296237 call (partial) sizeAs _mt[203] call_tmp[927749]) int(64)[10]))
            (296226 call = call_tmp[927735] call_tmp[927756])
            (567593 'end of statement' dim[296216])
          }
        }
        label _unused_continueLabel[296246]
        label _breakLabel[296245]
      }
    }
    unknown call_tmp[927763] "expr temp" "maybe param" "maybe type" "temp"
    (927766 'move' call_tmp[927763](457496 call data _mt[203] this[295882]))
    unknown call_tmp[927768] "expr temp" "maybe param" "maybe type" "temp"
    (927771 'move' call_tmp[927768](296353 call == call_tmp[927763] nil[32]))
    unknown call_tmp[927773] "expr temp" "maybe param" "maybe type" "temp"
    (927776 'move' call_tmp[927773](296357 call _cond_test call_tmp[927768]))
    if call_tmp[927773]
    {
      unknown call_tmp[927778] "expr temp" "maybe param" "maybe type" "temp"
      (927781 'move' call_tmp[927778](296297 call _cond_test debugDefaultDist[287662]))
      if call_tmp[927778]
      {
        unknown call_tmp[927785] "expr temp" "maybe param" "maybe type" "temp"
        (927788 'move' call_tmp[927785](457438 call eltType _mt[203] this[295882]))
        unknown call_tmp[927790] "expr temp" "maybe param" "maybe type" "temp"
        (927793 'move' call_tmp[927790](296290 call : call_tmp[927785] string[244]))
        (296286 call chpl_debug_writeln "*** DR alloc " call_tmp[927790] " " size[296164])
        (567595 'end of statement' size[296164])
      }
      unknown call_tmp[927795] "expr temp" "maybe param" "maybe type" "temp"
      (927798 'move' call_tmp[927795](296333 call ! localeModelPartitionsIterationOnSublocales[306872]))
      unknown call_tmp[927800] "expr temp" "maybe param" "maybe type" "temp"
      (927803 'move' call_tmp[927800](296336 call _cond_test call_tmp[927795]))
      if call_tmp[927800]
      {
        unknown call_tmp[927807] "expr temp" "maybe param" "maybe type" "temp"
        (927810 'move' call_tmp[927807](457445 call data _mt[203] this[295882]))
        unknown call_tmp[927814] "expr temp" "maybe param" "maybe type" "temp"
        (927817 'move' call_tmp[927814](457450 call eltType _mt[203] this[295882]))
        unknown call_tmp[927821] "expr temp" "maybe param" "maybe type" "temp"
        (927824 'move' call_tmp[927821](457456 call callPostAlloc _mt[203] this[295882]))
        unknown call_tmp[927826] "expr temp" "maybe param" "maybe type" "temp"
        (927829 'move' call_tmp[927826](296306 call _ddata_allocate_noinit call_tmp[927814] size[296164] call_tmp[927821]))
        (296302 call = call_tmp[927807] call_tmp[927826])
        (567597 'end of statement' size[296164])
      }
      {
        unknown tmp[704952] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[704953] "maybe param" "temp"
        unknown call_tmp[927831] "expr temp" "maybe param" "maybe type" "temp"
        (927834 'move' call_tmp[927831](409864 call here[135591]))
        unknown call_tmp[927838] "expr temp" "maybe param" "maybe type" "temp"
        (927841 'move' call_tmp[927838](296325 call(296322 call (partial) _getChildCount _mt[203] call_tmp[927831])))
        unknown call_tmp[927843] "expr temp" "maybe param" "maybe type" "temp"
        (927846 'move' call_tmp[927843](296319 call > call_tmp[927838] 1))
        (704958 'move' tmp[704953](704956 call _cond_test call_tmp[927843]))
        if tmp[704953]
        {
          (704963 'move' tmp[704952](704960 '_paramFoldLogical' tmp[704953] c_sublocid_all[135207]))
        }
        {
          (704968 'move' tmp[704952](704965 '_paramFoldLogical' tmp[704953] c_sublocid_none[135197]))
        }
        unknown call_tmp[927850] "expr temp" "maybe param" "maybe type" "temp"
        (927853 'move' call_tmp[927850](457461 call data _mt[203] this[295882]))
        unknown call_tmp[927857] "expr temp" "maybe param" "maybe type" "temp"
        (927860 'move' call_tmp[927857](457466 call eltType _mt[203] this[295882]))
        unknown call_tmp[927864] "expr temp" "maybe param" "maybe type" "temp"
        (927867 'move' call_tmp[927864](457472 call callPostAlloc _mt[203] this[295882]))
        unknown call_tmp[927869] "expr temp" "maybe param" "maybe type" "temp"
        (927872 'move' call_tmp[927869](296315 call _ddata_allocate_noinit call_tmp[927857] size[296164] call_tmp[927864](subloc = tmp[704952])))
        (296311 call = call_tmp[927850] call_tmp[927869])
        (567599 'end of statement' size[296164])
      }
      unknown call_tmp[927874] "expr temp" "maybe param" "maybe type" "temp"
      (927877 'move' call_tmp[927874](296349 call _cond_test initElts[295884]))
      if call_tmp[927874]
      {
        unknown call_tmp[927881] "expr temp" "maybe param" "maybe type" "temp"
        (927884 'move' call_tmp[927881](457480 call data _mt[203] this[295882]))
        unknown call_tmp[927888] "expr temp" "maybe param" "maybe type" "temp"
        (927891 'move' call_tmp[927888](457486 call eltType _mt[203] this[295882]))
        (296342 call init_elts call_tmp[927881] size[296164] call_tmp[927888])
        (567601 'end of statement' size[296164])
        (296347 call(457490 call (partial) dsiElementInitializationComplete _mt[203] this[295882]))
      }
    }
    (296362 call(457500 call (partial) initShiftedData _mt[203] this[295882]))
    (629957 return _void[46])
  }
  function DefaultRectangularArr[298194](?).getDataIndex[296365](arg _mt[296379]:_MT[201], arg this[296367]:DefaultRectangularArr[298194](?), arg ind[296371] ... :
  (457505 call idxType _mt[203] this[296367]), param arg getShifted[296376] :
  1 =
  1) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629961] "RVV" "temp"
    unknown call_tmp[927901] "expr temp" "maybe param" "maybe type" "temp"
    (927904 'move' call_tmp[927901](296388 call(457514 call (partial) getDataIndex _mt[203] this[296367]) ind[296371](getShifted = getShifted[296376])))
    (629966 'move' ret[629961](629965 'deref' call_tmp[927901]))
    (629963 return ret[629961])
  }
  where {
    unknown call_tmp[927908] "expr temp" "maybe param" "maybe type" "temp"
    (927911 'move' call_tmp[927908](457510 call rank _mt[203] this[296367]))
    (296381 call == call_tmp[927908] 1)
  }
  function DefaultRectangularArr[298194](?).getDataIndex[296395](arg _mt[296410]:_MT[201], arg this[296397]:DefaultRectangularArr[298194](?), arg ind[296403] :
  unknown call_tmp[927915] "expr temp" "maybe param" "maybe type" "temp", param arg getShifted[296407] :
  1 =
  1) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629970] "RVV" "temp"
    unknown call_tmp[927929] "expr temp" "maybe param" "maybe type" "temp"
    (927932 'move' call_tmp[927929](296817 call(457658 call (partial) hasUnitStride _mt[203] this[296397])))
    unknown call_tmp[927934] "expr temp" "maybe param" "maybe type" "temp"
    (927937 'move' call_tmp[927934](296814 call ! call_tmp[927929]))
    unknown call_tmp[927939] "expr temp" "maybe param" "maybe type" "temp"
    (927942 'move' call_tmp[927939](296818 call _cond_test call_tmp[927934]))
    if call_tmp[927939]
    {
      unknown sum[296415] "dead at end of block" "insert auto destroy"
      (653190 'init var' sum[296415] 0)
      (296418 'end of statement')
      {
        unknown i[296419] "dead at end of block" "index var" "insert auto destroy"
        (653192 'init var' i[296419] 0)
        (567606 'end of statement')
        unknown tmp[296461] "maybe param" "temp"
        unknown call_tmp[927946] "expr temp" "maybe param" "maybe type" "temp"
        (927949 'move' call_tmp[927946](457531 call rank _mt[203] this[296397]))
        unknown call_tmp[927951] "expr temp" "maybe param" "maybe type" "temp"
        (927954 'move' call_tmp[927951](296422 call - call_tmp[927946] 1))
        (296473 'move' tmp[296461](296471 call chpl_compute_low_param_loop_bound 0 call_tmp[927951]))
        unknown tmp[296462] "maybe param" "temp"
        unknown call_tmp[927958] "expr temp" "maybe param" "maybe type" "temp"
        (927961 'move' call_tmp[927958](457557 call rank _mt[203] this[296397]))
        unknown call_tmp[927963] "expr temp" "maybe param" "maybe type" "temp"
        (927966 'move' call_tmp[927963](296478 call - call_tmp[927958] 1))
        (296483 'move' tmp[296462](296481 call chpl_compute_high_param_loop_bound 0 call_tmp[927963]))
        unknown tmp[296463] "maybe param" "temp"
        (296486 'move' tmp[296463] 1)
        ParamForLoop[296488]
        { i[296419] tmp[296461] tmp[296462] tmp[296463]
          unknown call_tmp[927968] "expr temp" "maybe param" "maybe type" "temp"
          (927971 'move' call_tmp[927968](296440 call ind[296403] i[296419]))
          unknown call_tmp[927973] "expr temp" "maybe param" "maybe type" "temp"
          (927976 'move' call_tmp[927973](296438 call chpl__idxToInt call_tmp[927968]))
          unknown call_tmp[927980] "expr temp" "maybe param" "maybe type" "temp"
          (927983 'move' call_tmp[927980](296445 call(457539 call (partial) off _mt[203] this[296397]) i[296419]))
          unknown call_tmp[927985] "expr temp" "maybe param" "maybe type" "temp"
          (927988 'move' call_tmp[927985](296443 call chpl__idxToInt call_tmp[927980]))
          unknown call_tmp[927990] "expr temp" "maybe param" "maybe type" "temp"
          (927993 'move' call_tmp[927990](296435 call - call_tmp[927973] call_tmp[927985]))
          unknown call_tmp[927997] "expr temp" "maybe param" "maybe type" "temp"
          (928000 'move' call_tmp[927997](296450 call(296447 call (partial) safeCast _mt[203] call_tmp[927990]) int(64)[10]))
          unknown call_tmp[928004] "expr temp" "maybe param" "maybe type" "temp"
          (928007 'move' call_tmp[928004](296453 call(457545 call (partial) blk _mt[203] this[296397]) i[296419]))
          unknown call_tmp[928009] "expr temp" "maybe param" "maybe type" "temp"
          (928012 'move' call_tmp[928009](296433 call * call_tmp[927997] call_tmp[928004]))
          unknown call_tmp[928016] "expr temp" "maybe param" "maybe type" "temp"
          (928019 'move' call_tmp[928016](296458 call(457551 call (partial) str _mt[203] this[296397]) i[296419]))
          unknown call_tmp[928021] "expr temp" "maybe param" "maybe type" "temp"
          (928024 'move' call_tmp[928021](296456 call abs call_tmp[928016]))
          unknown call_tmp[928026] "expr temp" "maybe param" "maybe type" "temp"
          (928029 'move' call_tmp[928026](296431 call / call_tmp[928009] call_tmp[928021]))
          (296428 call += sum[296415] call_tmp[928026])
          (567607 'end of statement' sum[296415] i[296419])
        }
        label _unused_continueLabel[296465]
        label _breakLabel[296464]
      }
      (629975 'move' ret[629970](629974 'deref' sum[296415]))
      gotoReturn _end_getDataIndex[629968] _end_getDataIndex[629968]
      (567610 'end of statement' sum[296415])
    }
    {
      unknown tmp[503268] "maybe param" "temp"
      (503279 'move' tmp[503268] getShifted[296407])
      unknown call_tmp[928031] "expr temp" "maybe param" "maybe type" "temp"
      (928034 'move' call_tmp[928031](503281 call _cond_invalid tmp[503268]))
      if call_tmp[928031]
      {
        (503284 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown wantShiftedIndex[296501] "dead at end of block" "param"
      unknown tmp[704975] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[704976] "maybe param" "temp"
      unknown call_tmp[928036] "expr temp" "maybe param" "maybe type" "temp"
      (928039 'move' call_tmp[928036](503269 call isTrue tmp[503268]))
      (704981 'move' tmp[704976](704979 call _cond_test call_tmp[928036]))
      if tmp[704976]
      {
        unknown tmp[704983] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (704985 'move' tmp[704983](503272 call isTrue earlyShiftData[287723]))
        (704990 'move' tmp[704975](704987 '_paramFoldLogical' tmp[704976] tmp[704983]))
      }
      {
        (704995 'move' tmp[704975](704992 '_paramFoldLogical' tmp[704976] 0))
      }
      (653194 'init var' wantShiftedIndex[296501] tmp[704975])
      (296507 'end of statement')
      unknown tmp[503289] "maybe param" "temp"
      unknown call_tmp[928043] "expr temp" "maybe param" "maybe type" "temp"
      (928046 'move' call_tmp[928043](457653 call rank _mt[203] this[296397]))
      (503300 'move' tmp[503289](296805 call == call_tmp[928043] 1))
      unknown call_tmp[928048] "expr temp" "maybe param" "maybe type" "temp"
      (928051 'move' call_tmp[928048](503302 call _cond_invalid tmp[503289]))
      if call_tmp[928048]
      {
        (503305 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705002] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705003] "maybe param" "temp"
      unknown call_tmp[928053] "expr temp" "maybe param" "maybe type" "temp"
      (928056 'move' call_tmp[928053](503290 call isTrue tmp[503289]))
      (705008 'move' tmp[705003](705006 call _cond_test call_tmp[928053]))
      if tmp[705003]
      {
        unknown tmp[705010] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (705012 'move' tmp[705010](503293 call isTrue wantShiftedIndex[296501]))
        (705017 'move' tmp[705002](705014 '_paramFoldLogical' tmp[705003] tmp[705010]))
      }
      {
        (705022 'move' tmp[705002](705019 '_paramFoldLogical' tmp[705003] 0))
      }
      unknown call_tmp[928058] "expr temp" "maybe param" "maybe type" "temp"
      (928061 'move' call_tmp[928058](296810 call _cond_test tmp[705002]))
      if call_tmp[928058]
      {
        unknown call_tmp[928063] "expr temp" "maybe param" "maybe type" "temp"
        (928066 'move' call_tmp[928063](296515 call ind[296403] 0))
        unknown call_tmp[928068] "expr temp" "maybe param" "maybe type" "temp"
        (928071 'move' call_tmp[928068](296513 call chpl__idxToInt call_tmp[928063]))
        unknown call_tmp[928073] "expr temp" "maybe param" "maybe type" "temp"
        (928076 'move' call_tmp[928073](296510 call : call_tmp[928068] int(64)[10]))
        (629980 'move' ret[629970](629979 'deref' call_tmp[928073]))
        gotoReturn _end_getDataIndex[629968] _end_getDataIndex[629968]
      }
      {
        unknown sum[296520] "dead at end of block" "insert auto destroy"
        (653196 'init var' sum[296520] 0)
        (296523 'end of statement')
        unknown useInd[296525] "dead at end of block" "insert auto destroy"
        (653198 'init var' useInd[296525] ind[296403])
        (296528 'end of statement')
        unknown useOffset[296530] "dead at end of block" "insert auto destroy"
        (653200 'init var' useOffset[296530] 0 int(64)[10])
        (296534 'end of statement')
        unknown call_tmp[928080] "maybe param" "maybe type" "temp"
        (928083 'move' call_tmp[928080](457567 call sizesPerDim _mt[203] this[296397]))
        unknown useSizesPerDim[296536] "dead at end of block" "insert auto destroy"
        (653202 'init var' useSizesPerDim[296536] call_tmp[928080])
        (296539 'end of statement')
        unknown call_tmp[928085] "expr temp" "maybe param" "maybe type" "temp"
        (928088 'move' call_tmp[928085](296799 call _cond_test usePollyArrayIndex[287728]))
        if call_tmp[928085]
        {
          unknown call_tmp[928090] "expr temp" "maybe param" "maybe type" "temp"
          (928093 'move' call_tmp[928090](296605 call ! wantShiftedIndex[296501]))
          unknown call_tmp[928095] "expr temp" "maybe param" "maybe type" "temp"
          (928098 'move' call_tmp[928095](296608 call _cond_test call_tmp[928090]))
          if call_tmp[928095]
          {
            {
              unknown i[296542] "dead at end of block" "index var" "insert auto destroy"
              (653204 'init var' i[296542] 0)
              (567615 'end of statement')
              unknown tmp[296569] "maybe param" "temp"
              unknown call_tmp[928102] "expr temp" "maybe param" "maybe type" "temp"
              (928105 'move' call_tmp[928102](457572 call rank _mt[203] this[296397]))
              unknown call_tmp[928107] "expr temp" "maybe param" "maybe type" "temp"
              (928110 'move' call_tmp[928107](296545 call - call_tmp[928102] 1))
              (296581 'move' tmp[296569](296579 call chpl_compute_low_param_loop_bound 0 call_tmp[928107]))
              unknown tmp[296570] "maybe param" "temp"
              unknown call_tmp[928114] "expr temp" "maybe param" "maybe type" "temp"
              (928117 'move' call_tmp[928114](457587 call rank _mt[203] this[296397]))
              unknown call_tmp[928119] "expr temp" "maybe param" "maybe type" "temp"
              (928122 'move' call_tmp[928119](296586 call - call_tmp[928114] 1))
              (296591 'move' tmp[296570](296589 call chpl_compute_high_param_loop_bound 0 call_tmp[928119]))
              unknown tmp[296571] "maybe param" "temp"
              (296594 'move' tmp[296571] 1)
              ParamForLoop[296596]
              { i[296542] tmp[296569] tmp[296570] tmp[296571]
                {
                  unknown call_tmp[928124] "expr temp" "maybe param" "maybe type" "temp"
                  (928127 'move' call_tmp[928124](296555 call useInd[296525] i[296542]))
                  unknown call_tmp[928129] "expr temp" "maybe param" "maybe type" "temp"
                  (928132 'move' call_tmp[928129](296562 call useInd[296525] i[296542]))
                  unknown call_tmp[928134] "expr temp" "maybe param" "maybe type" "temp"
                  (928137 'move' call_tmp[928134](296560 call chpl__idxToInt call_tmp[928129]))
                  unknown call_tmp[928141] "expr temp" "maybe param" "maybe type" "temp"
                  (928144 'move' call_tmp[928141](296567 call(457581 call (partial) off _mt[203] this[296397]) i[296542]))
                  unknown call_tmp[928146] "expr temp" "maybe param" "maybe type" "temp"
                  (928149 'move' call_tmp[928146](296565 call chpl__idxToInt call_tmp[928141]))
                  unknown call_tmp[928151] "expr temp" "maybe param" "maybe type" "temp"
                  (928154 'move' call_tmp[928151](296557 call - call_tmp[928134] call_tmp[928146]))
                  (296552 call = call_tmp[928124] call_tmp[928151])
                  (567616 'end of statement' useInd[296525] i[296542])
                }
              }
              label _unused_continueLabel[296573]
              label _breakLabel[296572]
            }
          }
          unknown call_tmp[928156] "expr temp" "maybe param" "maybe type" "temp"
          (928159 'move' call_tmp[928156](296614 call polly_array_index useOffset[296530](296617 'expand_tuple' useSizesPerDim[296536])(296619 'expand_tuple' useInd[296525])))
          (629985 'move' ret[629970](629984 'deref' call_tmp[928156]))
          gotoReturn _end_getDataIndex[629968] _end_getDataIndex[629968]
          (567619 'end of statement' useOffset[296530] useSizesPerDim[296536] useInd[296525])
        }
        {
          unknown call_tmp[928161] "expr temp" "maybe param" "maybe type" "temp"
          (928164 'move' call_tmp[928161](296772 call == storageOrder[287756] RMO[287738]))
          unknown call_tmp[928166] "expr temp" "maybe param" "maybe type" "temp"
          (928169 'move' call_tmp[928166](296779 call _cond_test call_tmp[928161]))
          if call_tmp[928166]
          {
            {
              unknown i[296622] "dead at end of block" "index var" "insert auto destroy"
              (653206 'init var' i[296622] 0)
              (567623 'end of statement')
              unknown tmp[296648] "maybe param" "temp"
              unknown call_tmp[928173] "expr temp" "maybe param" "maybe type" "temp"
              (928176 'move' call_tmp[928173](457596 call rank _mt[203] this[296397]))
              unknown call_tmp[928178] "expr temp" "maybe param" "maybe type" "temp"
              (928181 'move' call_tmp[928178](296625 call - call_tmp[928173] 2))
              (296660 'move' tmp[296648](296658 call chpl_compute_low_param_loop_bound 0 call_tmp[928178]))
              unknown tmp[296649] "maybe param" "temp"
              unknown call_tmp[928185] "expr temp" "maybe param" "maybe type" "temp"
              (928188 'move' call_tmp[928185](457610 call rank _mt[203] this[296397]))
              unknown call_tmp[928190] "expr temp" "maybe param" "maybe type" "temp"
              (928193 'move' call_tmp[928190](296665 call - call_tmp[928185] 2))
              (296670 'move' tmp[296649](296668 call chpl_compute_high_param_loop_bound 0 call_tmp[928190]))
              unknown tmp[296650] "maybe param" "temp"
              (296673 'move' tmp[296650] 1)
              ParamForLoop[296675]
              { i[296622] tmp[296648] tmp[296649] tmp[296650]
                {
                  unknown call_tmp[928195] "expr temp" "maybe param" "maybe type" "temp"
                  (928198 'move' call_tmp[928195](296642 call ind[296403] i[296622]))
                  unknown call_tmp[928200] "expr temp" "maybe param" "maybe type" "temp"
                  (928203 'move' call_tmp[928200](296640 call chpl__idxToInt call_tmp[928195]))
                  unknown call_tmp[928205] "expr temp" "maybe param" "maybe type" "temp"
                  (928208 'move' call_tmp[928205](296637 call : call_tmp[928200] int(64)[10]))
                  unknown call_tmp[928212] "expr temp" "maybe param" "maybe type" "temp"
                  (928215 'move' call_tmp[928212](296646 call(457604 call (partial) blk _mt[203] this[296397]) i[296622]))
                  unknown call_tmp[928217] "expr temp" "maybe param" "maybe type" "temp"
                  (928220 'move' call_tmp[928217](296635 call * call_tmp[928205] call_tmp[928212]))
                  (296632 call += sum[296520] call_tmp[928217])
                  (567624 'end of statement' sum[296520] i[296622])
                }
              }
              label _unused_continueLabel[296652]
              label _breakLabel[296651]
            }
            unknown call_tmp[928224] "expr temp" "maybe param" "maybe type" "temp"
            (928227 'move' call_tmp[928224](457617 call rank _mt[203] this[296397]))
            unknown call_tmp[928229] "expr temp" "maybe param" "maybe type" "temp"
            (928232 'move' call_tmp[928229](296693 call - call_tmp[928224] 1))
            unknown call_tmp[928234] "expr temp" "maybe param" "maybe type" "temp"
            (928237 'move' call_tmp[928234](296692 call ind[296403] call_tmp[928229]))
            unknown call_tmp[928239] "expr temp" "maybe param" "maybe type" "temp"
            (928242 'move' call_tmp[928239](296690 call chpl__idxToInt call_tmp[928234]))
            unknown call_tmp[928244] "expr temp" "maybe param" "maybe type" "temp"
            (928247 'move' call_tmp[928244](296687 call : call_tmp[928239] int(64)[10]))
            (296684 call += sum[296520] call_tmp[928244])
            (567627 'end of statement' sum[296520])
          }
          {
            {
              unknown i[296699] "dead at end of block" "index var" "insert auto destroy"
              (653208 'init var' i[296699] 0)
              (567629 'end of statement')
              unknown tmp[296725] "maybe param" "temp"
              unknown call_tmp[928251] "expr temp" "maybe param" "maybe type" "temp"
              (928254 'move' call_tmp[928251](457622 call rank _mt[203] this[296397]))
              unknown call_tmp[928256] "expr temp" "maybe param" "maybe type" "temp"
              (928259 'move' call_tmp[928256](296702 call - call_tmp[928251] 1))
              (296737 'move' tmp[296725](296735 call chpl_compute_low_param_loop_bound 1 call_tmp[928256]))
              unknown tmp[296726] "maybe param" "temp"
              unknown call_tmp[928263] "expr temp" "maybe param" "maybe type" "temp"
              (928266 'move' call_tmp[928263](457636 call rank _mt[203] this[296397]))
              unknown call_tmp[928268] "expr temp" "maybe param" "maybe type" "temp"
              (928271 'move' call_tmp[928268](296742 call - call_tmp[928263] 1))
              (296747 'move' tmp[296726](296745 call chpl_compute_high_param_loop_bound 1 call_tmp[928268]))
              unknown tmp[296727] "maybe param" "temp"
              (296750 'move' tmp[296727] 1)
              ParamForLoop[296752]
              { i[296699] tmp[296725] tmp[296726] tmp[296727]
                {
                  unknown call_tmp[928273] "expr temp" "maybe param" "maybe type" "temp"
                  (928276 'move' call_tmp[928273](296719 call ind[296403] i[296699]))
                  unknown call_tmp[928278] "expr temp" "maybe param" "maybe type" "temp"
                  (928281 'move' call_tmp[928278](296717 call chpl__idxToInt call_tmp[928273]))
                  unknown call_tmp[928283] "expr temp" "maybe param" "maybe type" "temp"
                  (928286 'move' call_tmp[928283](296714 call : call_tmp[928278] int(64)[10]))
                  unknown call_tmp[928290] "expr temp" "maybe param" "maybe type" "temp"
                  (928293 'move' call_tmp[928290](296723 call(457630 call (partial) blk _mt[203] this[296397]) i[296699]))
                  unknown call_tmp[928295] "expr temp" "maybe param" "maybe type" "temp"
                  (928298 'move' call_tmp[928295](296712 call * call_tmp[928283] call_tmp[928290]))
                  (296709 call += sum[296520] call_tmp[928295])
                  (567630 'end of statement' sum[296520] i[296699])
                }
              }
              label _unused_continueLabel[296729]
              label _breakLabel[296728]
            }
            unknown call_tmp[928300] "expr temp" "maybe param" "maybe type" "temp"
            (928303 'move' call_tmp[928300](296769 call ind[296403] 0))
            unknown call_tmp[928305] "expr temp" "maybe param" "maybe type" "temp"
            (928308 'move' call_tmp[928305](296767 call chpl__idxToInt call_tmp[928300]))
            unknown call_tmp[928310] "expr temp" "maybe param" "maybe type" "temp"
            (928313 'move' call_tmp[928310](296764 call : call_tmp[928305] int(64)[10]))
            (296761 call += sum[296520] call_tmp[928310])
            (567633 'end of statement' sum[296520])
          }
          unknown call_tmp[928315] "expr temp" "maybe param" "maybe type" "temp"
          (928318 'move' call_tmp[928315](296788 call ! wantShiftedIndex[296501]))
          unknown call_tmp[928320] "expr temp" "maybe param" "maybe type" "temp"
          (928323 'move' call_tmp[928320](296791 call _cond_test call_tmp[928315]))
          if call_tmp[928320]
          {
            unknown call_tmp[928327] "expr temp" "maybe param" "maybe type" "temp"
            (928330 'move' call_tmp[928327](457645 call factoredOffs _mt[203] this[296397]))
            (296783 call -= sum[296520] call_tmp[928327])
            (567635 'end of statement' sum[296520])
          }
          (629990 'move' ret[629970](629989 'deref' sum[296520]))
          gotoReturn _end_getDataIndex[629968] _end_getDataIndex[629968]
          (567637 'end of statement' sum[296520])
        }
      }
    }
    label _end_getDataIndex[629968]
    (629972 return ret[629970])
  }
  function DefaultRectangularArr[298194](?).dsiAccess[296824](arg _mt[296834]:_MT[201], arg this[296826]:DefaultRectangularArr[298194](?), arg ind[296830] ... :
  (457663 call idxType _mt[203] this[296826])) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[629996] "RVV" "temp"
    unknown call_tmp[928336] "expr temp" "maybe param" "maybe type" "temp"
    (928339 'move' call_tmp[928336](296843 call(457672 call (partial) dsiAccess _mt[203] this[296826]) ind[296830]))
    (630001 'move' ret[629996](630000 'addr of' call_tmp[928336]))
    (629998 return ret[629996])
  }
  where {
    unknown call_tmp[928343] "expr temp" "maybe param" "maybe type" "temp"
    (928346 'move' call_tmp[928343](457668 call rank _mt[203] this[296826]))
    (296836 call == call_tmp[928343] 1)
  }
  function DefaultRectangularArr[298194](?).dsiAccess[296848](arg _mt[296858]:_MT[201], arg this[296850]:DefaultRectangularArr[298194](?), arg ind[296854] ... :
  (457678 call idxType _mt[203] this[296850])) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[630005] "RVV" "temp"
    unknown call_tmp[928352] "expr temp" "maybe param" "maybe type" "temp"
    (928355 'move' call_tmp[928352](296872 call(457692 call (partial) dsiAccess _mt[203] this[296850]) ind[296854]))
    (630010 'move' ret[630005](630009 'deref' call_tmp[928352]))
    (630007 return ret[630005])
  }
  where {
    unknown tmp[503310] "maybe param" "temp"
    unknown call_tmp[928359] "expr temp" "maybe param" "maybe type" "temp"
    (928362 'move' call_tmp[928359](457683 call rank _mt[203] this[296850]))
    (503321 'move' tmp[503310](296862 call == call_tmp[928359] 1))
    unknown call_tmp[928364] "expr temp" "maybe param" "maybe type" "temp"
    (928367 'move' call_tmp[928364](503323 call _cond_invalid tmp[503310]))
    if call_tmp[928364]
    {
      (503326 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705029] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705030] "maybe param" "temp"
    unknown call_tmp[928369] "expr temp" "maybe param" "maybe type" "temp"
    (928372 'move' call_tmp[928369](503311 call isTrue tmp[503310]))
    (705035 'move' tmp[705030](705033 call _cond_test call_tmp[928369]))
    if tmp[705030]
    {
      unknown tmp[705037] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[928376] "expr temp" "maybe param" "maybe type" "temp"
      (928379 'move' call_tmp[928376](457688 call eltType _mt[203] this[296850]))
      unknown call_tmp[928381] "expr temp" "maybe param" "maybe type" "temp"
      (928384 'move' call_tmp[928381](296867 call shouldReturnRvalueByValue call_tmp[928376]))
      (705039 'move' tmp[705037](503314 call isTrue call_tmp[928381]))
      (705044 'move' tmp[705029](705041 '_paramFoldLogical' tmp[705030] tmp[705037]))
    }
    {
      (705049 'move' tmp[705029](705046 '_paramFoldLogical' tmp[705030] 0))
    }
    (1001656 call chpl_statementLevelSymbol tmp[705029])
  }
  function DefaultRectangularArr[298194](?).dsiAccess[296877](arg _mt[296887]:_MT[201], arg this[296879]:DefaultRectangularArr[298194](?), arg ind[296883] ... :
  (457698 call idxType _mt[203] this[296879])) const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[630014] "RVV" "temp"
    unknown call_tmp[928390] "expr temp" "maybe param" "maybe type" "temp"
    (928393 'move' call_tmp[928390](296896 call(457707 call (partial) dsiAccess _mt[203] this[296879]) ind[296883]))
    (630019 'move' ret[630014](630018 'addr of' call_tmp[928390]))
    (630016 return ret[630014])
  }
  where {
    unknown call_tmp[928397] "expr temp" "maybe param" "maybe type" "temp"
    (928400 'move' call_tmp[928397](457703 call rank _mt[203] this[296879]))
    (296889 call == call_tmp[928397] 1)
  }
  function DefaultRectangularArr[298194](?).dsiAccess[296901](arg _mt[296912]:_MT[201], arg this[296903]:DefaultRectangularArr[298194](?), const in arg ind[296909] :
  unknown call_tmp[928404] "expr temp" "maybe param" "maybe type" "temp") ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[630023] "RVV" "temp"
    unknown call_tmp[928418] "maybe param" "maybe type" "temp"
    (928421 'move' call_tmp[928418](296918 call(457722 call (partial) getDataIndex _mt[203] this[296903]) ind[296909]))
    unknown dataInd[296916] "dead at end of block" "insert auto destroy"
    (653210 'init var' dataInd[296916] call_tmp[928418])
    (296921 'end of statement')
    unknown call_tmp[928425] "expr temp" "maybe param" "maybe type" "temp"
    (928428 'move' call_tmp[928425](296924 call(457727 call (partial) theData _mt[203] this[296903]) dataInd[296916]))
    (630028 'move' ret[630023](630027 'addr of' call_tmp[928425]))
    gotoReturn _end_dsiAccess[630021] _end_dsiAccess[630021]
    (567642 'end of statement' dataInd[296916])
    label _end_dsiAccess[630021]
    (630025 return ret[630023])
  }
  function DefaultRectangularArr[298194](?).dsiAccess[296928](arg _mt[296939]:_MT[201], arg this[296930]:DefaultRectangularArr[298194](?), const in arg ind[296936] :
  unknown call_tmp[928432] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[630034] "RVV" "temp"
    unknown call_tmp[928446] "maybe param" "maybe type" "temp"
    (928449 'move' call_tmp[928446](296948 call(457747 call (partial) getDataIndex _mt[203] this[296930]) ind[296936]))
    unknown dataInd[296946] "dead at end of block" "insert auto destroy"
    (653212 'init var' dataInd[296946] call_tmp[928446])
    (296951 'end of statement')
    unknown call_tmp[928453] "expr temp" "maybe param" "maybe type" "temp"
    (928456 'move' call_tmp[928453](296954 call(457752 call (partial) theData _mt[203] this[296930]) dataInd[296946]))
    (630039 'move' ret[630034](630038 'deref' call_tmp[928453]))
    gotoReturn _end_dsiAccess[630032] _end_dsiAccess[630032]
    (567644 'end of statement' dataInd[296946])
    label _end_dsiAccess[630032]
    (630036 return ret[630034])
  }
  where {
    unknown call_tmp[928460] "expr temp" "maybe param" "maybe type" "temp"
    (928463 'move' call_tmp[928460](457743 call eltType _mt[203] this[296930]))
    (296942 call shouldReturnRvalueByValue call_tmp[928460])
  }
  function DefaultRectangularArr[298194](?).dsiAccess[296959](arg _mt[296970]:_MT[201], arg this[296961]:DefaultRectangularArr[298194](?), const in arg ind[296967] :
  unknown call_tmp[928467] "expr temp" "maybe param" "maybe type" "temp") const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[630045] "RVV" "temp"
    unknown call_tmp[928481] "maybe param" "maybe type" "temp"
    (928484 'move' call_tmp[928481](296976 call(457767 call (partial) getDataIndex _mt[203] this[296961]) ind[296967]))
    unknown dataInd[296974] "dead at end of block" "insert auto destroy"
    (653214 'init var' dataInd[296974] call_tmp[928481])
    (296979 'end of statement')
    unknown call_tmp[928488] "expr temp" "maybe param" "maybe type" "temp"
    (928491 'move' call_tmp[928488](296982 call(457772 call (partial) theData _mt[203] this[296961]) dataInd[296974]))
    (630050 'move' ret[630045](630049 'addr of' call_tmp[928488]))
    gotoReturn _end_dsiAccess[630043] _end_dsiAccess[630043]
    (567646 'end of statement' dataInd[296974])
    label _end_dsiAccess[630043]
    (630047 return ret[630045])
  }
  function DefaultRectangularArr[298194](?).dsiBoundsCheck[296986](arg _mt[296992]:_MT[201], arg this[296988]:DefaultRectangularArr[298194](?), arg i[296990]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[630056] "RVV" "temp"
    unknown call_tmp[928495] "expr temp" "maybe param" "maybe type" "temp"
    (928498 'move' call_tmp[928495](409869 call dom _mt[203] this[296988]))
    unknown call_tmp[928502] "expr temp" "maybe param" "maybe type" "temp"
    (928505 'move' call_tmp[928502](297000 call(296997 call (partial) dsiMember _mt[203] call_tmp[928495]) i[296990]))
    (630061 'move' ret[630056](630060 'deref' call_tmp[928502]))
    (630058 return ret[630056])
  }
  function DefaultRectangularArr[298194](?).adjustBlkOffStrForNewDomain[297004](arg _mt[297018]:_MT[201], arg this[297006]:DefaultRectangularArr[298194](?), arg d[297010]:unmanaged DefaultRectangularDom[468058](?), arg alias[297015]:unmanaged DefaultRectangularArr[468178](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    {
      unknown i[297021] "dead at end of block" "index var" "insert auto destroy"
      (653216 'init var' i[297021] 0)
      (567649 'end of statement')
      unknown tmp[297184] "maybe param" "temp"
      unknown call_tmp[928509] "expr temp" "maybe param" "maybe type" "temp"
      (928512 'move' call_tmp[928509](457781 call rank _mt[203] this[297006]))
      unknown call_tmp[928514] "expr temp" "maybe param" "maybe type" "temp"
      (928517 'move' call_tmp[928514](297024 call - call_tmp[928509] 1))
      (297196 'move' tmp[297184](297194 call chpl_compute_low_param_loop_bound 0 call_tmp[928514]))
      unknown tmp[297185] "maybe param" "temp"
      unknown call_tmp[928521] "expr temp" "maybe param" "maybe type" "temp"
      (928524 'move' call_tmp[928521](457843 call rank _mt[203] this[297006]))
      unknown call_tmp[928526] "expr temp" "maybe param" "maybe type" "temp"
      (928529 'move' call_tmp[928526](297201 call - call_tmp[928521] 1))
      (297206 'move' tmp[297185](297204 call chpl_compute_high_param_loop_bound 0 call_tmp[928526]))
      unknown tmp[297186] "maybe param" "temp"
      (297209 'move' tmp[297186] 1)
      ParamForLoop[297211]
      { i[297021] tmp[297184] tmp[297185] tmp[297186]
        {
          unknown s[297032] "dead at end of block" "insert auto destroy" "split inited"
          unknown type_tmp[653218] "maybe param" "maybe type" "temp"
          (653227 'move' type_tmp[653218](653224 call idxType _mt[203] this[297006]))
          (653220 'init var split decl' s[297032] type_tmp[653218])
          (297035 'end of statement')
          unknown call_tmp[928535] "expr temp" "maybe param" "maybe type" "temp"
          (928538 'move' call_tmp[928535](457821 call idxSignedType _mt[203] this[297006]))
          unknown call_tmp[928542] "expr temp" "maybe param" "maybe type" "temp"
          (928545 'move' call_tmp[928542](457826 call idxType _mt[203] this[297006]))
          unknown call_tmp[928547] "expr temp" "maybe param" "maybe type" "temp"
          (928550 'move' call_tmp[928547](297128 call == call_tmp[928535] call_tmp[928542]))
          unknown call_tmp[928552] "expr temp" "maybe param" "maybe type" "temp"
          (928555 'move' call_tmp[928552](297132 call _cond_test call_tmp[928547]))
          if call_tmp[928552]
          {
            unknown call_tmp[928559] "expr temp" "maybe param" "maybe type" "temp"
            (928562 'move' call_tmp[928559](409874 call dom _mt[203] this[297006]))
            unknown call_tmp[928566] "expr temp" "maybe param" "maybe type" "temp"
            (928569 'move' call_tmp[928566](297048 call(297045 call (partial) dsiDim _mt[203] call_tmp[928559]) i[297021]))
            unknown call_tmp[928573] "expr temp" "maybe param" "maybe type" "temp"
            (928576 'move' call_tmp[928573](297050 call stride _mt[203] call_tmp[928566]))
            unknown call_tmp[928580] "expr temp" "maybe param" "maybe type" "temp"
            (928583 'move' call_tmp[928580](297054 call(457793 call (partial) str _mt[203] this[297006]) i[297021]))
            unknown call_tmp[928585] "expr temp" "maybe param" "maybe type" "temp"
            (928588 'move' call_tmp[928585](297042 call / call_tmp[928573] call_tmp[928580]))
            unknown call_tmp[928592] "expr temp" "maybe param" "maybe type" "temp"
            (928595 'move' call_tmp[928592](297057 call idxType _mt[203] d[297010]))
            unknown call_tmp[928597] "maybe param" "maybe type" "temp"
            (928600 'move' call_tmp[928597](297040 call : call_tmp[928585] call_tmp[928592]))
            (653229 'init var split init' s[297032] call_tmp[928597] type_tmp[653218])
            (567650 'end of statement' s[297032] i[297021])
          }
          {
            unknown tmp[503331] "maybe param" "temp"
            unknown tmp[503352] "maybe param" "temp"
            unknown call_tmp[928604] "expr temp" "maybe param" "maybe type" "temp"
            (928607 'move' call_tmp[928604](409880 call dom _mt[203] this[297006]))
            unknown call_tmp[928611] "expr temp" "maybe param" "maybe type" "temp"
            (928614 'move' call_tmp[928611](297073 call(297070 call (partial) dsiDim _mt[203] call_tmp[928604]) i[297021]))
            unknown call_tmp[928618] "expr temp" "maybe param" "maybe type" "temp"
            (928621 'move' call_tmp[928618](297075 call stride _mt[203] call_tmp[928611]))
            (503363 'move' tmp[503352](297067 call < call_tmp[928618] 0))
            unknown call_tmp[928623] "expr temp" "maybe param" "maybe type" "temp"
            (928626 'move' call_tmp[928623](503365 call _cond_invalid tmp[503352]))
            if call_tmp[928623]
            {
              (503368 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[705056] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[705057] "maybe param" "temp"
            unknown call_tmp[928628] "expr temp" "maybe param" "maybe type" "temp"
            (928631 'move' call_tmp[928628](503353 call isTrue tmp[503352]))
            (705062 'move' tmp[705057](705060 call _cond_test call_tmp[928628]))
            if tmp[705057]
            {
              unknown tmp[705064] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[928635] "expr temp" "maybe param" "maybe type" "temp"
              (928638 'move' call_tmp[928635](297082 call(457800 call (partial) str _mt[203] this[297006]) i[297021]))
              unknown call_tmp[928640] "expr temp" "maybe param" "maybe type" "temp"
              (928643 'move' call_tmp[928640](297079 call < call_tmp[928635] 0))
              (705066 'move' tmp[705064](503356 call isTrue call_tmp[928640]))
              (705071 'move' tmp[705056](705068 '_paramFoldLogical' tmp[705057] tmp[705064]))
            }
            {
              (705076 'move' tmp[705056](705073 '_paramFoldLogical' tmp[705057] 0))
            }
            (503342 'move' tmp[503331] tmp[705056])
            unknown call_tmp[928645] "expr temp" "maybe param" "maybe type" "temp"
            (928648 'move' call_tmp[928645](503344 call _cond_invalid tmp[503331]))
            if call_tmp[928645]
            {
              (503347 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[705110] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[705111] "maybe param" "temp"
            unknown call_tmp[928650] "expr temp" "maybe param" "maybe type" "temp"
            (928653 'move' call_tmp[928650](503332 call isTrue tmp[503331]))
            (705116 'move' tmp[705111](705114 call _cond_test call_tmp[928650]))
            if tmp[705111]
            {
              (705121 'move' tmp[705110](705118 '_paramFoldLogical' tmp[705111] 1))
            }
            {
              unknown tmp[503373] "maybe param" "temp"
              unknown call_tmp[928657] "expr temp" "maybe param" "maybe type" "temp"
              (928660 'move' call_tmp[928657](409885 call dom _mt[203] this[297006]))
              unknown call_tmp[928664] "expr temp" "maybe param" "maybe type" "temp"
              (928667 'move' call_tmp[928664](297093 call(297090 call (partial) dsiDim _mt[203] call_tmp[928657]) i[297021]))
              unknown call_tmp[928671] "expr temp" "maybe param" "maybe type" "temp"
              (928674 'move' call_tmp[928671](297095 call stride _mt[203] call_tmp[928664]))
              (503384 'move' tmp[503373](297087 call > call_tmp[928671] 0))
              unknown call_tmp[928676] "expr temp" "maybe param" "maybe type" "temp"
              (928679 'move' call_tmp[928676](503386 call _cond_invalid tmp[503373]))
              if call_tmp[928676]
              {
                (503389 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[705083] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[705084] "maybe param" "temp"
              unknown call_tmp[928681] "expr temp" "maybe param" "maybe type" "temp"
              (928684 'move' call_tmp[928681](503374 call isTrue tmp[503373]))
              (705089 'move' tmp[705084](705087 call _cond_test call_tmp[928681]))
              if tmp[705084]
              {
                unknown tmp[705091] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[928688] "expr temp" "maybe param" "maybe type" "temp"
                (928691 'move' call_tmp[928688](297102 call(457807 call (partial) str _mt[203] this[297006]) i[297021]))
                unknown call_tmp[928693] "expr temp" "maybe param" "maybe type" "temp"
                (928696 'move' call_tmp[928693](297099 call > call_tmp[928688] 0))
                (705093 'move' tmp[705091](503377 call isTrue call_tmp[928693]))
                (705098 'move' tmp[705083](705095 '_paramFoldLogical' tmp[705084] tmp[705091]))
              }
              {
                (705103 'move' tmp[705083](705100 '_paramFoldLogical' tmp[705084] 0))
              }
              unknown tmp[705123] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              (705125 'move' tmp[705123](503336 call isTrue tmp[705083]))
              (705130 'move' tmp[705110](705127 '_paramFoldLogical' tmp[705111] tmp[705123]))
            }
            (297062 call assert tmp[705110])
            (567655 'end of statement' i[297021])
            unknown call_tmp[928700] "expr temp" "maybe param" "maybe type" "temp"
            (928703 'move' call_tmp[928700](409890 call dom _mt[203] this[297006]))
            unknown call_tmp[928707] "expr temp" "maybe param" "maybe type" "temp"
            (928710 'move' call_tmp[928707](297116 call(297113 call (partial) dsiDim _mt[203] call_tmp[928700]) i[297021]))
            unknown call_tmp[928714] "expr temp" "maybe param" "maybe type" "temp"
            (928717 'move' call_tmp[928714](297118 call stride _mt[203] call_tmp[928707]))
            unknown call_tmp[928721] "expr temp" "maybe param" "maybe type" "temp"
            (928724 'move' call_tmp[928721](297122 call(457815 call (partial) str _mt[203] this[297006]) i[297021]))
            unknown call_tmp[928726] "expr temp" "maybe param" "maybe type" "temp"
            (928729 'move' call_tmp[928726](297110 call / call_tmp[928714] call_tmp[928721]))
            unknown call_tmp[928733] "expr temp" "maybe param" "maybe type" "temp"
            (928736 'move' call_tmp[928733](297125 call idxType _mt[203] d[297010]))
            unknown call_tmp[928738] "maybe param" "maybe type" "temp"
            (928741 'move' call_tmp[928738](297108 call : call_tmp[928726] call_tmp[928733]))
            (653232 'init var split init' s[297032] call_tmp[928738] type_tmp[653218])
            (567657 'end of statement' s[297032] i[297021])
          }
          unknown call_tmp[928745] "expr temp" "maybe param" "maybe type" "temp"
          (928748 'move' call_tmp[928745](297142 call(297139 call (partial) off _mt[203] alias[297015]) i[297021]))
          unknown call_tmp[928752] "expr temp" "maybe param" "maybe type" "temp"
          (928755 'move' call_tmp[928752](297148 call(297145 call (partial) dsiDim _mt[203] d[297010]) i[297021]))
          unknown call_tmp[928759] "expr temp" "maybe param" "maybe type" "temp"
          (928762 'move' call_tmp[928759](297150 call lowBound _mt[203] call_tmp[928752]))
          (297136 call = call_tmp[928745] call_tmp[928759])
          (567660 'end of statement' i[297021])
          unknown call_tmp[928766] "expr temp" "maybe param" "maybe type" "temp"
          (928769 'move' call_tmp[928766](297159 call(297156 call (partial) blk _mt[203] alias[297015]) i[297021]))
          unknown call_tmp[928773] "expr temp" "maybe param" "maybe type" "temp"
          (928776 'move' call_tmp[928773](297164 call(457834 call (partial) blk _mt[203] this[297006]) i[297021]))
          unknown call_tmp[928778] "expr temp" "maybe param" "maybe type" "temp"
          (928781 'move' call_tmp[928778](297161 call * call_tmp[928773] s[297032]))
          (297153 call = call_tmp[928766] call_tmp[928778])
          (567662 'end of statement' i[297021] s[297032])
          unknown call_tmp[928785] "expr temp" "maybe param" "maybe type" "temp"
          (928788 'move' call_tmp[928785](297173 call(297170 call (partial) str _mt[203] alias[297015]) i[297021]))
          unknown call_tmp[928792] "expr temp" "maybe param" "maybe type" "temp"
          (928795 'move' call_tmp[928792](297179 call(297176 call (partial) dsiDim _mt[203] d[297010]) i[297021]))
          unknown call_tmp[928799] "expr temp" "maybe param" "maybe type" "temp"
          (928802 'move' call_tmp[928799](297181 call stride _mt[203] call_tmp[928792]))
          (297167 call = call_tmp[928785] call_tmp[928799])
          (567665 'end of statement' i[297021])
        }
      }
      label _unused_continueLabel[297188]
      label _breakLabel[297187]
    }
    (630063 return _void[46])
  }
  function DefaultRectangularArr[298194](?).adjustBlkOffStrForNewDomain[297222](arg _mt[297236]:_MT[201], arg this[297224]:DefaultRectangularArr[298194](?), arg d[297228]:unmanaged DefaultRectangularDom[468058](?), arg alias[297233]:unmanaged DefaultRectangularArr[468178](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    {
      unknown i[297251] "dead at end of block" "index var" "insert auto destroy"
      (653235 'init var' i[297251] 0)
      (567667 'end of statement')
      unknown tmp[297306] "maybe param" "temp"
      unknown call_tmp[928806] "expr temp" "maybe param" "maybe type" "temp"
      (928809 'move' call_tmp[928806](457850 call rank _mt[203] this[297224]))
      unknown call_tmp[928811] "expr temp" "maybe param" "maybe type" "temp"
      (928814 'move' call_tmp[928811](297254 call - call_tmp[928806] 1))
      (297318 'move' tmp[297306](297316 call chpl_compute_low_param_loop_bound 0 call_tmp[928811]))
      unknown tmp[297307] "maybe param" "temp"
      unknown call_tmp[928818] "expr temp" "maybe param" "maybe type" "temp"
      (928821 'move' call_tmp[928818](457866 call rank _mt[203] this[297224]))
      unknown call_tmp[928823] "expr temp" "maybe param" "maybe type" "temp"
      (928826 'move' call_tmp[928823](297323 call - call_tmp[928818] 1))
      (297328 'move' tmp[297307](297326 call chpl_compute_high_param_loop_bound 0 call_tmp[928823]))
      unknown tmp[297308] "maybe param" "temp"
      (297331 'move' tmp[297308] 1)
      ParamForLoop[297333]
      { i[297251] tmp[297306] tmp[297307] tmp[297308]
        {
          unknown call_tmp[928830] "expr temp" "maybe param" "maybe type" "temp"
          (928833 'move' call_tmp[928830](297267 call(297264 call (partial) off _mt[203] alias[297233]) i[297251]))
          unknown call_tmp[928837] "expr temp" "maybe param" "maybe type" "temp"
          (928840 'move' call_tmp[928837](297273 call(297270 call (partial) dsiDim _mt[203] d[297228]) i[297251]))
          unknown call_tmp[928844] "expr temp" "maybe param" "maybe type" "temp"
          (928847 'move' call_tmp[928844](297275 call lowBound _mt[203] call_tmp[928837]))
          (297261 call = call_tmp[928830] call_tmp[928844])
          (567668 'end of statement' i[297251])
          unknown call_tmp[928851] "expr temp" "maybe param" "maybe type" "temp"
          (928854 'move' call_tmp[928851](297284 call(297281 call (partial) blk _mt[203] alias[297233]) i[297251]))
          unknown call_tmp[928858] "expr temp" "maybe param" "maybe type" "temp"
          (928861 'move' call_tmp[928858](297287 call(457858 call (partial) blk _mt[203] this[297224]) i[297251]))
          (297278 call = call_tmp[928851] call_tmp[928858])
          (567670 'end of statement' i[297251])
          unknown call_tmp[928865] "expr temp" "maybe param" "maybe type" "temp"
          (928868 'move' call_tmp[928865](297295 call(297292 call (partial) str _mt[203] alias[297233]) i[297251]))
          unknown call_tmp[928872] "expr temp" "maybe param" "maybe type" "temp"
          (928875 'move' call_tmp[928872](297301 call(297298 call (partial) dsiDim _mt[203] d[297228]) i[297251]))
          unknown call_tmp[928879] "expr temp" "maybe param" "maybe type" "temp"
          (928882 'move' call_tmp[928879](297303 call stride _mt[203] call_tmp[928872]))
          (297289 call = call_tmp[928865] call_tmp[928879])
          (567672 'end of statement' i[297251])
        }
      }
      label _unused_continueLabel[297310]
      label _breakLabel[297309]
    }
    (630065 return _void[46])
  }
  where {
    unknown tmp[503394] "maybe param" "temp"
    unknown call_tmp[928886] "expr temp" "maybe param" "maybe type" "temp"
    (928889 'move' call_tmp[928886](409901 call dom _mt[203] this[297224]))
    (503405 'move' tmp[503394](297244 call(297241 call (partial) hasUnitStride _mt[203] call_tmp[928886])))
    unknown call_tmp[928893] "expr temp" "maybe param" "maybe type" "temp"
    (928896 'move' call_tmp[928893](503407 call _cond_invalid tmp[503394]))
    if call_tmp[928893]
    {
      (503410 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705137] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705138] "maybe param" "temp"
    unknown call_tmp[928898] "expr temp" "maybe param" "maybe type" "temp"
    (928901 'move' call_tmp[928898](503395 call isTrue tmp[503394]))
    (705143 'move' tmp[705138](705141 call _cond_test call_tmp[928898]))
    if tmp[705138]
    {
      unknown tmp[705145] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[928905] "expr temp" "maybe param" "maybe type" "temp"
      (928908 'move' call_tmp[928905](297249 call(297246 call (partial) hasUnitStride _mt[203] this[297224])))
      (705147 'move' tmp[705145](503398 call isTrue call_tmp[928905]))
      (705152 'move' tmp[705137](705149 '_paramFoldLogical' tmp[705138] tmp[705145]))
    }
    {
      (705157 'move' tmp[705137](705154 '_paramFoldLogical' tmp[705138] 0))
    }
    (1001658 call chpl_statementLevelSymbol tmp[705137])
  }
  function DefaultRectangularArr[298194](?).dsiReallocate[297345](arg _mt[297363]:_MT[201], arg this[297347]:DefaultRectangularArr[298194](?), arg bounds[297360] :
  unknown call_tmp[928912] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "method" "primary method" "method overrides" "ignore transfer errors" "no return value for void"
  {
    unknown actuallyResizing[297367] "dead at end of block" "insert auto destroy"
    (653237 'init var' actuallyResizing[297367] 0)
    (297370 'end of statement')
    {
      unknown _indexOfInterest[297401] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[297402] "expr temp" "temp"
      unknown call_tmp[928938] "expr temp" "maybe param" "maybe type" "temp"
      (928941 'move' call_tmp[928938](297374 call indices _mt[203] bounds[297360]))
      (297411 'move' _iterator[297402](297409 call _getIterator call_tmp[928938]))
      Defer
      {
        {
          (297426 call _freeIterator _iterator[297402])
        }
      }
      { scopeless type
        (297416 'move' _indexOfInterest[297401](297413 call iteratorIndex _iterator[297402]))
      }
      ForLoop[297403]
      {
        unknown i[297371] "index var" "insert auto destroy"
        (567675 'end of statement')
        (297421 'move' i[297371] _indexOfInterest[297401])
        (567676 'end of statement' i[297371])
        {
          unknown call_tmp[928943] "expr temp" "maybe param" "maybe type" "temp"
          (928946 'move' call_tmp[928943](297389 call bounds[297360] i[297371]))
          unknown call_tmp[928950] "expr temp" "maybe param" "maybe type" "temp"
          (928953 'move' call_tmp[928950](409914 call dom _mt[203] this[297347]))
          unknown call_tmp[928957] "expr temp" "maybe param" "maybe type" "temp"
          (928960 'move' call_tmp[928957](297395 call(297392 call (partial) dsiDim _mt[203] call_tmp[928950]) i[297371]))
          unknown call_tmp[928962] "expr temp" "maybe param" "maybe type" "temp"
          (928965 'move' call_tmp[928962](297386 call != call_tmp[928943] call_tmp[928957]))
          unknown call_tmp[928967] "expr temp" "maybe param" "maybe type" "temp"
          (928970 'move' call_tmp[928967](297397 call _cond_test call_tmp[928962]))
          if call_tmp[928967]
          {
            (297379 call = actuallyResizing[297367] 1)
            (567678 'end of statement' actuallyResizing[297367])
            break _breakLabel[297407] _breakLabel[297407]
          }
        }
        label _continueLabel[297406]
        _indexOfInterest[297401]
        _iterator[297402]
      }
      label _breakLabel[297407]
    }
    unknown call_tmp[928972] "expr temp" "maybe param" "maybe type" "temp"
    (928975 'move' call_tmp[928972](297435 call ! actuallyResizing[297367]))
    unknown call_tmp[928977] "expr temp" "maybe param" "maybe type" "temp"
    (928980 'move' call_tmp[928977](297438 call _cond_test call_tmp[928972]))
    if call_tmp[928977]
    {
      gotoReturn _end_dsiReallocate[630067] _end_dsiReallocate[630067]
    }
    unknown call_tmp[928984] "expr temp" "maybe param" "maybe type" "temp"
    (928987 'move' call_tmp[928984](457897 call _resizePolicy _mt[203] this[297347]))
    unknown call_tmp[928989] "expr temp" "maybe param" "maybe type" "temp"
    (928992 'move' call_tmp[928989](297460 call == call_tmp[928984] normalInit[67542]))
    unknown call_tmp[928994] "expr temp" "maybe param" "maybe type" "temp"
    (928997 'move' call_tmp[928994](297467 call _cond_test call_tmp[928989]))
    if call_tmp[928994]
    {
      unknown call_tmp[929001] "expr temp" "maybe param" "maybe type" "temp"
      (929004 'move' call_tmp[929001](457892 call eltType _mt[203] this[297347]))
      unknown call_tmp[929006] "expr temp" "maybe param" "maybe type" "temp"
      (929009 'move' call_tmp[929006](297453 call isDefaultInitializable call_tmp[929001]))
      unknown call_tmp[929011] "expr temp" "maybe param" "maybe type" "temp"
      (929014 'move' call_tmp[929011](297450 call ! call_tmp[929006]))
      unknown call_tmp[929016] "expr temp" "maybe param" "maybe type" "temp"
      (929019 'move' call_tmp[929016](297455 call _cond_test call_tmp[929011]))
      if call_tmp[929016]
      {
        unknown call_tmp[929021] "expr temp" "maybe param" "maybe type" "temp"
        (929024 'move' call_tmp[929021](297445 call + "Can't resize domains whose arrays' elements don't " "have default values"))
        (297444 call halt call_tmp[929021])
      }
    }
    unknown call_tmp[929026] "expr temp" "maybe param" "maybe type" "temp"
    (929029 'move' call_tmp[929026](297990 '_wide_get_locale' this[297347]))
    unknown call_tmp[929031] "expr temp" "maybe param" "maybe type" "temp"
    (929034 'move' call_tmp[929031](297991 call chpl_localeID_to_locale call_tmp[929026]))
    unknown call_tmp[929036] "expr temp" "maybe param" "maybe type" "temp"
    (929039 'move' call_tmp[929036](458066 call here[135591]))
    unknown call_tmp[929041] "expr temp" "maybe param" "maybe type" "temp"
    (929044 'move' call_tmp[929041](297987 call != call_tmp[929031] call_tmp[929036]))
    unknown call_tmp[929046] "expr temp" "maybe param" "maybe type" "temp"
    (929049 'move' call_tmp[929046](297994 call _cond_test call_tmp[929041]))
    if call_tmp[929046]
    {
      unknown call_tmp[929051] "expr temp" "maybe param" "maybe type" "temp"
      (929054 'move' call_tmp[929051](297475 call + "internal error: dsiReallocate() can only be called " "from an array's home locale"))
      (297474 call halt call_tmp[929051])
    }
    {
      unknown call_tmp[929056] "maybe param" "maybe type" "temp"
      (929059 'move' call_tmp[929056](297490 call chpl__buildDomainExpr(297488 'expand_tuple' bounds[297360]) 1))
      const reallocD[297485] "dead at end of block" "const" "insert auto destroy"
      (653239 'init var' reallocD[297485] call_tmp[929056])
      (297493 'end of statement')
      unknown call_tmp[929063] "expr temp" "maybe param" "maybe type" "temp"
      (929066 'move' call_tmp[929063](409920 call dom _mt[203] this[297347]))
      unknown call_tmp[929070] "maybe param" "maybe type" "temp"
      (929073 'move' call_tmp[929070](297497 call dsiNumIndices _mt[203] call_tmp[929063]))
      const oldSize[297495] "dead at end of block" "const" "insert auto destroy"
      (653241 'init var' oldSize[297495] call_tmp[929070])
      (297501 'end of statement')
      unknown call_tmp[929077] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (929080 'move' call_tmp[929077](297510 'typeof' oldSize[297495]))
      unknown call_tmp[929082] "maybe param" "maybe type" "temp"
      (929085 'move' call_tmp[929082](297508 call(297505 call (partial) sizeAs _mt[203] reallocD[297485]) call_tmp[929077]))
      const newSize[297503] "dead at end of block" "const" "insert auto destroy"
      (653243 'init var' newSize[297503] call_tmp[929082])
      (297512 'end of statement' reallocD[297485] oldSize[297495])
      unknown tmp[503436] "maybe param" "temp"
      unknown tmp[503457] "maybe param" "temp"
      unknown tmp[503478] "maybe param" "temp"
      unknown tmp[503499] "maybe param" "temp"
      unknown tmp[503520] "maybe param" "temp"
      unknown tmp[503541] "maybe param" "temp"
      (503552 'move' tmp[503541](297936 call ! disableArrRealloc[287682]))
      unknown call_tmp[929087] "expr temp" "maybe param" "maybe type" "temp"
      (929090 'move' call_tmp[929087](503554 call _cond_invalid tmp[503541]))
      if call_tmp[929087]
      {
        (503557 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705164] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705165] "maybe param" "temp"
      unknown call_tmp[929092] "expr temp" "maybe param" "maybe type" "temp"
      (929095 'move' call_tmp[929092](503542 call isTrue tmp[503541]))
      (705170 'move' tmp[705165](705168 call _cond_test call_tmp[929092]))
      if tmp[705165]
      {
        unknown tmp[705172] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[929099] "expr temp" "maybe param" "maybe type" "temp"
        (929102 'move' call_tmp[929099](458050 call rank _mt[203] this[297347]))
        unknown call_tmp[929104] "expr temp" "maybe param" "maybe type" "temp"
        (929107 'move' call_tmp[929104](297939 call == call_tmp[929099] 1))
        (705174 'move' tmp[705172](503545 call isTrue call_tmp[929104]))
        (705179 'move' tmp[705164](705176 '_paramFoldLogical' tmp[705165] tmp[705172]))
      }
      {
        (705184 'move' tmp[705164](705181 '_paramFoldLogical' tmp[705165] 0))
      }
      (503531 'move' tmp[503520] tmp[705164])
      unknown call_tmp[929109] "expr temp" "maybe param" "maybe type" "temp"
      (929112 'move' call_tmp[929109](503533 call _cond_invalid tmp[503520]))
      if call_tmp[929109]
      {
        (503536 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705191] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705192] "maybe param" "temp"
      unknown call_tmp[929114] "expr temp" "maybe param" "maybe type" "temp"
      (929117 'move' call_tmp[929114](503521 call isTrue tmp[503520]))
      (705197 'move' tmp[705192](705195 call _cond_test call_tmp[929114]))
      if tmp[705192]
      {
        unknown tmp[705199] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[929121] "expr temp" "maybe param" "maybe type" "temp"
        (929124 'move' call_tmp[929121](297946 call lowBound _mt[203] reallocD[297485]))
        unknown call_tmp[929128] "expr temp" "maybe param" "maybe type" "temp"
        (929131 'move' call_tmp[929128](409962 call dom _mt[203] this[297347]))
        unknown call_tmp[929135] "expr temp" "maybe param" "maybe type" "temp"
        (929138 'move' call_tmp[929135](297950 call dsiLow _mt[203] call_tmp[929128]))
        unknown call_tmp[929140] "expr temp" "maybe param" "maybe type" "temp"
        (929143 'move' call_tmp[929140](297943 call == call_tmp[929121] call_tmp[929135]))
        (705201 'move' tmp[705199](503524 call isTrue call_tmp[929140]))
        (705206 'move' tmp[705191](705203 '_paramFoldLogical' tmp[705192] tmp[705199]))
      }
      {
        (705211 'move' tmp[705191](705208 '_paramFoldLogical' tmp[705192] 0))
      }
      (503510 'move' tmp[503499] tmp[705191])
      unknown call_tmp[929145] "expr temp" "maybe param" "maybe type" "temp"
      (929148 'move' call_tmp[929145](503512 call _cond_invalid tmp[503499]))
      if call_tmp[929145]
      {
        (503515 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705218] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705219] "maybe param" "temp"
      unknown call_tmp[929150] "expr temp" "maybe param" "maybe type" "temp"
      (929153 'move' call_tmp[929150](503500 call isTrue tmp[503499]))
      (705224 'move' tmp[705219](705222 call _cond_test call_tmp[929150]))
      if tmp[705219]
      {
        unknown tmp[705226] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[929157] "expr temp" "maybe param" "maybe type" "temp"
        (929160 'move' call_tmp[929157](297956 call stride _mt[203] reallocD[297485]))
        unknown call_tmp[929164] "expr temp" "maybe param" "maybe type" "temp"
        (929167 'move' call_tmp[929164](409968 call dom _mt[203] this[297347]))
        unknown call_tmp[929171] "expr temp" "maybe param" "maybe type" "temp"
        (929174 'move' call_tmp[929171](297960 call dsiStride _mt[203] call_tmp[929164]))
        unknown call_tmp[929176] "expr temp" "maybe param" "maybe type" "temp"
        (929179 'move' call_tmp[929176](297953 call == call_tmp[929157] call_tmp[929171]))
        (705228 'move' tmp[705226](503503 call isTrue call_tmp[929176]))
        (705233 'move' tmp[705218](705230 '_paramFoldLogical' tmp[705219] tmp[705226]))
      }
      {
        (705238 'move' tmp[705218](705235 '_paramFoldLogical' tmp[705219] 0))
      }
      (503489 'move' tmp[503478] tmp[705218])
      unknown call_tmp[929181] "expr temp" "maybe param" "maybe type" "temp"
      (929184 'move' call_tmp[929181](503491 call _cond_invalid tmp[503478]))
      if call_tmp[929181]
      {
        (503494 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705245] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705246] "maybe param" "temp"
      unknown call_tmp[929186] "expr temp" "maybe param" "maybe type" "temp"
      (929189 'move' call_tmp[929186](503479 call isTrue tmp[503478]))
      (705251 'move' tmp[705246](705249 call _cond_test call_tmp[929186]))
      if tmp[705246]
      {
        unknown tmp[705253] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[929193] "expr temp" "maybe param" "maybe type" "temp"
        (929196 'move' call_tmp[929193](409973 call dom _mt[203] this[297347]))
        unknown call_tmp[929200] "expr temp" "maybe param" "maybe type" "temp"
        (929203 'move' call_tmp[929200](297966 call dsiNumIndices _mt[203] call_tmp[929193]))
        unknown call_tmp[929205] "expr temp" "maybe param" "maybe type" "temp"
        (929208 'move' call_tmp[929205](297963 call > call_tmp[929200] 0))
        (705255 'move' tmp[705253](503482 call isTrue call_tmp[929205]))
        (705260 'move' tmp[705245](705257 '_paramFoldLogical' tmp[705246] tmp[705253]))
      }
      {
        (705265 'move' tmp[705245](705262 '_paramFoldLogical' tmp[705246] 0))
      }
      (503468 'move' tmp[503457] tmp[705245])
      unknown call_tmp[929210] "expr temp" "maybe param" "maybe type" "temp"
      (929213 'move' call_tmp[929210](503470 call _cond_invalid tmp[503457]))
      if call_tmp[929210]
      {
        (503473 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705272] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705273] "maybe param" "temp"
      unknown call_tmp[929215] "expr temp" "maybe param" "maybe type" "temp"
      (929218 'move' call_tmp[929215](503458 call isTrue tmp[503457]))
      (705278 'move' tmp[705273](705276 call _cond_test call_tmp[929215]))
      if tmp[705273]
      {
        unknown tmp[705280] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[929222] "expr temp" "maybe param" "maybe type" "temp"
        (929225 'move' call_tmp[929222](297973 call size _mt[203] reallocD[297485]))
        unknown call_tmp[929227] "expr temp" "maybe param" "maybe type" "temp"
        (929230 'move' call_tmp[929227](297970 call > call_tmp[929222] 0))
        (705282 'move' tmp[705280](503461 call isTrue call_tmp[929227]))
        (705287 'move' tmp[705272](705284 '_paramFoldLogical' tmp[705273] tmp[705280]))
      }
      {
        (705292 'move' tmp[705272](705289 '_paramFoldLogical' tmp[705273] 0))
      }
      (503447 'move' tmp[503436] tmp[705272])
      unknown call_tmp[929232] "expr temp" "maybe param" "maybe type" "temp"
      (929235 'move' call_tmp[929232](503449 call _cond_invalid tmp[503436]))
      if call_tmp[929232]
      {
        (503452 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[705299] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705300] "maybe param" "temp"
      unknown call_tmp[929237] "expr temp" "maybe param" "maybe type" "temp"
      (929240 'move' call_tmp[929237](503437 call isTrue tmp[503436]))
      (705305 'move' tmp[705300](705303 call _cond_test call_tmp[929237]))
      if tmp[705300]
      {
        unknown tmp[705307] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[929244] "expr temp" "maybe param" "maybe type" "temp"
        (929247 'move' call_tmp[929244](458055 call data _mt[203] this[297347]))
        unknown call_tmp[929251] "expr temp" "maybe param" "maybe type" "temp"
        (929254 'move' call_tmp[929251](458060 call eltType _mt[203] this[297347]))
        unknown call_tmp[929256] "expr temp" "maybe param" "maybe type" "temp"
        (929259 'move' call_tmp[929256](297978 call _ddata_supports_reallocate call_tmp[929244] call_tmp[929251] oldSize[297495] newSize[297503]))
        (705309 'move' tmp[705307](503440 call isTrue call_tmp[929256]))
        (705314 'move' tmp[705299](705311 '_paramFoldLogical' tmp[705300] tmp[705307]))
      }
      {
        (705319 'move' tmp[705299](705316 '_paramFoldLogical' tmp[705300] 0))
      }
      unknown call_tmp[929261] "expr temp" "maybe param" "maybe type" "temp"
      (929264 'move' call_tmp[929261](297983 call _cond_test tmp[705299]))
      if call_tmp[929261]
      {
        unknown call_tmp[929266] "expr temp" "maybe param" "maybe type" "temp"
        (929269 'move' call_tmp[929266](297521 call _cond_test reportInPlaceRealloc[287687]))
        if call_tmp[929266]
        {
          (297515 call writeln "reallocating in-place")
        }
        unknown call_tmp[929273] "expr temp" "maybe param" "maybe type" "temp"
        (929276 'move' call_tmp[929273](297529 call(457905 call (partial) sizesPerDim _mt[203] this[297347]) 0))
        unknown call_tmp[929280] "expr temp" "maybe param" "maybe type" "temp"
        (929283 'move' call_tmp[929280](297535 call(297532 call (partial) dsiDim _mt[203] reallocD[297485]) 0))
        unknown call_tmp[929287] "expr temp" "maybe param" "maybe type" "temp"
        (929290 'move' call_tmp[929287](297540 call(297537 call (partial) sizeAs _mt[203] call_tmp[929280]) int(64)[10]))
        (297526 call = call_tmp[929273] call_tmp[929287])
        (567692 'end of statement' reallocD[297485])
        unknown call_tmp[929294] "expr temp" "maybe param" "maybe type" "temp"
        (929297 'move' call_tmp[929294](457910 call data _mt[203] this[297347]))
        unknown call_tmp[929301] "expr temp" "maybe param" "maybe type" "temp"
        (929304 'move' call_tmp[929301](457915 call data _mt[203] this[297347]))
        unknown call_tmp[929308] "expr temp" "maybe param" "maybe type" "temp"
        (929311 'move' call_tmp[929308](457920 call eltType _mt[203] this[297347]))
        unknown call_tmp[929315] "expr temp" "maybe param" "maybe type" "temp"
        (929318 'move' call_tmp[929315](457928 call _resizePolicy _mt[203] this[297347]))
        unknown call_tmp[929320] "expr temp" "maybe param" "maybe type" "temp"
        (929323 'move' call_tmp[929320](297546 call _ddata_reallocate(oldDdata = call_tmp[929301])(eltType = call_tmp[929308])(oldSize = oldSize[297495])(newSize = newSize[297503])(subloc = c_sublocid_none[135197])(policy = call_tmp[929315])))
        (297542 call = call_tmp[929294] call_tmp[929320])
        (567694 'end of statement' oldSize[297495] newSize[297503])
        (297560 call(457932 call (partial) initShiftedData _mt[203] this[297347]))
      }
      {
        unknown call_tmp[929329] "expr temp" "maybe param" "maybe type" "temp"
        (929332 'move' call_tmp[929329](457937 call eltType _mt[203] this[297347]))
        unknown call_tmp[929334] "maybe param" "maybe type" "temp"
        (929337 'move' call_tmp[929334](297565 call isDefaultInitializable call_tmp[929329]))
        unknown initElts[297563] "dead at end of block" "param"
        (653245 'init var' initElts[297563] call_tmp[929334])
        (297568 'end of statement')
        unknown call_tmp[929341] "expr temp" "maybe param" "maybe type" "temp"
        (929344 'move' call_tmp[929341](457943 call eltType _mt[203] this[297347]))
        unknown call_tmp[929348] "expr temp" "maybe param" "maybe type" "temp"
        (929351 'move' call_tmp[929348](457948 call rank _mt[203] this[297347]))
        unknown call_tmp[929355] "expr temp" "maybe param" "maybe type" "temp"
        (929358 'move' call_tmp[929355](457953 call idxType _mt[203] this[297347]))
        unknown call_tmp[929362] "expr temp" "maybe param" "maybe type" "temp"
        (929365 'move' call_tmp[929362](297583 call _value _mt[203] reallocD[297485]))
        unknown call_tmp[929369] "expr temp" "maybe param" "maybe type" "temp"
        (929372 'move' call_tmp[929369](297586 call strides _mt[203] call_tmp[929362]))
        unknown call_tmp[929376] "expr temp" "maybe param" "maybe type" "temp"
        (929379 'move' call_tmp[929376](297591 call _value _mt[203] reallocD[297485]))
        unknown call_tmp[929381] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (929384 'move' call_tmp[929381](1000486 'new' DefaultRectangularArr[433493](?)(eltType = call_tmp[929341])(rank = call_tmp[929348])(idxType = call_tmp[929355])(strides = call_tmp[929369])(dom = call_tmp[929376])(initElts = initElts[297563])(_chpl_manager = unmanaged[183](?))))
        unknown copy[297570] "dead at end of block" "insert auto destroy"
        (653247 'init var' copy[297570] call_tmp[929381])
        (297598 'end of statement')
        unknown call_tmp[929386] "expr temp" "maybe param" "maybe type" "temp"
        (929389 'move' call_tmp[929386](297675 call ! initElts[297563]))
        unknown call_tmp[929391] "expr temp" "maybe param" "maybe type" "temp"
        (929394 'move' call_tmp[929391](297678 call _cond_test call_tmp[929386]))
        if call_tmp[929391]
        {
          {
            unknown tmp[297651] "expr temp" "maybe param" "maybe type" "temp"
            (297653 'move' tmp[297651](457959 call _resizePolicy _mt[203] this[297347]))
            unknown call_tmp[929398] "expr temp" "maybe param" "maybe type" "temp"
            (929401 'move' call_tmp[929398](297655 call == tmp[297651] normalInit[67542]))
            unknown call_tmp[929403] "expr temp" "maybe param" "maybe type" "temp"
            (929406 'move' call_tmp[929403](297658 call _cond_test call_tmp[929398]))
            if call_tmp[929403]
            {
              unknown call_tmp[929408] "expr temp" "maybe param" "maybe type" "temp"
              (929411 'move' call_tmp[929408](297610 call + "internal error: bad resize policy for array of " "non-default-initializable elements"))
              (297609 call halt call_tmp[929408])
            }
            {
              unknown call_tmp[929413] "expr temp" "maybe param" "maybe type" "temp"
              (929416 'move' call_tmp[929413](297661 call == tmp[297651] skipInit[67544]))
              unknown call_tmp[929418] "expr temp" "maybe param" "maybe type" "temp"
              (929421 'move' call_tmp[929418](297664 call _cond_test call_tmp[929413]))
              if call_tmp[929418]
              {
              }
              {
                unknown call_tmp[929423] "expr temp" "maybe param" "maybe type" "temp"
                (929426 'move' call_tmp[929423](297668 call == tmp[297651] skipInitButClearMem[67546]))
                unknown call_tmp[929428] "expr temp" "maybe param" "maybe type" "temp"
                (929431 'move' call_tmp[929428](297671 call _cond_test call_tmp[929423]))
                if call_tmp[929428]
                {
                  unknown call_tmp[929435] "expr temp" "maybe param" "maybe type" "temp"
                  (929438 'move' call_tmp[929435](297638 call data _mt[203] copy[297570]))
                  unknown call_tmp[929442] "expr temp" "maybe param" "maybe type" "temp"
                  (929445 'move' call_tmp[929442](457964 call eltType _mt[203] this[297347]))
                  unknown call_tmp[929449] "expr temp" "maybe param" "maybe type" "temp"
                  (929452 'move' call_tmp[929449](297644 call size _mt[203] reallocD[297485]))
                  (297636 call _ddata_fill call_tmp[929435] call_tmp[929442] 0 call_tmp[929449])
                  (567700 'end of statement' copy[297570] reallocD[297485])
                }
              }
            }
          }
        }
        unknown call_tmp[929456] "expr temp" "maybe param" "maybe type" "temp"
        (929459 'move' call_tmp[929456](409934 call dom _mt[203] this[297347]))
        unknown call_tmp[929463] "expr temp" "maybe param" "maybe type" "temp"
        (929466 'move' call_tmp[929463](297687 call ranges _mt[203] call_tmp[929456]))
        unknown call_tmp[929468] "maybe param" "maybe type" "temp"
        (929471 'move' call_tmp[929468](297685 call reallocD[297485](297690 'expand_tuple' call_tmp[929463])))
        unknown keep[297683] "dead at end of block" "insert auto destroy"
        (653249 'init var' keep[297683] call_tmp[929468])
        (297692 'end of statement')
        Forall[297719] {
          induction variables:
            
            unknown i[297693] "index var" "insert auto destroy"
          iterated expressions:
            keep[297683]
          shadow variables:
          other variables
            forall body
          {
            unknown dst[297698] "dead at end of block" "ref var"
            (653254 'init ref decl' dst[297698])
            unknown call_tmp[929475] "expr temp" "maybe param" "maybe type" "temp"
            (929478 'move' call_tmp[929475](297703 call(297700 call (partial) dsiAccess _mt[203] copy[297570]) i[297693]))
            (653252 'move' dst[297698](653251 'addr of' call_tmp[929475]))
            (297706 'end of statement')
            const src[297708] "dead at end of block" "const" "ref var"
            (653259 'init ref decl' src[297708])
            unknown call_tmp[929482] "expr temp" "maybe param" "maybe type" "temp"
            (929485 'move' call_tmp[929482](297710 call(457972 call (partial) dsiAccess _mt[203] this[297347]) i[297693]))
            (653257 'move' src[297708](653256 'addr of' call_tmp[929482]))
            (297713 'end of statement' copy[297570] i[297693])
            (297714 '=' dst[297698] src[297708])
            (567705 'end of statement' dst[297698] src[297708])
          }
        }
        unknown call_tmp[929489] "expr temp" "maybe param" "maybe type" "temp"
        (929492 'move' call_tmp[929489](457980 call eltType _mt[203] this[297347]))
        unknown call_tmp[929494] "maybe param" "maybe type" "temp"
        (929497 'move' call_tmp[929494](297724 'needs auto destroy' call_tmp[929489]))
        unknown needsDestroy[297723] "dead at end of block" "param"
        (653261 'init var' needsDestroy[297723] call_tmp[929494])
        (297727 'end of statement' reallocD[297485])
        unknown call_tmp[929499] "expr temp" "maybe param" "maybe type" "temp"
        (929502 'move' call_tmp[929499](297839 call _cond_test needsDestroy[297723]))
        if call_tmp[929499]
        {
          unknown call_tmp[929506] "expr temp" "maybe param" "maybe type" "temp"
          (929509 'move' call_tmp[929506](297827 call size _mt[203] reallocD[297485]))
          unknown call_tmp[929513] "expr temp" "maybe param" "maybe type" "temp"
          (929516 'move' call_tmp[929513](409948 call dom _mt[203] this[297347]))
          unknown call_tmp[929520] "expr temp" "maybe param" "maybe type" "temp"
          (929523 'move' call_tmp[929520](297831 call dsiNumIndices _mt[203] call_tmp[929513]))
          unknown call_tmp[929525] "expr temp" "maybe param" "maybe type" "temp"
          (929528 'move' call_tmp[929525](297824 call < call_tmp[929506] call_tmp[929520]))
          unknown call_tmp[929530] "expr temp" "maybe param" "maybe type" "temp"
          (929533 'move' call_tmp[929530](297834 call _cond_test call_tmp[929525]))
          if call_tmp[929530]
          {
            unknown call_tmp[929537] "expr temp" "maybe param" "maybe type" "temp"
            (929540 'move' call_tmp[929537](458007 call eltType _mt[203] this[297347]))
            unknown call_tmp[929544] "expr temp" "maybe param" "maybe type" "temp"
            (929547 'move' call_tmp[929544](409942 call dom _mt[203] this[297347]))
            unknown call_tmp[929551] "expr temp" "maybe param" "maybe type" "temp"
            (929554 'move' call_tmp[929551](297817 call dsiNumIndices _mt[203] call_tmp[929544]))
            unknown call_tmp[929556] "expr temp" "maybe param" "maybe type" "temp"
            (929559 'move' call_tmp[929556](297814 call _deinitElementsIsParallel call_tmp[929537] call_tmp[929551]))
            unknown call_tmp[929561] "expr temp" "maybe param" "maybe type" "temp"
            (929564 'move' call_tmp[929561](297820 call _cond_test call_tmp[929556]))
            if call_tmp[929561]
            {
              unknown call_tmp[470456] "expr temp" "maybe param" "maybe type" "temp"
              (470459 'move' call_tmp[470456](457985 call dom _mt[203] this[297347]))
              Forall[297755] {
                induction variables:
                  
                  unknown i[297731] "index var" "insert auto destroy"
                iterated expressions:
                  call_tmp[470456]
                shadow variables:
                other variables
                  forall body
                {
                  unknown call_tmp[929570] "expr temp" "maybe param" "maybe type" "temp"
                  (929573 'move' call_tmp[929570](297747 call(297744 call (partial) contains _mt[203] keep[297683]) i[297731]))
                  unknown call_tmp[929575] "expr temp" "maybe param" "maybe type" "temp"
                  (929578 'move' call_tmp[929575](297741 call ! call_tmp[929570]))
                  unknown call_tmp[929580] "expr temp" "maybe param" "maybe type" "temp"
                  (929583 'move' call_tmp[929580](297749 call _cond_test call_tmp[929575]))
                  if call_tmp[929580]
                  {
                    unknown call_tmp[929587] "expr temp" "maybe param" "maybe type" "temp"
                    (929590 'move' call_tmp[929587](297739 call(457989 call (partial) dsiAccess _mt[203] this[297347]) i[297731]))
                    (297737 call chpl__autoDestroy call_tmp[929587])
                    (567708 'end of statement' i[297731])
                  }
                }
              }
            }
            {
              {
                unknown _indexOfInterest[297781] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[297782] "expr temp" "temp"
                unknown call_tmp[929594] "expr temp" "maybe param" "maybe type" "temp"
                (929597 'move' call_tmp[929594](457996 call dom _mt[203] this[297347]))
                (297791 'move' _iterator[297782](297789 call _getIterator call_tmp[929594]))
                Defer
                {
                  {
                    (297806 call _freeIterator _iterator[297782])
                  }
                }
                { scopeless type
                  (297796 'move' _indexOfInterest[297781](297793 call iteratorIndex _iterator[297782]))
                }
                ForLoop[297783]
                {
                  unknown i[297759] "index var" "insert auto destroy"
                  (567711 'end of statement')
                  (297801 'move' i[297759] _indexOfInterest[297781])
                  (567712 'end of statement' i[297759])
                  {
                    unknown call_tmp[929601] "expr temp" "maybe param" "maybe type" "temp"
                    (929604 'move' call_tmp[929601](297775 call(297772 call (partial) contains _mt[203] keep[297683]) i[297759]))
                    unknown call_tmp[929606] "expr temp" "maybe param" "maybe type" "temp"
                    (929609 'move' call_tmp[929606](297769 call ! call_tmp[929601]))
                    unknown call_tmp[929611] "expr temp" "maybe param" "maybe type" "temp"
                    (929614 'move' call_tmp[929611](297777 call _cond_test call_tmp[929606]))
                    if call_tmp[929611]
                    {
                      unknown call_tmp[929618] "expr temp" "maybe param" "maybe type" "temp"
                      (929621 'move' call_tmp[929618](297767 call(458000 call (partial) dsiAccess _mt[203] this[297347]) i[297759]))
                      (297765 call chpl__autoDestroy call_tmp[929618])
                      (567714 'end of statement' i[297759])
                    }
                  }
                  label _continueLabel[297786]
                  _indexOfInterest[297781]
                  _iterator[297782]
                }
                label _breakLabel[297787]
              }
            }
          }
        }
        unknown call_tmp[929625] "expr temp" "maybe param" "maybe type" "temp"
        (929628 'move' call_tmp[929625](458013 call off _mt[203] this[297347]))
        unknown call_tmp[929632] "expr temp" "maybe param" "maybe type" "temp"
        (929635 'move' call_tmp[929632](297847 call off _mt[203] copy[297570]))
        (297843 call = call_tmp[929625] call_tmp[929632])
        (567716 'end of statement' copy[297570])
        unknown call_tmp[929639] "expr temp" "maybe param" "maybe type" "temp"
        (929642 'move' call_tmp[929639](458018 call blk _mt[203] this[297347]))
        unknown call_tmp[929646] "expr temp" "maybe param" "maybe type" "temp"
        (929649 'move' call_tmp[929646](297854 call blk _mt[203] copy[297570]))
        (297850 call = call_tmp[929639] call_tmp[929646])
        (567718 'end of statement' copy[297570])
        unknown call_tmp[929653] "expr temp" "maybe param" "maybe type" "temp"
        (929656 'move' call_tmp[929653](458023 call str _mt[203] this[297347]))
        unknown call_tmp[929660] "expr temp" "maybe param" "maybe type" "temp"
        (929663 'move' call_tmp[929660](297861 call str _mt[203] copy[297570]))
        (297857 call = call_tmp[929653] call_tmp[929660])
        (567720 'end of statement' copy[297570])
        unknown call_tmp[929667] "expr temp" "maybe param" "maybe type" "temp"
        (929670 'move' call_tmp[929667](458028 call factoredOffs _mt[203] this[297347]))
        unknown call_tmp[929674] "expr temp" "maybe param" "maybe type" "temp"
        (929677 'move' call_tmp[929674](297868 call factoredOffs _mt[203] copy[297570]))
        (297864 call = call_tmp[929667] call_tmp[929674])
        (567722 'end of statement' copy[297570])
        (297872 call(458032 call (partial) dsiDestroyArr _mt[203] this[297347])(deinitElts = 0))
        (567724 'end of statement')
        unknown call_tmp[929683] "expr temp" "maybe param" "maybe type" "temp"
        (929686 'move' call_tmp[929683](458037 call data _mt[203] this[297347]))
        unknown call_tmp[929690] "expr temp" "maybe param" "maybe type" "temp"
        (929693 'move' call_tmp[929690](297879 call data _mt[203] copy[297570]))
        (297875 call = call_tmp[929683] call_tmp[929690])
        (567725 'end of statement' copy[297570])
        unknown tmp[503415] "maybe param" "temp"
        (503426 'move' tmp[503415] earlyShiftData[287723])
        unknown call_tmp[929695] "expr temp" "maybe param" "maybe type" "temp"
        (929698 'move' call_tmp[929695](503428 call _cond_invalid tmp[503415]))
        if call_tmp[929695]
        {
          (503431 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[705326] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[705327] "maybe param" "temp"
        unknown call_tmp[929700] "expr temp" "maybe param" "maybe type" "temp"
        (929703 'move' call_tmp[929700](503416 call isTrue tmp[503415]))
        (705332 'move' tmp[705327](705330 call _cond_test call_tmp[929700]))
        if tmp[705327]
        {
          unknown tmp[705334] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[929707] "expr temp" "maybe param" "maybe type" "temp"
          (929710 'move' call_tmp[929707](297908 call _value _mt[203] reallocD[297485]))
          unknown call_tmp[929714] "expr temp" "maybe param" "maybe type" "temp"
          (929717 'move' call_tmp[929714](297914 call(297911 call (partial) hasUnitStride _mt[203] call_tmp[929707])))
          (705336 'move' tmp[705334](503419 call isTrue call_tmp[929714]))
          (705341 'move' tmp[705326](705338 '_paramFoldLogical' tmp[705327] tmp[705334]))
        }
        {
          (705346 'move' tmp[705326](705343 '_paramFoldLogical' tmp[705327] 0))
        }
        unknown call_tmp[929719] "expr temp" "maybe param" "maybe type" "temp"
        (929722 'move' call_tmp[929719](297915 call _cond_test tmp[705326]))
        if call_tmp[929719]
        {
          unknown call_tmp[929726] "expr temp" "maybe param" "maybe type" "temp"
          (929729 'move' call_tmp[929726](297897 call(297894 call (partial) sizeAs _mt[203] reallocD[297485]) uint(64)[86]))
          unknown call_tmp[929731] "expr temp" "maybe param" "maybe type" "temp"
          (929734 'move' call_tmp[929731](297891 call > call_tmp[929726] 0))
          unknown call_tmp[929736] "expr temp" "maybe param" "maybe type" "temp"
          (929739 'move' call_tmp[929736](297900 call _cond_test call_tmp[929731]))
          if call_tmp[929736]
          {
            unknown call_tmp[929743] "expr temp" "maybe param" "maybe type" "temp"
            (929746 'move' call_tmp[929743](458042 call shiftedData _mt[203] this[297347]))
            unknown call_tmp[929750] "expr temp" "maybe param" "maybe type" "temp"
            (929753 'move' call_tmp[929750](297888 call shiftedData _mt[203] copy[297570]))
            (297884 call = call_tmp[929743] call_tmp[929750])
            (567728 'end of statement' copy[297570])
          }
        }
        (297921 call chpl__delete copy[297570])
        (567730 'end of statement' copy[297570])
      }
    }
    label _end_dsiReallocate[630067]
    (630069 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiPostReallocate[298000](arg _mt[298004]:_MT[201], arg this[298002]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    (630073 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiLocalSlice[298009](arg _mt[298015]:_MT[201], arg this[298011]:DefaultRectangularArr[298194](?), arg ranges[298013]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (298019 call halt "all dsiLocalSlice calls on DefaultRectangulars should be handled in ChapelArray.chpl")
    (630075 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiGetRAD[298023](arg _mt[298027]:_MT[201], arg this[298025]:DefaultRectangularArr[298194](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[630079] "RVV" "temp"
    unknown rad[298031] "dead at end of block" "insert auto destroy"
    unknown call_tmp[929757] "expr temp" "maybe param" "maybe type" "temp"
    (929760 'move' call_tmp[929757](458071 call eltType _mt[203] this[298025]))
    unknown call_tmp[929764] "expr temp" "maybe param" "maybe type" "temp"
    (929767 'move' call_tmp[929764](458076 call rank _mt[203] this[298025]))
    unknown call_tmp[929771] "expr temp" "maybe param" "maybe type" "temp"
    (929774 'move' call_tmp[929771](458081 call idxType _mt[203] this[298025]))
    unknown call_tmp[929778] "expr temp" "maybe param" "maybe type" "temp"
    (929781 'move' call_tmp[929778](458086 call strides _mt[203] this[298025]))
    unknown call_tmp[929783] "expr temp" "maybe param" "maybe type" "temp"
    (929786 'move' call_tmp[929783](298033 call _remoteAccessData[293000](?) call_tmp[929757] call_tmp[929764] call_tmp[929771] call_tmp[929778]))
    (653263 'default init var' rad[298031] call_tmp[929783])
    (298039 'end of statement')
    unknown call_tmp[929790] "expr temp" "maybe param" "maybe type" "temp"
    (929793 'move' call_tmp[929790](298043 call off _mt[203] rad[298031]))
    unknown call_tmp[929797] "expr temp" "maybe param" "maybe type" "temp"
    (929800 'move' call_tmp[929797](458091 call off _mt[203] this[298025]))
    (298040 call = call_tmp[929790] call_tmp[929797])
    (567733 'end of statement' rad[298031])
    unknown call_tmp[929804] "expr temp" "maybe param" "maybe type" "temp"
    (929807 'move' call_tmp[929804](298050 call blk _mt[203] rad[298031]))
    unknown call_tmp[929811] "expr temp" "maybe param" "maybe type" "temp"
    (929814 'move' call_tmp[929811](458096 call blk _mt[203] this[298025]))
    (298047 call = call_tmp[929804] call_tmp[929811])
    (567735 'end of statement' rad[298031])
    unknown call_tmp[929818] "expr temp" "maybe param" "maybe type" "temp"
    (929821 'move' call_tmp[929818](298057 call str _mt[203] rad[298031]))
    unknown call_tmp[929825] "expr temp" "maybe param" "maybe type" "temp"
    (929828 'move' call_tmp[929825](458101 call str _mt[203] this[298025]))
    (298054 call = call_tmp[929818] call_tmp[929825])
    (567737 'end of statement' rad[298031])
    unknown call_tmp[929832] "expr temp" "maybe param" "maybe type" "temp"
    (929835 'move' call_tmp[929832](298064 call origin _mt[203] rad[298031]))
    (298061 call = call_tmp[929832] 0)
    (567739 'end of statement' rad[298031])
    unknown call_tmp[929839] "expr temp" "maybe param" "maybe type" "temp"
    (929842 'move' call_tmp[929839](298071 call factoredOffs _mt[203] rad[298031]))
    unknown call_tmp[929846] "expr temp" "maybe param" "maybe type" "temp"
    (929849 'move' call_tmp[929846](458106 call factoredOffs _mt[203] this[298025]))
    (298068 call = call_tmp[929839] call_tmp[929846])
    (567741 'end of statement' rad[298031])
    unknown call_tmp[929853] "expr temp" "maybe param" "maybe type" "temp"
    (929856 'move' call_tmp[929853](298078 call data _mt[203] rad[298031]))
    unknown call_tmp[929860] "expr temp" "maybe param" "maybe type" "temp"
    (929863 'move' call_tmp[929860](458111 call data _mt[203] this[298025]))
    (298075 call = call_tmp[929853] call_tmp[929860])
    (567743 'end of statement' rad[298031])
    unknown call_tmp[929867] "expr temp" "maybe param" "maybe type" "temp"
    (929870 'move' call_tmp[929867](298085 call shiftedData _mt[203] rad[298031]))
    unknown call_tmp[929874] "expr temp" "maybe param" "maybe type" "temp"
    (929877 'move' call_tmp[929874](458116 call shiftedData _mt[203] this[298025]))
    (298082 call = call_tmp[929867] call_tmp[929874])
    (567745 'end of statement' rad[298031])
    (630084 'move' ret[630079](630083 'deref' rad[298031]))
    gotoReturn _end_dsiGetRAD[630077] _end_dsiGetRAD[630077]
    (567747 'end of statement' rad[298031])
    label _end_dsiGetRAD[630077]
    (630081 return ret[630079])
  }
  function DefaultRectangularArr[298194](?).dsiTargetLocales[298093](arg _mt[298097]:_MT[201], arg this[298095]:DefaultRectangularArr[298194](?)) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[630090] "RVV" "temp"
    unknown call_tmp[929879] "expr temp" "maybe param" "maybe type" "temp"
    (929882 'move' call_tmp[929879](298104 '_wide_get_locale' this[298095]))
    unknown call_tmp[929884] "expr temp" "maybe param" "maybe type" "temp"
    (929887 'move' call_tmp[929884](298105 call chpl_localeID_to_locale call_tmp[929879]))
    unknown call_tmp[929889] "expr temp" "maybe param" "maybe type" "temp"
    (929892 'move' call_tmp[929889](298102 call chpl_getSingletonLocaleArray call_tmp[929884]))
    (630095 'move' ret[630090](630094 'addr of' call_tmp[929889]))
    (630092 return ret[630090])
  }
  function DefaultRectangularArr[298194](?).dsiHasSingleLocalSubdomain[298109](arg _mt[298113]:_MT[201], arg this[298111]:DefaultRectangularArr[298194](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[630099] "RVV" "param" "temp"
    (630104 'move' ret[630099](630103 'deref' 1))
    (630101 return ret[630099])
  }
  function DefaultRectangularArr[298194](?).dsiLocalSubdomain[298120](arg _mt[298128]:_MT[201], arg this[298122]:DefaultRectangularArr[298194](?), arg loc[298125]:locale[234]) : _unknown[42] "method" "primary method"
  {
    unknown ret[630108] "RVV" "temp"
    unknown call_tmp[929896] "expr temp" "maybe param" "maybe type" "temp"
    (929899 'move' call_tmp[929896](298152 call data _mt[203] this[298122]))
    unknown call_tmp[929901] "expr temp" "maybe param" "maybe type" "temp"
    (929904 'move' call_tmp[929901](298155 '_wide_get_locale' call_tmp[929896]))
    unknown call_tmp[929906] "expr temp" "maybe param" "maybe type" "temp"
    (929909 'move' call_tmp[929906](298156 call chpl_localeID_to_locale call_tmp[929901]))
    unknown call_tmp[929911] "expr temp" "maybe param" "maybe type" "temp"
    (929914 'move' call_tmp[929911](298149 call == call_tmp[929906] loc[298125]))
    unknown call_tmp[929916] "expr temp" "maybe param" "maybe type" "temp"
    (929919 'move' call_tmp[929916](298159 call _cond_test call_tmp[929911]))
    if call_tmp[929916]
    {
      unknown call_tmp[929923] "expr temp" "maybe param" "maybe type" "temp"
      (929926 'move' call_tmp[929923](458123 call dom _mt[203] this[298122]))
      unknown call_tmp[929928] "expr temp" "maybe param" "maybe type" "temp"
      (929931 'move' call_tmp[929928](298134 call _getDomain call_tmp[929923]))
      (630113 'move' ret[630108](630112 'deref' call_tmp[929928]))
      gotoReturn _end_dsiLocalSubdomain[630106] _end_dsiLocalSubdomain[630106]
    }
    {
      unknown a[298138] "dead at end of block" "insert auto destroy"
      unknown call_tmp[929935] "expr temp" "maybe param" "maybe type" "temp"
      (929938 'move' call_tmp[929935](458129 call rank _mt[203] this[298122]))
      unknown call_tmp[929942] "expr temp" "maybe param" "maybe type" "temp"
      (929945 'move' call_tmp[929942](458134 call idxType _mt[203] this[298122]))
      unknown call_tmp[929949] "expr temp" "maybe param" "maybe type" "temp"
      (929952 'move' call_tmp[929949](458139 call strides _mt[203] this[298122]))
      unknown call_tmp[929954] "expr temp" "maybe param" "maybe type" "temp"
      (929957 'move' call_tmp[929954](298140 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[929935] call_tmp[929942] call_tmp[929949]))
      (653265 'default init var' a[298138] call_tmp[929954])
      (298146 'end of statement')
      (630118 'move' ret[630108](630117 'deref' a[298138]))
      gotoReturn _end_dsiLocalSubdomain[630106] _end_dsiLocalSubdomain[630106]
      (567752 'end of statement' a[298138])
    }
    label _end_dsiLocalSubdomain[630106]
    (630110 return ret[630108])
  }
  function DefaultRectangularArr[298194](?).dsiLocalSubdomains[298165](arg _mt[298173]:_MT[201], arg this[298167]:DefaultRectangularArr[298194](?), arg loc[298170]:locale[234]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[630124] "RVV" "temp"
    unknown yret[630128] "YVV" "temp"
    unknown call_tmp[929961] "expr temp" "maybe param" "maybe type" "temp"
    (929964 'move' call_tmp[929961](298178 call(458145 call (partial) dsiLocalSubdomain _mt[203] this[298167]) loc[298170]))
    (630131 'move' yret[630128](630130 'deref' call_tmp[929961]))
    (298176 yield yret[630128])
    (630126 return ret[630124])
  }
  function DefaultRectangularArr[298194](?).dsiIteratorYieldsLocalElements[298182](arg _mt[298186]:_MT[201], arg this[298184]:DefaultRectangularArr[298194](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[630136] "RVV" "param" "temp"
    (630141 'move' ret[630136](630140 'deref' 1))
    (630138 return ret[630136])
  }
  function DefaultRectangularArr[298194](?).super[1292206](arg _mt[1292208]:_MT[201], arg this[1292210]:DefaultRectangularArr[298194](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292220] "RVV" "temp"
    unknown call_tmp[1292227] "expr temp" "maybe param" "maybe type" "temp"
    (1292230 'move' call_tmp[1292227](1292214 '.v' this[1292210] c"super"))
    (1292225 'move' ret[1292220](1292224 'deref' call_tmp[1292227]))
    (1292222 return ret[1292220])
  }
  function DefaultRectangularArr[467915](?).idxSignedType[1292232](arg _mt[1292234]:_MT[201], arg this[1292236]:DefaultRectangularArr[467915](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292273] "RVV" "temp" "type variable"
    unknown borrowOfThis[1292238]
    (1292265 'end of statement')
    (1292244 'move' borrowOfThis[1292238](1292240 call : this[1292236] _borrowedNonNilable[177](?)))
    (1292266 'end of statement' borrowOfThis[1292238])
    unknown call_tmp[1292287] "expr temp" "maybe param" "maybe type" "temp"
    (1292290 'move' call_tmp[1292287](1292255 'is bound' borrowOfThis[1292238] c"idxSignedType"))
    if call_tmp[1292287]
    {
      unknown call_tmp[1292292] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1292295 'move' call_tmp[1292292](1292248 '.v' borrowOfThis[1292238] c"idxSignedType"))
      unknown call_tmp[1292297] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1292300 'move' call_tmp[1292297](1292251 call chpl_checkLegalTypeFieldAccessor this[1292236] call_tmp[1292292] "idxSignedType"))
      (1292278 'move' ret[1292273](1292277 'deref' call_tmp[1292297]))
      gotoReturn _end_idxSignedType[1292271] _end_idxSignedType[1292271]
      (1292268 'end of statement' borrowOfThis[1292238])
    }
    {
      (1292283 'move' ret[1292273](1292282 'deref' _uninstantiated[225]))
      gotoReturn _end_idxSignedType[1292271] _end_idxSignedType[1292271]
    }
    label _end_idxSignedType[1292271]
    (1292275 return ret[1292273])
  }
  function DefaultRectangularArr[467915](?).idxSignedType[1292302](arg _mt[1292304]:_MT[201], arg this[1292306]:DefaultRectangularArr[467915](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292341] "RVV" "temp" "type variable"
    unknown borrowOfThis[1292308] "type variable"
    (1292333 'end of statement')
    (1292314 'move' borrowOfThis[1292308](1292310 call : this[1292306] _borrowedNonNilable[177](?)))
    (1292334 'end of statement' borrowOfThis[1292308])
    unknown call_tmp[1292355] "expr temp" "maybe param" "maybe type" "temp"
    (1292358 'move' call_tmp[1292355](1292323 'is bound' borrowOfThis[1292308] c"idxSignedType"))
    if call_tmp[1292355]
    {
      unknown call_tmp[1292360] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1292363 'move' call_tmp[1292360](1292318 '.v' borrowOfThis[1292308] c"idxSignedType"))
      unknown call_tmp[1292365] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1292368 'move' call_tmp[1292365](1292319 call chpl_checkLegalTypeFieldAccessor this[1292306] call_tmp[1292360] "idxSignedType"))
      (1292346 'move' ret[1292341](1292345 'deref' call_tmp[1292365]))
      gotoReturn _end_idxSignedType[1292339] _end_idxSignedType[1292339]
      (1292336 'end of statement' borrowOfThis[1292308])
    }
    {
      (1292351 'move' ret[1292341](1292350 'deref' _uninstantiated[225]))
      gotoReturn _end_idxSignedType[1292339] _end_idxSignedType[1292339]
    }
    label _end_idxSignedType[1292339]
    (1292343 return ret[1292341])
  }
  function DefaultRectangularArr[298194](?).dom[1292370](arg _mt[1292372]:_MT[201], arg this[1292374]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292384] "RVV" "temp"
    unknown call_tmp[1292391] "expr temp" "maybe param" "maybe type" "temp"
    (1292394 'move' call_tmp[1292391](1292378 '.' this[1292374] c"dom"))
    (1292389 'move' ret[1292384](1292388 'addr of' call_tmp[1292391]))
    (1292386 return ret[1292384])
  }
  function DefaultRectangularArr[298194](?).off[1292396](arg _mt[1292398]:_MT[201], arg this[1292400]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292410] "RVV" "temp"
    unknown call_tmp[1292417] "expr temp" "maybe param" "maybe type" "temp"
    (1292420 'move' call_tmp[1292417](1292404 '.' this[1292400] c"off"))
    (1292415 'move' ret[1292410](1292414 'addr of' call_tmp[1292417]))
    (1292412 return ret[1292410])
  }
  function DefaultRectangularArr[298194](?).blk[1292422](arg _mt[1292424]:_MT[201], arg this[1292426]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292436] "RVV" "temp"
    unknown call_tmp[1292443] "expr temp" "maybe param" "maybe type" "temp"
    (1292446 'move' call_tmp[1292443](1292430 '.' this[1292426] c"blk"))
    (1292441 'move' ret[1292436](1292440 'addr of' call_tmp[1292443]))
    (1292438 return ret[1292436])
  }
  function DefaultRectangularArr[298194](?).sizesPerDim[1292448](arg _mt[1292450]:_MT[201], arg this[1292452]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292462] "RVV" "temp"
    unknown call_tmp[1292469] "expr temp" "maybe param" "maybe type" "temp"
    (1292472 'move' call_tmp[1292469](1292456 '.' this[1292452] c"sizesPerDim"))
    (1292467 'move' ret[1292462](1292466 'addr of' call_tmp[1292469]))
    (1292464 return ret[1292462])
  }
  function DefaultRectangularArr[298194](?).str[1292474](arg _mt[1292476]:_MT[201], arg this[1292478]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292488] "RVV" "temp"
    unknown call_tmp[1292495] "expr temp" "maybe param" "maybe type" "temp"
    (1292498 'move' call_tmp[1292495](1292482 '.' this[1292478] c"str"))
    (1292493 'move' ret[1292488](1292492 'addr of' call_tmp[1292495]))
    (1292490 return ret[1292488])
  }
  function DefaultRectangularArr[298194](?).factoredOffs[1292500](arg _mt[1292502]:_MT[201], arg this[1292504]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292514] "RVV" "temp"
    unknown call_tmp[1292521] "expr temp" "maybe param" "maybe type" "temp"
    (1292524 'move' call_tmp[1292521](1292508 '.' this[1292504] c"factoredOffs"))
    (1292519 'move' ret[1292514](1292518 'addr of' call_tmp[1292521]))
    (1292516 return ret[1292514])
  }
  function DefaultRectangularArr[298194](?).data[1292526](arg _mt[1292528]:_MT[201], arg this[1292530]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292540] "RVV" "temp"
    unknown call_tmp[1292547] "expr temp" "maybe param" "maybe type" "temp"
    (1292550 'move' call_tmp[1292547](1292534 '.' this[1292530] c"data"))
    (1292545 'move' ret[1292540](1292544 'addr of' call_tmp[1292547]))
    (1292542 return ret[1292540])
  }
  function DefaultRectangularArr[298194](?).shiftedData[1292552](arg _mt[1292554]:_MT[201], arg this[1292556]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292566] "RVV" "temp"
    unknown call_tmp[1292573] "expr temp" "maybe param" "maybe type" "temp"
    (1292576 'move' call_tmp[1292573](1292560 '.' this[1292556] c"shiftedData"))
    (1292571 'move' ret[1292566](1292570 'addr of' call_tmp[1292573]))
    (1292568 return ret[1292566])
  }
  function DefaultRectangularArr[298194](?).externFreeFunc[1292578](arg _mt[1292580]:_MT[201], arg this[1292582]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292592] "RVV" "temp"
    unknown call_tmp[1292599] "expr temp" "maybe param" "maybe type" "temp"
    (1292602 'move' call_tmp[1292599](1292586 '.' this[1292582] c"externFreeFunc"))
    (1292597 'move' ret[1292592](1292596 'addr of' call_tmp[1292599]))
    (1292594 return ret[1292592])
  }
  function DefaultRectangularArr[298194](?).externArr[1292604](arg _mt[1292606]:_MT[201], arg this[1292608]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292618] "RVV" "temp"
    unknown call_tmp[1292625] "expr temp" "maybe param" "maybe type" "temp"
    (1292628 'move' call_tmp[1292625](1292612 '.' this[1292608] c"externArr"))
    (1292623 'move' ret[1292618](1292622 'addr of' call_tmp[1292625]))
    (1292620 return ret[1292618])
  }
  function DefaultRectangularArr[298194](?)._borrowed[1292630](arg _mt[1292632]:_MT[201], arg this[1292634]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292644] "RVV" "temp"
    unknown call_tmp[1292651] "expr temp" "maybe param" "maybe type" "temp"
    (1292654 'move' call_tmp[1292651](1292638 '.' this[1292634] c"_borrowed"))
    (1292649 'move' ret[1292644](1292648 'addr of' call_tmp[1292651]))
    (1292646 return ret[1292644])
  }
  function DefaultRectangularArr[298194](?).callPostAlloc[1292656](arg _mt[1292658]:_MT[201], arg this[1292660]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292670] "RVV" "temp"
    unknown call_tmp[1292677] "expr temp" "maybe param" "maybe type" "temp"
    (1292680 'move' call_tmp[1292677](1292664 '.' this[1292660] c"callPostAlloc"))
    (1292675 'move' ret[1292670](1292674 'addr of' call_tmp[1292677]))
    (1292672 return ret[1292670])
  }
  function DefaultRectangularArr[298194](?).deinitElts[1292682](arg _mt[1292684]:_MT[201], arg this[1292686]:DefaultRectangularArr[298194](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1292696] "RVV" "temp"
    unknown call_tmp[1292703] "expr temp" "maybe param" "maybe type" "temp"
    (1292706 'move' call_tmp[1292703](1292690 '.' this[1292686] c"deinitElts"))
    (1292701 'move' ret[1292696](1292700 'addr of' call_tmp[1292703]))
    (1292698 return ret[1292696])
  }
  function DefaultRectangularArr[298194](?).deinit[1292708](arg _mt[1292710]:_MT[201], arg this[1292712]:DefaultRectangularArr[298194](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1292720 return _void[46])
  }
  type DefaultRectangularArr[298194](?) val super[397691]:BaseRectangularArr[272450](?) "delay instantiation" "super class" unknown idxSignedType[294663] "type variable"(294665 call chpl__signedType(294667 call chpl__idxTypeToIntIdxType idxType[272263])) unknown dom[294671](294674 call unmanaged DefaultRectangularDom[468058](?)(rank = rank[272258])(idxType = idxType[272263])(strides = strides[272266])) unknown off[294684](294685 call * rank[272258] idxType[272263]) unknown blk[294692](294693 call * rank[272258] int(64)[10]) unknown sizesPerDim[294700](294701 call * rank[272258] int(64)[10]) unknown str[294708](294709 call * rank[272258] idxSignedType[294663]) val factoredOffs[294716]:int(64)[10] int(64)[10] unknown data[294721] "alias scope from this" "local field" nil[32](294723 call _ddata[67573](?) eltType[272350]) unknown shiftedData[294729] "alias scope from this" "local field"(294731 call _ddata[67573](?) eltType[272350]) unknown externFreeFunc[294736](294738 call c_ptr[46891](?) void[4]) val externArr[294743]:bool[19] 0 bool[19] val _borrowed[294749]:bool[19] 1 bool[19] val callPostAlloc[294755]:bool[19] 1 bool[19] val deinitElts[294761]:bool[19] 1 bool[19]
  type unmanaged DefaultRectangularArr[468178](?)
  type DefaultRectangularArr[467915](?)
  type DefaultRectangularArr[433493](?)
  function chpl__serialViewIter1D[298196](arg arr[298198]:_any[141](?), arg viewRange[298200]:_any[141](?)) ref : _unknown[42] "iterator fn" "no return value for void"
  {
    unknown ret[630145] "RVV" "temp"
    unknown tmp[503562] "maybe param" "temp"
    (503573 'move' tmp[503562](298211 call chpl__isArrayView arr[298198]))
    unknown call_tmp[929966] "expr temp" "maybe param" "maybe type" "temp"
    (929969 'move' call_tmp[929966](503575 call _cond_invalid tmp[503562]))
    if call_tmp[929966]
    {
      (503578 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown useCache[298207] "dead at end of block" "param"
    unknown tmp[705353] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705354] "maybe param" "temp"
    unknown call_tmp[929971] "expr temp" "maybe param" "maybe type" "temp"
    (929974 'move' call_tmp[929971](503563 call isTrue tmp[503562]))
    (705359 'move' tmp[705354](705357 call _cond_test call_tmp[929971]))
    if tmp[705354]
    {
      unknown tmp[705361] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[929978] "expr temp" "maybe param" "maybe type" "temp"
      (929981 'move' call_tmp[929978](298219 call(298216 call (partial) shouldUseIndexCache _mt[203] arr[298198])))
      (705363 'move' tmp[705361](503566 call isTrue call_tmp[929978]))
      (705368 'move' tmp[705353](705365 '_paramFoldLogical' tmp[705354] tmp[705361]))
    }
    {
      (705373 'move' tmp[705353](705370 '_paramFoldLogical' tmp[705354] 0))
    }
    (653267 'init var' useCache[298207] tmp[705353])
    (298221 'end of statement')
    unknown info[298223] "dead at end of block" "insert auto destroy"
    unknown tmp[705407] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705408] "maybe param" "temp"
    (705413 'move' tmp[705408](705411 call _cond_test useCache[298207]))
    if tmp[705408]
    {
      unknown tmp[705415] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (705417 'move' tmp[705415](298226 call indexCache _mt[203] arr[298198]))
      (705422 'move' tmp[705407](705419 '_paramFoldLogical' tmp[705408] tmp[705415]))
    }
    {
      unknown tmp[705380] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[705381] "maybe param" "temp"
      unknown call_tmp[929987] "expr temp" "maybe param" "maybe type" "temp"
      (929990 'move' call_tmp[929987](298233 call(298230 call (partial) isSliceArrayView _mt[203] arr[298198])))
      (705386 'move' tmp[705381](705384 call _cond_test call_tmp[929987]))
      if tmp[705381]
      {
        unknown tmp[705388] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (705390 'move' tmp[705388](298235 call arr _mt[203] arr[298198]))
        (705395 'move' tmp[705380](705392 '_paramFoldLogical' tmp[705381] tmp[705388]))
      }
      {
        (705400 'move' tmp[705380](705397 '_paramFoldLogical' tmp[705381] arr[298198]))
      }
      (705427 'move' tmp[705407](705424 '_paramFoldLogical' tmp[705408] tmp[705380]))
    }
    (653269 'init var' info[298223] tmp[705407])
    (298246 'end of statement')
    unknown call_tmp[929996] "expr temp" "maybe param" "maybe type" "temp"
    (929999 'move' call_tmp[929996](298544 call(298541 call (partial) hasUnitStride _mt[203] viewRange[298200])))
    unknown call_tmp[930001] "expr temp" "maybe param" "maybe type" "temp"
    (930004 'move' call_tmp[930001](298545 call _cond_test call_tmp[929996]))
    if call_tmp[930001]
    {
      unknown call_tmp[930010] "expr temp" "maybe param" "maybe type" "temp"
      (930013 'move' call_tmp[930010](298256 call low _mt[203] viewRange[298200]))
      unknown call_tmp[930015] "maybe param" "maybe type" "temp"
      (930018 'move' call_tmp[930015](298254 call(298251 call (partial) getDataIndex _mt[203] info[298223]) call_tmp[930010]))
      const first[298249] "dead at end of block" "const" "insert auto destroy"
      (653271 'init var' first[298249] call_tmp[930015])
      (298260 'end of statement')
      unknown call_tmp[930024] "expr temp" "maybe param" "maybe type" "temp"
      (930027 'move' call_tmp[930024](298271 call idxType _mt[203] viewRange[298200]))
      unknown call_tmp[930031] "expr temp" "maybe param" "maybe type" "temp"
      (930034 'move' call_tmp[930031](298279 call low _mt[203] viewRange[298200]))
      unknown call_tmp[930036] "expr temp" "maybe param" "maybe type" "temp"
      (930039 'move' call_tmp[930036](298277 call chpl__idxToInt call_tmp[930031]))
      unknown call_tmp[930041] "expr temp" "maybe param" "maybe type" "temp"
      (930044 'move' call_tmp[930041](298274 call + call_tmp[930036] 1))
      unknown call_tmp[930046] "expr temp" "maybe param" "maybe type" "temp"
      (930049 'move' call_tmp[930046](298269 call chpl__intToIdx call_tmp[930024] call_tmp[930041]))
      unknown call_tmp[930051] "maybe param" "maybe type" "temp"
      (930054 'move' call_tmp[930051](298267 call(298264 call (partial) getDataIndex _mt[203] info[298223]) call_tmp[930046]))
      const second[298262] "dead at end of block" "const" "insert auto destroy"
      (653273 'init var' second[298262] call_tmp[930051])
      (298284 'end of statement')
      unknown call_tmp[930056] "maybe param" "maybe type" "temp"
      (930059 'move' call_tmp[930056](298287 call - second[298262] first[298249]))
      const step[298286] "dead at end of block" "const" "insert auto destroy"
      (653275 'init var' step[298286] call_tmp[930056])
      (298292 'end of statement')
      unknown call_tmp[930063] "expr temp" "maybe param" "maybe type" "temp"
      (930066 'move' call_tmp[930063](298305 call size _mt[203] viewRange[298200]))
      unknown call_tmp[930068] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (930071 'move' call_tmp[930068](298309 'typeof' step[298286]))
      unknown call_tmp[930073] "expr temp" "maybe param" "maybe type" "temp"
      (930076 'move' call_tmp[930073](298302 call : call_tmp[930063] call_tmp[930068]))
      unknown call_tmp[930078] "expr temp" "maybe param" "maybe type" "temp"
      (930081 'move' call_tmp[930078](298300 call - call_tmp[930073] 1))
      unknown call_tmp[930083] "expr temp" "maybe param" "maybe type" "temp"
      (930086 'move' call_tmp[930083](298298 call * call_tmp[930078] step[298286]))
      unknown call_tmp[930088] "maybe param" "maybe type" "temp"
      (930091 'move' call_tmp[930088](298295 call + first[298249] call_tmp[930083]))
      const last[298294] "dead at end of block" "const" "insert auto destroy"
      (653277 'init var' last[298294] call_tmp[930088])
      (298313 'end of statement' info[298223] second[298262] first[298249] step[298286])
      {
        unknown _indexOfInterest[298337] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[298338] "expr temp" "temp"
        unknown call_tmp[930093] "expr temp" "maybe param" "maybe type" "temp"
        (930096 'move' call_tmp[930093](298317 call chpl_direct_pos_stride_range_iter first[298249] last[298294] step[298286]))
        (298347 'move' _iterator[298338](298345 call _getIterator call_tmp[930093]))
        Defer
        {
          {
            (298362 call _freeIterator _iterator[298338])
          }
        }
        { scopeless type
          (298352 'move' _indexOfInterest[298337](298349 call iteratorIndex _iterator[298338]))
        }
        ForLoop[298339] order-independent
        {
          unknown i[298314] "index var" "insert auto destroy"
          (567762 'end of statement')
          (298357 'move' i[298314] _indexOfInterest[298337])
          (567763 'end of statement' i[298314])
          {
            ref yret[630149] "YVV" "temp"
            unknown call_tmp[930100] "expr temp" "maybe param" "maybe type" "temp"
            (930103 'move' call_tmp[930100](298333 call(298330 call (partial) theData _mt[203] info[298323]) i[298314]))
            (630152 'move' yret[630149](630151 'addr of' call_tmp[930100]))
            (298328 yield yret[630149])
            (567765 'end of statement' info[298323] i[298314])
          }
          label _continueLabel[298342]
          _indexOfInterest[298337]
          _iterator[298338]
        }
        label _breakLabel[298343]
      }
    }
    {
      unknown vdIntIdxType[298371] "dead at end of block" "insert auto destroy" "type variable"
      unknown call_tmp[930107] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (930110 'move' call_tmp[930107](653282 call idxType _mt[203] viewRange[298200]))
      (653285 'move' vdIntIdxType[298371](653280 call chpl__idxTypeToIntIdxType call_tmp[930107]))
      unknown call_tmp[930114] "expr temp" "maybe param" "maybe type" "temp"
      (930117 'move' call_tmp[930114](298413 call stride _mt[203] viewRange[298200]))
      unknown call_tmp[930119] "maybe param" "maybe type" "temp"
      (930122 'move' call_tmp[930119](298410 call : call_tmp[930114] vdIntIdxType[298371]))
      const stride[298409] "dead at end of block" "const" "insert auto destroy"
      (653287 'init var' stride[298409] call_tmp[930119])
      unknown call_tmp[930126] "maybe param" "maybe type" "temp"
      (930129 'move' call_tmp[930126](298404 call first _mt[203] viewRange[298200]))
      const start[298402] "dead at end of block" "const" "insert auto destroy"
      (653289 'init var' start[298402] call_tmp[930126])
      unknown call_tmp[930135] "expr temp" "maybe param" "maybe type" "temp"
      (930138 'move' call_tmp[930135](298390 call idxType _mt[203] viewRange[298200]))
      unknown call_tmp[930142] "expr temp" "maybe param" "maybe type" "temp"
      (930145 'move' call_tmp[930142](298396 call firstAsInt _mt[203] viewRange[298200]))
      unknown call_tmp[930147] "expr temp" "maybe param" "maybe type" "temp"
      (930150 'move' call_tmp[930147](298393 call + call_tmp[930142] stride[298409]))
      unknown call_tmp[930152] "expr temp" "maybe param" "maybe type" "temp"
      (930155 'move' call_tmp[930152](298388 call chpl__intToIdx call_tmp[930135] call_tmp[930147]))
      unknown call_tmp[930157] "maybe param" "maybe type" "temp"
      (930160 'move' call_tmp[930157](298386 call(298383 call (partial) getDataIndex _mt[203] info[298223]) call_tmp[930152]))
      const second[298381] "dead at end of block" "const" "insert auto destroy"
      (653291 'init var' second[298381] call_tmp[930157])
      (298418 'end of statement')
      unknown call_tmp[930164] "maybe param" "maybe type" "temp"
      (930167 'move' call_tmp[930164](298425 call(298422 call (partial) getDataIndex _mt[203] info[298223]) start[298402]))
      unknown first[298420] "dead at end of block" "insert auto destroy"
      (653293 'init var' first[298420] call_tmp[930164])
      (298428 'end of statement')
      unknown call_tmp[930169] "expr temp" "maybe param" "maybe type" "temp"
      (930172 'move' call_tmp[930169](298431 call - second[298381] first[298420]))
      unknown call_tmp[930176] "maybe param" "maybe type" "temp"
      (930179 'move' call_tmp[930176](298438 call(298435 call (partial) safeCast _mt[203] call_tmp[930169]) int(64)[10]))
      const step[298430] "dead at end of block" "const" "insert auto destroy"
      (653295 'init var' step[298430] call_tmp[930176])
      (298441 'end of statement')
      unknown call_tmp[930183] "expr temp" "maybe param" "maybe type" "temp"
      (930186 'move' call_tmp[930183](298455 call(298452 call (partial) sizeAs _mt[203] viewRange[298200]) int(64)[10]))
      unknown call_tmp[930188] "expr temp" "maybe param" "maybe type" "temp"
      (930191 'move' call_tmp[930188](298449 call - call_tmp[930183] 1))
      unknown call_tmp[930193] "expr temp" "maybe param" "maybe type" "temp"
      (930196 'move' call_tmp[930193](298447 call * call_tmp[930188] step[298430]))
      unknown call_tmp[930198] "maybe param" "maybe type" "temp"
      (930201 'move' call_tmp[930198](298444 call + first[298420] call_tmp[930193]))
      unknown last[298443] "dead at end of block" "insert auto destroy"
      (653297 'init var' last[298443] call_tmp[930198])
      (298460 'end of statement')
      unknown call_tmp[930203] "expr temp" "maybe param" "maybe type" "temp"
      (930206 'move' call_tmp[930203](298466 call < step[298430] 0))
      unknown call_tmp[930208] "expr temp" "maybe param" "maybe type" "temp"
      (930211 'move' call_tmp[930208](298470 call _cond_test call_tmp[930203]))
      if call_tmp[930208]
      {
        (298461 call <=> last[298443] first[298420])
        (567776 'end of statement' last[298443] first[298420])
      }
      unknown call_tmp[930215] "maybe param" "maybe type" "temp"
      (930218 'move' call_tmp[930215](298478 call theData _mt[203] info[298223]))
      unknown data[298476] "dead at end of block" "insert auto destroy"
      (653299 'init var' data[298476] call_tmp[930215])
      (298482 'end of statement' vdIntIdxType[298371] info[298223] stride[298409] info[298223] start[298402] second[298381] first[298420] step[298430] info[298223])
      {
        unknown _indexOfInterest[298499] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[298500] "expr temp" "temp"
        unknown call_tmp[930220] "expr temp" "maybe param" "maybe type" "temp"
        (930223 'move' call_tmp[930220](298518 call chpl_direct_strided_range_iter first[298420] last[298443] step[298430]))
        (298509 'move' _iterator[298500](298507 call _getIterator call_tmp[930220]))
        Defer
        {
          {
            (298533 call _freeIterator _iterator[298500])
          }
        }
        { scopeless type
          (298523 'move' _indexOfInterest[298499](298520 call iteratorIndex _iterator[298500]))
        }
        ForLoop[298501] order-independent
        {
          unknown i[298483] "index var" "insert auto destroy"
          (567781 'end of statement')
          (298528 'move' i[298483] _indexOfInterest[298499])
          (567782 'end of statement' i[298483])
          ref yret[630155] "YVV" "temp"
          unknown call_tmp[930225] "expr temp" "maybe param" "maybe type" "temp"
          (930228 'move' call_tmp[930225](298494 call data[298476] i[298483]))
          (630158 'move' yret[630155](630157 'addr of' call_tmp[930225]))
          (298492 yield yret[630155])
          (567784 'end of statement' data[298476] i[298483])
          label _continueLabel[298504]
          _indexOfInterest[298499]
          _iterator[298500]
        }
        label _breakLabel[298505]
      }
    }
    (630147 return ret[630145])
  }
  where {
    (298203 call chpl__isDROrDRView arr[298198])
  }
  function chpl__serialViewIter[298552](arg arr[298554]:_any[141](?), arg viewDom[298556]:_any[141](?)) ref : _unknown[42] "iterator fn" "no return value for void"
  {
    unknown ret[630163] "RVV" "temp"
    unknown tmp[503583] "maybe param" "temp"
    (503594 'move' tmp[503583](298567 call chpl__isArrayView arr[298554]))
    unknown call_tmp[930230] "expr temp" "maybe param" "maybe type" "temp"
    (930233 'move' call_tmp[930230](503596 call _cond_invalid tmp[503583]))
    if call_tmp[930230]
    {
      (503599 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown useCache[298563] "dead at end of block" "param"
    unknown tmp[705434] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705435] "maybe param" "temp"
    unknown call_tmp[930235] "expr temp" "maybe param" "maybe type" "temp"
    (930238 'move' call_tmp[930235](503584 call isTrue tmp[503583]))
    (705440 'move' tmp[705435](705438 call _cond_test call_tmp[930235]))
    if tmp[705435]
    {
      unknown tmp[705442] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[930242] "expr temp" "maybe param" "maybe type" "temp"
      (930245 'move' call_tmp[930242](298573 call(298570 call (partial) shouldUseIndexCache _mt[203] arr[298554])))
      (705444 'move' tmp[705442](503587 call isTrue call_tmp[930242]))
      (705449 'move' tmp[705434](705446 '_paramFoldLogical' tmp[705435] tmp[705442]))
    }
    {
      (705454 'move' tmp[705434](705451 '_paramFoldLogical' tmp[705435] 0))
    }
    (653301 'init var' useCache[298563] tmp[705434])
    (298575 'end of statement')
    unknown info[298577] "dead at end of block" "insert auto destroy"
    unknown tmp[705488] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705489] "maybe param" "temp"
    (705494 'move' tmp[705489](705492 call _cond_test useCache[298563]))
    if tmp[705489]
    {
      unknown tmp[705496] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (705498 'move' tmp[705496](298580 call indexCache _mt[203] arr[298554]))
      (705503 'move' tmp[705488](705500 '_paramFoldLogical' tmp[705489] tmp[705496]))
    }
    {
      unknown tmp[705461] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[705462] "maybe param" "temp"
      unknown call_tmp[930251] "expr temp" "maybe param" "maybe type" "temp"
      (930254 'move' call_tmp[930251](298587 call(298584 call (partial) isSliceArrayView _mt[203] arr[298554])))
      (705467 'move' tmp[705462](705465 call _cond_test call_tmp[930251]))
      if tmp[705462]
      {
        unknown tmp[705469] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (705471 'move' tmp[705469](298589 call arr _mt[203] arr[298554]))
        (705476 'move' tmp[705461](705473 '_paramFoldLogical' tmp[705462] tmp[705469]))
      }
      {
        (705481 'move' tmp[705461](705478 '_paramFoldLogical' tmp[705462] arr[298554]))
      }
      (705508 'move' tmp[705488](705505 '_paramFoldLogical' tmp[705489] tmp[705461]))
    }
    (653303 'init var' info[298577] tmp[705488])
    (298600 'end of statement')
    unknown call_tmp[930260] "expr temp" "maybe param" "maybe type" "temp"
    (930263 'move' call_tmp[930260](298758 call rank _mt[203] arr[298554]))
    unknown call_tmp[930265] "expr temp" "maybe param" "maybe type" "temp"
    (930268 'move' call_tmp[930265](298755 call == call_tmp[930260] 1))
    unknown call_tmp[930270] "expr temp" "maybe param" "maybe type" "temp"
    (930273 'move' call_tmp[930270](298762 call _cond_test call_tmp[930265]))
    if call_tmp[930270]
    {
      {
        unknown _indexOfInterest[298618] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[298619] "expr temp" "temp"
        unknown call_tmp[930277] "expr temp" "maybe param" "maybe type" "temp"
        (930280 'move' call_tmp[930277](298611 call(298608 call (partial) dsiDim _mt[203] viewDom[298556]) 0))
        unknown call_tmp[930282] "expr temp" "maybe param" "maybe type" "temp"
        (930285 'move' call_tmp[930282](298605 call chpl__serialViewIter1D arr[298554] call_tmp[930277]))
        (298628 'move' _iterator[298619](298626 call _getIterator call_tmp[930282]))
        Defer
        {
          {
            (298643 call _freeIterator _iterator[298619])
          }
        }
        { scopeless type
          (298633 'move' _indexOfInterest[298618](298630 call iteratorIndex _iterator[298619]))
        }
        ForLoop[298620] order-independent
        {
          unknown elem[298602] "index var" "insert auto destroy"
          (567789 'end of statement')
          (298638 'move' elem[298602] _indexOfInterest[298618])
          (567790 'end of statement' elem[298602])
          ref yret[630167] "YVV" "temp"
          (630170 'move' yret[630167](630169 'addr of' elem[298602]))
          (298613 yield yret[630167])
          (567792 'end of statement' elem[298602])
          label _continueLabel[298623]
          _indexOfInterest[298618]
          _iterator[298619]
        }
        label _breakLabel[298624]
      }
    }
    {
      unknown call_tmp[930287] "expr temp" "maybe param" "maybe type" "temp"
      (930290 'move' call_tmp[930287](298751 call _cond_test useCache[298563]))
      if call_tmp[930287]
      {
        {
          unknown _indexOfInterest[298674] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[298675] "expr temp" "temp"
          (298684 'move' _iterator[298675](298682 call _getIterator viewDom[298556]))
          Defer
          {
            {
              (298699 call _freeIterator _iterator[298675])
            }
          }
          { scopeless type
            (298689 'move' _indexOfInterest[298674](298686 call iteratorIndex _iterator[298675]))
          }
          ForLoop[298676] order-independent
          {
            unknown i[298651] "index var" "insert auto destroy"
            (567795 'end of statement')
            (298694 'move' i[298651] _indexOfInterest[298674])
            (567796 'end of statement' i[298651])
            {
              unknown call_tmp[930294] "maybe param" "maybe type" "temp"
              (930297 'move' call_tmp[930294](298661 call(298658 call (partial) getDataIndex _mt[203] info[298577]) i[298651]))
              const dataIdx[298656] "dead at end of block" "const" "insert auto destroy"
              (653305 'init var' dataIdx[298656] call_tmp[930294])
              (298664 'end of statement' info[298577] i[298651])
              ref yret[630173] "YVV" "temp"
              unknown call_tmp[930301] "expr temp" "maybe param" "maybe type" "temp"
              (930304 'move' call_tmp[930301](298670 call(298667 call (partial) getDataElem _mt[203] info[298577]) dataIdx[298656]))
              (630176 'move' yret[630173](630175 'addr of' call_tmp[930301]))
              (298665 yield yret[630173])
              (567800 'end of statement' info[298577] dataIdx[298656])
            }
            label _continueLabel[298679]
            _indexOfInterest[298674]
            _iterator[298675]
          }
          label _breakLabel[298680]
        }
      }
      {
        {
          unknown _indexOfInterest[298718] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[298719] "expr temp" "temp"
          unknown call_tmp[930306] "expr temp" "maybe param" "maybe type" "temp"
          (930309 'move' call_tmp[930306](298710 call chpl__serialViewIterHelper arr[298554] viewDom[298556]))
          (298728 'move' _iterator[298719](298726 call _getIterator call_tmp[930306]))
          Defer
          {
            {
              (298743 call _freeIterator _iterator[298719])
            }
          }
          { scopeless type
            (298733 'move' _indexOfInterest[298718](298730 call iteratorIndex _iterator[298719]))
          }
          ForLoop[298720] order-independent
          {
            unknown elem[298707] "index var" "insert auto destroy"
            (567804 'end of statement')
            (298738 'move' elem[298707] _indexOfInterest[298718])
            (567805 'end of statement' elem[298707])
            ref yret[630179] "YVV" "temp"
            (630182 'move' yret[630179](630181 'addr of' elem[298707]))
            (298713 yield yret[630179])
            (567807 'end of statement' elem[298707])
            label _continueLabel[298723]
            _indexOfInterest[298718]
            _iterator[298719]
          }
          label _breakLabel[298724]
        }
      }
    }
    (630165 return ret[630163])
  }
  where {
    (298559 call chpl__isDROrDRView arr[298554])
  }
  function chpl__serialViewIter[298770](arg arr[298772]:_any[141](?), arg viewDom[298774]:_any[141](?)) ref : _unknown[42] "iterator fn" "no return value for void"
  {
    unknown ret[630187] "RVV" "temp"
    {
      unknown _indexOfInterest[298786] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[298787] "expr temp" "temp"
      unknown call_tmp[930311] "expr temp" "maybe param" "maybe type" "temp"
      (930314 'move' call_tmp[930311](298780 call chpl__serialViewIterHelper arr[298772] viewDom[298774]))
      (298796 'move' _iterator[298787](298794 call _getIterator call_tmp[930311]))
      Defer
      {
        {
          (298811 call _freeIterator _iterator[298787])
        }
      }
      { scopeless type
        (298801 'move' _indexOfInterest[298786](298798 call iteratorIndex _iterator[298787]))
      }
      ForLoop[298788]
      {
        unknown elem[298777] "index var" "insert auto destroy"
        (567810 'end of statement')
        (298806 'move' elem[298777] _indexOfInterest[298786])
        (567811 'end of statement' elem[298777])
        ref yret[630191] "YVV" "temp"
        (630194 'move' yret[630191](630193 'addr of' elem[298777]))
        (298783 yield yret[630191])
        (567813 'end of statement' elem[298777])
        label _continueLabel[298791]
        _indexOfInterest[298786]
        _iterator[298787]
      }
      label _breakLabel[298792]
    }
    (630189 return ret[630187])
  }
  function chpl__serialViewIterHelper[298820](arg arr[298822]:_any[141](?), arg viewDom[298824]:_any[141](?)) ref : _unknown[42] "iterator fn" "no return value for void"
  {
    unknown ret[630199] "RVV" "temp"
    {
      unknown _indexOfInterest[298900] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[298901] "expr temp" "temp"
      (298910 'move' _iterator[298901](298908 call _getIterator viewDom[298824]))
      Defer
      {
        {
          (298925 call _freeIterator _iterator[298901])
        }
      }
      { scopeless type
        (298915 'move' _indexOfInterest[298900](298912 call iteratorIndex _iterator[298901]))
      }
      ForLoop[298902] order-independent
      {
        unknown i[298827] "index var" "insert auto destroy"
        (567816 'end of statement')
        (298920 'move' i[298827] _indexOfInterest[298900])
        (567817 'end of statement' i[298827])
        {
          const dataIdx[298832] "dead at end of block" "const" "insert auto destroy"
          unknown tmp[705542] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[705543] "maybe param" "temp"
          unknown call_tmp[930318] "expr temp" "maybe param" "maybe type" "temp"
          (930321 'move' call_tmp[930318](298837 call(298834 call (partial) isReindexArrayView _mt[203] arr[298822])))
          (705548 'move' tmp[705543](705546 call _cond_test call_tmp[930318]))
          if tmp[705543]
          {
            unknown tmp[705550] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[930325] "expr temp" "maybe param" "maybe type" "temp"
            (930328 'move' call_tmp[930325](298842 call dom _mt[203] arr[298822]))
            unknown call_tmp[930332] "expr temp" "maybe param" "maybe type" "temp"
            (930335 'move' call_tmp[930332](298848 call downdom _mt[203] arr[298822]))
            (705552 'move' tmp[705550](298839 call chpl_reindexConvertIdx i[298827] call_tmp[930325] call_tmp[930332]))
            (705557 'move' tmp[705542](705554 '_paramFoldLogical' tmp[705543] tmp[705550]))
          }
          {
            unknown tmp[705515] "expr temp" "if-expr result" "maybe type" "temp"
            unknown tmp[705516] "maybe param" "temp"
            unknown call_tmp[930339] "expr temp" "maybe param" "maybe type" "temp"
            (930342 'move' call_tmp[930339](298855 call(298852 call (partial) isRankChangeArrayView _mt[203] arr[298822])))
            (705521 'move' tmp[705516](705519 call _cond_test call_tmp[930339]))
            if tmp[705516]
            {
              unknown tmp[705523] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[930346] "expr temp" "maybe param" "maybe type" "temp"
              (930349 'move' call_tmp[930346](298860 call collapsedDim _mt[203] arr[298822]))
              unknown call_tmp[930353] "expr temp" "maybe param" "maybe type" "temp"
              (930356 'move' call_tmp[930353](298864 call idx _mt[203] arr[298822]))
              (705525 'move' tmp[705523](298857 call chpl_rankChangeConvertIdx i[298827] call_tmp[930346] call_tmp[930353]))
              (705530 'move' tmp[705515](705527 '_paramFoldLogical' tmp[705516] tmp[705523]))
            }
            {
              (705535 'move' tmp[705515](705532 '_paramFoldLogical' tmp[705516] i[298827]))
            }
            (705562 'move' tmp[705542](705559 '_paramFoldLogical' tmp[705543] tmp[705515]))
          }
          (653307 'init var' dataIdx[298832] tmp[705542])
          (298875 'end of statement')
          const info[298877] "dead at end of block" "const" "insert auto destroy"
          unknown tmp[705569] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[705570] "maybe param" "temp"
          unknown call_tmp[930358] "expr temp" "maybe param" "maybe type" "temp"
          (930361 'move' call_tmp[930358](298879 call chpl__isArrayView arr[298822]))
          (705575 'move' tmp[705570](705573 call _cond_test call_tmp[930358]))
          if tmp[705570]
          {
            unknown tmp[705577] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (705579 'move' tmp[705577](298882 call arr _mt[203] arr[298822]))
            (705584 'move' tmp[705569](705581 '_paramFoldLogical' tmp[705570] tmp[705577]))
          }
          {
            (705589 'move' tmp[705569](705586 '_paramFoldLogical' tmp[705570] arr[298822]))
          }
          (653309 'init var' info[298877] tmp[705569])
          (298890 'end of statement' i[298827])
          ref yret[630203] "YVV" "temp"
          unknown call_tmp[930367] "expr temp" "maybe param" "maybe type" "temp"
          (930370 'move' call_tmp[930367](298896 call(298893 call (partial) dsiAccess _mt[203] info[298877]) dataIdx[298832]))
          (630206 'move' yret[630203](630205 'addr of' call_tmp[930367]))
          (298891 yield yret[630203])
          (567820 'end of statement' info[298877] dataIdx[298832])
        }
        label _continueLabel[298905]
        _indexOfInterest[298900]
        _iterator[298901]
      }
      label _breakLabel[298906]
    }
    (630201 return ret[630199])
  }
  function DefaultRectangularDom[292740](?).dsiSerialReadWrite[298934](arg _mt[298942]:_MT[201], arg this[298937]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?), arg f[298940]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    function rwLiteral[298945](arg lit[298948]:string[244]) : _unknown[42] throws "inline" "no return value for void"
    {
      unknown call_tmp[930374] "expr temp" "maybe param" "maybe type" "temp"
      (930377 'move' call_tmp[930374](298967 call _writing _mt[203] f[298940]))
      unknown call_tmp[930379] "expr temp" "maybe param" "maybe type" "temp"
      (930382 'move' call_tmp[930379](298970 call _cond_test call_tmp[930374]))
      if call_tmp[930379]
      {
        (298956 call(298953 call (partial) writeLiteral _mt[203] f[298940]) lit[298948])
      }
      {
        (298963 call(298960 call (partial) readLiteral _mt[203] f[298940]) lit[298948])
      }
      (630209 return _void[46])
    }
    (298979 call rwLiteral "{")
    (567825 'end of statement')
    unknown first[298982] "dead at end of block" "insert auto destroy"
    (653311 'init var' first[298982] 1)
    (298985 'end of statement')
    {
      unknown _indexOfInterest[299048] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299049] "expr temp" "temp"
      unknown call_tmp[930390] "expr temp" "maybe param" "maybe type" "temp"
      (930393 'move' call_tmp[930390](458224 call rank _mt[203] this[298937]))
      unknown call_tmp[930395] "expr temp" "maybe param" "maybe type" "temp"
      (930398 'move' call_tmp[930395](299062 call - call_tmp[930390] 1))
      unknown call_tmp[930400] "expr temp" "maybe param" "maybe type" "temp"
      (930403 'move' call_tmp[930400](299065 call chpl_direct_range_iter 0 call_tmp[930395]))
      (299058 'move' _iterator[299049](299056 call _getIterator call_tmp[930400]))
      Defer
      {
        {
          (299080 call _freeIterator _iterator[299049])
        }
      }
      { scopeless type
        (299070 'move' _indexOfInterest[299048](299067 call iteratorIndex _iterator[299049]))
      }
      ForLoop[299050]
      {
        unknown i[298986] "index var" "insert auto destroy"
        (567827 'end of statement')
        (299075 'move' i[298986] _indexOfInterest[299048])
        (567828 'end of statement' i[298986])
        {
          unknown call_tmp[930405] "expr temp" "maybe param" "maybe type" "temp"
          (930408 'move' call_tmp[930405](299005 call ! first[298982]))
          unknown call_tmp[930410] "expr temp" "maybe param" "maybe type" "temp"
          (930413 'move' call_tmp[930410](299008 call _cond_test call_tmp[930405]))
          if call_tmp[930410]
          {
            (298997 call rwLiteral ", ")
          }
          {
            (299000 call = first[298982] 0)
            (567831 'end of statement' first[298982])
          }
          unknown call_tmp[930417] "expr temp" "maybe param" "maybe type" "temp"
          (930420 'move' call_tmp[930417](299039 call _writing _mt[203] f[298940]))
          unknown call_tmp[930422] "expr temp" "maybe param" "maybe type" "temp"
          (930425 'move' call_tmp[930422](299042 call _cond_test call_tmp[930417]))
          if call_tmp[930422]
          {
            unknown call_tmp[930431] "expr temp" "maybe param" "maybe type" "temp"
            (930434 'move' call_tmp[930431](299020 call(458206 call (partial) ranges _mt[203] this[298937]) i[298986]))
            (299018 call(299015 call (partial) write _mt[203] f[298940]) call_tmp[930431])
            (567833 'end of statement' i[298986])
          }
          {
            { scopeless type
              unknown call_type_tmp[578973] "expr temp" "maybe type" "temp" "type variable"
              unknown call_tmp[930438] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (930441 'move' call_tmp[930438](299034 call(458218 call (partial) ranges _mt[203] this[298937]) i[298986]))
              (578977 'move' call_type_tmp[578973](299036 'typeof' call_tmp[930438]))
            }
            unknown call_tmp[930445] "expr temp" "maybe param" "maybe type" "temp"
            (930448 'move' call_tmp[930445](299026 call(458212 call (partial) ranges _mt[203] this[298937]) i[298986]))
            unknown call_tmp[930452] "expr temp" "maybe param" "maybe type" "temp"
            (930455 'move' call_tmp[930452](299032 call(299029 call (partial) read _mt[203] f[298940]) call_type_tmp[578973]))
            (299023 call = call_tmp[930445] call_tmp[930452])
            (567835 'end of statement' i[298986])
          }
        }
        label _continueLabel[299053]
        _indexOfInterest[299048]
        _iterator[299049]
      }
      label _breakLabel[299054]
    }
    (299088 call rwLiteral "}")
    (630211 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiSerialWrite[299092](arg _mt[299100]:_MT[201], arg this[299095]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?), arg f[299098]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    unknown call_tmp[930457] "expr temp" "maybe param" "maybe type" "temp"
    (930460 'move' call_tmp[930457](299123 call _cond_test 0))
    if call_tmp[930457]
    {
      (299117 call compilerWarning "Serialization of rectangular domains with non-default Serializer is unstable, and may change in the future")
    }
    unknown call_tmp[930464] "expr temp" "maybe param" "maybe type" "temp"
    (930467 'move' call_tmp[930464](299131 call serializer _mt[203] f[299098]))
    unknown call_tmp[930473] "expr temp" "maybe param" "maybe type" "temp"
    (930476 'move' call_tmp[930473](458232 call rank _mt[203] this[299095]))
    unknown call_tmp[930478] "maybe param" "maybe type" "temp"
    (930481 'move' call_tmp[930478](299137 call(299134 call (partial) startList _mt[203] call_tmp[930464]) f[299098] call_tmp[930473]))
    unknown ser[299129] "dead at end of block" "insert auto destroy"
    (653313 'init var' ser[299129] call_tmp[930478])
    (299141 'end of statement')
    {
      unknown _indexOfInterest[299159] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299160] "expr temp" "temp"
      unknown call_tmp[930485] "expr temp" "maybe param" "maybe type" "temp"
      (930488 'move' call_tmp[930485](458242 call rank _mt[203] this[299095]))
      unknown call_tmp[930490] "expr temp" "maybe param" "maybe type" "temp"
      (930493 'move' call_tmp[930490](299173 call chpl__nudgeHighBound call_tmp[930485]))
      unknown call_tmp[930495] "expr temp" "maybe param" "maybe type" "temp"
      (930498 'move' call_tmp[930495](299175 call chpl_direct_range_iter 0 call_tmp[930490]))
      (299169 'move' _iterator[299160](299167 call _getIterator call_tmp[930495]))
      Defer
      {
        {
          (299190 call _freeIterator _iterator[299160])
        }
      }
      { scopeless type
        (299180 'move' _indexOfInterest[299159](299177 call iteratorIndex _iterator[299160]))
      }
      ForLoop[299161]
      {
        unknown i[299142] "index var" "insert auto destroy"
        (567840 'end of statement')
        (299185 'move' i[299142] _indexOfInterest[299159])
        (567841 'end of statement' i[299142])
        unknown call_tmp[930504] "expr temp" "maybe param" "maybe type" "temp"
        (930507 'move' call_tmp[930504](299156 call(458236 call (partial) dsiDim _mt[203] this[299095]) i[299142]))
        (299154 call(299151 call (partial) writeElement _mt[203] ser[299129]) call_tmp[930504])
        (567843 'end of statement' ser[299129] i[299142])
        label _continueLabel[299164]
        _indexOfInterest[299159]
        _iterator[299160]
      }
      label _breakLabel[299165]
    }
    (299201 call(299198 call (partial) endList _mt[203] ser[299129]))
    (567846 'end of statement' ser[299129])
    (630213 return _void[46])
  }
  where {
    unknown tmp[503604] "maybe param" "temp"
    (503615 'move' tmp[503604](299105 call _supportsSerializers f[299098]))
    unknown call_tmp[930511] "expr temp" "maybe param" "maybe type" "temp"
    (930514 'move' call_tmp[930511](503617 call _cond_invalid tmp[503604]))
    if call_tmp[930511]
    {
      (503620 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705596] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705597] "maybe param" "temp"
    unknown call_tmp[930516] "expr temp" "maybe param" "maybe type" "temp"
    (930519 'move' call_tmp[930516](503605 call isTrue tmp[503604]))
    (705602 'move' tmp[705597](705600 call _cond_test call_tmp[930516]))
    if tmp[705597]
    {
      unknown tmp[705604] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[930523] "expr temp" "maybe param" "maybe type" "temp"
      (930526 'move' call_tmp[930523](299112 call serializerType _mt[203] f[299098]))
      unknown call_tmp[930528] "expr temp" "maybe param" "maybe type" "temp"
      (930531 'move' call_tmp[930528](299110 call isDefaultSerializerType call_tmp[930523]))
      unknown call_tmp[930533] "expr temp" "maybe param" "maybe type" "temp"
      (930536 'move' call_tmp[930533](299107 call ! call_tmp[930528]))
      (705606 'move' tmp[705604](503608 call isTrue call_tmp[930533]))
      (705611 'move' tmp[705596](705608 '_paramFoldLogical' tmp[705597] tmp[705604]))
    }
    {
      (705616 'move' tmp[705596](705613 '_paramFoldLogical' tmp[705597] 0))
    }
    (1001660 call chpl_statementLevelSymbol tmp[705596])
  }
  function DefaultRectangularDom[292740](?).dsiSerialRead[299205](arg _mt[299213]:_MT[201], arg this[299208]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?), arg f[299211]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    unknown call_tmp[930538] "expr temp" "maybe param" "maybe type" "temp"
    (930541 'move' call_tmp[930538](299238 call _cond_test 0))
    if call_tmp[930538]
    {
      (299232 call compilerWarning "Deserialization of rectangular domains with non-default Deserializer is unstable, and may change in the future")
    }
    unknown call_tmp[930545] "expr temp" "maybe param" "maybe type" "temp"
    (930548 'move' call_tmp[930545](299246 call deserializer _mt[203] f[299211]))
    unknown call_tmp[930552] "maybe param" "maybe type" "temp"
    (930555 'move' call_tmp[930552](299252 call(299249 call (partial) startList _mt[203] call_tmp[930545]) f[299211]))
    unknown des[299244] "dead at end of block" "insert auto destroy"
    (653315 'init var' des[299244] call_tmp[930552])
    (299255 'end of statement')
    {
      unknown _indexOfInterest[299279] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299280] "expr temp" "temp"
      unknown call_tmp[930559] "expr temp" "maybe param" "maybe type" "temp"
      (930562 'move' call_tmp[930559](458262 call rank _mt[203] this[299208]))
      unknown call_tmp[930564] "expr temp" "maybe param" "maybe type" "temp"
      (930567 'move' call_tmp[930564](299293 call chpl__nudgeHighBound call_tmp[930559]))
      unknown call_tmp[930569] "expr temp" "maybe param" "maybe type" "temp"
      (930572 'move' call_tmp[930569](299295 call chpl_direct_range_iter 0 call_tmp[930564]))
      (299289 'move' _iterator[299280](299287 call _getIterator call_tmp[930569]))
      Defer
      {
        {
          (299310 call _freeIterator _iterator[299280])
        }
      }
      { scopeless type
        (299300 'move' _indexOfInterest[299279](299297 call iteratorIndex _iterator[299280]))
      }
      ForLoop[299281]
      {
        unknown i[299256] "index var" "insert auto destroy"
        (567850 'end of statement')
        (299305 'move' i[299256] _indexOfInterest[299279])
        (567851 'end of statement' i[299256])
        { scopeless type
          unknown call_type_tmp[578979] "expr temp" "maybe type" "temp" "type variable"
          unknown call_tmp[930576] "expr temp" "maybe param" "used in type" "maybe type" "temp"
          (930579 'move' call_tmp[930576](299275 call(458256 call (partial) ranges _mt[203] this[299208]) i[299256]))
          (578983 'move' call_type_tmp[578979](299277 'typeof' call_tmp[930576]))
        }
        unknown call_tmp[930583] "expr temp" "maybe param" "maybe type" "temp"
        (930586 'move' call_tmp[930583](299267 call(458250 call (partial) ranges _mt[203] this[299208]) i[299256]))
        unknown call_tmp[930590] "expr temp" "maybe param" "maybe type" "temp"
        (930593 'move' call_tmp[930590](299273 call(299270 call (partial) readElement _mt[203] des[299244]) call_type_tmp[578979]))
        (299264 call = call_tmp[930583] call_tmp[930590])
        (567853 'end of statement' i[299256] des[299244])
        label _continueLabel[299284]
        _indexOfInterest[299279]
        _iterator[299280]
      }
      label _breakLabel[299285]
    }
    (299321 call(299318 call (partial) endList _mt[203] des[299244]))
    (567856 'end of statement' des[299244])
    (630215 return _void[46])
  }
  where {
    unknown tmp[503625] "maybe param" "temp"
    (503636 'move' tmp[503625](299218 call _supportsSerializers f[299211]))
    unknown call_tmp[930597] "expr temp" "maybe param" "maybe type" "temp"
    (930600 'move' call_tmp[930597](503638 call _cond_invalid tmp[503625]))
    if call_tmp[930597]
    {
      (503641 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705623] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705624] "maybe param" "temp"
    unknown call_tmp[930602] "expr temp" "maybe param" "maybe type" "temp"
    (930605 'move' call_tmp[930602](503626 call isTrue tmp[503625]))
    (705629 'move' tmp[705624](705627 call _cond_test call_tmp[930602]))
    if tmp[705624]
    {
      unknown tmp[705631] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[930609] "expr temp" "maybe param" "maybe type" "temp"
      (930612 'move' call_tmp[930609](299223 call deserializerType _mt[203] f[299211]))
      unknown call_tmp[930614] "expr temp" "maybe param" "maybe type" "temp"
      (930617 'move' call_tmp[930614](299220 call != call_tmp[930609] defaultDeserializer[173096]))
      (705633 'move' tmp[705631](503629 call isTrue call_tmp[930614]))
      (705638 'move' tmp[705623](705635 '_paramFoldLogical' tmp[705624] tmp[705631]))
    }
    {
      (705643 'move' tmp[705623](705640 '_paramFoldLogical' tmp[705624] 0))
    }
    (1001662 call chpl_statementLevelSymbol tmp[705623])
    (410034 'referenced modules list' IO[208303])
  }
  function DefaultRectangularDom[292740](?).doiToString[299325](arg _mt[299331]:_MT[201], arg this[299328]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?)) : _unknown[42] "method"
  {
    unknown ret[630219] "RVV" "temp"
    unknown call_tmp[930621] "expr temp" "maybe param" "maybe type" "temp"
    (930624 'move' call_tmp[930621](299342 call(458267 call (partial) ranges _mt[203] this[299328]) 0))
    unknown call_tmp[930626] "expr temp" "maybe param" "maybe type" "temp"
    (930629 'move' call_tmp[930626](299339 call : call_tmp[930621] string[244]))
    unknown call_tmp[930631] "maybe param" "maybe type" "temp"
    (930634 'move' call_tmp[930631](299336 call + "{" call_tmp[930626]))
    unknown str[299335] "dead at end of block" "insert auto destroy"
    (653317 'init var' str[299335] call_tmp[930631])
    (299346 'end of statement')
    {
      unknown _indexOfInterest[299368] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299369] "expr temp" "temp"
      unknown call_tmp[930638] "expr temp" "maybe param" "maybe type" "temp"
      (930641 'move' call_tmp[930638](458279 call rank _mt[203] this[299328]))
      unknown call_tmp[930643] "expr temp" "maybe param" "maybe type" "temp"
      (930646 'move' call_tmp[930643](299382 call chpl__nudgeHighBound call_tmp[930638]))
      unknown call_tmp[930648] "expr temp" "maybe param" "maybe type" "temp"
      (930651 'move' call_tmp[930648](299384 call chpl_direct_range_iter 1 call_tmp[930643]))
      (299378 'move' _iterator[299369](299376 call _getIterator call_tmp[930648]))
      Defer
      {
        {
          (299399 call _freeIterator _iterator[299369])
        }
      }
      { scopeless type
        (299389 'move' _indexOfInterest[299368](299386 call iteratorIndex _iterator[299369]))
      }
      ForLoop[299370]
      {
        unknown i[299347] "index var" "insert auto destroy"
        (567859 'end of statement')
        (299394 'move' i[299347] _indexOfInterest[299368])
        (567860 'end of statement' i[299347])
        unknown call_tmp[930655] "expr temp" "maybe param" "maybe type" "temp"
        (930658 'move' call_tmp[930655](299364 call(458273 call (partial) ranges _mt[203] this[299328]) i[299347]))
        unknown call_tmp[930660] "expr temp" "maybe param" "maybe type" "temp"
        (930663 'move' call_tmp[930660](299361 call : call_tmp[930655] string[244]))
        unknown call_tmp[930665] "expr temp" "maybe param" "maybe type" "temp"
        (930668 'move' call_tmp[930665](299358 call + ", " call_tmp[930660]))
        (299355 call += str[299335] call_tmp[930665])
        (567862 'end of statement' str[299335] i[299347])
        label _continueLabel[299373]
        _indexOfInterest[299368]
        _iterator[299369]
      }
      label _breakLabel[299374]
    }
    (299406 call += str[299335] "}")
    (567865 'end of statement' str[299335])
    (630224 'move' ret[630219](630223 'deref' str[299335]))
    gotoReturn _end_doiToString[630217] _end_doiToString[630217]
    (567867 'end of statement' str[299335])
    label _end_doiToString[630217]
    (630221 return ret[630219])
  }
  function DefaultRectangularDom[292740](?).dsiSerialWrite[299414](arg _mt[299422]:_MT[201], arg this[299417]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?), arg f[299420]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    (299429 call(299426 call (partial) dsiSerialReadWrite _mt[203] this[299417]) f[299420])
    (630228 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiSerialRead[299433](arg _mt[299441]:_MT[201], arg this[299436]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?), arg f[299439]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    (299448 call(299445 call (partial) dsiSerialReadWrite _mt[203] this[299436]) f[299439])
    (630230 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiSerialReadWrite[299452](arg _mt[299460]:_MT[201], arg this[299455]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg f[299458]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    (299464 call chpl_serialReadWriteRectangular f[299458] this[299455])
    (630232 return _void[46])
  }
  function DefaultRectangularDom[292740](?).dsiSupportsAutoLocalAccess[299469](arg _mt[299475]:_MT[201], arg this[299472]:DefaultRectangularDom[292740](?) :
  DefaultRectangularDom[292740](?)) param : _unknown[42] "method" "method overrides"
  {
    unknown ret[630236] "RVV" "param" "temp"
    (630241 'move' ret[630236](630240 'deref' defaultRectangularSupportsAutoLocalAccess[287733]))
    (630238 return ret[630236])
  }
  function chpl_serialReadWriteRectangular[299482](arg f[299484]:_any[141](?), arg arr[299486]:_any[141](?)) : _unknown[42] throws "no return value for void"
  {
    unknown call_tmp[930676] "expr temp" "maybe param" "maybe type" "temp"
    (930679 'move' call_tmp[930676](299494 call dom _mt[203] arr[299486]))
    (299490 call chpl_serialReadWriteRectangular f[299484] arr[299486] call_tmp[930676])
    (630243 return _void[46])
  }
  function chpl_serialReadWriteRectangular[299499](arg f[299501]:_any[141](?), arg arr[299503]:_any[141](?), arg dom[299505]:_any[141](?)) : _unknown[42] throws "last resort" "no return value for void"
  {
    (299509 call chpl_serialReadWriteRectangularHelper f[299501] arr[299503] dom[299505])
    (630245 return _void[46])
  }
  function _supportsBulkElements[299515](arg f[299517]:_any[141](?), arg arr[299519]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[630249] "RVV" "param" "temp"
    unknown temp[299527] "dead at end of block" "insert auto destroy"
    unknown call_tmp[930683] "expr temp" "maybe param" "maybe type" "temp"
    (930686 'move' call_tmp[930683](299531 call eltType _mt[203] arr[299519]))
    unknown call_tmp[930688] "expr temp" "maybe param" "maybe type" "temp"
    (930691 'move' call_tmp[930688](299529 call c_ptr[46891](?) call_tmp[930683]))
    (653319 'default init var' temp[299527] call_tmp[930688])
    (299535 'end of statement')
    unknown call_tmp[930695] "expr temp" "maybe param" "maybe type" "temp"
    (930698 'move' call_tmp[930695](299577 call _writing _mt[203] f[299517]))
    unknown call_tmp[930700] "expr temp" "maybe param" "maybe type" "temp"
    (930703 'move' call_tmp[930700](299580 call _cond_test call_tmp[930695]))
    if call_tmp[930700]
    {
      unknown call_tmp[930707] "expr temp" "maybe param" "maybe type" "temp"
      (930710 'move' call_tmp[930707](299543 call serializer _mt[203] f[299517]))
      unknown call_tmp[930712] "expr temp" "maybe param" "maybe type" "temp"
      (930715 'move' call_tmp[930712](299551 call : 0 uint(64)[86]))
      unknown call_tmp[930717] "expr temp" "maybe param" "maybe type" "temp"
      (930720 'move' call_tmp[930717](299541 call canResolveMethod module=[222] Reflection[1804] call_tmp[930707] "writeBulkElements" f[299517] temp[299527] call_tmp[930712]))
      (630255 'move' ret[630249](630254 'coerce' call_tmp[930717] bool[19]))
      gotoReturn _end__supportsBulkElements[630247] _end__supportsBulkElements[630247]
      (567875 'end of statement' temp[299527])
      (410045 'referenced modules list' Reflection[1804])
    }
    {
      unknown call_tmp[930724] "expr temp" "maybe param" "maybe type" "temp"
      (930727 'move' call_tmp[930724](299563 call deserializer _mt[203] f[299517]))
      unknown call_tmp[930729] "expr temp" "maybe param" "maybe type" "temp"
      (930732 'move' call_tmp[930729](299571 call : 0 uint(64)[86]))
      unknown call_tmp[930734] "expr temp" "maybe param" "maybe type" "temp"
      (930737 'move' call_tmp[930734](299561 call canResolveMethod module=[222] Reflection[1804] call_tmp[930724] "readBulkElements" f[299517] temp[299527] call_tmp[930729]))
      (630261 'move' ret[630249](630260 'coerce' call_tmp[930734] bool[19]))
      gotoReturn _end__supportsBulkElements[630247] _end__supportsBulkElements[630247]
      (567877 'end of statement' temp[299527])
      (410052 'referenced modules list' Reflection[1804])
    }
    label _end__supportsBulkElements[630247]
    (630251 return ret[630249])
    (397001 'used modules list'(299524 'use' Reflection[1804]))
  }
  { scopeless type
    bool[19]
  }
  function _supportsSerializers[299589](arg f[299591]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[630267] "RVV" "param" "temp"
    unknown call_tmp[930741] "expr temp" "maybe param" "maybe type" "temp"
    (930744 'move' call_tmp[930741](299614 call _writing _mt[203] f[299591]))
    unknown call_tmp[930746] "expr temp" "maybe param" "maybe type" "temp"
    (930749 'move' call_tmp[930746](299617 call _cond_test call_tmp[930741]))
    if call_tmp[930746]
    {
      unknown call_tmp[930753] "expr temp" "maybe param" "maybe type" "temp"
      (930756 'move' call_tmp[930753](299599 call serializerType _mt[203] f[299591]))
      unknown call_tmp[930758] "expr temp" "maybe param" "maybe type" "temp"
      (930761 'move' call_tmp[930758](299596 call != call_tmp[930753] nothing[7]))
      (630273 'move' ret[630267](630272 'coerce' call_tmp[930758] bool[19]))
      gotoReturn _end__supportsSerializers[630265] _end__supportsSerializers[630265]
    }
    {
      unknown call_tmp[930765] "expr temp" "maybe param" "maybe type" "temp"
      (930768 'move' call_tmp[930765](299608 call deserializerType _mt[203] f[299591]))
      unknown call_tmp[930770] "expr temp" "maybe param" "maybe type" "temp"
      (930773 'move' call_tmp[930770](299605 call != call_tmp[930765] nothing[7]))
      (630279 'move' ret[630267](630278 'coerce' call_tmp[930770] bool[19]))
      gotoReturn _end__supportsSerializers[630265] _end__supportsSerializers[630265]
    }
    label _end__supportsSerializers[630265]
    (630269 return ret[630267])
  }
  { scopeless type
    bool[19]
  }
  function chpl_serialReadWriteRectangularHelper[299626](arg f[299628]:_any[141](?), arg arr[299630]:_any[141](?), arg dom[299632]:_any[141](?)) : _unknown[42] throws "no return value for void"
  {
    unknown call_tmp[930777] "maybe param" "maybe type" "temp"
    (930780 'move' call_tmp[930777](299641 call rank _mt[203] arr[299630]))
    unknown rank[299639] "dead at end of block" "param"
    (653321 'init var' rank[299639] call_tmp[930777])
    (299645 'end of statement')
    unknown idxType[299647] "dead at end of block" "insert auto destroy" "type variable"
    (653327 'move' idxType[299647](653324 call idxType _mt[203] arr[299630]))
    unknown idxSignedType[299654] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[930784] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (930787 'move' call_tmp[930784](653332 call chpl__idxTypeToIntIdxType idxType[299647]))
    (653334 'move' idxSignedType[299654](653330 call chpl__signedType call_tmp[930784]))
    unknown helper[299662] "dead at end of block" "insert auto destroy"
    unknown tmp[705650] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705651] "maybe param" "temp"
    unknown call_tmp[930791] "expr temp" "maybe param" "maybe type" "temp"
    (930794 'move' call_tmp[930791](299664 call _writing _mt[203] f[299628]))
    (705656 'move' tmp[705651](705654 call _cond_test call_tmp[930791]))
    if tmp[705651]
    {
      unknown tmp[705658] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[930798] "expr temp" "maybe param" "maybe type" "temp"
      (930801 'move' call_tmp[930798](299668 call serializer _mt[203] f[299628]))
      unknown call_tmp[930807] "expr temp" "maybe param" "maybe type" "temp"
      (930810 'move' call_tmp[930807](299679 call dsiNumIndices _mt[203] dom[299632]))
      unknown call_tmp[930812] "expr temp" "maybe param" "maybe type" "temp"
      (930815 'move' call_tmp[930812](299676 call : call_tmp[930807] int(64)[10]))
      (705660 'move' tmp[705658](299674 call(299671 call (partial) startArray _mt[203] call_tmp[930798]) f[299628] call_tmp[930812]))
      (705665 'move' tmp[705650](705662 '_paramFoldLogical' tmp[705651] tmp[705658]))
    }
    {
      unknown tmp[705667] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[930819] "expr temp" "maybe param" "maybe type" "temp"
      (930822 'move' call_tmp[930819](299684 call deserializer _mt[203] f[299628]))
      (705669 'move' tmp[705667](299690 call(299687 call (partial) startArray _mt[203] call_tmp[930819]) f[299628]))
      (705674 'move' tmp[705650](705671 '_paramFoldLogical' tmp[705651] tmp[705667]))
    }
    (653336 'init var' helper[299662] tmp[705650])
    (299696 'end of statement')
    function recursiveArrayReaderWriter[299697](in arg idx[299703] :
    (299699 call * rank[299639] idxType[299647]), arg dim[299707] :
    0 =
    0, in arg last[299711] :
    0 =
    0) : _unknown[42] throws "no return value for void"
    {
      unknown strType[299716] "dead at end of block" "insert auto destroy" "type variable"
      (653339 'move' strType[299716] idxSignedType[299654])
      const makeStridePositive[299720] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[705681] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705682] "maybe param" "temp"
      unknown call_tmp[930828] "expr temp" "maybe param" "maybe type" "temp"
      (930831 'move' call_tmp[930828](299727 call(299724 call (partial) dsiDim _mt[203] dom[299632]) dim[299707]))
      unknown call_tmp[930835] "expr temp" "maybe param" "maybe type" "temp"
      (930838 'move' call_tmp[930835](299729 call stride _mt[203] call_tmp[930828]))
      unknown call_tmp[930840] "expr temp" "maybe param" "maybe type" "temp"
      (930843 'move' call_tmp[930840](299721 call > call_tmp[930835] 0))
      (705687 'move' tmp[705682](705685 call _cond_test call_tmp[930840]))
      if tmp[705682]
      {
        unknown tmp[705689] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (705691 'move' tmp[705689](299733 call : 1 strType[299716]))
        (705696 'move' tmp[705681](705693 '_paramFoldLogical' tmp[705682] tmp[705689]))
      }
      {
        unknown tmp[705698] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[930845] "expr temp" "maybe param" "maybe type" "temp"
        (930848 'move' call_tmp[930845](299739 call - 1))
        (705700 'move' tmp[705698](299737 call : call_tmp[930845] strType[299716]))
        (705705 'move' tmp[705681](705702 '_paramFoldLogical' tmp[705682] tmp[705698]))
      }
      (653341 'init var' makeStridePositive[299720] tmp[705681])
      (299747 'end of statement' strType[299716])
      unknown call_tmp[930852] "expr temp" "maybe param" "maybe type" "temp"
      (930855 'move' call_tmp[930852](299770 call _writing _mt[203] f[299628]))
      unknown call_tmp[930857] "expr temp" "maybe param" "maybe type" "temp"
      (930860 'move' call_tmp[930857](299773 call _cond_test call_tmp[930852]))
      if call_tmp[930857]
      {
        unknown call_tmp[930866] "expr temp" "maybe param" "maybe type" "temp"
        (930869 'move' call_tmp[930866](299757 call(299754 call (partial) dsiDim _mt[203] dom[299632]) dim[299707]))
        unknown call_tmp[930873] "expr temp" "maybe param" "maybe type" "temp"
        (930876 'move' call_tmp[930873](299759 call size _mt[203] call_tmp[930866]))
        (299752 call(299749 call (partial) startDim _mt[203] helper[299662]) call_tmp[930873])
      }
      {
        (299767 call(299764 call (partial) startDim _mt[203] helper[299662]))
      }
      unknown call_tmp[930880] "expr temp" "maybe param" "maybe type" "temp"
      (930883 'move' call_tmp[930880](299980 call - rank[299639] 1))
      unknown call_tmp[930885] "expr temp" "maybe param" "maybe type" "temp"
      (930888 'move' call_tmp[930885](299977 call == dim[299707] call_tmp[930880]))
      unknown call_tmp[930890] "expr temp" "maybe param" "maybe type" "temp"
      (930893 'move' call_tmp[930890](299984 call _cond_test call_tmp[930885]))
      if call_tmp[930890]
      {
        {
          unknown _indexOfInterest[299837] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[299838] "expr temp" "temp"
          unknown call_tmp[930897] "expr temp" "maybe param" "maybe type" "temp"
          (930900 'move' call_tmp[930897](299788 call(299785 call (partial) dsiDim _mt[203] dom[299632]) dim[299707]))
          unknown call_tmp[930902] "expr temp" "maybe param" "maybe type" "temp"
          (930905 'move' call_tmp[930902](299782 call chpl_by call_tmp[930897] makeStridePositive[299720]))
          (299847 'move' _iterator[299838](299845 call _getIterator call_tmp[930902]))
          Defer
          {
            {
              (299869 call _freeIterator _iterator[299838])
            }
          }
          { scopeless type
            (299859 'move' _indexOfInterest[299837](299856 call iteratorIndex _iterator[299838]))
          }
          ForLoop[299839]
          {
            unknown j[299780] "index var" "insert auto destroy"
            (567886 'end of statement')
            (299864 'move' j[299780] _indexOfInterest[299837])
            (567887 'end of statement' j[299780])
            {
              unknown call_tmp[930907] "expr temp" "maybe param" "maybe type" "temp"
              (930910 'move' call_tmp[930907](299795 call idx[299703] dim[299707]))
              (299792 call = call_tmp[930907] j[299780])
              (567889 'end of statement' j[299780])
              unknown call_tmp[930914] "expr temp" "maybe param" "maybe type" "temp"
              (930917 'move' call_tmp[930914](299829 call _writing _mt[203] f[299628]))
              unknown call_tmp[930919] "expr temp" "maybe param" "maybe type" "temp"
              (930922 'move' call_tmp[930919](299832 call _cond_test call_tmp[930914]))
              if call_tmp[930919]
              {
                unknown call_tmp[930928] "expr temp" "maybe param" "maybe type" "temp"
                (930931 'move' call_tmp[930928](299807 call(299804 call (partial) dsiAccess _mt[203] arr[299630]) idx[299703]))
                (299802 call(299799 call (partial) writeElement _mt[203] helper[299662]) call_tmp[930928])
              }
              {
                unknown call_tmp[930935] "expr temp" "maybe param" "maybe type" "temp"
                (930938 'move' call_tmp[930935](299817 call(299814 call (partial) dsiAccess _mt[203] arr[299630]) idx[299703]))
                unknown call_tmp[930944] "expr temp" "maybe param" "maybe type" "temp"
                (930947 'move' call_tmp[930944](299825 call eltType _mt[203] arr[299630]))
                unknown call_tmp[930949] "expr temp" "maybe param" "maybe type" "temp"
                (930952 'move' call_tmp[930949](299823 call(299820 call (partial) readElement _mt[203] helper[299662]) call_tmp[930944]))
                (299811 call = call_tmp[930935] call_tmp[930949])
              }
            }
            label _continueLabel[299842]
            _indexOfInterest[299837]
            _iterator[299838]
          }
          label _breakLabel[299843]
        }
      }
      {
        {
          unknown _indexOfInterest[299938] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[299939] "expr temp" "temp"
          unknown call_tmp[930956] "expr temp" "maybe param" "maybe type" "temp"
          (930959 'move' call_tmp[930956](299885 call(299882 call (partial) dsiDim _mt[203] dom[299632]) dim[299707]))
          unknown call_tmp[930961] "expr temp" "maybe param" "maybe type" "temp"
          (930964 'move' call_tmp[930961](299879 call chpl_by call_tmp[930956] makeStridePositive[299720]))
          (299948 'move' _iterator[299939](299946 call _getIterator call_tmp[930961]))
          Defer
          {
            {
              (299970 call _freeIterator _iterator[299939])
            }
          }
          { scopeless type
            (299960 'move' _indexOfInterest[299938](299957 call iteratorIndex _iterator[299939]))
          }
          ForLoop[299940]
          {
            unknown j[299877] "index var" "insert auto destroy"
            (567894 'end of statement')
            (299965 'move' j[299877] _indexOfInterest[299938])
            (567895 'end of statement' j[299877])
            {
              unknown call_tmp[930968] "expr temp" "maybe param" "maybe type" "temp"
              (930971 'move' call_tmp[930968](299895 call(299892 call (partial) dsiDim _mt[203] dom[299632]) dim[299707]))
              unknown call_tmp[930975] "maybe param" "maybe type" "temp"
              (930978 'move' call_tmp[930975](299897 call last _mt[203] call_tmp[930968]))
              unknown lastIdx[299890] "dead at end of block" "insert auto destroy"
              (653343 'init var' lastIdx[299890] call_tmp[930975])
              (299901 'end of statement')
              unknown call_tmp[930980] "expr temp" "maybe param" "maybe type" "temp"
              (930983 'move' call_tmp[930980](299905 call idx[299703] dim[299707]))
              (299902 call = call_tmp[930980] j[299877])
              (567897 'end of statement' j[299877])
              unknown tmp[503646] "maybe param" "temp"
              unknown tmp[503667] "maybe param" "temp"
              (503678 'move' tmp[503667] last[299711])
              unknown call_tmp[930985] "expr temp" "maybe param" "maybe type" "temp"
              (930988 'move' call_tmp[930985](503680 call _cond_invalid tmp[503667]))
              if call_tmp[930985]
              {
                (503683 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[705712] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[705713] "maybe param" "temp"
              unknown call_tmp[930990] "expr temp" "maybe param" "maybe type" "temp"
              (930993 'move' call_tmp[930990](503668 call isTrue tmp[503667]))
              (705718 'move' tmp[705713](705716 call _cond_test call_tmp[930990]))
              if tmp[705713]
              {
                (705723 'move' tmp[705712](705720 '_paramFoldLogical' tmp[705713] 1))
              }
              {
                unknown tmp[705725] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[930995] "expr temp" "maybe param" "maybe type" "temp"
                (930998 'move' call_tmp[930995](299921 call == dim[299707] 0))
                (705727 'move' tmp[705725](503672 call isTrue call_tmp[930995]))
                (705732 'move' tmp[705712](705729 '_paramFoldLogical' tmp[705713] tmp[705725]))
              }
              (503657 'move' tmp[503646] tmp[705712])
              unknown call_tmp[931000] "expr temp" "maybe param" "maybe type" "temp"
              (931003 'move' call_tmp[931000](503659 call _cond_invalid tmp[503646]))
              if call_tmp[931000]
              {
                (503662 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[705739] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[705740] "maybe param" "temp"
              unknown call_tmp[931005] "expr temp" "maybe param" "maybe type" "temp"
              (931008 'move' call_tmp[931005](503647 call isTrue tmp[503646]))
              (705745 'move' tmp[705740](705743 call _cond_test call_tmp[931005]))
              if tmp[705740]
              {
                unknown tmp[705747] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[931012] "expr temp" "maybe param" "maybe type" "temp"
                (931015 'move' call_tmp[931012](299932 call(299929 call (partial) dsiDim _mt[203] dom[299632]) dim[299707]))
                unknown call_tmp[931019] "expr temp" "maybe param" "maybe type" "temp"
                (931022 'move' call_tmp[931019](299934 call high _mt[203] call_tmp[931012]))
                unknown call_tmp[931024] "expr temp" "maybe param" "maybe type" "temp"
                (931027 'move' call_tmp[931024](299925 call == j[299877] call_tmp[931019]))
                (705749 'move' tmp[705747](503650 call isTrue call_tmp[931024]))
                (705754 'move' tmp[705739](705751 '_paramFoldLogical' tmp[705740] tmp[705747]))
              }
              {
                (705759 'move' tmp[705739](705756 '_paramFoldLogical' tmp[705740] 0))
              }
              unknown call_tmp[931029] "expr temp" "maybe param" "maybe type" "temp"
              (931032 'move' call_tmp[931029](299911 call + dim[299707] 1))
              (299909 call recursiveArrayReaderWriter idx[299703](dim = call_tmp[931029])(last = tmp[705739]))
              (567901 'end of statement' j[299877])
            }
            label _continueLabel[299943]
            _indexOfInterest[299938]
            _iterator[299939]
          }
          label _breakLabel[299944]
        }
      }
      (299992 call(299989 call (partial) endDim _mt[203] helper[299662]))
      (630283 return _void[46])
    }
    unknown dummy[299999] "dead at end of block" "insert auto destroy"
    unknown call_tmp[931038] "expr temp" "maybe param" "maybe type" "temp"
    (931041 'move' call_tmp[931038](300003 call eltType _mt[203] arr[299630]))
    unknown call_tmp[931043] "expr temp" "maybe param" "maybe type" "temp"
    (931046 'move' call_tmp[931043](300001 call c_ptr[46891](?) call_tmp[931038]))
    (653345 'default init var' dummy[299999] call_tmp[931043])
    (300007 'end of statement')
    unknown tmp[503688] "maybe param" "temp"
    (503699 'move' tmp[503688](300016 call canResolveMethod module=[222] Reflection[1804] helper[299662] "writeBulkElements" dummy[299999] 0))
    unknown call_tmp[931048] "expr temp" "maybe param" "maybe type" "temp"
    (931051 'move' call_tmp[931048](503701 call _cond_invalid tmp[503688]))
    if call_tmp[931048]
    {
      (503704 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown canResolveBulkElements[300009] "dead at end of block" "param"
    unknown tmp[705766] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705767] "maybe param" "temp"
    unknown call_tmp[931053] "expr temp" "maybe param" "maybe type" "temp"
    (931056 'move' call_tmp[931053](503689 call isTrue tmp[503688]))
    (705772 'move' tmp[705767](705770 call _cond_test call_tmp[931053]))
    if tmp[705767]
    {
      (705777 'move' tmp[705766](705774 '_paramFoldLogical' tmp[705767] 1))
    }
    {
      unknown tmp[705779] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931058] "expr temp" "maybe param" "maybe type" "temp"
      (931061 'move' call_tmp[931058](300025 call canResolveMethod module=[222] Reflection[1804] helper[299662] "readBulkElements" dummy[299999] 0))
      (705781 'move' tmp[705779](503693 call isTrue call_tmp[931058]))
      (705786 'move' tmp[705766](705783 '_paramFoldLogical' tmp[705767] tmp[705779]))
    }
    (653347 'init var' canResolveBulkElements[300009] tmp[705766])
    (300031 'end of statement')
    unknown tmp[503709] "maybe param" "temp"
    unknown tmp[503730] "maybe param" "temp"
    unknown tmp[503751] "maybe param" "temp"
    (503762 'move' tmp[503751] canResolveBulkElements[300009])
    unknown call_tmp[931063] "expr temp" "maybe param" "maybe type" "temp"
    (931066 'move' call_tmp[931063](503764 call _cond_invalid tmp[503751]))
    if call_tmp[931063]
    {
      (503767 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705793] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705794] "maybe param" "temp"
    unknown call_tmp[931068] "expr temp" "maybe param" "maybe type" "temp"
    (931071 'move' call_tmp[931068](503752 call isTrue tmp[503751]))
    (705799 'move' tmp[705794](705797 call _cond_test call_tmp[931068]))
    if tmp[705794]
    {
      unknown tmp[705801] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931075] "expr temp" "maybe param" "maybe type" "temp"
      (931078 'move' call_tmp[931075](300045 call(300042 call (partial) isDefaultRectangular _mt[203] arr[299630])))
      (705803 'move' tmp[705801](503755 call isTrue call_tmp[931075]))
      (705808 'move' tmp[705793](705805 '_paramFoldLogical' tmp[705794] tmp[705801]))
    }
    {
      (705813 'move' tmp[705793](705810 '_paramFoldLogical' tmp[705794] 0))
    }
    (503741 'move' tmp[503730] tmp[705793])
    unknown call_tmp[931080] "expr temp" "maybe param" "maybe type" "temp"
    (931083 'move' call_tmp[931080](503743 call _cond_invalid tmp[503730]))
    if call_tmp[931080]
    {
      (503746 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705820] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705821] "maybe param" "temp"
    unknown call_tmp[931085] "expr temp" "maybe param" "maybe type" "temp"
    (931088 'move' call_tmp[931085](503731 call isTrue tmp[503730]))
    (705826 'move' tmp[705821](705824 call _cond_test call_tmp[931085]))
    if tmp[705821]
    {
      unknown tmp[705828] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931090] "expr temp" "maybe param" "maybe type" "temp"
      (931093 'move' call_tmp[931090](300049 call chpl__isArrayView arr[299630]))
      unknown call_tmp[931095] "expr temp" "maybe param" "maybe type" "temp"
      (931098 'move' call_tmp[931095](300046 call ! call_tmp[931090]))
      (705830 'move' tmp[705828](503734 call isTrue call_tmp[931095]))
      (705835 'move' tmp[705820](705832 '_paramFoldLogical' tmp[705821] tmp[705828]))
    }
    {
      (705840 'move' tmp[705820](705837 '_paramFoldLogical' tmp[705821] 0))
    }
    (503720 'move' tmp[503709] tmp[705820])
    unknown call_tmp[931100] "expr temp" "maybe param" "maybe type" "temp"
    (931103 'move' call_tmp[931100](503722 call _cond_invalid tmp[503709]))
    if call_tmp[931100]
    {
      (503725 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown useBulkElements[300033] "dead at end of block" "param"
    unknown tmp[705847] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705848] "maybe param" "temp"
    unknown call_tmp[931105] "expr temp" "maybe param" "maybe type" "temp"
    (931108 'move' call_tmp[931105](503710 call isTrue tmp[503709]))
    (705853 'move' tmp[705848](705851 call _cond_test call_tmp[931105]))
    if tmp[705848]
    {
      unknown tmp[705855] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931112] "expr temp" "maybe param" "maybe type" "temp"
      (931115 'move' call_tmp[931112](300054 call eltType _mt[203] arr[299630]))
      unknown call_tmp[931117] "expr temp" "maybe param" "maybe type" "temp"
      (931120 'move' call_tmp[931117](300052 call _isSimpleIoType call_tmp[931112]))
      (705857 'move' tmp[705855](503713 call isTrue call_tmp[931117]))
      (705862 'move' tmp[705847](705859 '_paramFoldLogical' tmp[705848] tmp[705855]))
    }
    {
      (705867 'move' tmp[705847](705864 '_paramFoldLogical' tmp[705848] 0))
    }
    (653349 'init var' useBulkElements[300033] tmp[705847])
    (300058 'end of statement')
    unknown call_tmp[931124] "expr temp" "maybe param" "maybe type" "temp"
    (931127 'move' call_tmp[931124](300064 call dsiNumIndices _mt[203] dom[299632]))
    unknown call_tmp[931129] "maybe param" "maybe type" "temp"
    (931132 'move' call_tmp[931129](300061 call : call_tmp[931124] int(64)[10]))
    const len[300060] "dead at end of block" "const" "insert auto destroy"
    (653351 'init var' len[300060] call_tmp[931129])
    (300069 'end of statement')
    unknown dataLoc[300071] "dead at end of block" "insert auto destroy"
    unknown tmp[705874] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705875] "maybe param" "temp"
    unknown call_tmp[931134] "expr temp" "maybe param" "maybe type" "temp"
    (931137 'move' call_tmp[931134](300072 call > len[300060] 0))
    (705880 'move' tmp[705875](705878 call _cond_test call_tmp[931134]))
    if tmp[705875]
    {
      unknown tmp[705882] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931143] "expr temp" "maybe param" "maybe type" "temp"
      (931146 'move' call_tmp[931143](300082 call dsiFirst _mt[203] dom[299632]))
      unknown call_tmp[931148] "expr temp" "maybe param" "maybe type" "temp"
      (931151 'move' call_tmp[931148](300080 call(300077 call (partial) dsiAccess _mt[203] arr[299630]) call_tmp[931143]))
      unknown call_tmp[931153] "expr temp" "maybe param" "maybe type" "temp"
      (931156 'move' call_tmp[931153](300085 '_wide_get_locale' call_tmp[931148]))
      (705884 'move' tmp[705882](300086 call chpl_localeID_to_locale call_tmp[931153]))
      (705889 'move' tmp[705874](705886 '_paramFoldLogical' tmp[705875] tmp[705882]))
    }
    {
      unknown tmp[705891] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (705893 'move' tmp[705891](458343 call here[135591]))
      (705898 'move' tmp[705874](705895 '_paramFoldLogical' tmp[705875] tmp[705891]))
    }
    (653353 'init var' dataLoc[300071] tmp[705874])
    (300093 'end of statement' idxType[299647] helper[299662] dummy[299999] len[300060])
    unknown tmp[503772] "maybe param" "temp"
    unknown tmp[503793] "maybe param" "temp"
    unknown tmp[503814] "maybe param" "temp"
    (503825 'move' tmp[503814] useBulkElements[300033])
    unknown call_tmp[931158] "expr temp" "maybe param" "maybe type" "temp"
    (931161 'move' call_tmp[931158](503827 call _cond_invalid tmp[503814]))
    if call_tmp[931158]
    {
      (503830 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705905] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705906] "maybe param" "temp"
    unknown call_tmp[931163] "expr temp" "maybe param" "maybe type" "temp"
    (931166 'move' call_tmp[931163](503815 call isTrue tmp[503814]))
    (705911 'move' tmp[705906](705909 call _cond_test call_tmp[931163]))
    if tmp[705906]
    {
      unknown tmp[705913] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931170] "expr temp" "maybe param" "maybe type" "temp"
      (931173 'move' call_tmp[931170](300163 call(300160 call (partial) isDataContiguous _mt[203] arr[299630]) dom[299632]))
      (705915 'move' tmp[705913](503818 call isTrue call_tmp[931170]))
      (705920 'move' tmp[705905](705917 '_paramFoldLogical' tmp[705906] tmp[705913]))
    }
    {
      (705925 'move' tmp[705905](705922 '_paramFoldLogical' tmp[705906] 0))
    }
    (503804 'move' tmp[503793] tmp[705905])
    unknown call_tmp[931175] "expr temp" "maybe param" "maybe type" "temp"
    (931178 'move' call_tmp[931175](503806 call _cond_invalid tmp[503793]))
    if call_tmp[931175]
    {
      (503809 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705932] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705933] "maybe param" "temp"
    unknown call_tmp[931180] "expr temp" "maybe param" "maybe type" "temp"
    (931183 'move' call_tmp[931180](503794 call isTrue tmp[503793]))
    (705938 'move' tmp[705933](705936 call _cond_test call_tmp[931180]))
    if tmp[705933]
    {
      unknown tmp[705940] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931185] "expr temp" "maybe param" "maybe type" "temp"
      (931188 'move' call_tmp[931185](300165 call > len[300060] 0))
      (705942 'move' tmp[705940](503797 call isTrue call_tmp[931185]))
      (705947 'move' tmp[705932](705944 '_paramFoldLogical' tmp[705933] tmp[705940]))
    }
    {
      (705952 'move' tmp[705932](705949 '_paramFoldLogical' tmp[705933] 0))
    }
    (503783 'move' tmp[503772] tmp[705932])
    unknown call_tmp[931190] "expr temp" "maybe param" "maybe type" "temp"
    (931193 'move' call_tmp[931190](503785 call _cond_invalid tmp[503772]))
    if call_tmp[931190]
    {
      (503788 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[705959] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[705960] "maybe param" "temp"
    unknown call_tmp[931195] "expr temp" "maybe param" "maybe type" "temp"
    (931198 'move' call_tmp[931195](503773 call isTrue tmp[503772]))
    (705965 'move' tmp[705960](705963 call _cond_test call_tmp[931195]))
    if tmp[705960]
    {
      unknown tmp[705967] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931202] "expr temp" "maybe param" "maybe type" "temp"
      (931205 'move' call_tmp[931202](300172 call _home _mt[203] f[299628]))
      unknown call_tmp[931207] "expr temp" "maybe param" "maybe type" "temp"
      (931210 'move' call_tmp[931207](300169 call == call_tmp[931202] dataLoc[300071]))
      (705969 'move' tmp[705967](503776 call isTrue call_tmp[931207]))
      (705974 'move' tmp[705959](705971 '_paramFoldLogical' tmp[705960] tmp[705967]))
    }
    {
      (705979 'move' tmp[705959](705976 '_paramFoldLogical' tmp[705960] 0))
    }
    unknown call_tmp[931212] "expr temp" "maybe param" "maybe type" "temp"
    (931215 'move' call_tmp[931212](300176 call _cond_test tmp[705959]))
    if call_tmp[931212]
    {
      unknown call_tmp[931221] "expr temp" "maybe param" "maybe type" "temp"
      (931224 'move' call_tmp[931221](300105 call dsiFirst _mt[203] dom[299632]))
      unknown call_tmp[931226] "expr temp" "maybe param" "maybe type" "temp"
      (931229 'move' call_tmp[931226](300103 call(300100 call (partial) dsiAccess _mt[203] arr[299630]) call_tmp[931221]))
      unknown call_tmp[931231] "maybe param" "maybe type" "temp"
      (931234 'move' call_tmp[931231](300098 call c_addrOf call_tmp[931226]))
      unknown ptr[300096] "dead at end of block" "insert auto destroy"
      (653355 'init var' ptr[300096] call_tmp[931231])
      (300109 'end of statement')
      unknown call_tmp[931238] "expr temp" "maybe param" "maybe type" "temp"
      (931241 'move' call_tmp[931238](300131 call _writing _mt[203] f[299628]))
      unknown call_tmp[931243] "expr temp" "maybe param" "maybe type" "temp"
      (931246 'move' call_tmp[931243](300134 call _cond_test call_tmp[931238]))
      if call_tmp[931243]
      {
        (300116 call(300113 call (partial) writeBulkElements _mt[203] helper[299662]) ptr[300096] len[300060])
        (567914 'end of statement' helper[299662] ptr[300096] len[300060])
      }
      {
        (300126 call(300123 call (partial) readBulkElements _mt[203] helper[299662]) ptr[300096] len[300060])
        (567918 'end of statement' helper[299662] ptr[300096] len[300060])
      }
    }
    {
      const zeroTup[300142] "dead at end of block" "const" "insert auto destroy"
      unknown call_tmp[931252] "expr temp" "maybe param" "maybe type" "temp"
      (931255 'move' call_tmp[931252](300143 call * rank[299639] idxType[299647]))
      (653357 'default init var' zeroTup[300142] call_tmp[931252])
      (300148 'end of statement' idxType[299647])
      (300150 call recursiveArrayReaderWriter zeroTup[300142])
      (567923 'end of statement' zeroTup[300142])
    }
    (300184 call(300181 call (partial) endArray _mt[203] helper[299662]))
    (567925 'end of statement' helper[299662])
    (630285 return _void[46])
    (397003 'used modules list'(299996 'use' Reflection[1804]))
    (410086 'referenced modules list' Reflection[1804] Reflection[1804])
  }
  where {
    (299635 call _supportsSerializers f[299628])
  }
  function chpl_serialReadWriteRectangularHelper[300188](arg f[300190]:_any[141](?), arg arr[300192]:_any[141](?), arg dom[300194]:_any[141](?)) : _unknown[42] throws "no return value for void"
  {
    unknown call_tmp[931261] "maybe param" "maybe type" "temp"
    (931264 'move' call_tmp[931261](300200 call rank _mt[203] arr[300192]))
    unknown rank[300198] "dead at end of block" "param"
    (653359 'init var' rank[300198] call_tmp[931261])
    (300204 'end of statement')
    unknown idxType[300206] "dead at end of block" "insert auto destroy" "type variable"
    (653365 'move' idxType[300206](653362 call idxType _mt[203] arr[300192]))
    unknown idxSignedType[300213] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[931268] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (931271 'move' call_tmp[931268](653370 call chpl__idxTypeToIntIdxType idxType[300206]))
    (653372 'move' idxSignedType[300213](653368 call chpl__signedType call_tmp[931268]))
    unknown eltType[300221] "dead at end of block" "insert auto destroy" "type variable"
    (653378 'move' eltType[300221](653375 call eltType _mt[203] arr[300192]))
    unknown call_tmp[931277] "expr temp" "maybe param" "maybe type" "temp"
    (931280 'move' call_tmp[931277](300235 call(300232 call (partial) styleElement _mt[203] f[300190]) QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[77190]))
    unknown call_tmp[931282] "maybe param" "maybe type" "temp"
    (931285 'move' call_tmp[931282](300229 call : call_tmp[931277] bool[19]))
    const isNative[300228] "dead at end of block" "const" "insert auto destroy"
    (653380 'init var' isNative[300228] call_tmp[931282])
    (300239 'end of statement' idxType[300206])
    function rwLiteral[300240](arg lit[300243]:string[244]) : _unknown[42] throws "inline" "no return value for void"
    {
      unknown call_tmp[931289] "expr temp" "maybe param" "maybe type" "temp"
      (931292 'move' call_tmp[931289](300262 call _writing _mt[203] f[300190]))
      unknown call_tmp[931294] "expr temp" "maybe param" "maybe type" "temp"
      (931297 'move' call_tmp[931294](300265 call _cond_test call_tmp[931289]))
      if call_tmp[931294]
      {
        (300251 call(300248 call (partial) writeLiteral _mt[203] f[300190]) lit[300243])
      }
      {
        (300258 call(300255 call (partial) readLiteral _mt[203] f[300190]) lit[300243])
      }
      (630287 return _void[46])
    }
    function rwSpaces[300273](arg dim[300276]:int(64)[10]) : _unknown[42] throws "no return value for void"
    {
      {
        unknown _indexOfInterest[300290] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[300291] "expr temp" "temp"
        unknown call_tmp[931303] "expr temp" "maybe param" "maybe type" "temp"
        (931306 'move' call_tmp[931303](300304 call chpl_direct_range_iter 1 dim[300276]))
        (300300 'move' _iterator[300291](300298 call _getIterator call_tmp[931303]))
        Defer
        {
          {
            (300319 call _freeIterator _iterator[300291])
          }
        }
        { scopeless type
          (300309 'move' _indexOfInterest[300290](300306 call iteratorIndex _iterator[300291]))
        }
        ForLoop[300292]
        {
          unknown i[300280] "index var" "insert auto destroy"
          (567931 'end of statement')
          (300314 'move' i[300280] _indexOfInterest[300290])
          (567932 'end of statement' i[300280])
          {
            (300288 call rwLiteral " ")
          }
          label _continueLabel[300295]
          _indexOfInterest[300290]
          _iterator[300291]
        }
        label _breakLabel[300296]
      }
      (630289 return _void[46])
    }
    function recursiveArrayReaderWriter[300328](in arg idx[300334] :
    (300330 call * rank[300198] idxType[300206]), arg dim[300338] :
    0 =
    0, in arg last[300342] :
    0 =
    0) : _unknown[42] throws "no return value for void"
    {
      unknown call_tmp[931310] "maybe param" "maybe type" "temp"
      (931313 'move' call_tmp[931310](300352 call(300349 call (partial) _binary _mt[203] f[300190])))
      unknown binary[300347] "dead at end of block" "insert auto destroy"
      (653382 'init var' binary[300347] call_tmp[931310])
      (300354 'end of statement')
      unknown call_tmp[931317] "maybe param" "maybe type" "temp"
      (931320 'move' call_tmp[931317](300361 call(300358 call (partial) styleElement _mt[203] f[300190]) QIO_STYLE_ELEMENT_ARRAY[77170]))
      unknown arrayStyle[300356] "dead at end of block" "insert auto destroy"
      (653384 'init var' arrayStyle[300356] call_tmp[931317])
      (300364 'end of statement')
      unknown tmp[503835] "maybe param" "temp"
      (503846 'move' tmp[503835](300369 call == arrayStyle[300356] QIO_ARRAY_FORMAT_SPACE[77200]))
      unknown call_tmp[931322] "expr temp" "maybe param" "maybe type" "temp"
      (931325 'move' call_tmp[931322](503848 call _cond_invalid tmp[503835]))
      if call_tmp[931322]
      {
        (503851 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown isspace[300366] "dead at end of block" "insert auto destroy"
      unknown tmp[705986] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[705987] "maybe param" "temp"
      unknown call_tmp[931327] "expr temp" "maybe param" "maybe type" "temp"
      (931330 'move' call_tmp[931327](503836 call isTrue tmp[503835]))
      (705992 'move' tmp[705987](705990 call _cond_test call_tmp[931327]))
      if tmp[705987]
      {
        unknown tmp[705994] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[931332] "expr temp" "maybe param" "maybe type" "temp"
        (931335 'move' call_tmp[931332](300373 call ! binary[300347]))
        (705996 'move' tmp[705994](503839 call isTrue call_tmp[931332]))
        (706001 'move' tmp[705986](705998 '_paramFoldLogical' tmp[705987] tmp[705994]))
      }
      {
        (706006 'move' tmp[705986](706003 '_paramFoldLogical' tmp[705987] 0))
      }
      (653386 'init var' isspace[300366] tmp[705986])
      (300377 'end of statement')
      unknown tmp[503856] "maybe param" "temp"
      (503867 'move' tmp[503856](300382 call == arrayStyle[300356] QIO_ARRAY_FORMAT_JSON[77210]))
      unknown call_tmp[931337] "expr temp" "maybe param" "maybe type" "temp"
      (931340 'move' call_tmp[931337](503869 call _cond_invalid tmp[503856]))
      if call_tmp[931337]
      {
        (503872 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown isjson[300379] "dead at end of block" "insert auto destroy"
      unknown tmp[706013] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[706014] "maybe param" "temp"
      unknown call_tmp[931342] "expr temp" "maybe param" "maybe type" "temp"
      (931345 'move' call_tmp[931342](503857 call isTrue tmp[503856]))
      (706019 'move' tmp[706014](706017 call _cond_test call_tmp[931342]))
      if tmp[706014]
      {
        unknown tmp[706021] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[931347] "expr temp" "maybe param" "maybe type" "temp"
        (931350 'move' call_tmp[931347](300386 call ! binary[300347]))
        (706023 'move' tmp[706021](503860 call isTrue call_tmp[931347]))
        (706028 'move' tmp[706013](706025 '_paramFoldLogical' tmp[706014] tmp[706021]))
      }
      {
        (706033 'move' tmp[706013](706030 '_paramFoldLogical' tmp[706014] 0))
      }
      (653388 'init var' isjson[300379] tmp[706013])
      (300390 'end of statement')
      unknown tmp[503877] "maybe param" "temp"
      (503888 'move' tmp[503877](300395 call == arrayStyle[300356] QIO_ARRAY_FORMAT_CHPL[77205]))
      unknown call_tmp[931352] "expr temp" "maybe param" "maybe type" "temp"
      (931355 'move' call_tmp[931352](503890 call _cond_invalid tmp[503877]))
      if call_tmp[931352]
      {
        (503893 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown ischpl[300392] "dead at end of block" "insert auto destroy"
      unknown tmp[706040] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[706041] "maybe param" "temp"
      unknown call_tmp[931357] "expr temp" "maybe param" "maybe type" "temp"
      (931360 'move' call_tmp[931357](503878 call isTrue tmp[503877]))
      (706046 'move' tmp[706041](706044 call _cond_test call_tmp[931357]))
      if tmp[706041]
      {
        unknown tmp[706048] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[931362] "expr temp" "maybe param" "maybe type" "temp"
        (931365 'move' call_tmp[931362](300399 call ! binary[300347]))
        (706050 'move' tmp[706048](503881 call isTrue call_tmp[931362]))
        (706055 'move' tmp[706040](706052 '_paramFoldLogical' tmp[706041] tmp[706048]))
      }
      {
        (706060 'move' tmp[706040](706057 '_paramFoldLogical' tmp[706041] 0))
      }
      (653390 'init var' ischpl[300392] tmp[706040])
      (300403 'end of statement')
      unknown strType[300405] "dead at end of block" "insert auto destroy" "type variable"
      (653393 'move' strType[300405] idxSignedType[300213])
      unknown makeStridePositive[300409] "dead at end of block" "insert auto destroy"
      unknown tmp[706067] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[706068] "maybe param" "temp"
      unknown call_tmp[931369] "expr temp" "maybe param" "maybe type" "temp"
      (931372 'move' call_tmp[931369](300416 call(300413 call (partial) dsiDim _mt[203] dom[300194]) dim[300338]))
      unknown call_tmp[931376] "expr temp" "maybe param" "maybe type" "temp"
      (931379 'move' call_tmp[931376](300418 call stride _mt[203] call_tmp[931369]))
      unknown call_tmp[931381] "expr temp" "maybe param" "maybe type" "temp"
      (931384 'move' call_tmp[931381](300410 call > call_tmp[931376] 0))
      (706073 'move' tmp[706068](706071 call _cond_test call_tmp[931381]))
      if tmp[706068]
      {
        unknown tmp[706075] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (706077 'move' tmp[706075](300422 call : 1 strType[300405]))
        (706082 'move' tmp[706067](706079 '_paramFoldLogical' tmp[706068] tmp[706075]))
      }
      {
        unknown tmp[706084] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[931386] "expr temp" "maybe param" "maybe type" "temp"
        (931389 'move' call_tmp[931386](300428 call - 1))
        (706086 'move' tmp[706084](300426 call : call_tmp[931386] strType[300405]))
        (706091 'move' tmp[706067](706088 '_paramFoldLogical' tmp[706068] tmp[706084]))
      }
      (653395 'init var' makeStridePositive[300409] tmp[706067])
      (300436 'end of statement' binary[300347] strType[300405])
      unknown tmp[503898] "maybe param" "temp"
      (503909 'move' tmp[503898] isjson[300379])
      unknown call_tmp[931391] "expr temp" "maybe param" "maybe type" "temp"
      (931394 'move' call_tmp[931391](503911 call _cond_invalid tmp[503898]))
      if call_tmp[931391]
      {
        (503914 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[706098] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[706099] "maybe param" "temp"
      unknown call_tmp[931396] "expr temp" "maybe param" "maybe type" "temp"
      (931399 'move' call_tmp[931396](503899 call isTrue tmp[503898]))
      (706104 'move' tmp[706099](706102 call _cond_test call_tmp[931396]))
      if tmp[706099]
      {
        (706109 'move' tmp[706098](706106 '_paramFoldLogical' tmp[706099] 1))
      }
      {
        unknown tmp[706111] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (706113 'move' tmp[706111](503903 call isTrue ischpl[300392]))
        (706118 'move' tmp[706098](706115 '_paramFoldLogical' tmp[706099] tmp[706111]))
      }
      unknown call_tmp[931401] "expr temp" "maybe param" "maybe type" "temp"
      (931404 'move' call_tmp[931401](300470 call _cond_test tmp[706098]))
      if call_tmp[931401]
      {
        unknown call_tmp[931406] "expr temp" "maybe param" "maybe type" "temp"
        (931409 'move' call_tmp[931406](300457 call - rank[300198] 1))
        unknown call_tmp[931411] "expr temp" "maybe param" "maybe type" "temp"
        (931414 'move' call_tmp[931411](300454 call != dim[300338] call_tmp[931406]))
        unknown call_tmp[931416] "expr temp" "maybe param" "maybe type" "temp"
        (931419 'move' call_tmp[931416](300461 call _cond_test call_tmp[931411]))
        if call_tmp[931416]
        {
          (300440 call rwLiteral "[\n")
          (567941 'end of statement')
          unknown call_tmp[931421] "expr temp" "maybe param" "maybe type" "temp"
          (931424 'move' call_tmp[931421](300446 call + dim[300338] 1))
          (300445 call rwSpaces call_tmp[931421])
        }
        {
          (300451 call rwLiteral "[")
        }
      }
      unknown call_tmp[931426] "expr temp" "maybe param" "maybe type" "temp"
      (931429 'move' call_tmp[931426](300767 call - rank[300198] 1))
      unknown call_tmp[931431] "expr temp" "maybe param" "maybe type" "temp"
      (931434 'move' call_tmp[931431](300764 call == dim[300338] call_tmp[931426]))
      unknown call_tmp[931436] "expr temp" "maybe param" "maybe type" "temp"
      (931439 'move' call_tmp[931436](300771 call _cond_test call_tmp[931431]))
      if call_tmp[931436]
      {
        unknown first[300476] "dead at end of block" "insert auto destroy"
        (653397 'init var' first[300476] 1)
        (300479 'end of statement')
        unknown tmp[503919] "maybe param" "temp"
        (503930 'move' tmp[503919] debugDefaultDist[287662])
        unknown call_tmp[931441] "expr temp" "maybe param" "maybe type" "temp"
        (931444 'move' call_tmp[931441](503932 call _cond_invalid tmp[503919]))
        if call_tmp[931441]
        {
          (503935 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[706125] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[706126] "maybe param" "temp"
        unknown call_tmp[931446] "expr temp" "maybe param" "maybe type" "temp"
        (931449 'move' call_tmp[931446](503920 call isTrue tmp[503919]))
        (706131 'move' tmp[706126](706129 call _cond_test call_tmp[931446]))
        if tmp[706126]
        {
          unknown tmp[706133] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[931453] "expr temp" "maybe param" "maybe type" "temp"
          (931456 'move' call_tmp[931453](300496 call _writing _mt[203] f[300190]))
          (706135 'move' tmp[706133](503923 call isTrue call_tmp[931453]))
          (706140 'move' tmp[706125](706137 '_paramFoldLogical' tmp[706126] tmp[706133]))
        }
        {
          (706145 'move' tmp[706125](706142 '_paramFoldLogical' tmp[706126] 0))
        }
        unknown call_tmp[931458] "expr temp" "maybe param" "maybe type" "temp"
        (931461 'move' call_tmp[931458](300499 call _cond_test tmp[706125]))
        if call_tmp[931458]
        {
          unknown call_tmp[931467] "expr temp" "maybe param" "maybe type" "temp"
          (931470 'move' call_tmp[931467](300489 call(300486 call (partial) dsiDim _mt[203] dom[300194]) dim[300338]))
          (300484 call(300481 call (partial) writeln _mt[203] f[300190]) call_tmp[931467])
        }
        {
          unknown _indexOfInterest[300595] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300596] "expr temp" "temp"
          unknown call_tmp[931474] "expr temp" "maybe param" "maybe type" "temp"
          (931477 'move' call_tmp[931474](300512 call(300509 call (partial) dsiDim _mt[203] dom[300194]) dim[300338]))
          unknown call_tmp[931479] "expr temp" "maybe param" "maybe type" "temp"
          (931482 'move' call_tmp[931479](300506 call chpl_by call_tmp[931474] makeStridePositive[300409]))
          (300605 'move' _iterator[300596](300603 call _getIterator call_tmp[931479]))
          Defer
          {
            {
              (300627 call _freeIterator _iterator[300596])
            }
          }
          { scopeless type
            (300617 'move' _indexOfInterest[300595](300614 call iteratorIndex _iterator[300596]))
          }
          ForLoop[300597]
          {
            unknown j[300504] "index var" "insert auto destroy"
            (567947 'end of statement')
            (300622 'move' j[300504] _indexOfInterest[300595])
            (567948 'end of statement' j[300504])
            {
              unknown call_tmp[931484] "expr temp" "maybe param" "maybe type" "temp"
              (931487 'move' call_tmp[931484](300546 call _cond_test first[300476]))
              if call_tmp[931484]
              {
                (300516 call = first[300476] 0)
                (567950 'end of statement' first[300476])
              }
              {
                unknown call_tmp[931489] "expr temp" "maybe param" "maybe type" "temp"
                (931492 'move' call_tmp[931489](300539 call _cond_test isspace[300366]))
                if call_tmp[931489]
                {
                  (300522 call rwLiteral " ")
                }
                {
                  unknown tmp[503940] "maybe param" "temp"
                  (503951 'move' tmp[503940] isjson[300379])
                  unknown call_tmp[931494] "expr temp" "maybe param" "maybe type" "temp"
                  (931497 'move' call_tmp[931494](503953 call _cond_invalid tmp[503940]))
                  if call_tmp[931494]
                  {
                    (503956 call compilerError "cannot promote short-circuiting || operator")
                  }
                  unknown tmp[706152] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[706153] "maybe param" "temp"
                  unknown call_tmp[931499] "expr temp" "maybe param" "maybe type" "temp"
                  (931502 'move' call_tmp[931499](503941 call isTrue tmp[503940]))
                  (706158 'move' tmp[706153](706156 call _cond_test call_tmp[931499]))
                  if tmp[706153]
                  {
                    (706163 'move' tmp[706152](706160 '_paramFoldLogical' tmp[706153] 1))
                  }
                  {
                    unknown tmp[706165] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    (706167 'move' tmp[706165](503945 call isTrue ischpl[300392]))
                    (706172 'move' tmp[706152](706169 '_paramFoldLogical' tmp[706153] tmp[706165]))
                  }
                  unknown call_tmp[931504] "expr temp" "maybe param" "maybe type" "temp"
                  (931507 'move' call_tmp[931504](300533 call _cond_test tmp[706152]))
                  if call_tmp[931504]
                  {
                    (300526 call rwLiteral ", ")
                  }
                }
              }
              unknown call_tmp[931509] "expr temp" "maybe param" "maybe type" "temp"
              (931512 'move' call_tmp[931509](300555 call idx[300334] dim[300338]))
              (300552 call = call_tmp[931509] j[300504])
              (567955 'end of statement' j[300504])
              unknown call_tmp[931516] "expr temp" "maybe param" "maybe type" "temp"
              (931519 'move' call_tmp[931516](300586 call _writing _mt[203] f[300190]))
              unknown call_tmp[931521] "expr temp" "maybe param" "maybe type" "temp"
              (931524 'move' call_tmp[931521](300589 call _cond_test call_tmp[931516]))
              if call_tmp[931521]
              {
                unknown call_tmp[931530] "expr temp" "maybe param" "maybe type" "temp"
                (931533 'move' call_tmp[931530](300567 call(300564 call (partial) dsiAccess _mt[203] arr[300192]) idx[300334]))
                (300562 call(300559 call (partial) write _mt[203] f[300190]) call_tmp[931530])
              }
              {
                unknown call_tmp[931537] "expr temp" "maybe param" "maybe type" "temp"
                (931540 'move' call_tmp[931537](300576 call(300573 call (partial) dsiAccess _mt[203] arr[300192]) idx[300334]))
                unknown call_tmp[931544] "expr temp" "maybe param" "maybe type" "temp"
                (931547 'move' call_tmp[931544](300582 call(300579 call (partial) read _mt[203] f[300190]) eltType[300221]))
                (300570 call = call_tmp[931537] call_tmp[931544])
              }
            }
            label _continueLabel[300600]
            _indexOfInterest[300595]
            _iterator[300596]
          }
          label _breakLabel[300601]
        }
      }
      {
        {
          unknown _indexOfInterest[300725] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300726] "expr temp" "temp"
          unknown call_tmp[931551] "expr temp" "maybe param" "maybe type" "temp"
          (931554 'move' call_tmp[931551](300643 call(300640 call (partial) dsiDim _mt[203] dom[300194]) dim[300338]))
          unknown call_tmp[931556] "expr temp" "maybe param" "maybe type" "temp"
          (931559 'move' call_tmp[931556](300637 call chpl_by call_tmp[931551] makeStridePositive[300409]))
          (300735 'move' _iterator[300726](300733 call _getIterator call_tmp[931556]))
          Defer
          {
            {
              (300757 call _freeIterator _iterator[300726])
            }
          }
          { scopeless type
            (300747 'move' _indexOfInterest[300725](300744 call iteratorIndex _iterator[300726]))
          }
          ForLoop[300727]
          {
            unknown j[300635] "index var" "insert auto destroy"
            (567960 'end of statement')
            (300752 'move' j[300635] _indexOfInterest[300725])
            (567961 'end of statement' j[300635])
            {
              unknown call_tmp[931563] "expr temp" "maybe param" "maybe type" "temp"
              (931566 'move' call_tmp[931563](300653 call(300650 call (partial) dsiDim _mt[203] dom[300194]) dim[300338]))
              unknown call_tmp[931570] "maybe param" "maybe type" "temp"
              (931573 'move' call_tmp[931570](300655 call last _mt[203] call_tmp[931563]))
              unknown lastIdx[300648] "dead at end of block" "insert auto destroy"
              (653399 'init var' lastIdx[300648] call_tmp[931570])
              (300659 'end of statement')
              unknown call_tmp[931575] "expr temp" "maybe param" "maybe type" "temp"
              (931578 'move' call_tmp[931575](300663 call idx[300334] dim[300338]))
              (300660 call = call_tmp[931575] j[300635])
              (567963 'end of statement' j[300635])
              unknown tmp[503961] "maybe param" "temp"
              unknown tmp[503982] "maybe param" "temp"
              (503993 'move' tmp[503982] last[300342])
              unknown call_tmp[931580] "expr temp" "maybe param" "maybe type" "temp"
              (931583 'move' call_tmp[931580](503995 call _cond_invalid tmp[503982]))
              if call_tmp[931580]
              {
                (503998 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[706179] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[706180] "maybe param" "temp"
              unknown call_tmp[931585] "expr temp" "maybe param" "maybe type" "temp"
              (931588 'move' call_tmp[931585](503983 call isTrue tmp[503982]))
              (706185 'move' tmp[706180](706183 call _cond_test call_tmp[931585]))
              if tmp[706180]
              {
                (706190 'move' tmp[706179](706187 '_paramFoldLogical' tmp[706180] 1))
              }
              {
                unknown tmp[706192] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[931590] "expr temp" "maybe param" "maybe type" "temp"
                (931593 'move' call_tmp[931590](300679 call == dim[300338] 0))
                (706194 'move' tmp[706192](503987 call isTrue call_tmp[931590]))
                (706199 'move' tmp[706179](706196 '_paramFoldLogical' tmp[706180] tmp[706192]))
              }
              (503972 'move' tmp[503961] tmp[706179])
              unknown call_tmp[931595] "expr temp" "maybe param" "maybe type" "temp"
              (931598 'move' call_tmp[931595](503974 call _cond_invalid tmp[503961]))
              if call_tmp[931595]
              {
                (503977 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[706206] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[706207] "maybe param" "temp"
              unknown call_tmp[931600] "expr temp" "maybe param" "maybe type" "temp"
              (931603 'move' call_tmp[931600](503962 call isTrue tmp[503961]))
              (706212 'move' tmp[706207](706210 call _cond_test call_tmp[931600]))
              if tmp[706207]
              {
                unknown tmp[706214] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[931607] "expr temp" "maybe param" "maybe type" "temp"
                (931610 'move' call_tmp[931607](300690 call(300687 call (partial) dsiDim _mt[203] dom[300194]) dim[300338]))
                unknown call_tmp[931614] "expr temp" "maybe param" "maybe type" "temp"
                (931617 'move' call_tmp[931614](300692 call high _mt[203] call_tmp[931607]))
                unknown call_tmp[931619] "expr temp" "maybe param" "maybe type" "temp"
                (931622 'move' call_tmp[931619](300683 call == j[300635] call_tmp[931614]))
                (706216 'move' tmp[706214](503965 call isTrue call_tmp[931619]))
                (706221 'move' tmp[706206](706218 '_paramFoldLogical' tmp[706207] tmp[706214]))
              }
              {
                (706226 'move' tmp[706206](706223 '_paramFoldLogical' tmp[706207] 0))
              }
              unknown call_tmp[931624] "expr temp" "maybe param" "maybe type" "temp"
              (931627 'move' call_tmp[931624](300669 call + dim[300338] 1))
              (300667 call recursiveArrayReaderWriter idx[300334](dim = call_tmp[931624])(last = tmp[706206]))
              (567967 'end of statement' j[300635])
              unknown tmp[504003] "maybe param" "temp"
              (504014 'move' tmp[504003] isjson[300379])
              unknown call_tmp[931629] "expr temp" "maybe param" "maybe type" "temp"
              (931632 'move' call_tmp[931629](504016 call _cond_invalid tmp[504003]))
              if call_tmp[931629]
              {
                (504019 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[706233] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[706234] "maybe param" "temp"
              unknown call_tmp[931634] "expr temp" "maybe param" "maybe type" "temp"
              (931637 'move' call_tmp[931634](504004 call isTrue tmp[504003]))
              (706239 'move' tmp[706234](706237 call _cond_test call_tmp[931634]))
              if tmp[706234]
              {
                (706244 'move' tmp[706233](706241 '_paramFoldLogical' tmp[706234] 1))
              }
              {
                unknown tmp[706246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                (706248 'move' tmp[706246](504008 call isTrue ischpl[300392]))
                (706253 'move' tmp[706233](706250 '_paramFoldLogical' tmp[706234] tmp[706246]))
              }
              unknown call_tmp[931639] "expr temp" "maybe param" "maybe type" "temp"
              (931642 'move' call_tmp[931639](300721 call _cond_test tmp[706233]))
              if call_tmp[931639]
              {
                unknown call_tmp[931644] "expr temp" "maybe param" "maybe type" "temp"
                (931647 'move' call_tmp[931644](300709 call != j[300635] lastIdx[300648]))
                unknown call_tmp[931649] "expr temp" "maybe param" "maybe type" "temp"
                (931652 'move' call_tmp[931649](300713 call _cond_test call_tmp[931644]))
                if call_tmp[931649]
                {
                  (300699 call rwLiteral ",\n")
                  (567970 'end of statement')
                  unknown call_tmp[931654] "expr temp" "maybe param" "maybe type" "temp"
                  (931657 'move' call_tmp[931654](300705 call + dim[300338] 1))
                  (300704 call rwSpaces call_tmp[931654])
                }
              }
            }
            label _continueLabel[300730]
            _indexOfInterest[300725]
            _iterator[300726]
          }
          label _breakLabel[300731]
        }
      }
      unknown call_tmp[931659] "expr temp" "maybe param" "maybe type" "temp"
      (931662 'move' call_tmp[931659](300829 call _cond_test isspace[300366]))
      if call_tmp[931659]
      {
        unknown tmp[504024] "maybe param" "temp"
        (504035 'move' tmp[504024](300782 call ! last[300342]))
        unknown call_tmp[931664] "expr temp" "maybe param" "maybe type" "temp"
        (931667 'move' call_tmp[931664](504037 call _cond_invalid tmp[504024]))
        if call_tmp[931664]
        {
          (504040 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[706260] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[706261] "maybe param" "temp"
        unknown call_tmp[931669] "expr temp" "maybe param" "maybe type" "temp"
        (931672 'move' call_tmp[931669](504025 call isTrue tmp[504024]))
        (706266 'move' tmp[706261](706264 call _cond_test call_tmp[931669]))
        if tmp[706261]
        {
          unknown tmp[706268] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[931674] "expr temp" "maybe param" "maybe type" "temp"
          (931677 'move' call_tmp[931674](300785 call != dim[300338] 0))
          (706270 'move' tmp[706268](504028 call isTrue call_tmp[931674]))
          (706275 'move' tmp[706260](706272 '_paramFoldLogical' tmp[706261] tmp[706268]))
        }
        {
          (706280 'move' tmp[706260](706277 '_paramFoldLogical' tmp[706261] 0))
        }
        unknown call_tmp[931679] "expr temp" "maybe param" "maybe type" "temp"
        (931682 'move' call_tmp[931679](300789 call _cond_test tmp[706260]))
        if call_tmp[931679]
        {
          (300778 call rwLiteral "\n")
        }
      }
      {
        unknown tmp[504045] "maybe param" "temp"
        (504056 'move' tmp[504045] isjson[300379])
        unknown call_tmp[931684] "expr temp" "maybe param" "maybe type" "temp"
        (931687 'move' call_tmp[931684](504058 call _cond_invalid tmp[504045]))
        if call_tmp[931684]
        {
          (504061 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[706287] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[706288] "maybe param" "temp"
        unknown call_tmp[931689] "expr temp" "maybe param" "maybe type" "temp"
        (931692 'move' call_tmp[931689](504046 call isTrue tmp[504045]))
        (706293 'move' tmp[706288](706291 call _cond_test call_tmp[931689]))
        if tmp[706288]
        {
          (706298 'move' tmp[706287](706295 '_paramFoldLogical' tmp[706288] 1))
        }
        {
          unknown tmp[706300] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (706302 'move' tmp[706300](504050 call isTrue ischpl[300392]))
          (706307 'move' tmp[706287](706304 '_paramFoldLogical' tmp[706288] tmp[706300]))
        }
        unknown call_tmp[931694] "expr temp" "maybe param" "maybe type" "temp"
        (931697 'move' call_tmp[931694](300824 call _cond_test tmp[706287]))
        if call_tmp[931694]
        {
          unknown call_tmp[931699] "expr temp" "maybe param" "maybe type" "temp"
          (931702 'move' call_tmp[931699](300811 call - rank[300198] 1))
          unknown call_tmp[931704] "expr temp" "maybe param" "maybe type" "temp"
          (931707 'move' call_tmp[931704](300808 call != dim[300338] call_tmp[931699]))
          unknown call_tmp[931709] "expr temp" "maybe param" "maybe type" "temp"
          (931712 'move' call_tmp[931709](300815 call _cond_test call_tmp[931704]))
          if call_tmp[931709]
          {
            (300796 call rwLiteral "\n")
            (567975 'end of statement')
            (300799 call rwSpaces dim[300338])
            (567976 'end of statement')
            (300802 call rwLiteral "]")
          }
          {
            (300805 call rwLiteral "]")
          }
        }
      }
      (630291 return _void[46])
    }
    unknown tmp[504066] "maybe param" "temp"
    unknown tmp[504087] "maybe param" "temp"
    unknown tmp[504108] "maybe param" "temp"
    unknown tmp[504129] "maybe param" "temp"
    unknown tmp[504150] "maybe param" "temp"
    (504161 'move' tmp[504150](301025 call(301022 call (partial) isDefaultRectangular _mt[203] arr[300192])))
    unknown call_tmp[931716] "expr temp" "maybe param" "maybe type" "temp"
    (931719 'move' call_tmp[931716](504163 call _cond_invalid tmp[504150]))
    if call_tmp[931716]
    {
      (504166 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706314] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706315] "maybe param" "temp"
    unknown call_tmp[931721] "expr temp" "maybe param" "maybe type" "temp"
    (931724 'move' call_tmp[931721](504151 call isTrue tmp[504150]))
    (706320 'move' tmp[706315](706318 call _cond_test call_tmp[931721]))
    if tmp[706315]
    {
      unknown tmp[706322] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931726] "expr temp" "maybe param" "maybe type" "temp"
      (931729 'move' call_tmp[931726](301029 call chpl__isArrayView arr[300192]))
      unknown call_tmp[931731] "expr temp" "maybe param" "maybe type" "temp"
      (931734 'move' call_tmp[931731](301026 call ! call_tmp[931726]))
      (706324 'move' tmp[706322](504154 call isTrue call_tmp[931731]))
      (706329 'move' tmp[706314](706326 '_paramFoldLogical' tmp[706315] tmp[706322]))
    }
    {
      (706334 'move' tmp[706314](706331 '_paramFoldLogical' tmp[706315] 0))
    }
    (504140 'move' tmp[504129] tmp[706314])
    unknown call_tmp[931736] "expr temp" "maybe param" "maybe type" "temp"
    (931739 'move' call_tmp[931736](504142 call _cond_invalid tmp[504129]))
    if call_tmp[931736]
    {
      (504145 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706341] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706342] "maybe param" "temp"
    unknown call_tmp[931741] "expr temp" "maybe param" "maybe type" "temp"
    (931744 'move' call_tmp[931741](504130 call isTrue tmp[504129]))
    (706347 'move' tmp[706342](706345 call _cond_test call_tmp[931741]))
    if tmp[706342]
    {
      unknown tmp[706349] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931748] "expr temp" "maybe param" "maybe type" "temp"
      (931751 'move' call_tmp[931748](301034 call eltType _mt[203] arr[300192]))
      unknown call_tmp[931753] "expr temp" "maybe param" "maybe type" "temp"
      (931756 'move' call_tmp[931753](301032 call _isSimpleIoType call_tmp[931748]))
      (706351 'move' tmp[706349](504133 call isTrue call_tmp[931753]))
      (706356 'move' tmp[706341](706353 '_paramFoldLogical' tmp[706342] tmp[706349]))
    }
    {
      (706361 'move' tmp[706341](706358 '_paramFoldLogical' tmp[706342] 0))
    }
    (504119 'move' tmp[504108] tmp[706341])
    unknown call_tmp[931758] "expr temp" "maybe param" "maybe type" "temp"
    (931761 'move' call_tmp[931758](504121 call _cond_invalid tmp[504108]))
    if call_tmp[931758]
    {
      (504124 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706368] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706369] "maybe param" "temp"
    unknown call_tmp[931763] "expr temp" "maybe param" "maybe type" "temp"
    (931766 'move' call_tmp[931763](504109 call isTrue tmp[504108]))
    (706374 'move' tmp[706369](706372 call _cond_test call_tmp[931763]))
    if tmp[706369]
    {
      unknown tmp[706376] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931770] "expr temp" "maybe param" "maybe type" "temp"
      (931773 'move' call_tmp[931770](301041 call(301038 call (partial) _binary _mt[203] f[300190])))
      (706378 'move' tmp[706376](504112 call isTrue call_tmp[931770]))
      (706383 'move' tmp[706368](706380 '_paramFoldLogical' tmp[706369] tmp[706376]))
    }
    {
      (706388 'move' tmp[706368](706385 '_paramFoldLogical' tmp[706369] 0))
    }
    (504098 'move' tmp[504087] tmp[706368])
    unknown call_tmp[931775] "expr temp" "maybe param" "maybe type" "temp"
    (931778 'move' call_tmp[931775](504100 call _cond_invalid tmp[504087]))
    if call_tmp[931775]
    {
      (504103 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706395] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706396] "maybe param" "temp"
    unknown call_tmp[931780] "expr temp" "maybe param" "maybe type" "temp"
    (931783 'move' call_tmp[931780](504088 call isTrue tmp[504087]))
    (706401 'move' tmp[706396](706399 call _cond_test call_tmp[931780]))
    if tmp[706396]
    {
      unknown tmp[706403] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (706405 'move' tmp[706403](504091 call isTrue isNative[300228]))
      (706410 'move' tmp[706395](706407 '_paramFoldLogical' tmp[706396] tmp[706403]))
    }
    {
      (706415 'move' tmp[706395](706412 '_paramFoldLogical' tmp[706396] 0))
    }
    (504077 'move' tmp[504066] tmp[706395])
    unknown call_tmp[931785] "expr temp" "maybe param" "maybe type" "temp"
    (931788 'move' call_tmp[931785](504079 call _cond_invalid tmp[504066]))
    if call_tmp[931785]
    {
      (504082 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706422] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706423] "maybe param" "temp"
    unknown call_tmp[931790] "expr temp" "maybe param" "maybe type" "temp"
    (931793 'move' call_tmp[931790](504067 call isTrue tmp[504066]))
    (706428 'move' tmp[706423](706426 call _cond_test call_tmp[931790]))
    if tmp[706423]
    {
      unknown tmp[706430] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[931797] "expr temp" "maybe param" "maybe type" "temp"
      (931800 'move' call_tmp[931797](301047 call(301044 call (partial) isDataContiguous _mt[203] arr[300192]) dom[300194]))
      (706432 'move' tmp[706430](504070 call isTrue call_tmp[931797]))
      (706437 'move' tmp[706422](706434 '_paramFoldLogical' tmp[706423] tmp[706430]))
    }
    {
      (706442 'move' tmp[706422](706439 '_paramFoldLogical' tmp[706423] 0))
    }
    unknown call_tmp[931802] "expr temp" "maybe param" "maybe type" "temp"
    (931805 'move' call_tmp[931802](301049 call _cond_test tmp[706422]))
    if call_tmp[931802]
    {
      unknown call_tmp[931809] "expr temp" "maybe param" "maybe type" "temp"
      (931812 'move' call_tmp[931809](300842 call eltType _mt[203] arr[300192]))
      unknown call_tmp[931814] "maybe param" "maybe type" "temp"
      (931817 'move' call_tmp[931814](300840 call c_sizeof call_tmp[931809]))
      const elemSize[300838] "dead at end of block" "const" "insert auto destroy"
      (653401 'init var' elemSize[300838] call_tmp[931814])
      (300846 'end of statement')
      unknown call_tmp[931819] "expr temp" "maybe param" "maybe type" "temp"
      (931822 'move' call_tmp[931819](300896 call _cond_test 1))
      if call_tmp[931819]
      {
        unknown rw[300849] "dead at end of block" "insert auto destroy"
        unknown tmp[706449] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[706450] "maybe param" "temp"
        unknown call_tmp[931826] "expr temp" "maybe param" "maybe type" "temp"
        (931829 'move' call_tmp[931826](300851 call _writing _mt[203] f[300190]))
        (706455 'move' tmp[706450](706453 call _cond_test call_tmp[931826]))
        if tmp[706450]
        {
          (706460 'move' tmp[706449](706457 '_paramFoldLogical' tmp[706450] "write"))
        }
        {
          (706465 'move' tmp[706449](706462 '_paramFoldLogical' tmp[706450] "read"))
        }
        (653403 'init var' rw[300849] tmp[706449])
        (300864 'end of statement')
        unknown call_tmp[931833] "expr temp" "maybe param" "maybe type" "temp"
        (931836 'move' call_tmp[931833](300874 call dsiNumIndices _mt[203] dom[300194]))
        unknown call_tmp[931838] "expr temp" "maybe param" "maybe type" "temp"
        (931841 'move' call_tmp[931838](300871 call : call_tmp[931833] uint(64)[86]))
        unknown call_tmp[931843] "expr temp" "maybe param" "maybe type" "temp"
        (931846 'move' call_tmp[931843](300878 call : elemSize[300838] uint(64)[86]))
        unknown call_tmp[931848] "expr temp" "maybe param" "maybe type" "temp"
        (931851 'move' call_tmp[931848](300869 call * call_tmp[931838] call_tmp[931843]))
        unknown call_tmp[931853] "expr temp" "maybe param" "maybe type" "temp"
        (931856 'move' call_tmp[931853](300885 call max c_ssize_t[620]))
        unknown call_tmp[931858] "expr temp" "maybe param" "maybe type" "temp"
        (931861 'move' call_tmp[931858](300882 call : call_tmp[931853] uint(64)[86]))
        unknown call_tmp[931863] "expr temp" "maybe param" "maybe type" "temp"
        (931866 'move' call_tmp[931863](300867 call <= call_tmp[931848] call_tmp[931858]))
        (300866 call assert call_tmp[931863] "length of array to " rw[300849] " is greater than c_ssize_t can hold")
        (567984 'end of statement' elemSize[300838] rw[300849])
      }
      unknown call_tmp[931870] "maybe param" "maybe type" "temp"
      (931873 'move' call_tmp[931870](300903 call dsiNumIndices _mt[203] dom[300194]))
      const len[300901] "dead at end of block" "const" "insert auto destroy"
      (653405 'init var' len[300901] call_tmp[931870])
      (300907 'end of statement')
      unknown call_tmp[931877] "maybe param" "maybe type" "temp"
      (931880 'move' call_tmp[931877](300911 call theData _mt[203] arr[300192]))
      const src[300909] "dead at end of block" "const" "insert auto destroy"
      (653407 'init var' src[300909] call_tmp[931877])
      (300915 'end of statement')
      unknown call_tmp[931886] "expr temp" "maybe param" "maybe type" "temp"
      (931889 'move' call_tmp[931886](300924 call dsiLow _mt[203] dom[300194]))
      unknown call_tmp[931891] "maybe param" "maybe type" "temp"
      (931894 'move' call_tmp[931891](300922 call(300919 call (partial) getDataIndex _mt[203] arr[300192]) call_tmp[931886]))
      const idx[300917] "dead at end of block" "const" "insert auto destroy"
      (653409 'init var' idx[300917] call_tmp[931891])
      (300928 'end of statement')
      unknown call_tmp[931896] "expr temp" "maybe param" "maybe type" "temp"
      (931899 'move' call_tmp[931896](300933 call : len[300901] c_ssize_t[620]))
      unknown call_tmp[931901] "expr temp" "maybe param" "maybe type" "temp"
      (931904 'move' call_tmp[931901](300937 call : elemSize[300838] c_ssize_t[620]))
      unknown call_tmp[931906] "maybe param" "maybe type" "temp"
      (931909 'move' call_tmp[931906](300931 call * call_tmp[931896] call_tmp[931901]))
      const size[300930] "dead at end of block" "const" "insert auto destroy"
      (653411 'init var' size[300930] call_tmp[931906])
      (300942 'end of statement' len[300901] elemSize[300838])
      Try
      {
        {
          unknown call_tmp[931913] "expr temp" "maybe param" "maybe type" "temp"
          (931916 'move' call_tmp[931913](300983 call _writing _mt[203] f[300190]))
          unknown call_tmp[931918] "expr temp" "maybe param" "maybe type" "temp"
          (931921 'move' call_tmp[931918](300986 call _cond_test call_tmp[931913]))
          if call_tmp[931918]
          {
            unknown call_tmp[931927] "expr temp" "maybe param" "maybe type" "temp"
            (931930 'move' call_tmp[931927](300955 call eltType _mt[203] arr[300192]))
            unknown call_tmp[931932] "expr temp" "maybe param" "maybe type" "temp"
            (931935 'move' call_tmp[931932](300953 call _ddata_shift call_tmp[931927] src[300909] idx[300917]))
            unknown call_tmp[931937] "expr temp" "maybe param" "maybe type" "temp"
            (931940 'move' call_tmp[931937](300960 call call_tmp[931932] 0))
            unknown call_tmp[931942] "expr temp" "maybe param" "maybe type" "temp"
            (931945 'move' call_tmp[931942](300951 call c_ptrTo call_tmp[931937]))
            (300949 call(300946 call (partial) writeBinary _mt[203] f[300190]) call_tmp[931942] size[300930])
            (567989 'end of statement' src[300909] idx[300917] size[300930])
          }
          {
            unknown call_tmp[931951] "expr temp" "maybe param" "maybe type" "temp"
            (931954 'move' call_tmp[931951](300974 call eltType _mt[203] arr[300192]))
            unknown call_tmp[931956] "expr temp" "maybe param" "maybe type" "temp"
            (931959 'move' call_tmp[931956](300972 call _ddata_shift call_tmp[931951] src[300909] idx[300917]))
            unknown call_tmp[931961] "expr temp" "maybe param" "maybe type" "temp"
            (931964 'move' call_tmp[931961](300979 call call_tmp[931956] 0))
            unknown call_tmp[931966] "expr temp" "maybe param" "maybe type" "temp"
            (931969 'move' call_tmp[931966](300970 call c_ptrTo call_tmp[931961]))
            (300968 call(300965 call (partial) readBinary _mt[203] f[300190]) call_tmp[931966] size[300930])
            (567993 'end of statement' src[300909] idx[300917] size[300930])
          }
        }
      }
      Catch err
      {
        unknown call_tmp[931971] "maybe param" "maybe type" "temp"
        (931974 'move' call_tmp[931971](395632 'current error'))
        unknown tmp[395629] "dead at end of block" "insert auto destroy" "temp"
        (653413 'init var' tmp[395629] call_tmp[931971])
        unknown call_tmp[931976] "expr temp" "maybe param" "maybe type" "temp"
        (931979 'move' call_tmp[931976](395635 'to non nilable class' tmp[395629]))
        unknown call_tmp[931981] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (931984 'move' call_tmp[931981](1000487 'new' _owned[238](?) call_tmp[931976]))
        unknown err[300995] "dead at end of block" "insert auto destroy"
        (653415 'init var' err[300995] call_tmp[931981])
        (567997 'end of statement')
        {
          unknown call_tmp[931986] "expr temp" "maybe param" "maybe type" "temp"
          (931989 'move' call_tmp[931986](542461 call chpl_fix_thrown_error err[300995]))
          (300992 'throw' call_tmp[931986])
          (567998 'end of statement' err[300995])
        }
      }
    }
    {
      const zeroTup[301001] "dead at end of block" "const" "insert auto destroy"
      unknown call_tmp[931991] "expr temp" "maybe param" "maybe type" "temp"
      (931994 'move' call_tmp[931991](301002 call * rank[300198] idxType[300206]))
      (653417 'default init var' zeroTup[301001] call_tmp[931991])
      (301007 'end of statement' idxType[300206])
      (301009 call recursiveArrayReaderWriter zeroTup[301001])
      (568001 'end of statement' zeroTup[301001])
    }
    (630293 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiSerialWrite[301055](arg _mt[301063]:_MT[201], arg this[301058]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg f[301061]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    (301067 call(458447 call (partial) dsiSerialReadWrite _mt[203] this[301058]) f[301061])
    (630295 return _void[46])
  }
  function DefaultRectangularArr[298194](?).dsiSerialRead[301071](arg _mt[301079]:_MT[201], arg this[301074]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg f[301077]:_any[141](?)) : _unknown[42] throws "method" "no return value for void"
  {
    (301083 call(458452 call (partial) dsiSerialReadWrite _mt[203] this[301074]) f[301077])
    (630297 return _void[46])
  }
  function DefaultRectangularArr[298194](?).isDataContiguous[301087](arg _mt[301097]:_MT[201], arg this[301090]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg dom[301094]:_domain[225034](?)) : _unknown[42] "inline" "method"
  {
    unknown ret[630301] "RVV" "temp"
    unknown call_tmp[932004] "expr temp" "maybe param" "maybe type" "temp"
    (932007 'move' call_tmp[932004](301104 call _value _mt[203] dom[301094]))
    unknown call_tmp[932009] "expr temp" "maybe param" "maybe type" "temp"
    (932012 'move' call_tmp[932009](301102 call(458458 call (partial) isDataContiguous _mt[203] this[301090]) call_tmp[932004]))
    (630306 'move' ret[630301](630305 'deref' call_tmp[932009]))
    (630303 return ret[630301])
  }
  function DefaultRectangularArr[298194](?).isDataContiguous[301109](arg _mt[301119]:_MT[201], arg this[301112]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg dom[301116]:range[240](?)) : _unknown[42] "inline" "method"
  {
    unknown ret[630310] "RVV" "temp"
    unknown call_tmp[932016] "expr temp" "maybe param" "maybe type" "temp"
    (932019 'move' call_tmp[932016](458464 call rank _mt[203] this[301112]))
    unknown call_tmp[932021] "expr temp" "maybe param" "maybe type" "temp"
    (932024 'move' call_tmp[932021](301125 call != call_tmp[932016] 1))
    unknown call_tmp[932026] "expr temp" "maybe param" "maybe type" "temp"
    (932029 'move' call_tmp[932026](301129 call _cond_test call_tmp[932021]))
    if call_tmp[932026]
    {
      (630315 'move' ret[630310](630314 'deref' 0))
      gotoReturn _end_isDataContiguous[630308] _end_isDataContiguous[630308]
    }
    unknown call_tmp[932031] "expr temp" "maybe param" "maybe type" "temp"
    (932034 'move' call_tmp[932031](301146 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[932031]
    {
      unknown call_tmp[932038] "expr temp" "maybe param" "maybe type" "temp"
      (932041 'move' call_tmp[932038](458469 call off _mt[203] this[301112]))
      unknown call_tmp[932045] "expr temp" "maybe param" "maybe type" "temp"
      (932048 'move' call_tmp[932045](458474 call blk _mt[203] this[301112]))
      (301135 call chpl_debug_writeln "isDataContiguous(): off=" call_tmp[932038] " blk=" call_tmp[932045])
    }
    unknown call_tmp[932054] "expr temp" "maybe param" "maybe type" "temp"
    (932057 'move' call_tmp[932054](458485 call rank _mt[203] this[301112]))
    unknown call_tmp[932059] "expr temp" "maybe param" "maybe type" "temp"
    (932062 'move' call_tmp[932059](301158 call - call_tmp[932054] 1))
    unknown call_tmp[932064] "expr temp" "maybe param" "maybe type" "temp"
    (932067 'move' call_tmp[932064](301157 call(458480 call (partial) blk _mt[203] this[301112]) call_tmp[932059]))
    unknown call_tmp[932069] "expr temp" "maybe param" "maybe type" "temp"
    (932072 'move' call_tmp[932069](301154 call != call_tmp[932064] 1))
    unknown call_tmp[932074] "expr temp" "maybe param" "maybe type" "temp"
    (932077 'move' call_tmp[932074](301163 call _cond_test call_tmp[932069]))
    if call_tmp[932074]
    {
      (630320 'move' ret[630310](630319 'deref' 0))
      gotoReturn _end_isDataContiguous[630308] _end_isDataContiguous[630308]
    }
    unknown call_tmp[932079] "expr temp" "maybe param" "maybe type" "temp"
    (932082 'move' call_tmp[932079](301175 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[932079]
    {
      (301169 call chpl_debug_writeln "\tYES!")
    }
    (630325 'move' ret[630310](630324 'deref' 1))
    label _end_isDataContiguous[630308]
    (630312 return ret[630310])
  }
  function DefaultRectangularArr[298194](?).isDataContiguous[301184](arg _mt[301192]:_MT[201], arg this[301187]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg dom[301190]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[630329] "RVV" "temp"
    unknown call_tmp[932084] "expr temp" "maybe param" "maybe type" "temp"
    (932087 'move' call_tmp[932084](301203 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[932084]
    {
      unknown call_tmp[932091] "expr temp" "maybe param" "maybe type" "temp"
      (932094 'move' call_tmp[932091](458491 call off _mt[203] this[301187]))
      unknown call_tmp[932098] "expr temp" "maybe param" "maybe type" "temp"
      (932101 'move' call_tmp[932098](458496 call blk _mt[203] this[301187]))
      (301196 call chpl_debug_writeln "isDataContiguous(): off=" call_tmp[932091] " blk=" call_tmp[932098])
    }
    unknown call_tmp[932107] "expr temp" "maybe param" "maybe type" "temp"
    (932110 'move' call_tmp[932107](458507 call rank _mt[203] this[301187]))
    unknown call_tmp[932112] "expr temp" "maybe param" "maybe type" "temp"
    (932115 'move' call_tmp[932112](301215 call - call_tmp[932107] 1))
    unknown call_tmp[932117] "expr temp" "maybe param" "maybe type" "temp"
    (932120 'move' call_tmp[932117](301214 call(458502 call (partial) blk _mt[203] this[301187]) call_tmp[932112]))
    unknown call_tmp[932122] "expr temp" "maybe param" "maybe type" "temp"
    (932125 'move' call_tmp[932122](301211 call != call_tmp[932117] 1))
    unknown call_tmp[932127] "expr temp" "maybe param" "maybe type" "temp"
    (932130 'move' call_tmp[932127](301220 call _cond_test call_tmp[932122]))
    if call_tmp[932127]
    {
      (630334 'move' ret[630329](630333 'deref' 0))
      gotoReturn _end_isDataContiguous[630327] _end_isDataContiguous[630327]
    }
    unknown call_tmp[932134] "expr temp" "maybe param" "maybe type" "temp"
    (932137 'move' call_tmp[932134](458536 call rank _mt[203] this[301187]))
    unknown call_tmp[932139] "expr temp" "maybe param" "maybe type" "temp"
    (932142 'move' call_tmp[932139](301316 call >= call_tmp[932134] 2))
    unknown call_tmp[932144] "expr temp" "maybe param" "maybe type" "temp"
    (932147 'move' call_tmp[932144](301320 call _cond_test call_tmp[932139]))
    if call_tmp[932144]
    {
      unknown call_tmp[932151] "maybe param" "maybe type" "temp"
      (932154 'move' call_tmp[932151](301232 call(301229 call (partial) dsiDims _mt[203] dom[301190])))
      const domDims[301227] "dead at end of block" "const" "insert auto destroy"
      (653419 'init var' domDims[301227] call_tmp[932151])
      (301234 'end of statement')
      {
        unknown dim[301235] "dead at end of block" "index var" "insert auto destroy"
        (653421 'init var' dim[301235] 0)
        (568013 'end of statement')
        unknown tmp[301281] "maybe param" "temp"
        unknown call_tmp[932158] "expr temp" "maybe param" "maybe type" "temp"
        (932161 'move' call_tmp[932158](458512 call rank _mt[203] this[301187]))
        unknown call_tmp[932163] "expr temp" "maybe param" "maybe type" "temp"
        (932166 'move' call_tmp[932163](301240 call - call_tmp[932158] 2))
        (301292 'move' tmp[301281](301290 call chpl_compute_low_param_loop_bound 0 call_tmp[932163]))
        unknown tmp[301282] "maybe param" "temp"
        unknown call_tmp[932170] "expr temp" "maybe param" "maybe type" "temp"
        (932173 'move' call_tmp[932170](458531 call rank _mt[203] this[301187]))
        unknown call_tmp[932175] "expr temp" "maybe param" "maybe type" "temp"
        (932178 'move' call_tmp[932175](301297 call - call_tmp[932170] 2))
        (301302 'move' tmp[301282](301300 call chpl_compute_high_param_loop_bound 0 call_tmp[932175]))
        unknown tmp[301283] "maybe param" "temp"
        (301305 'move' tmp[301283](301246 call - 1))
        ParamForLoop[301307]
        { dim[301235] tmp[301281] tmp[301282] tmp[301283]
          unknown call_tmp[932182] "expr temp" "maybe param" "maybe type" "temp"
          (932185 'move' call_tmp[932182](301255 call(458517 call (partial) blk _mt[203] this[301187]) dim[301235]))
          unknown call_tmp[932189] "expr temp" "maybe param" "maybe type" "temp"
          (932192 'move' call_tmp[932189](301261 call + dim[301235] 1))
          unknown call_tmp[932194] "expr temp" "maybe param" "maybe type" "temp"
          (932197 'move' call_tmp[932194](301260 call(458523 call (partial) blk _mt[203] this[301187]) call_tmp[932189]))
          unknown call_tmp[932199] "expr temp" "maybe param" "maybe type" "temp"
          (932202 'move' call_tmp[932199](301267 call + dim[301235] 1))
          unknown call_tmp[932204] "expr temp" "maybe param" "maybe type" "temp"
          (932207 'move' call_tmp[932204](301266 call domDims[301227] call_tmp[932199]))
          unknown call_tmp[932211] "expr temp" "maybe param" "maybe type" "temp"
          (932214 'move' call_tmp[932211](301274 call(301271 call (partial) sizeAs _mt[203] call_tmp[932204]) int(64)[10]))
          unknown call_tmp[932216] "expr temp" "maybe param" "maybe type" "temp"
          (932219 'move' call_tmp[932216](301257 call * call_tmp[932194] call_tmp[932211]))
          unknown call_tmp[932221] "expr temp" "maybe param" "maybe type" "temp"
          (932224 'move' call_tmp[932221](301252 call != call_tmp[932182] call_tmp[932216]))
          unknown call_tmp[932226] "expr temp" "maybe param" "maybe type" "temp"
          (932229 'move' call_tmp[932226](301276 call _cond_test call_tmp[932221]))
          if call_tmp[932226]
          {
            (630339 'move' ret[630329](630338 'deref' 0))
            gotoReturn _end_isDataContiguous[630327] _end_isDataContiguous[630327]
          }
        }
        label _unused_continueLabel[301285]
        label _breakLabel[301284]
      }
    }
    unknown call_tmp[932231] "expr temp" "maybe param" "maybe type" "temp"
    (932234 'move' call_tmp[932231](301329 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[932231]
    {
      (301325 call chpl_debug_writeln "\tYES!")
    }
    (630344 'move' ret[630329](630343 'deref' 1))
    label _end_isDataContiguous[630327]
    (630331 return ret[630329])
  }
  function _canDoSimpleTransfer[301338](arg A[301340]:_any[141](?), arg aView[301342]:_any[141](?), arg B[301344]:_any[141](?), arg bView[301346]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[630348] "RVV" "temp"
    unknown tmp[504171] "maybe param" "temp"
    unknown call_tmp[932238] "expr temp" "maybe param" "maybe type" "temp"
    (932241 'move' call_tmp[932238](301372 call(301369 call (partial) isDataContiguous _mt[203] A[301340]) aView[301342]))
    (504182 'move' tmp[504171](301366 call ! call_tmp[932238]))
    unknown call_tmp[932243] "expr temp" "maybe param" "maybe type" "temp"
    (932246 'move' call_tmp[932243](504184 call _cond_invalid tmp[504171]))
    if call_tmp[932243]
    {
      (504187 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[706472] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706473] "maybe param" "temp"
    unknown call_tmp[932248] "expr temp" "maybe param" "maybe type" "temp"
    (932251 'move' call_tmp[932248](504172 call isTrue tmp[504171]))
    (706478 'move' tmp[706473](706476 call _cond_test call_tmp[932248]))
    if tmp[706473]
    {
      (706483 'move' tmp[706472](706480 '_paramFoldLogical' tmp[706473] 1))
    }
    {
      unknown tmp[706485] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932255] "expr temp" "maybe param" "maybe type" "temp"
      (932258 'move' call_tmp[932255](301380 call(301377 call (partial) isDataContiguous _mt[203] B[301344]) bView[301346]))
      unknown call_tmp[932260] "expr temp" "maybe param" "maybe type" "temp"
      (932263 'move' call_tmp[932260](301374 call ! call_tmp[932255]))
      (706487 'move' tmp[706485](504176 call isTrue call_tmp[932260]))
      (706492 'move' tmp[706472](706489 '_paramFoldLogical' tmp[706473] tmp[706485]))
    }
    unknown call_tmp[932265] "expr temp" "maybe param" "maybe type" "temp"
    (932268 'move' call_tmp[932265](301382 call _cond_test tmp[706472]))
    if call_tmp[932265]
    {
      unknown call_tmp[932270] "expr temp" "maybe param" "maybe type" "temp"
      (932273 'move' call_tmp[932270](301357 call _cond_test debugDefaultDistBulkTransfer[287667]))
      if call_tmp[932270]
      {
        (301351 call chpl_debug_writeln "isDataContiguous return False")
      }
      (630353 'move' ret[630348](630352 'deref' 0))
      gotoReturn _end__canDoSimpleTransfer[630346] _end__canDoSimpleTransfer[630346]
    }
    (630358 'move' ret[630348](630357 'deref' 1))
    label _end__canDoSimpleTransfer[630346]
    (630350 return ret[630348])
  }
  function _canDoComplexTransfer[301390](arg A[301392]:_any[141](?), arg aView[301394]:_any[141](?), arg B[301396]:_any[141](?), arg bView[301398]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[630362] "RVV" "temp"
    unknown tmp[504192] "maybe param" "temp"
    (504203 'move' tmp[504192] useBulkTransferStride[247506])
    unknown call_tmp[932275] "expr temp" "maybe param" "maybe type" "temp"
    (932278 'move' call_tmp[932275](504205 call _cond_invalid tmp[504192]))
    if call_tmp[932275]
    {
      (504208 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706499] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706500] "maybe param" "temp"
    unknown call_tmp[932280] "expr temp" "maybe param" "maybe type" "temp"
    (932283 'move' call_tmp[932280](504193 call isTrue tmp[504192]))
    (706505 'move' tmp[706500](706503 call _cond_test call_tmp[932280]))
    if tmp[706500]
    {
      unknown tmp[706507] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932285] "expr temp" "maybe param" "maybe type" "temp"
      (932288 'move' call_tmp[932285](301406 call chpl_allStridesArePositive A[301392] aView[301394] B[301396] bView[301398]))
      (706509 'move' tmp[706507](504196 call isTrue call_tmp[932285]))
      (706514 'move' tmp[706499](706511 '_paramFoldLogical' tmp[706500] tmp[706507]))
    }
    {
      (706519 'move' tmp[706499](706516 '_paramFoldLogical' tmp[706500] 0))
    }
    (630367 'move' ret[630362](630366 'deref' tmp[706499]))
    (630364 return ret[630362])
  }
  function DefaultRectangularArr[298194](?).doiCanBulkTransferRankChange[301413](arg _mt[301419]:_MT[201], arg this[301416]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?)) param : _unknown[42] "method" "method overrides"
  {
    unknown ret[630371] "RVV" "param" "temp"
    (630376 'move' ret[630371](630375 'deref' 1))
    (630373 return ret[630371])
  }
  function DefaultRectangularArr[298194](?).doiBulkTransferToKnown[301426](arg _mt[301440]:_MT[201], arg this[301429]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg srcDom[301432]:_any[141](?), arg destClass[301435]:DefaultRectangularArr[433493](?), arg destDom[301438]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[630380] "RVV" "temp"
    unknown call_tmp[932290] "expr temp" "maybe param" "maybe type" "temp"
    (932293 'move' call_tmp[932290](301446 call transferHelper destClass[301435] destDom[301438] this[301429] srcDom[301432]))
    (630386 'move' ret[630380](630385 'coerce' call_tmp[932290] bool[19]))
    (630382 return ret[630380])
  }
  { scopeless type
    bool[19]
  }
  function DefaultRectangularArr[298194](?).doiBulkTransferFromKnown[301454](arg _mt[301468]:_MT[201], arg this[301457]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg destDom[301460]:_any[141](?), arg srcClass[301463]:DefaultRectangularArr[433493](?), arg srcDom[301466]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[630390] "RVV" "temp"
    unknown call_tmp[932295] "expr temp" "maybe param" "maybe type" "temp"
    (932298 'move' call_tmp[932295](301474 call transferHelper this[301457] destDom[301460] srcClass[301463] srcDom[301466]))
    (630396 'move' ret[630390](630395 'coerce' call_tmp[932295] bool[19]))
    (630392 return ret[630390])
  }
  { scopeless type
    bool[19]
  }
  function transferHelper[301482](arg A[301484]:_any[141](?), arg aView[301486]:_any[141](?), arg B[301488]:_any[141](?), arg bView[301490]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[630400] "RVV" "temp"
    unknown tmp[504213] "maybe param" "temp"
    unknown tmp[504234] "maybe param" "temp"
    unknown tmp[504255] "maybe param" "temp"
    unknown call_tmp[932302] "expr temp" "maybe param" "maybe type" "temp"
    (932305 'move' call_tmp[932302](301554 call rank _mt[203] A[301484]))
    unknown call_tmp[932309] "expr temp" "maybe param" "maybe type" "temp"
    (932312 'move' call_tmp[932309](301558 call rank _mt[203] B[301488]))
    (504266 'move' tmp[504255](301551 call == call_tmp[932302] call_tmp[932309]))
    unknown call_tmp[932314] "expr temp" "maybe param" "maybe type" "temp"
    (932317 'move' call_tmp[932314](504268 call _cond_invalid tmp[504255]))
    if call_tmp[932314]
    {
      (504271 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706526] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706527] "maybe param" "temp"
    unknown call_tmp[932319] "expr temp" "maybe param" "maybe type" "temp"
    (932322 'move' call_tmp[932319](504256 call isTrue tmp[504255]))
    (706532 'move' tmp[706527](706530 call _cond_test call_tmp[932319]))
    if tmp[706527]
    {
      unknown tmp[706534] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932326] "expr temp" "maybe param" "maybe type" "temp"
      (932329 'move' call_tmp[932326](301565 call(301562 call (partial) hasUnitStride _mt[203] aView[301486])))
      (706536 'move' tmp[706534](504259 call isTrue call_tmp[932326]))
      (706541 'move' tmp[706526](706538 '_paramFoldLogical' tmp[706527] tmp[706534]))
    }
    {
      (706546 'move' tmp[706526](706543 '_paramFoldLogical' tmp[706527] 0))
    }
    (504245 'move' tmp[504234] tmp[706526])
    unknown call_tmp[932331] "expr temp" "maybe param" "maybe type" "temp"
    (932334 'move' call_tmp[932331](504247 call _cond_invalid tmp[504234]))
    if call_tmp[932331]
    {
      (504250 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706553] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706554] "maybe param" "temp"
    unknown call_tmp[932336] "expr temp" "maybe param" "maybe type" "temp"
    (932339 'move' call_tmp[932336](504235 call isTrue tmp[504234]))
    (706559 'move' tmp[706554](706557 call _cond_test call_tmp[932336]))
    if tmp[706554]
    {
      unknown tmp[706561] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932343] "expr temp" "maybe param" "maybe type" "temp"
      (932346 'move' call_tmp[932343](301570 call(301567 call (partial) hasUnitStride _mt[203] bView[301490])))
      (706563 'move' tmp[706561](504238 call isTrue call_tmp[932343]))
      (706568 'move' tmp[706553](706565 '_paramFoldLogical' tmp[706554] tmp[706561]))
    }
    {
      (706573 'move' tmp[706553](706570 '_paramFoldLogical' tmp[706554] 0))
    }
    (504224 'move' tmp[504213] tmp[706553])
    unknown call_tmp[932348] "expr temp" "maybe param" "maybe type" "temp"
    (932351 'move' call_tmp[932348](504226 call _cond_invalid tmp[504213]))
    if call_tmp[932348]
    {
      (504229 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706580] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706581] "maybe param" "temp"
    unknown call_tmp[932353] "expr temp" "maybe param" "maybe type" "temp"
    (932356 'move' call_tmp[932353](504214 call isTrue tmp[504213]))
    (706586 'move' tmp[706581](706584 call _cond_test call_tmp[932353]))
    if tmp[706581]
    {
      unknown tmp[706588] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932358] "expr temp" "maybe param" "maybe type" "temp"
      (932361 'move' call_tmp[932358](301572 call _canDoSimpleTransfer A[301484] aView[301486] B[301488] bView[301490]))
      (706590 'move' tmp[706588](504217 call isTrue call_tmp[932358]))
      (706595 'move' tmp[706580](706592 '_paramFoldLogical' tmp[706581] tmp[706588]))
    }
    {
      (706600 'move' tmp[706580](706597 '_paramFoldLogical' tmp[706581] 0))
    }
    unknown call_tmp[932363] "expr temp" "maybe param" "maybe type" "temp"
    (932366 'move' call_tmp[932363](301577 call _cond_test tmp[706580]))
    if call_tmp[932363]
    {
      unknown call_tmp[932368] "expr temp" "maybe param" "maybe type" "temp"
      (932371 'move' call_tmp[932368](301502 call _cond_test debugDefaultDistBulkTransfer[287667]))
      if call_tmp[932368]
      {
        (301496 call chpl_debug_writeln "Performing simple DefaultRectangular transfer")
      }
      (301508 call _simpleTransfer A[301484] aView[301486] B[301488] bView[301490])
    }
    {
      unknown call_tmp[932373] "expr temp" "maybe param" "maybe type" "temp"
      (932376 'move' call_tmp[932373](301536 call _canDoComplexTransfer A[301484] aView[301486] B[301488] bView[301490]))
      unknown call_tmp[932378] "expr temp" "maybe param" "maybe type" "temp"
      (932381 'move' call_tmp[932378](301541 call _cond_test call_tmp[932373]))
      if call_tmp[932378]
      {
        unknown call_tmp[932383] "expr temp" "maybe param" "maybe type" "temp"
        (932386 'move' call_tmp[932383](301521 call _cond_test debugDefaultDistBulkTransfer[287667]))
        if call_tmp[932383]
        {
          (301515 call chpl_debug_writeln "Performing complex DefaultRectangular transfer")
        }
        (301527 call complexTransfer A[301484] aView[301486] B[301488] bView[301490])
      }
      {
        (630406 'move' ret[630400](630405 'coerce' 0 bool[19]))
        gotoReturn _end_transferHelper[630398] _end_transferHelper[630398]
      }
    }
    (630412 'move' ret[630400](630411 'coerce' 1 bool[19]))
    label _end_transferHelper[630398]
    (630402 return ret[630400])
  }
  { scopeless type
    bool[19]
  }
  function _isLocSublocSameAsHere[301587](arg locid[301589]:_any[141](?), arg sublocid[301591]:_any[141](?)) : _unknown[42] "inline" "private"
  {
    unknown ret[630416] "RVV" "temp"
    unknown call_tmp[932388] "expr temp" "maybe param" "maybe type" "temp"
    (932391 'move' call_tmp[932388](410155 call here[135591]))
    unknown call_tmp[932395] "expr temp" "maybe param" "maybe type" "temp"
    (932398 'move' call_tmp[932395](301604 call id _mt[203] call_tmp[932388]))
    unknown call_tmp[932400] "expr temp" "maybe param" "maybe type" "temp"
    (932403 'move' call_tmp[932400](301600 call != locid[301589] call_tmp[932395]))
    unknown call_tmp[932405] "expr temp" "maybe param" "maybe type" "temp"
    (932408 'move' call_tmp[932405](301607 call _cond_test call_tmp[932400]))
    if call_tmp[932405]
    {
      (630421 'move' ret[630416](630420 'deref' 0))
      gotoReturn _end__isLocSublocSameAsHere[630414] _end__isLocSublocSameAsHere[630414]
    }
    unknown call_tmp[932410] "expr temp" "maybe param" "maybe type" "temp"
    (932413 'move' call_tmp[932410](301615 call != CHPL_LOCALE_MODEL[29682] "gpu"))
    unknown call_tmp[932415] "expr temp" "maybe param" "maybe type" "temp"
    (932418 'move' call_tmp[932415](301619 call _cond_test call_tmp[932410]))
    if call_tmp[932415]
    {
      (630426 'move' ret[630416](630425 'deref' 1))
      gotoReturn _end__isLocSublocSameAsHere[630414] _end__isLocSublocSameAsHere[630414]
    }
    unknown call_tmp[932420] "maybe param" "maybe type" "temp"
    (932423 'move' call_tmp[932420](301627 call chpl_task_getRequestedSubloc))
    const heresublocid[301625] "dead at end of block" "const" "insert auto destroy"
    (653423 'init var' heresublocid[301625] call_tmp[932420])
    (301629 'end of statement')
    unknown tmp[504276] "maybe param" "temp"
    unknown tmp[504297] "maybe param" "temp"
    (504308 'move' tmp[504297](301635 call < sublocid[301591] 0))
    unknown call_tmp[932425] "expr temp" "maybe param" "maybe type" "temp"
    (932428 'move' call_tmp[932425](504310 call _cond_invalid tmp[504297]))
    if call_tmp[932425]
    {
      (504313 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706607] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706608] "maybe param" "temp"
    unknown call_tmp[932430] "expr temp" "maybe param" "maybe type" "temp"
    (932433 'move' call_tmp[932430](504298 call isTrue tmp[504297]))
    (706613 'move' tmp[706608](706611 call _cond_test call_tmp[932430]))
    if tmp[706608]
    {
      unknown tmp[706615] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932435] "expr temp" "maybe param" "maybe type" "temp"
      (932438 'move' call_tmp[932435](301639 call < heresublocid[301625] 0))
      (706617 'move' tmp[706615](504301 call isTrue call_tmp[932435]))
      (706622 'move' tmp[706607](706619 '_paramFoldLogical' tmp[706608] tmp[706615]))
    }
    {
      (706627 'move' tmp[706607](706624 '_paramFoldLogical' tmp[706608] 0))
    }
    (504287 'move' tmp[504276] tmp[706607])
    unknown call_tmp[932440] "expr temp" "maybe param" "maybe type" "temp"
    (932443 'move' call_tmp[932440](504289 call _cond_invalid tmp[504276]))
    if call_tmp[932440]
    {
      (504292 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[706634] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706635] "maybe param" "temp"
    unknown call_tmp[932445] "expr temp" "maybe param" "maybe type" "temp"
    (932448 'move' call_tmp[932445](504277 call isTrue tmp[504276]))
    (706640 'move' tmp[706635](706638 call _cond_test call_tmp[932445]))
    if tmp[706635]
    {
      (706645 'move' tmp[706634](706642 '_paramFoldLogical' tmp[706635] 1))
    }
    {
      unknown tmp[706647] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932450] "expr temp" "maybe param" "maybe type" "temp"
      (932453 'move' call_tmp[932450](301643 call == sublocid[301591] heresublocid[301625]))
      (706649 'move' tmp[706647](504281 call isTrue call_tmp[932450]))
      (706654 'move' tmp[706634](706651 '_paramFoldLogical' tmp[706635] tmp[706647]))
    }
    (630431 'move' ret[630416](630430 'deref' tmp[706634]))
    gotoReturn _end__isLocSublocSameAsHere[630414] _end__isLocSublocSameAsHere[630414]
    (568039 'end of statement' heresublocid[301625])
    label _end__isLocSublocSameAsHere[630414]
    (630418 return ret[630416])
    (397005 'used modules list'(301595 'use' ChplConfig[29952]))
  }
  function _simpleTransfer[301649](arg A[301651]:_any[141](?), arg aView[301653]:_any[141](?), arg B[301655]:_any[141](?), arg bView[301657]:_any[141](?)) : _unknown[42] "private" "no return value for void"
  {
    unknown call_tmp[932457] "maybe param" "maybe type" "temp"
    (932460 'move' call_tmp[932457](301666 call rank _mt[203] A[301651]))
    unknown rank[301664] "dead at end of block" "param"
    (653425 'init var' rank[301664] call_tmp[932457])
    (301670 'end of statement')
    unknown idxType[301672] "dead at end of block" "insert auto destroy" "type variable"
    (653431 'move' idxType[301672](653428 call idxType _mt[203] A[301651]))
    unknown Alo[301679] "dead at end of block" "insert auto destroy"
    unknown call_tmp[932466] "expr temp" "maybe param" "maybe type" "temp"
    (932469 'move' call_tmp[932466](301684 call idxType _mt[203] aView[301653]))
    unknown call_tmp[932471] "expr temp" "maybe param" "maybe type" "temp"
    (932474 'move' call_tmp[932471](301680 call * rank[301664] call_tmp[932466]))
    (653433 'default init var' Alo[301679] call_tmp[932471])
    (301688 'end of statement')
    unknown call_tmp[932476] "expr temp" "maybe param" "maybe type" "temp"
    (932479 'move' call_tmp[932476](301778 call isDomain aView[301653]))
    unknown call_tmp[932481] "expr temp" "maybe param" "maybe type" "temp"
    (932484 'move' call_tmp[932481](301780 call _cond_test call_tmp[932476]))
    if call_tmp[932481]
    {
      unknown call_tmp[932488] "maybe param" "maybe type" "temp"
      (932491 'move' call_tmp[932488](301696 call(301693 call (partial) dims _mt[203] aView[301653])))
      const Adims[301691] "dead at end of block" "const" "insert auto destroy"
      (653435 'init var' Adims[301691] call_tmp[932488])
      (301698 'end of statement')
      {
        unknown i[301699] "dead at end of block" "index var" "insert auto destroy"
        (653437 'init var' i[301699] 0)
        (568041 'end of statement')
        unknown tmp[301720] "maybe param" "temp"
        unknown call_tmp[932493] "expr temp" "maybe param" "maybe type" "temp"
        (932496 'move' call_tmp[932493](301702 call - rank[301664] 1))
        (301732 'move' tmp[301720](301730 call chpl_compute_low_param_loop_bound 0 call_tmp[932493]))
        unknown tmp[301721] "maybe param" "temp"
        unknown call_tmp[932498] "expr temp" "maybe param" "maybe type" "temp"
        (932501 'move' call_tmp[932498](301737 call - rank[301664] 1))
        (301742 'move' tmp[301721](301740 call chpl_compute_high_param_loop_bound 0 call_tmp[932498]))
        unknown tmp[301722] "maybe param" "temp"
        (301745 'move' tmp[301722] 1)
        ParamForLoop[301747]
        { i[301699] tmp[301720] tmp[301721] tmp[301722]
          unknown call_tmp[932503] "expr temp" "maybe param" "maybe type" "temp"
          (932506 'move' call_tmp[932503](301711 call Alo[301679] i[301699]))
          unknown call_tmp[932508] "expr temp" "maybe param" "maybe type" "temp"
          (932511 'move' call_tmp[932508](301714 call Adims[301691] i[301699]))
          unknown call_tmp[932515] "expr temp" "maybe param" "maybe type" "temp"
          (932518 'move' call_tmp[932515](301716 call first _mt[203] call_tmp[932508]))
          (301708 call = call_tmp[932503] call_tmp[932515])
          (568042 'end of statement' Alo[301679] i[301699] Adims[301691] i[301699])
        }
        label _unused_continueLabel[301724]
        label _breakLabel[301723]
      }
    }
    {
      unknown call_tmp[932520] "expr temp" "maybe param" "maybe type" "temp"
      (932523 'move' call_tmp[932520](301771 call isRange aView[301653]))
      unknown call_tmp[932525] "expr temp" "maybe param" "maybe type" "temp"
      (932528 'move' call_tmp[932525](301773 call _cond_test call_tmp[932520]))
      if call_tmp[932525]
      {
        unknown call_tmp[932530] "expr temp" "maybe param" "maybe type" "temp"
        (932533 'move' call_tmp[932530](301760 call Alo[301679] 0))
        unknown call_tmp[932537] "expr temp" "maybe param" "maybe type" "temp"
        (932540 'move' call_tmp[932537](301763 call first _mt[203] aView[301653]))
        (301757 call = call_tmp[932530] call_tmp[932537])
        (568047 'end of statement' Alo[301679])
      }
      {
        (301768 call compilerError "Unexpected type")
      }
    }
    unknown Blo[301786] "dead at end of block" "insert auto destroy"
    unknown call_tmp[932544] "expr temp" "maybe param" "maybe type" "temp"
    (932547 'move' call_tmp[932544](301791 call idxType _mt[203] B[301655]))
    unknown call_tmp[932549] "expr temp" "maybe param" "maybe type" "temp"
    (932552 'move' call_tmp[932549](301787 call * rank[301664] call_tmp[932544]))
    (653439 'default init var' Blo[301786] call_tmp[932549])
    (301795 'end of statement')
    unknown call_tmp[932554] "expr temp" "maybe param" "maybe type" "temp"
    (932557 'move' call_tmp[932554](301881 call isDomain bView[301657]))
    unknown call_tmp[932559] "expr temp" "maybe param" "maybe type" "temp"
    (932562 'move' call_tmp[932559](301883 call _cond_test call_tmp[932554]))
    if call_tmp[932559]
    {
      unknown call_tmp[932566] "maybe param" "maybe type" "temp"
      (932569 'move' call_tmp[932566](301803 call(301800 call (partial) dims _mt[203] bView[301657])))
      const Bdims[301798] "dead at end of block" "const" "insert auto destroy"
      (653441 'init var' Bdims[301798] call_tmp[932566])
      (301805 'end of statement')
      {
        unknown i[301806] "dead at end of block" "index var" "insert auto destroy"
        (653443 'init var' i[301806] 0)
        (568050 'end of statement')
        unknown tmp[301827] "maybe param" "temp"
        unknown call_tmp[932571] "expr temp" "maybe param" "maybe type" "temp"
        (932574 'move' call_tmp[932571](301809 call - rank[301664] 1))
        (301839 'move' tmp[301827](301837 call chpl_compute_low_param_loop_bound 0 call_tmp[932571]))
        unknown tmp[301828] "maybe param" "temp"
        unknown call_tmp[932576] "expr temp" "maybe param" "maybe type" "temp"
        (932579 'move' call_tmp[932576](301844 call - rank[301664] 1))
        (301849 'move' tmp[301828](301847 call chpl_compute_high_param_loop_bound 0 call_tmp[932576]))
        unknown tmp[301829] "maybe param" "temp"
        (301852 'move' tmp[301829] 1)
        ParamForLoop[301854]
        { i[301806] tmp[301827] tmp[301828] tmp[301829]
          unknown call_tmp[932581] "expr temp" "maybe param" "maybe type" "temp"
          (932584 'move' call_tmp[932581](301818 call Blo[301786] i[301806]))
          unknown call_tmp[932586] "expr temp" "maybe param" "maybe type" "temp"
          (932589 'move' call_tmp[932586](301821 call Bdims[301798] i[301806]))
          unknown call_tmp[932593] "expr temp" "maybe param" "maybe type" "temp"
          (932596 'move' call_tmp[932593](301823 call first _mt[203] call_tmp[932586]))
          (301815 call = call_tmp[932581] call_tmp[932593])
          (568051 'end of statement' Blo[301786] i[301806] Bdims[301798] i[301806])
        }
        label _unused_continueLabel[301831]
        label _breakLabel[301830]
      }
    }
    {
      unknown call_tmp[932598] "expr temp" "maybe param" "maybe type" "temp"
      (932601 'move' call_tmp[932598](301874 call isRange bView[301657]))
      unknown call_tmp[932603] "expr temp" "maybe param" "maybe type" "temp"
      (932606 'move' call_tmp[932603](301876 call _cond_test call_tmp[932598]))
      if call_tmp[932603]
      {
        unknown call_tmp[932608] "expr temp" "maybe param" "maybe type" "temp"
        (932611 'move' call_tmp[932608](301867 call Blo[301786] 0))
        unknown call_tmp[932615] "expr temp" "maybe param" "maybe type" "temp"
        (932618 'move' call_tmp[932615](301870 call first _mt[203] bView[301657]))
        (301864 call = call_tmp[932608] call_tmp[932615])
        (568056 'end of statement' Blo[301786])
      }
    }
    unknown call_tmp[932624] "expr temp" "maybe param" "maybe type" "temp"
    (932627 'move' call_tmp[932624](301896 call chpl_integralIdxType _mt[203] aView[301653]))
    unknown call_tmp[932629] "expr temp" "maybe param" "maybe type" "temp"
    (932632 'move' call_tmp[932629](301894 call(301891 call (partial) sizeAs _mt[203] aView[301653]) call_tmp[932624]))
    unknown call_tmp[932636] "maybe param" "maybe type" "temp"
    (932639 'move' call_tmp[932636](301902 call(301899 call (partial) safeCast _mt[203] call_tmp[932629]) c_size_t[614]))
    const len[301889] "dead at end of block" "const" "insert auto destroy"
    (653445 'init var' len[301889] call_tmp[932636])
    (301905 'end of statement')
    unknown call_tmp[932641] "expr temp" "maybe param" "maybe type" "temp"
    (932644 'move' call_tmp[932641](301908 call == len[301889] 0))
    unknown call_tmp[932646] "expr temp" "maybe param" "maybe type" "temp"
    (932649 'move' call_tmp[932646](301912 call _cond_test call_tmp[932641]))
    if call_tmp[932646]
    {
      gotoReturn _end__simpleTransfer[630435] _end__simpleTransfer[630435]
    }
    unknown call_tmp[932651] "expr temp" "maybe param" "maybe type" "temp"
    (932654 'move' call_tmp[932651](301958 call _cond_test debugBulkTransfer[247496]))
    if call_tmp[932651]
    {
      function sizeof[301918](arg x[301920]:_any[141](?)) : _unknown[42] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        int(64)[10]
      }
      unknown call_tmp[932658] "expr temp" "maybe param" "maybe type" "temp"
      (932661 'move' call_tmp[932658](301931 call eltType _mt[203] B[301655]))
      unknown call_tmp[932663] "maybe param" "maybe type" "temp"
      (932666 'move' call_tmp[932663](301929 call sizeof call_tmp[932658]))
      const elemSize[301927] "dead at end of block" "const" "insert auto destroy"
      (653447 'init var' elemSize[301927] call_tmp[932663])
      (301935 'end of statement')
      (301937 call chpl_debug_writeln "In DefaultRectangular._simpleTransfer():" " Alo=" Alo[301679] ", Blo=" Blo[301786] ", len=" len[301889] ", elemSize=" elemSize[301927])
      (568059 'end of statement' Alo[301679] Blo[301786] len[301889] elemSize[301927])
    }
    unknown call_tmp[932670] "maybe param" "maybe type" "temp"
    (932673 'move' call_tmp[932670](301968 call(301965 call (partial) getDataIndex _mt[203] A[301651]) Alo[301679]))
    const Aidx[301963] "dead at end of block" "const" "insert auto destroy"
    (653449 'init var' Aidx[301963] call_tmp[932670])
    (301971 'end of statement')
    unknown call_tmp[932677] "expr temp" "maybe param" "maybe type" "temp"
    (932680 'move' call_tmp[932677](301977 call eltType _mt[203] A[301651]))
    unknown call_tmp[932684] "expr temp" "maybe param" "maybe type" "temp"
    (932687 'move' call_tmp[932684](301981 call theData _mt[203] A[301651]))
    unknown call_tmp[932689] "maybe param" "maybe type" "temp"
    (932692 'move' call_tmp[932689](301975 call _ddata_shift call_tmp[932677] call_tmp[932684] Aidx[301963]))
    const Adata[301973] "dead at end of block" "const" "insert auto destroy"
    (653451 'init var' Adata[301973] call_tmp[932689])
    (301986 'end of statement')
    unknown call_tmp[932694] "maybe param" "maybe type" "temp"
    (932697 'move' call_tmp[932694](301993 '_wide_get_node' Adata[301973]))
    const Alocid[301988] "dead at end of block" "const" "insert auto destroy"
    (653453 'init var' Alocid[301988] call_tmp[932694])
    (301995 'end of statement')
    const Asublocid[301997] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[706661] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706662] "maybe param" "temp"
    unknown call_tmp[932699] "expr temp" "maybe param" "maybe type" "temp"
    (932702 'move' call_tmp[932699](301998 call != CHPL_LOCALE_MODEL[29682] "gpu"))
    (706667 'move' tmp[706662](706665 call _cond_test call_tmp[932699]))
    if tmp[706662]
    {
      (706672 'move' tmp[706661](706669 '_paramFoldLogical' tmp[706662] c_sublocid_any[135202]))
    }
    {
      unknown tmp[706674] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932704] "expr temp" "maybe param" "maybe type" "temp"
      (932707 'move' call_tmp[932704](302006 '_wide_get_locale' Adata[301973]))
      unknown call_tmp[932709] "expr temp" "maybe param" "maybe type" "temp"
      (932712 'move' call_tmp[932709](302007 call chpl_localeID_to_locale call_tmp[932704]))
      unknown call_tmp[932716] "expr temp" "maybe param" "maybe type" "temp"
      (932719 'move' call_tmp[932716](302012 call(302009 call (partial) chpl_localeid _mt[203] call_tmp[932709])))
      (706676 'move' tmp[706674](302004 call chpl_sublocFromLocaleID call_tmp[932716]))
      (706681 'move' tmp[706661](706678 '_paramFoldLogical' tmp[706662] tmp[706674]))
    }
    (653455 'init var' Asublocid[301997] tmp[706661])
    (302017 'end of statement')
    unknown call_tmp[932723] "maybe param" "maybe type" "temp"
    (932726 'move' call_tmp[932723](302024 call(302021 call (partial) getDataIndex _mt[203] B[301655]) Blo[301786]))
    const Bidx[302019] "dead at end of block" "const" "insert auto destroy"
    (653457 'init var' Bidx[302019] call_tmp[932723])
    (302027 'end of statement')
    unknown call_tmp[932730] "expr temp" "maybe param" "maybe type" "temp"
    (932733 'move' call_tmp[932730](302033 call eltType _mt[203] B[301655]))
    unknown call_tmp[932737] "expr temp" "maybe param" "maybe type" "temp"
    (932740 'move' call_tmp[932737](302037 call theData _mt[203] B[301655]))
    unknown call_tmp[932742] "maybe param" "maybe type" "temp"
    (932745 'move' call_tmp[932742](302031 call _ddata_shift call_tmp[932730] call_tmp[932737] Bidx[302019]))
    const Bdata[302029] "dead at end of block" "const" "insert auto destroy"
    (653459 'init var' Bdata[302029] call_tmp[932742])
    (302042 'end of statement')
    unknown call_tmp[932747] "maybe param" "maybe type" "temp"
    (932750 'move' call_tmp[932747](302049 '_wide_get_node' Bdata[302029]))
    const Blocid[302044] "dead at end of block" "const" "insert auto destroy"
    (653461 'init var' Blocid[302044] call_tmp[932747])
    (302051 'end of statement')
    const Bsublocid[302053] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[706688] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706689] "maybe param" "temp"
    unknown call_tmp[932752] "expr temp" "maybe param" "maybe type" "temp"
    (932755 'move' call_tmp[932752](302054 call != CHPL_LOCALE_MODEL[29682] "gpu"))
    (706694 'move' tmp[706689](706692 call _cond_test call_tmp[932752]))
    if tmp[706689]
    {
      (706699 'move' tmp[706688](706696 '_paramFoldLogical' tmp[706689] c_sublocid_any[135202]))
    }
    {
      unknown tmp[706701] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932757] "expr temp" "maybe param" "maybe type" "temp"
      (932760 'move' call_tmp[932757](302062 '_wide_get_locale' Bdata[302029]))
      unknown call_tmp[932762] "expr temp" "maybe param" "maybe type" "temp"
      (932765 'move' call_tmp[932762](302063 call chpl_localeID_to_locale call_tmp[932757]))
      unknown call_tmp[932769] "expr temp" "maybe param" "maybe type" "temp"
      (932772 'move' call_tmp[932769](302068 call(302065 call (partial) chpl_localeid _mt[203] call_tmp[932762])))
      (706703 'move' tmp[706701](302060 call chpl_sublocFromLocaleID call_tmp[932769]))
      (706708 'move' tmp[706688](706705 '_paramFoldLogical' tmp[706689] tmp[706701]))
    }
    (653463 'init var' Bsublocid[302053] tmp[706688])
    (302073 'end of statement')
    unknown t[302075] "dead at end of block" "insert auto destroy" "type variable"
    (653469 'move' t[302075](653466 call eltType _mt[203] A[301651]))
    const elemsizeInBytes[302082] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[706715] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706716] "maybe param" "temp"
    unknown call_tmp[932776] "expr temp" "maybe param" "maybe type" "temp"
    (932779 'move' call_tmp[932776](302084 call isNumericType t[302075]))
    (706721 'move' tmp[706716](706719 call _cond_test call_tmp[932776]))
    if tmp[706716]
    {
      unknown tmp[706723] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (706725 'move' tmp[706723](302087 call numBytes t[302075]))
      (706730 'move' tmp[706715](706727 '_paramFoldLogical' tmp[706716] tmp[706723]))
    }
    {
      unknown tmp[706732] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932781] "expr temp" "maybe param" "maybe type" "temp"
      (932784 'move' call_tmp[932781](302090 call c_sizeof t[302075]))
      (706734 'move' tmp[706732](302095 call(302092 call (partial) safeCast _mt[203] call_tmp[932781]) int(64)[10]))
      (706739 'move' tmp[706715](706736 '_paramFoldLogical' tmp[706716] tmp[706732]))
    }
    (653471 'init var' elemsizeInBytes[302082] tmp[706715])
    (302101 'end of statement')
    unknown call_tmp[932788] "expr temp" "maybe param" "maybe type" "temp"
    (932791 'move' call_tmp[932788](302108 call : len[301889] int(64)[10]))
    unknown call_tmp[932793] "expr temp" "maybe param" "maybe type" "temp"
    (932796 'move' call_tmp[932793](302106 call * call_tmp[932788] elemsizeInBytes[302082]))
    unknown call_tmp[932798] "maybe param" "maybe type" "temp"
    (932801 'move' call_tmp[932798](302104 call >= call_tmp[932793] parallelAssignThreshold[287692]))
    const isSizeAboveThreshold[302103] "dead at end of block" "const" "insert auto destroy"
    (653473 'init var' isSizeAboveThreshold[302103] call_tmp[932798])
    (302115 'end of statement')
    unknown tmp[504318] "maybe param" "temp"
    (504329 'move' tmp[504318](302120 call == Alocid[301988] Blocid[302044]))
    unknown call_tmp[932803] "expr temp" "maybe param" "maybe type" "temp"
    (932806 'move' call_tmp[932803](504331 call _cond_invalid tmp[504318]))
    if call_tmp[932803]
    {
      (504334 call compilerError "cannot promote short-circuiting && operator")
    }
    const isFullyLocal[302117] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[706746] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706747] "maybe param" "temp"
    unknown call_tmp[932808] "expr temp" "maybe param" "maybe type" "temp"
    (932811 'move' call_tmp[932808](504319 call isTrue tmp[504318]))
    (706752 'move' tmp[706747](706750 call _cond_test call_tmp[932808]))
    if tmp[706747]
    {
      unknown tmp[706754] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932813] "expr temp" "maybe param" "maybe type" "temp"
      (932816 'move' call_tmp[932813](302124 call == Asublocid[301997] Bsublocid[302053]))
      (706756 'move' tmp[706754](504322 call isTrue call_tmp[932813]))
      (706761 'move' tmp[706746](706758 '_paramFoldLogical' tmp[706747] tmp[706754]))
    }
    {
      (706766 'move' tmp[706746](706763 '_paramFoldLogical' tmp[706747] 0))
    }
    (653475 'init var' isFullyLocal[302117] tmp[706746])
    (302129 'end of statement')
    unknown tmp[504339] "maybe param" "temp"
    (504350 'move' tmp[504339] isSizeAboveThreshold[302103])
    unknown call_tmp[932818] "expr temp" "maybe param" "maybe type" "temp"
    (932821 'move' call_tmp[932818](504352 call _cond_invalid tmp[504339]))
    if call_tmp[932818]
    {
      (504355 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown doParallelAssign[302131] "dead at end of block" "insert auto destroy"
    unknown tmp[706773] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706774] "maybe param" "temp"
    unknown call_tmp[932823] "expr temp" "maybe param" "maybe type" "temp"
    (932826 'move' call_tmp[932823](504340 call isTrue tmp[504339]))
    (706779 'move' tmp[706774](706777 call _cond_test call_tmp[932823]))
    if tmp[706774]
    {
      unknown tmp[706781] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (706783 'move' tmp[706781](504343 call isTrue isFullyLocal[302117]))
      (706788 'move' tmp[706773](706785 '_paramFoldLogical' tmp[706774] tmp[706781]))
    }
    {
      (706793 'move' tmp[706773](706790 '_paramFoldLogical' tmp[706774] 0))
    }
    (653477 'init var' doParallelAssign[302131] tmp[706773])
    (302137 'end of statement' Alo[301679] Aidx[301963] Adata[301973] Blo[301786] Bidx[302019] Bdata[302029] t[302075] len[301889] elemsizeInBytes[302082] Asublocid[301997] Bsublocid[302053] isFullyLocal[302117])
    unknown tmp[504423] "maybe param" "temp"
    (504434 'move' tmp[504423] enableParallelGetsInAssignment[287703])
    unknown call_tmp[932828] "expr temp" "maybe param" "maybe type" "temp"
    (932831 'move' call_tmp[932828](504436 call _cond_invalid tmp[504423]))
    if call_tmp[932828]
    {
      (504439 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[706800] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706801] "maybe param" "temp"
    unknown call_tmp[932833] "expr temp" "maybe param" "maybe type" "temp"
    (932836 'move' call_tmp[932833](504424 call isTrue tmp[504423]))
    (706806 'move' tmp[706801](706804 call _cond_test call_tmp[932833]))
    if tmp[706801]
    {
      (706811 'move' tmp[706800](706808 '_paramFoldLogical' tmp[706801] 1))
    }
    {
      unknown tmp[706813] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (706815 'move' tmp[706813](504428 call isTrue enableParallelPutsInAssignment[287708]))
      (706820 'move' tmp[706800](706817 '_paramFoldLogical' tmp[706801] tmp[706813]))
    }
    unknown call_tmp[932838] "expr temp" "maybe param" "maybe type" "temp"
    (932841 'move' call_tmp[932838](302189 call _cond_test tmp[706800]))
    if call_tmp[932838]
    {
      unknown tmp[504402] "maybe param" "temp"
      (504413 'move' tmp[504402] isSizeAboveThreshold[302103])
      unknown call_tmp[932843] "expr temp" "maybe param" "maybe type" "temp"
      (932846 'move' call_tmp[932843](504415 call _cond_invalid tmp[504402]))
      if call_tmp[932843]
      {
        (504418 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[706827] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[706828] "maybe param" "temp"
      unknown call_tmp[932848] "expr temp" "maybe param" "maybe type" "temp"
      (932851 'move' call_tmp[932848](504403 call isTrue tmp[504402]))
      (706833 'move' tmp[706828](706831 call _cond_test call_tmp[932848]))
      if tmp[706828]
      {
        unknown tmp[706835] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[932853] "expr temp" "maybe param" "maybe type" "temp"
        (932856 'move' call_tmp[932853](302178 call ! isFullyLocal[302117]))
        (706837 'move' tmp[706835](504406 call isTrue call_tmp[932853]))
        (706842 'move' tmp[706827](706839 '_paramFoldLogical' tmp[706828] tmp[706835]))
      }
      {
        (706847 'move' tmp[706827](706844 '_paramFoldLogical' tmp[706828] 0))
      }
      unknown call_tmp[932858] "expr temp" "maybe param" "maybe type" "temp"
      (932861 'move' call_tmp[932858](302181 call _cond_test tmp[706827]))
      if call_tmp[932858]
      {
        unknown tmp[504381] "maybe param" "temp"
        (504392 'move' tmp[504381] enableParallelPutsInAssignment[287708])
        unknown call_tmp[932863] "expr temp" "maybe param" "maybe type" "temp"
        (932866 'move' call_tmp[932863](504394 call _cond_invalid tmp[504381]))
        if call_tmp[932863]
        {
          (504397 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[706854] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[706855] "maybe param" "temp"
        unknown call_tmp[932868] "expr temp" "maybe param" "maybe type" "temp"
        (932871 'move' call_tmp[932868](504382 call isTrue tmp[504381]))
        (706860 'move' tmp[706855](706858 call _cond_test call_tmp[932868]))
        if tmp[706855]
        {
          unknown tmp[706862] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[932873] "expr temp" "maybe param" "maybe type" "temp"
          (932876 'move' call_tmp[932873](302167 call _isLocSublocSameAsHere Blocid[302044] Bsublocid[302053]))
          (706864 'move' tmp[706862](504385 call isTrue call_tmp[932873]))
          (706869 'move' tmp[706854](706866 '_paramFoldLogical' tmp[706855] tmp[706862]))
        }
        {
          (706874 'move' tmp[706854](706871 '_paramFoldLogical' tmp[706855] 0))
        }
        unknown call_tmp[932878] "expr temp" "maybe param" "maybe type" "temp"
        (932881 'move' call_tmp[932878](302170 call _cond_test tmp[706854]))
        if call_tmp[932878]
        {
          (302141 call = doParallelAssign[302131] 1)
          (568081 'end of statement' doParallelAssign[302131])
        }
        {
          unknown tmp[504360] "maybe param" "temp"
          (504371 'move' tmp[504360] enableParallelGetsInAssignment[287703])
          unknown call_tmp[932883] "expr temp" "maybe param" "maybe type" "temp"
          (932886 'move' call_tmp[932883](504373 call _cond_invalid tmp[504360]))
          if call_tmp[932883]
          {
            (504376 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[706881] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[706882] "maybe param" "temp"
          unknown call_tmp[932888] "expr temp" "maybe param" "maybe type" "temp"
          (932891 'move' call_tmp[932888](504361 call isTrue tmp[504360]))
          (706887 'move' tmp[706882](706885 call _cond_test call_tmp[932888]))
          if tmp[706882]
          {
            unknown tmp[706889] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[932893] "expr temp" "maybe param" "maybe type" "temp"
            (932896 'move' call_tmp[932893](302156 call _isLocSublocSameAsHere Blocid[302044] Bsublocid[302053]))
            unknown call_tmp[932898] "expr temp" "maybe param" "maybe type" "temp"
            (932901 'move' call_tmp[932898](302153 call ! call_tmp[932893]))
            (706891 'move' tmp[706889](504364 call isTrue call_tmp[932898]))
            (706896 'move' tmp[706881](706893 '_paramFoldLogical' tmp[706882] tmp[706889]))
          }
          {
            (706901 'move' tmp[706881](706898 '_paramFoldLogical' tmp[706882] 0))
          }
          unknown call_tmp[932903] "expr temp" "maybe param" "maybe type" "temp"
          (932906 'move' call_tmp[932903](302159 call _cond_test tmp[706881]))
          if call_tmp[932903]
          {
            (302146 call = doParallelAssign[302131] 1)
            (568084 'end of statement' doParallelAssign[302131])
          }
        }
      }
    }
    unknown call_tmp[932908] "expr temp" "maybe param" "maybe type" "temp"
    (932911 'move' call_tmp[932908](302218 call _cond_test doParallelAssign[302131]))
    if call_tmp[932908]
    {
      (302195 call _simpleParallelTransferHelper A[301651] B[301655] Adata[301973] Bdata[302029] Alocid[301988] Asublocid[301997] Blocid[302044] Bsublocid[302053] len[301889])
      (568086 'end of statement' Adata[301973] Bdata[302029] Alocid[301988] Asublocid[301997] Blocid[302044] Bsublocid[302053] len[301889])
    }
    {
      (302207 call _simpleTransferHelper A[301651] B[301655] Adata[301973] Bdata[302029] Alocid[301988] Asublocid[301997] Blocid[302044] Bsublocid[302053] len[301889])
      (568094 'end of statement' Adata[301973] Bdata[302029] Alocid[301988] Asublocid[301997] Blocid[302044] Bsublocid[302053] len[301889])
    }
    label _end__simpleTransfer[630435]
    (630437 return _void[46])
    (397007 'used modules list'(301661 'use' ChplConfig[29952]))
  }
  function _simpleParallelTransferHelper[302224](arg A[302226]:_any[141](?), arg B[302228]:_any[141](?), arg Adata[302230]:_any[141](?), arg Bdata[302232]:_any[141](?), arg Alocid[302234]:_any[141](?), arg Asublocid[302236]:_any[141](?), arg Blocid[302238]:_any[141](?), arg Bsublocid[302240]:_any[141](?), arg len[302242]:_any[141](?)) : _unknown[42] "private" "no return value for void"
  {
    const numTasks[302246] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[706908] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706909] "maybe param" "temp"
    unknown call_tmp[932913] "expr temp" "maybe param" "maybe type" "temp"
    (932916 'move' call_tmp[932913](302247 'task_get_serial'))
    (706914 'move' tmp[706909](706912 call _cond_test call_tmp[932913]))
    if tmp[706909]
    {
      (706919 'move' tmp[706908](706916 '_paramFoldLogical' tmp[706909] 1))
    }
    {
      unknown tmp[706921] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (706923 'move' tmp[706921](302250 call _computeNumChunks len[302242]))
      (706928 'move' tmp[706908](706925 '_paramFoldLogical' tmp[706909] tmp[706921]))
    }
    (653479 'init var' numTasks[302246] tmp[706908])
    (302256 'end of statement')
    unknown call_tmp[932918] "expr temp" "maybe param" "maybe type" "temp"
    (932921 'move' call_tmp[932918](302261 call : len[302242] int(64)[10]))
    unknown call_tmp[932923] "maybe param" "maybe type" "temp"
    (932926 'move' call_tmp[932923](302259 call / call_tmp[932918] numTasks[302246]))
    const lenPerTask[302258] "dead at end of block" "const" "insert auto destroy"
    (653481 'init var' lenPerTask[302258] call_tmp[932923])
    (302267 'end of statement' numTasks[302246])
    unknown tmp[504444] "maybe param" "temp"
    (504455 'move' tmp[504444] debugDefaultDistBulkTransfer[287667])
    unknown call_tmp[932928] "expr temp" "maybe param" "maybe type" "temp"
    (932931 'move' call_tmp[932928](504457 call _cond_invalid tmp[504444]))
    if call_tmp[932928]
    {
      (504460 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[706935] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[706936] "maybe param" "temp"
    unknown call_tmp[932933] "expr temp" "maybe param" "maybe type" "temp"
    (932936 'move' call_tmp[932933](504445 call isTrue tmp[504444]))
    (706941 'move' tmp[706936](706939 call _cond_test call_tmp[932933]))
    if tmp[706936]
    {
      unknown tmp[706943] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[932938] "expr temp" "maybe param" "maybe type" "temp"
      (932941 'move' call_tmp[932938](302281 call > numTasks[302246] 1))
      (706945 'move' tmp[706943](504448 call isTrue call_tmp[932938]))
      (706950 'move' tmp[706935](706947 '_paramFoldLogical' tmp[706936] tmp[706943]))
    }
    {
      (706955 'move' tmp[706935](706952 '_paramFoldLogical' tmp[706936] 0))
    }
    unknown call_tmp[932943] "expr temp" "maybe param" "maybe type" "temp"
    (932946 'move' call_tmp[932943](302285 call _cond_test tmp[706935]))
    if call_tmp[932943]
    {
      (302269 call chpl_debug_writeln "\tWill do parallel transfer with " numTasks[302246] " tasks")
      (568104 'end of statement' numTasks[302246])
    }
    {
      unknown tmpIter[393567] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[932948] "expr temp" "maybe param" "maybe type" "temp"
      (932951 'move' call_tmp[932948](302295 call chpl_build_low_bounded_range 0))
      (393570 'move' tmpIter[393567](302292 call # call_tmp[932948] numTasks[302246]))
      unknown isBounded[393751] "maybe param" "temp"
      (393757 'move' isBounded[393751](393753 call chpl_supportsBoundedCoforall tmpIter[393567] 0))
      if isBounded[393751]
      {
        const _coforallCount[393620] "const" "end count" "temp"
        (393688 'move' _coforallCount[393620](393685 call _endCountAlloc 1))
        unknown numTasks[393621] "temp"
        (393672 'move' numTasks[393621](393668 call chpl_boundedCoforallSize tmpIter[393567] 0))
        (393663 call _upEndCount _coforallCount[393620] 1 numTasks[393621])
        (568106 'end of statement')
        (393660 call chpl_resetTaskSpawn numTasks[393621])
        (568107 'end of statement')
        unknown _indexOfInterest[393628] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[393629] "expr temp" "temp"
        (393638 'move' _iterator[393629](393636 call _getIterator tmpIter[393567]))
        Defer
        {
          {
            (393653 call _freeIterator _iterator[393629])
          }
        }
        { scopeless type
          (393643 'move' _indexOfInterest[393628](393640 call iteratorIndex _iterator[393629]))
        }
        ForLoop[393630]
        {
          unknown tid[393574] "coforall index var" "index var" "insert auto destroy"
          (568109 'end of statement')
          (393648 'move' tid[393574] _indexOfInterest[393628])
          (568110 'end of statement' tid[393574])
          (1465352 call coforall_fn[1465350] A[302226] B[302228] Adata[302230] Bdata[302232] Alocid[302234] Asublocid[302236] Blocid[302238] Bsublocid[302240] len[302242] numTasks[302246] lenPerTask[302258])
          function coforall_fn[1465350](arg A[1465357]:_any[141](?), arg B[1465360]:_any[141](?), arg Adata[1465363]:_any[141](?), arg Bdata[1465366]:_any[141](?), arg Alocid[1465369]:_any[141](?), arg Asublocid[1465372]:_any[141](?), arg Blocid[1465375]:_any[141](?), arg Bsublocid[1465378]:_any[141](?), arg len[1465381]:_any[141](?), arg numTasks[1465384], arg lenPerTask[1465387]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[932953] "maybe param" "maybe type" "temp"
              (932956 'move' call_tmp[932953](393580 call * tid[393574] lenPerTask[1465387]))
              const myOffset[393578] "dead at end of block" "const" "insert auto destroy"
              (653483 'init var' myOffset[393578] call_tmp[932953])
              (393584 'end of statement')
              const myLen[393586] "dead at end of block" "const" "insert auto destroy"
              unknown tmp[706962] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[706963] "maybe param" "temp"
              unknown call_tmp[932958] "expr temp" "maybe param" "maybe type" "temp"
              (932961 'move' call_tmp[932958](393591 call - numTasks[1465384] 1))
              unknown call_tmp[932963] "expr temp" "maybe param" "maybe type" "temp"
              (932966 'move' call_tmp[932963](393588 call == tid[393574] call_tmp[932958]))
              (706968 'move' tmp[706963](706966 call _cond_test call_tmp[932963]))
              if tmp[706963]
              {
                unknown tmp[706970] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[932968] "expr temp" "maybe param" "maybe type" "temp"
                (932971 'move' call_tmp[932968](393598 call : len[1465381] int(64)[10]))
                (706972 'move' tmp[706970](393596 call - call_tmp[932968] myOffset[393578]))
                (706977 'move' tmp[706962](706974 '_paramFoldLogical' tmp[706963] tmp[706970]))
              }
              {
                (706982 'move' tmp[706962](706979 '_paramFoldLogical' tmp[706963] lenPerTask[1465387]))
              }
              (653485 'init var' myLen[393586] tmp[706962])
              (393606 'end of statement' tid[393574] lenPerTask[1465387] numTasks[1465384] myOffset[393578] lenPerTask[1465387])
              (393608 call _simpleTransferHelper A[1465357] B[1465360] Adata[1465363] Bdata[1465366] Alocid[1465369] Asublocid[1465372] Blocid[1465375] Bsublocid[1465378] myLen[393586] myOffset[393578])
              (568117 'end of statement' myLen[393586] myOffset[393578])
            }
            (393623 call _downEndCount _coforallCount[393620] nil[32])
            (1465355 return _void[46])
          }
          {
          }
          label _continueLabel[393633]
          _indexOfInterest[393628]
          _iterator[393629]
        }
        label _breakLabel[393634]
        Defer
        {
          {
            (393675 call _endCountFree _coforallCount[393620])
          }
        }
        (393680 call _waitEndCount _coforallCount[393620] 1 numTasks[393621])
      }
      {
        const _coforallCount[393692] "const" "end count" "temp"
        (393748 'move' _coforallCount[393692](393745 call _endCountAlloc 1))
        unknown _indexOfInterest[393700] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[393701] "expr temp" "temp"
        (393710 'move' _iterator[393701](393708 call _getIterator tmpIter[393567]))
        Defer
        {
          {
            (393725 call _freeIterator _iterator[393701])
          }
        }
        { scopeless type
          (393715 'move' _indexOfInterest[393700](393712 call iteratorIndex _iterator[393701]))
        }
        ForLoop[393702]
        {
          unknown tid[302290] "coforall index var" "index var" "insert auto destroy"
          (568124 'end of statement')
          (393720 'move' tid[302290] _indexOfInterest[393700])
          (568125 'end of statement' tid[302290])
          (393732 call _upEndCount _coforallCount[393692] 1)
          (568127 'end of statement')
          (1465392 call coforall_fn[1465390] A[302226] B[302228] Adata[302230] Bdata[302232] Alocid[302234] Asublocid[302236] Blocid[302238] Bsublocid[302240] len[302242] numTasks[302246] lenPerTask[302258])
          function coforall_fn[1465390](arg A[1465397]:_any[141](?), arg B[1465400]:_any[141](?), arg Adata[1465403]:_any[141](?), arg Bdata[1465406]:_any[141](?), arg Alocid[1465409]:_any[141](?), arg Asublocid[1465412]:_any[141](?), arg Blocid[1465415]:_any[141](?), arg Bsublocid[1465418]:_any[141](?), arg len[1465421]:_any[141](?), arg numTasks[1465424], arg lenPerTask[1465427]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[932973] "maybe param" "maybe type" "temp"
              (932976 'move' call_tmp[932973](302301 call * tid[302290] lenPerTask[1465427]))
              const myOffset[302300] "dead at end of block" "const" "insert auto destroy"
              (653487 'init var' myOffset[302300] call_tmp[932973])
              (302306 'end of statement')
              const myLen[302308] "dead at end of block" "const" "insert auto destroy"
              unknown tmp[706989] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[706990] "maybe param" "temp"
              unknown call_tmp[932978] "expr temp" "maybe param" "maybe type" "temp"
              (932981 'move' call_tmp[932978](302312 call - numTasks[1465424] 1))
              unknown call_tmp[932983] "expr temp" "maybe param" "maybe type" "temp"
              (932986 'move' call_tmp[932983](302309 call == tid[302290] call_tmp[932978]))
              (706995 'move' tmp[706990](706993 call _cond_test call_tmp[932983]))
              if tmp[706990]
              {
                unknown tmp[706997] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[932988] "expr temp" "maybe param" "maybe type" "temp"
                (932991 'move' call_tmp[932988](302318 call : len[1465421] int(64)[10]))
                (706999 'move' tmp[706997](302316 call - call_tmp[932988] myOffset[302300]))
                (707004 'move' tmp[706989](707001 '_paramFoldLogical' tmp[706990] tmp[706997]))
              }
              {
                (707009 'move' tmp[706989](707006 '_paramFoldLogical' tmp[706990] lenPerTask[1465427]))
              }
              (653489 'init var' myLen[302308] tmp[706989])
              (302328 'end of statement' tid[302290] lenPerTask[1465427] numTasks[1465424] myOffset[302300] lenPerTask[1465427])
              (302330 call _simpleTransferHelper A[1465397] B[1465400] Adata[1465403] Bdata[1465406] Alocid[1465409] Asublocid[1465412] Blocid[1465415] Bsublocid[1465418] myLen[302308] myOffset[302300])
              (568133 'end of statement' myLen[302308] myOffset[302300])
            }
            (393695 call _downEndCount _coforallCount[393692] nil[32])
            (1465395 return _void[46])
          }
          {
          }
          label _continueLabel[393705]
          _indexOfInterest[393700]
          _iterator[393701]
        }
        label _breakLabel[393706]
        Defer
        {
          {
            (393736 call _endCountFree _coforallCount[393692])
          }
        }
        (393741 call _waitEndCount _coforallCount[393692] 1)
      }
    }
    (630441 return _void[46])
  }
  function _simpleTransferHelper[302344](arg A[302346]:_any[141](?), arg B[302348]:_any[141](?), arg Adata[302350]:_any[141](?), arg Bdata[302352]:_any[141](?), arg Alocid[302354]:_any[141](?), arg Asublocid[302356]:_any[141](?), arg Blocid[302358]:_any[141](?), arg Bsublocid[302360]:_any[141](?), arg len[302362]:_any[141](?), arg offset[302365] :
  0 =
  0) : _unknown[42] "private" "no return value for void"
  {
    unknown call_tmp[932993] "expr temp" "maybe param" "maybe type" "temp"
    (932996 'move' call_tmp[932993](302371 call == Adata[302350] Bdata[302352]))
    unknown call_tmp[932998] "expr temp" "maybe param" "maybe type" "temp"
    (933001 'move' call_tmp[932998](302375 call _cond_test call_tmp[932993]))
    if call_tmp[932998]
    {
      gotoReturn _end__simpleTransferHelper[630443] _end__simpleTransferHelper[630443]
    }
    const srcRef[302381] "dead at end of block" "const" "ref var"
    (653494 'init ref decl' srcRef[302381])
    unknown call_tmp[933003] "expr temp" "maybe param" "maybe type" "temp"
    (933006 'move' call_tmp[933003](302383 call Bdata[302352] offset[302365]))
    (653492 'move' srcRef[302381](653491 'addr of' call_tmp[933003]))
    (302386 'end of statement')
    unknown dstRef[302388] "dead at end of block" "ref var"
    (653499 'init ref decl' dstRef[302388])
    unknown call_tmp[933008] "expr temp" "maybe param" "maybe type" "temp"
    (933011 'move' call_tmp[933008](302390 call Adata[302350] offset[302365]))
    (653497 'move' dstRef[302388](653496 'addr of' call_tmp[933008]))
    (302393 'end of statement')
    unknown call_tmp[933013] "expr temp" "maybe param" "maybe type" "temp"
    (933016 'move' call_tmp[933013](302486 call _isLocSublocSameAsHere Alocid[302354] Asublocid[302356]))
    unknown call_tmp[933018] "expr temp" "maybe param" "maybe type" "temp"
    (933021 'move' call_tmp[933018](302489 call _cond_test call_tmp[933013]))
    if call_tmp[933018]
    {
      unknown call_tmp[933023] "expr temp" "maybe param" "maybe type" "temp"
      (933026 'move' call_tmp[933023](302403 call _cond_test debugDefaultDistBulkTransfer[287667]))
      if call_tmp[933023]
      {
        (302396 call chpl_debug_writeln "\tlocal get() from " Blocid[302358])
      }
      (302408 'chpl_comm_array_get' dstRef[302388] Blocid[302358] Bsublocid[302360] srcRef[302381] len[302362])
      (568141 'end of statement' dstRef[302388] srcRef[302381])
    }
    {
      unknown call_tmp[933028] "expr temp" "maybe param" "maybe type" "temp"
      (933031 'move' call_tmp[933028](302477 call _isLocSublocSameAsHere Blocid[302358] Bsublocid[302360]))
      unknown call_tmp[933033] "expr temp" "maybe param" "maybe type" "temp"
      (933036 'move' call_tmp[933033](302480 call _cond_test call_tmp[933028]))
      if call_tmp[933033]
      {
        unknown call_tmp[933038] "expr temp" "maybe param" "maybe type" "temp"
        (933041 'move' call_tmp[933038](302423 call _cond_test debugDefaultDistBulkTransfer[287667]))
        if call_tmp[933038]
        {
          (302416 call chpl_debug_writeln "\tlocal put() to " Alocid[302354])
        }
        (302428 'chpl_comm_array_put' srcRef[302381] Alocid[302354] Asublocid[302356] dstRef[302388] len[302362])
        (568145 'end of statement' srcRef[302381] dstRef[302388])
      }
      {
        {
          const tmp[302468] "const" "temp"
          unknown call_tmp[933043] "expr temp" "maybe param" "maybe type" "temp"
          (933046 'move' call_tmp[933043](302435 '_wide_get_locale' Adata[302350]))
          unknown call_tmp[933048] "expr temp" "maybe param" "maybe type" "temp"
          (933051 'move' call_tmp[933048](302436 call chpl_localeID_to_locale call_tmp[933043]))
          unknown call_tmp[933053] "expr temp" "maybe param" "maybe type" "temp"
          (933056 'move' call_tmp[933053](302465 '_wide_get_locale' call_tmp[933048]))
          (302469 'move' tmp[302468](302466 'deref' call_tmp[933053]))
          {
            unknown call_tmp[933058] "expr temp" "maybe param" "maybe type" "temp"
            (933061 'move' call_tmp[933058](302454 call _cond_test debugDefaultDistBulkTransfer[287667]))
            if call_tmp[933058]
            {
              unknown call_tmp[933063] "expr temp" "maybe param" "maybe type" "temp"
              (933066 'move' call_tmp[933063](410175 call here[135591]))
              unknown call_tmp[933070] "expr temp" "maybe param" "maybe type" "temp"
              (933073 'move' call_tmp[933070](302445 call id _mt[203] call_tmp[933063]))
              (302440 call chpl_debug_writeln "\tremote get() on " call_tmp[933070] " from " Blocid[302358])
            }
            (302459 'chpl_comm_array_get' dstRef[302388] Blocid[302358] Bsublocid[302360] srcRef[302381] len[302362])
            (568149 'end of statement' dstRef[302388] srcRef[302381])
          }
          (302472 'elided on block' 0 tmp[302468])
        }
      }
    }
    label _end__simpleTransferHelper[630443]
    (630445 return _void[46])
  }
  function complexTransfer[302496](arg A[302498]:_any[141](?), arg aView[302500]:_any[141](?), arg B[302502]:_any[141](?), arg bView[302504]:_any[141](?)) : _unknown[42] "private" "no return value for void"
  {
    unknown call_tmp[933077] "expr temp" "maybe param" "maybe type" "temp"
    (933080 'move' call_tmp[933077](302513 call data _mt[203] A[302498]))
    unknown call_tmp[933082] "maybe param" "maybe type" "temp"
    (933085 'move' call_tmp[933082](302519 '_wide_get_node' call_tmp[933077]))
    const Alocid[302511] "dead at end of block" "const" "insert auto destroy"
    (653501 'init var' Alocid[302511] call_tmp[933082])
    (302521 'end of statement')
    const Asublocid[302523] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[707016] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707017] "maybe param" "temp"
    unknown call_tmp[933087] "expr temp" "maybe param" "maybe type" "temp"
    (933090 'move' call_tmp[933087](302524 call != CHPL_LOCALE_MODEL[29682] "gpu"))
    (707022 'move' tmp[707017](707020 call _cond_test call_tmp[933087]))
    if tmp[707017]
    {
      (707027 'move' tmp[707016](707024 '_paramFoldLogical' tmp[707017] c_sublocid_any[135202]))
    }
    {
      unknown tmp[707029] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[933094] "expr temp" "maybe param" "maybe type" "temp"
      (933097 'move' call_tmp[933094](302532 call data _mt[203] A[302498]))
      unknown call_tmp[933099] "expr temp" "maybe param" "maybe type" "temp"
      (933102 'move' call_tmp[933099](302535 '_wide_get_locale' call_tmp[933094]))
      unknown call_tmp[933104] "expr temp" "maybe param" "maybe type" "temp"
      (933107 'move' call_tmp[933104](302536 call chpl_localeID_to_locale call_tmp[933099]))
      unknown call_tmp[933111] "expr temp" "maybe param" "maybe type" "temp"
      (933114 'move' call_tmp[933111](302541 call(302538 call (partial) chpl_localeid _mt[203] call_tmp[933104])))
      (707031 'move' tmp[707029](302530 call chpl_sublocFromLocaleID call_tmp[933111]))
      (707036 'move' tmp[707016](707033 '_paramFoldLogical' tmp[707017] tmp[707029]))
    }
    (653503 'init var' Asublocid[302523] tmp[707016])
    (302546 'end of statement')
    unknown call_tmp[933118] "expr temp" "maybe param" "maybe type" "temp"
    (933121 'move' call_tmp[933118](302550 call data _mt[203] B[302502]))
    unknown call_tmp[933123] "maybe param" "maybe type" "temp"
    (933126 'move' call_tmp[933123](302556 '_wide_get_node' call_tmp[933118]))
    const Blocid[302548] "dead at end of block" "const" "insert auto destroy"
    (653505 'init var' Blocid[302548] call_tmp[933123])
    (302558 'end of statement')
    const Bsublocid[302560] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[707043] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707044] "maybe param" "temp"
    unknown call_tmp[933128] "expr temp" "maybe param" "maybe type" "temp"
    (933131 'move' call_tmp[933128](302561 call != CHPL_LOCALE_MODEL[29682] "gpu"))
    (707049 'move' tmp[707044](707047 call _cond_test call_tmp[933128]))
    if tmp[707044]
    {
      (707054 'move' tmp[707043](707051 '_paramFoldLogical' tmp[707044] c_sublocid_any[135202]))
    }
    {
      unknown tmp[707056] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[933135] "expr temp" "maybe param" "maybe type" "temp"
      (933138 'move' call_tmp[933135](302569 call data _mt[203] B[302502]))
      unknown call_tmp[933140] "expr temp" "maybe param" "maybe type" "temp"
      (933143 'move' call_tmp[933140](302572 '_wide_get_locale' call_tmp[933135]))
      unknown call_tmp[933145] "expr temp" "maybe param" "maybe type" "temp"
      (933148 'move' call_tmp[933145](302573 call chpl_localeID_to_locale call_tmp[933140]))
      unknown call_tmp[933152] "expr temp" "maybe param" "maybe type" "temp"
      (933155 'move' call_tmp[933152](302578 call(302575 call (partial) chpl_localeid _mt[203] call_tmp[933145])))
      (707058 'move' tmp[707056](302567 call chpl_sublocFromLocaleID call_tmp[933152]))
      (707063 'move' tmp[707043](707060 '_paramFoldLogical' tmp[707044] tmp[707056]))
    }
    (653507 'init var' Bsublocid[302560] tmp[707043])
    (302583 'end of statement')
    unknown tmp[504465] "maybe param" "temp"
    unknown call_tmp[933157] "expr temp" "maybe param" "maybe type" "temp"
    (933160 'move' call_tmp[933157](302646 call _isLocSublocSameAsHere Alocid[302511] Asublocid[302523]))
    (504476 'move' tmp[504465](302643 call ! call_tmp[933157]))
    unknown call_tmp[933162] "expr temp" "maybe param" "maybe type" "temp"
    (933165 'move' call_tmp[933162](504478 call _cond_invalid tmp[504465]))
    if call_tmp[933162]
    {
      (504481 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707070] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707071] "maybe param" "temp"
    unknown call_tmp[933167] "expr temp" "maybe param" "maybe type" "temp"
    (933170 'move' call_tmp[933167](504466 call isTrue tmp[504465]))
    (707076 'move' tmp[707071](707074 call _cond_test call_tmp[933167]))
    if tmp[707071]
    {
      unknown tmp[707078] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[933172] "expr temp" "maybe param" "maybe type" "temp"
      (933175 'move' call_tmp[933172](302652 call _isLocSublocSameAsHere Blocid[302548] Bsublocid[302560]))
      unknown call_tmp[933177] "expr temp" "maybe param" "maybe type" "temp"
      (933180 'move' call_tmp[933177](302649 call ! call_tmp[933172]))
      (707080 'move' tmp[707078](504469 call isTrue call_tmp[933177]))
      (707085 'move' tmp[707070](707082 '_paramFoldLogical' tmp[707071] tmp[707078]))
    }
    {
      (707090 'move' tmp[707070](707087 '_paramFoldLogical' tmp[707071] 0))
    }
    unknown call_tmp[933182] "expr temp" "maybe param" "maybe type" "temp"
    (933185 'move' call_tmp[933182](302655 call _cond_test tmp[707070]))
    if call_tmp[933182]
    {
      unknown call_tmp[933187] "expr temp" "maybe param" "maybe type" "temp"
      (933190 'move' call_tmp[933187](302600 call _cond_test debugDefaultDistBulkTransfer[287667]))
      if call_tmp[933187]
      {
        unknown call_tmp[933194] "expr temp" "maybe param" "maybe type" "temp"
        (933197 'move' call_tmp[933194](302592 call data _mt[203] A[302498]))
        unknown call_tmp[933199] "expr temp" "maybe param" "maybe type" "temp"
        (933202 'move' call_tmp[933199](302598 '_wide_get_node' call_tmp[933194]))
        (302587 call chpl_debug_writeln "BulkTransferStride: Both arrays on different locale, moving to locale of destination: LOCALE" call_tmp[933199])
      }
      {
        const tmp[302622] "const" "temp"
        unknown call_tmp[933206] "expr temp" "maybe param" "maybe type" "temp"
        (933209 'move' call_tmp[933206](302605 call data _mt[203] A[302498]))
        unknown call_tmp[933211] "expr temp" "maybe param" "maybe type" "temp"
        (933214 'move' call_tmp[933211](302619 '_wide_get_locale' call_tmp[933206]))
        (302623 'move' tmp[302622](302620 'deref' call_tmp[933211]))
        (302609 call complexTransferCore A[302498] Alocid[302511] Asublocid[302523] aView[302500] B[302502] Blocid[302548] Bsublocid[302560] bView[302504])
        (568154 'end of statement' Alocid[302511] Asublocid[302523] Blocid[302548] Bsublocid[302560])
        (302626 'elided on block' 0 tmp[302622])
      }
    }
    {
      (302632 call complexTransferCore A[302498] Alocid[302511] Asublocid[302523] aView[302500] B[302502] Blocid[302548] Bsublocid[302560] bView[302504])
      (568159 'end of statement' Alocid[302511] Asublocid[302523] Blocid[302548] Bsublocid[302560])
    }
    (630449 return _void[46])
    (397009 'used modules list'(302508 'use' ChplConfig[29952]))
  }
  function complexTransferCore[302661](arg LHS[302663]:_any[141](?), arg LHSlocid[302665]:_any[141](?), arg LHSsublocid[302667]:_any[141](?), arg LViewDom[302669]:_any[141](?), arg RHS[302671]:_any[141](?), arg RHSlocid[302673]:_any[141](?), arg RHSsublocid[302675]:_any[141](?), arg RViewDom[302677]:_any[141](?)) : _unknown[42] "private"
  {
    unknown call_tmp[933218] "expr temp" "maybe param" "maybe type" "temp"
    (933221 'move' call_tmp[933218](302685 call rank _mt[203] LHS[302663]))
    unknown call_tmp[933225] "expr temp" "maybe param" "maybe type" "temp"
    (933228 'move' call_tmp[933225](302689 call rank _mt[203] RHS[302671]))
    unknown call_tmp[933230] "maybe param" "maybe type" "temp"
    (933233 'move' call_tmp[933230](302683 call min call_tmp[933218] call_tmp[933225]))
    unknown minRank[302681] "dead at end of block" "param"
    (653509 'init var' minRank[302681] call_tmp[933230])
    (302693 'end of statement')
    unknown idxType[302695] "dead at end of block" "insert auto destroy" "type variable"
    (653515 'move' idxType[302695](653512 call idxType _mt[203] LHS[302663]))
    unknown chpl_integralIdxType[302702] "dead at end of block" "insert auto destroy" "type variable"
    (653521 'move' chpl_integralIdxType[302702](653518 call chpl_integralIdxType _mt[203] LHS[302663]))
    unknown call_tmp[933239] "expr temp" "maybe param" "maybe type" "temp"
    (933242 'move' call_tmp[933239](302742 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[933239]
    {
      (302710 call writeln "Transferring views :" LViewDom[302669] " <-- " RViewDom[302677])
      (568164 'end of statement')
      unknown call_tmp[933246] "expr temp" "maybe param" "maybe type" "temp"
      (933249 'move' call_tmp[933246](302725 call dom _mt[203] LHS[302663]))
      unknown call_tmp[933253] "expr temp" "maybe param" "maybe type" "temp"
      (933256 'move' call_tmp[933253](302731 call(302728 call (partial) dsiDims _mt[203] call_tmp[933246])))
      unknown call_tmp[933260] "expr temp" "maybe param" "maybe type" "temp"
      (933263 'move' call_tmp[933260](302734 call dom _mt[203] RHS[302671]))
      unknown call_tmp[933267] "expr temp" "maybe param" "maybe type" "temp"
      (933270 'move' call_tmp[933267](302740 call(302737 call (partial) dsiDims _mt[203] call_tmp[933260])))
      (302720 call writeln "Original domains   :" call_tmp[933253] " <-- " call_tmp[933267])
    }
    const LeftDims[302747] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[707097] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707098] "maybe param" "temp"
    unknown call_tmp[933272] "expr temp" "maybe param" "maybe type" "temp"
    (933275 'move' call_tmp[933272](302749 call isDomain LViewDom[302669]))
    (707103 'move' tmp[707098](707101 call _cond_test call_tmp[933272]))
    if tmp[707098]
    {
      unknown tmp[707105] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (707107 'move' tmp[707105](302755 call(302752 call (partial) dims _mt[203] LViewDom[302669])))
      (707112 'move' tmp[707097](707109 '_paramFoldLogical' tmp[707098] tmp[707105]))
    }
    {
      unknown tmp[707114] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (707116 'move' tmp[707114](302758 call _build_tuple LViewDom[302669]))
      (707121 'move' tmp[707097](707118 '_paramFoldLogical' tmp[707098] tmp[707114]))
    }
    (653523 'init var' LeftDims[302747] tmp[707097])
    (302764 'end of statement')
    const RightDims[302766] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[707128] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707129] "maybe param" "temp"
    unknown call_tmp[933279] "expr temp" "maybe param" "maybe type" "temp"
    (933282 'move' call_tmp[933279](302768 call isDomain RViewDom[302677]))
    (707134 'move' tmp[707129](707132 call _cond_test call_tmp[933279]))
    if tmp[707129]
    {
      unknown tmp[707136] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (707138 'move' tmp[707136](302774 call(302771 call (partial) dims _mt[203] RViewDom[302677])))
      (707143 'move' tmp[707128](707140 '_paramFoldLogical' tmp[707129] tmp[707136]))
    }
    {
      unknown tmp[707145] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (707147 'move' tmp[707145](302777 call _build_tuple RViewDom[302677]))
      (707152 'move' tmp[707128](707149 '_paramFoldLogical' tmp[707129] tmp[707145]))
    }
    (653525 'init var' RightDims[302766] tmp[707128])
    (302783 'end of statement')
    unknown call_tmp[933286] "maybe param" "maybe type" "temp"
    (933289 'move' call_tmp[933286](302792 call bulkCommComputeActiveDims LeftDims[302747] RightDims[302766]))
    const tmp[302795] "dead at end of block" "const" "insert auto destroy" "temp"
    (653527 'init var' tmp[302795] call_tmp[933286])
    (302805 call _check_tuple_var_decl tmp[302795] 3)
    (568166 'end of statement')
    unknown call_tmp[933291] "maybe param" "maybe type" "temp"
    (933294 'move' call_tmp[933291](302796 call tmp[302795] 0))
    const LeftActives[302785] "dead at end of block" "const" "insert auto destroy"
    (653529 'init var' LeftActives[302785] call_tmp[933291])
    unknown call_tmp[933296] "maybe param" "maybe type" "temp"
    (933299 'move' call_tmp[933296](302799 call tmp[302795] 1))
    const RightActives[302787] "dead at end of block" "const" "insert auto destroy"
    (653531 'init var' RightActives[302787] call_tmp[933296])
    unknown call_tmp[933301] "maybe param" "maybe type" "temp"
    (933304 'move' call_tmp[933301](302802 call tmp[302795] 2))
    const inferredRank[302789] "dead at end of block" "const" "insert auto destroy"
    (653533 'init var' inferredRank[302789] call_tmp[933301])
    (302810 'end of statement')
    { scopeless type
      unknown call_type_tmp[578985] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[933306] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (933309 'move' call_tmp[933306](302820 call LeftDims[302747] 0))
      unknown call_tmp[933313] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (933316 'move' call_tmp[933313](302825 call(302822 call (partial) sizeAs _mt[203] call_tmp[933306]) int(64)[10]))
      (578989 'move' call_type_tmp[578985](302827 'typeof' call_tmp[933313]))
    }
    unknown DimSizes[302812] "dead at end of block" "insert auto destroy"
    unknown call_tmp[933318] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (933321 'move' call_tmp[933318](302815 call chpl_build_bounded_range 1 inferredRank[302789]))
    unknown call_tmp[933323] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (933326 'move' call_tmp[933323](302817 call chpl__ensureDomainExpr call_tmp[933318]))
    unknown call_tmp[933328] "expr temp" "maybe param" "maybe type" "temp"
    (933331 'move' call_tmp[933328](302828 call chpl__buildArrayRuntimeType call_tmp[933323] call_type_tmp[578985]))
    (653535 'default init var' DimSizes[302812] call_tmp[933328])
    (302831 'end of statement')
    {
      unknown _indexOfInterest[302862] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[302863] "expr temp" "temp"
      unknown call_tmp[933333] "expr temp" "maybe param" "maybe type" "temp"
      (933336 'move' call_tmp[933333](302876 call chpl_direct_range_iter 1 inferredRank[302789]))
      (302872 'move' _iterator[302863](302870 call _getIterator call_tmp[933333]))
      Defer
      {
        {
          (302891 call _freeIterator _iterator[302863])
        }
      }
      { scopeless type
        (302881 'move' _indexOfInterest[302862](302878 call iteratorIndex _iterator[302863]))
      }
      ForLoop[302864]
      {
        unknown i[302832] "index var" "insert auto destroy"
        (568170 'end of statement')
        (302886 'move' i[302832] _indexOfInterest[302862])
        (568171 'end of statement' i[302832])
        {
          unknown call_tmp[933338] "expr temp" "maybe param" "maybe type" "temp"
          (933341 'move' call_tmp[933338](302843 call - i[302832] 1))
          unknown call_tmp[933343] "maybe param" "maybe type" "temp"
          (933346 'move' call_tmp[933343](302842 call LeftActives[302785] call_tmp[933338]))
          const dimIdx[302840] "dead at end of block" "const" "insert auto destroy"
          (653537 'init var' dimIdx[302840] call_tmp[933343])
          (302848 'end of statement' LeftActives[302785] i[302832])
          unknown call_tmp[933348] "expr temp" "maybe param" "maybe type" "temp"
          (933351 'move' call_tmp[933348](302852 call DimSizes[302812] i[302832]))
          unknown call_tmp[933353] "expr temp" "maybe param" "maybe type" "temp"
          (933356 'move' call_tmp[933353](302855 call LeftDims[302747] dimIdx[302840]))
          unknown call_tmp[933360] "expr temp" "maybe param" "maybe type" "temp"
          (933363 'move' call_tmp[933360](302860 call(302857 call (partial) sizeAs _mt[203] call_tmp[933353]) int(64)[10]))
          (302849 call = call_tmp[933348] call_tmp[933360])
          (568175 'end of statement' DimSizes[302812] i[302832] LeftDims[302747] dimIdx[302840])
        }
        label _continueLabel[302867]
        _indexOfInterest[302862]
        _iterator[302863]
      }
      label _breakLabel[302868]
    }
    unknown call_tmp[933365] "expr temp" "maybe param" "maybe type" "temp"
    (933368 'move' call_tmp[933365](302906 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[933365]
    {
      (302900 call writeln "inferredRank = " inferredRank[302789])
      (568180 'end of statement' inferredRank[302789])
    }
    unknown call_tmp[933370] "expr temp" "maybe param" "maybe type" "temp"
    (933373 'move' call_tmp[933370](302912 call <= inferredRank[302789] minRank[302681]))
    (302911 call assert call_tmp[933370] "complex DR transfer: computed rank greater than minimum rank!")
    (568182 'end of statement' inferredRank[302789])
    unknown type_tmp[302929] "dead at end of block" "insert auto destroy" "temp" "type variable"
    (653543 'move' type_tmp[302929](653540 call * minRank[302681] int(64)[10]))
    unknown LBlk[302928] "dead at end of block" "insert auto destroy"
    (653545 'default init var' LBlk[302928] type_tmp[302929])
    unknown RBlk[302921] "dead at end of block" "insert auto destroy"
    (653547 'default init var' RBlk[302921] type_tmp[302929])
    (302934 'end of statement')
    {
      {
        unknown _indexOfInterest[303050] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303051] "expr temp" "temp"
        unknown call_tmp[933375] "expr temp" "maybe param" "maybe type" "temp"
        (933378 'move' call_tmp[933375](303067 call - 1))
        unknown call_tmp[933380] "expr temp" "maybe param" "maybe type" "temp"
        (933383 'move' call_tmp[933380](303071 call chpl_direct_strided_range_iter 1 inferredRank[302789] call_tmp[933375]))
        (303060 'move' _iterator[303051](303058 call _getIterator call_tmp[933380]))
        Defer
        {
          {
            (303086 call _freeIterator _iterator[303051])
          }
        }
        { scopeless type
          (303076 'move' _indexOfInterest[303050](303073 call iteratorIndex _iterator[303051]))
        }
        ForLoop[303052]
        {
          unknown idx[302936] "index var" "insert auto destroy"
          (568185 'end of statement')
          (303081 'move' idx[302936] _indexOfInterest[303050])
          (568186 'end of statement' idx[302936])
          {
            unknown call_tmp[933385] "expr temp" "maybe param" "maybe type" "temp"
            (933388 'move' call_tmp[933385](302952 call - idx[302936] 1))
            unknown call_tmp[933390] "maybe param" "maybe type" "temp"
            (933393 'move' call_tmp[933390](302951 call LeftActives[302785] call_tmp[933385]))
            const li[302949] "dead at end of block" "const" "insert auto destroy"
            (653549 'init var' li[302949] call_tmp[933390])
            (302957 'end of statement')
            unknown call_tmp[933395] "expr temp" "maybe param" "maybe type" "temp"
            (933398 'move' call_tmp[933395](302962 call - idx[302936] 1))
            unknown call_tmp[933400] "expr temp" "maybe param" "maybe type" "temp"
            (933403 'move' call_tmp[933400](302961 call LBlk[302928] call_tmp[933395]))
            unknown call_tmp[933407] "expr temp" "maybe param" "maybe type" "temp"
            (933410 'move' call_tmp[933407](302972 call(302969 call (partial) blk _mt[203] LHS[302663]) li[302949]))
            unknown call_tmp[933412] "expr temp" "maybe param" "maybe type" "temp"
            (933415 'move' call_tmp[933412](302977 call LeftDims[302747] li[302949]))
            unknown call_tmp[933419] "expr temp" "maybe param" "maybe type" "temp"
            (933422 'move' call_tmp[933419](302979 call stride _mt[203] call_tmp[933412]))
            unknown call_tmp[933426] "expr temp" "maybe param" "maybe type" "temp"
            (933429 'move' call_tmp[933426](302983 call dom _mt[203] LHS[302663]))
            unknown call_tmp[933433] "expr temp" "maybe param" "maybe type" "temp"
            (933436 'move' call_tmp[933433](302989 call(302986 call (partial) dsiDim _mt[203] call_tmp[933426]) li[302949]))
            unknown call_tmp[933440] "expr temp" "maybe param" "maybe type" "temp"
            (933443 'move' call_tmp[933440](302991 call stride _mt[203] call_tmp[933433]))
            unknown call_tmp[933445] "expr temp" "maybe param" "maybe type" "temp"
            (933448 'move' call_tmp[933445](302974 call / call_tmp[933419] call_tmp[933440]))
            unknown call_tmp[933452] "expr temp" "maybe param" "maybe type" "temp"
            (933455 'move' call_tmp[933452](302997 call(302994 call (partial) safeCast _mt[203] call_tmp[933445]) int(64)[10]))
            unknown call_tmp[933457] "expr temp" "maybe param" "maybe type" "temp"
            (933460 'move' call_tmp[933457](302966 call * call_tmp[933407] call_tmp[933452]))
            (302958 call = call_tmp[933400] call_tmp[933457])
            (568190 'end of statement' LBlk[302928] idx[302936] li[302949] LeftDims[302747] li[302949])
            unknown call_tmp[933462] "expr temp" "maybe param" "maybe type" "temp"
            (933465 'move' call_tmp[933462](303003 call - idx[302936] 1))
            unknown call_tmp[933467] "maybe param" "maybe type" "temp"
            (933470 'move' call_tmp[933467](303002 call RightActives[302787] call_tmp[933462]))
            const ri[303000] "dead at end of block" "const" "insert auto destroy"
            (653551 'init var' ri[303000] call_tmp[933467])
            (303008 'end of statement' LeftActives[302785] idx[302936] RightActives[302787] idx[302936])
            unknown call_tmp[933472] "expr temp" "maybe param" "maybe type" "temp"
            (933475 'move' call_tmp[933472](303013 call - idx[302936] 1))
            unknown call_tmp[933477] "expr temp" "maybe param" "maybe type" "temp"
            (933480 'move' call_tmp[933477](303012 call RBlk[302921] call_tmp[933472]))
            unknown call_tmp[933484] "expr temp" "maybe param" "maybe type" "temp"
            (933487 'move' call_tmp[933484](303023 call(303020 call (partial) blk _mt[203] RHS[302671]) ri[303000]))
            unknown call_tmp[933489] "expr temp" "maybe param" "maybe type" "temp"
            (933492 'move' call_tmp[933489](303028 call RightDims[302766] ri[303000]))
            unknown call_tmp[933496] "expr temp" "maybe param" "maybe type" "temp"
            (933499 'move' call_tmp[933496](303030 call stride _mt[203] call_tmp[933489]))
            unknown call_tmp[933503] "expr temp" "maybe param" "maybe type" "temp"
            (933506 'move' call_tmp[933503](303034 call dom _mt[203] RHS[302671]))
            unknown call_tmp[933510] "expr temp" "maybe param" "maybe type" "temp"
            (933513 'move' call_tmp[933510](303040 call(303037 call (partial) dsiDim _mt[203] call_tmp[933503]) ri[303000]))
            unknown call_tmp[933517] "expr temp" "maybe param" "maybe type" "temp"
            (933520 'move' call_tmp[933517](303042 call stride _mt[203] call_tmp[933510]))
            unknown call_tmp[933522] "expr temp" "maybe param" "maybe type" "temp"
            (933525 'move' call_tmp[933522](303025 call / call_tmp[933496] call_tmp[933517]))
            unknown call_tmp[933529] "expr temp" "maybe param" "maybe type" "temp"
            (933532 'move' call_tmp[933529](303048 call(303045 call (partial) safeCast _mt[203] call_tmp[933522]) int(64)[10]))
            unknown call_tmp[933534] "expr temp" "maybe param" "maybe type" "temp"
            (933537 'move' call_tmp[933534](303017 call * call_tmp[933484] call_tmp[933529]))
            (303009 call = call_tmp[933477] call_tmp[933534])
            (568198 'end of statement' RBlk[302921] idx[302936] ri[303000] RightDims[302766] ri[303000])
          }
          label _continueLabel[303055]
          _indexOfInterest[303050]
          _iterator[303051]
        }
        label _breakLabel[303056]
      }
    }
    unknown call_tmp[933539] "expr temp" "maybe param" "maybe type" "temp"
    (933542 'move' call_tmp[933539](303107 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[933539]
    {
      (303095 call writeln "LBlk = " LBlk[302928])
      (568204 'end of statement' LBlk[302928])
      (303101 call writeln "RBlk = " RBlk[302921])
      (568206 'end of statement' RBlk[302921])
    }
    unknown stridelevels[303112] "dead at end of block" "insert auto destroy"
    (653553 'init var' stridelevels[303112] 0)
    (303115 'end of statement')
    unknown call_tmp[933544] "expr temp" "maybe param" "maybe type" "temp"
    (933547 'move' call_tmp[933544](303120 call + inferredRank[302789] 1))
    unknown call_tmp[933549] "expr temp" "maybe param" "maybe type" "temp"
    (933552 'move' call_tmp[933549](303124 call chpl_build_bounded_range 1 call_tmp[933544]))
    unknown call_tmp[933554] "maybe param" "maybe type" "temp"
    (933557 'move' call_tmp[933554](303127 call chpl__buildDomainExpr call_tmp[933549] 0))
    unknown countDom[303117] "dead at end of block" "insert auto destroy"
    (653555 'init var' countDom[303117] call_tmp[933554])
    (303131 'end of statement')
    unknown count[303133] "dead at end of block" "insert auto destroy"
    unknown call_tmp[933559] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (933562 'move' call_tmp[933559](303135 call chpl__ensureDomainExpr countDom[303117]))
    unknown call_tmp[933564] "expr temp" "maybe param" "maybe type" "temp"
    (933567 'move' call_tmp[933564](303138 call chpl__buildArrayRuntimeType call_tmp[933559] c_size_t[614]))
    (653557 'default init var' count[303133] call_tmp[933564])
    (303141 'end of statement')
    {
      unknown _indexOfInterest[303150] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303151] "expr temp" "temp"
      (303160 'move' _iterator[303151](303158 call _getIterator count[303133]))
      Defer
      {
        {
          (303175 call _freeIterator _iterator[303151])
        }
      }
      { scopeless type
        (303165 'move' _indexOfInterest[303150](303162 call iteratorIndex _iterator[303151]))
      }
      ForLoop[303152]
      {
        unknown c[303142] "index var" "insert auto destroy"
        (568210 'end of statement')
        (303170 'move' c[303142] _indexOfInterest[303150])
        (568211 'end of statement' c[303142])
        (303145 call = c[303142] 1)
        (568213 'end of statement' c[303142])
        label _continueLabel[303155]
        _indexOfInterest[303150]
        _iterator[303151]
      }
      label _breakLabel[303156]
    }
    unknown call_tmp[933569] "expr temp" "maybe param" "maybe type" "temp"
    (933572 'move' call_tmp[933569](303187 call chpl_build_bounded_range 1 inferredRank[302789]))
    unknown call_tmp[933574] "maybe param" "maybe type" "temp"
    (933577 'move' call_tmp[933574](303190 call chpl__buildDomainExpr call_tmp[933569] 0))
    unknown strideDom[303183] "dead at end of block" "insert auto destroy"
    (653559 'init var' strideDom[303183] call_tmp[933574])
    (303194 'end of statement')
    unknown type_tmp[303207] "dead at end of block" "insert auto destroy" "temp" "type variable"
    unknown call_tmp[933579] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (933582 'move' call_tmp[933579](653564 call chpl__ensureDomainExpr strideDom[303183]))
    (653567 'move' type_tmp[303207](653562 call chpl__buildArrayRuntimeType call_tmp[933579] c_size_t[614]))
    unknown dstStride[303206] "dead at end of block" "insert auto destroy"
    (653569 'default init var' dstStride[303206] type_tmp[303207])
    unknown srcStride[303197] "dead at end of block" "insert auto destroy"
    (653571 'default init var' srcStride[303197] type_tmp[303207])
    (303212 'end of statement')
    unknown tmp[504486] "maybe param" "temp"
    unknown call_tmp[933584] "expr temp" "maybe param" "maybe type" "temp"
    (933587 'move' call_tmp[933584](303262 call - inferredRank[302789] 1))
    unknown call_tmp[933589] "expr temp" "maybe param" "maybe type" "temp"
    (933592 'move' call_tmp[933589](303261 call LBlk[302928] call_tmp[933584]))
    (504497 'move' tmp[504486](303258 call > call_tmp[933589] 1))
    unknown call_tmp[933594] "expr temp" "maybe param" "maybe type" "temp"
    (933597 'move' call_tmp[933594](504499 call _cond_invalid tmp[504486]))
    if call_tmp[933594]
    {
      (504502 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[707159] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707160] "maybe param" "temp"
    unknown call_tmp[933599] "expr temp" "maybe param" "maybe type" "temp"
    (933602 'move' call_tmp[933599](504487 call isTrue tmp[504486]))
    (707165 'move' tmp[707160](707163 call _cond_test call_tmp[933599]))
    if tmp[707160]
    {
      (707170 'move' tmp[707159](707167 '_paramFoldLogical' tmp[707160] 1))
    }
    {
      unknown tmp[707172] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[933604] "expr temp" "maybe param" "maybe type" "temp"
      (933607 'move' call_tmp[933604](303271 call - inferredRank[302789] 1))
      unknown call_tmp[933609] "expr temp" "maybe param" "maybe type" "temp"
      (933612 'move' call_tmp[933609](303270 call RBlk[302921] call_tmp[933604]))
      unknown call_tmp[933614] "expr temp" "maybe param" "maybe type" "temp"
      (933617 'move' call_tmp[933614](303267 call > call_tmp[933609] 1))
      (707174 'move' tmp[707172](504491 call isTrue call_tmp[933614]))
      (707179 'move' tmp[707159](707176 '_paramFoldLogical' tmp[707160] tmp[707172]))
    }
    unknown call_tmp[933619] "expr temp" "maybe param" "maybe type" "temp"
    (933622 'move' call_tmp[933619](303276 call _cond_test tmp[707159]))
    if call_tmp[933619]
    {
      (303214 call += stridelevels[303112] 1)
      (568216 'end of statement' stridelevels[303112])
      unknown call_tmp[933624] "expr temp" "maybe param" "maybe type" "temp"
      (933627 'move' call_tmp[933624](303221 call count[303133] stridelevels[303112]))
      (303218 call = call_tmp[933624] 1)
      (568218 'end of statement' count[303133] stridelevels[303112])
      unknown call_tmp[933629] "expr temp" "maybe param" "maybe type" "temp"
      (933632 'move' call_tmp[933629](303227 call dstStride[303206] stridelevels[303112]))
      unknown call_tmp[933634] "expr temp" "maybe param" "maybe type" "temp"
      (933637 'move' call_tmp[933634](303231 call - inferredRank[302789] 1))
      unknown call_tmp[933639] "expr temp" "maybe param" "maybe type" "temp"
      (933642 'move' call_tmp[933639](303230 call LBlk[302928] call_tmp[933634]))
      unknown call_tmp[933646] "expr temp" "maybe param" "maybe type" "temp"
      (933649 'move' call_tmp[933646](303238 call(303235 call (partial) safeCast _mt[203] call_tmp[933639]) c_size_t[614]))
      (303224 call = call_tmp[933629] call_tmp[933646])
      (568221 'end of statement' dstStride[303206] stridelevels[303112] LBlk[302928] inferredRank[302789])
      unknown call_tmp[933651] "expr temp" "maybe param" "maybe type" "temp"
      (933654 'move' call_tmp[933651](303243 call srcStride[303197] stridelevels[303112]))
      unknown call_tmp[933656] "expr temp" "maybe param" "maybe type" "temp"
      (933659 'move' call_tmp[933656](303247 call - inferredRank[302789] 1))
      unknown call_tmp[933661] "expr temp" "maybe param" "maybe type" "temp"
      (933664 'move' call_tmp[933661](303246 call RBlk[302921] call_tmp[933656]))
      unknown call_tmp[933668] "expr temp" "maybe param" "maybe type" "temp"
      (933671 'move' call_tmp[933668](303254 call(303251 call (partial) safeCast _mt[203] call_tmp[933661]) c_size_t[614]))
      (303240 call = call_tmp[933651] call_tmp[933668])
      (568226 'end of statement' srcStride[303197] stridelevels[303112] RBlk[302921] inferredRank[302789])
    }
    {
      unknown _indexOfInterest[303372] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303373] "expr temp" "temp"
      unknown call_tmp[933673] "expr temp" "maybe param" "maybe type" "temp"
      (933676 'move' call_tmp[933673](303389 call - 1))
      unknown call_tmp[933678] "expr temp" "maybe param" "maybe type" "temp"
      (933681 'move' call_tmp[933678](303393 call chpl_direct_strided_range_iter 2 inferredRank[302789] call_tmp[933673]))
      (303382 'move' _iterator[303373](303380 call _getIterator call_tmp[933678]))
      Defer
      {
        {
          (303408 call _freeIterator _iterator[303373])
        }
      }
      { scopeless type
        (303398 'move' _indexOfInterest[303372](303395 call iteratorIndex _iterator[303373]))
      }
      ForLoop[303374]
      {
        unknown i[303280] "index var" "insert auto destroy"
        (568232 'end of statement')
        (303403 'move' i[303280] _indexOfInterest[303372])
        (568233 'end of statement' i[303280])
        {
          unknown call_tmp[933683] "expr temp" "maybe param" "maybe type" "temp"
          (933686 'move' call_tmp[933683](303296 call + stridelevels[303112] 1))
          unknown call_tmp[933688] "expr temp" "maybe param" "maybe type" "temp"
          (933691 'move' call_tmp[933688](303295 call count[303133] call_tmp[933683]))
          unknown call_tmp[933693] "expr temp" "maybe param" "maybe type" "temp"
          (933696 'move' call_tmp[933693](303301 call DimSizes[302812] i[303280]))
          unknown call_tmp[933700] "expr temp" "maybe param" "maybe type" "temp"
          (933703 'move' call_tmp[933700](303306 call(303303 call (partial) safeCast _mt[203] call_tmp[933693]) c_size_t[614]))
          (303292 call *= call_tmp[933688] call_tmp[933700])
          (568235 'end of statement' count[303133] stridelevels[303112] DimSizes[302812] i[303280])
          unknown tmp[504507] "maybe param" "temp"
          (504518 'move' tmp[504507](303313 call canReuseStride LBlk[302928] i[303280] stridelevels[303112] count[303133] dstStride[303206]))
          unknown call_tmp[933705] "expr temp" "maybe param" "maybe type" "temp"
          (933708 'move' call_tmp[933705](504520 call _cond_invalid tmp[504507]))
          if call_tmp[933705]
          {
            (504523 call compilerError "cannot promote short-circuiting && operator")
          }
          const bothReuse[303309] "dead at end of block" "const" "insert auto destroy"
          unknown tmp[707186] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[707187] "maybe param" "temp"
          unknown call_tmp[933710] "expr temp" "maybe param" "maybe type" "temp"
          (933713 'move' call_tmp[933710](504508 call isTrue tmp[504507]))
          (707192 'move' tmp[707187](707190 call _cond_test call_tmp[933710]))
          if tmp[707187]
          {
            unknown tmp[707194] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[933715] "expr temp" "maybe param" "maybe type" "temp"
            (933718 'move' call_tmp[933715](303320 call canReuseStride RBlk[302921] i[303280] stridelevels[303112] count[303133] srcStride[303197]))
            (707196 'move' tmp[707194](504511 call isTrue call_tmp[933715]))
            (707201 'move' tmp[707186](707198 '_paramFoldLogical' tmp[707187] tmp[707194]))
          }
          {
            (707206 'move' tmp[707186](707203 '_paramFoldLogical' tmp[707187] 0))
          }
          (653573 'init var' bothReuse[303309] tmp[707186])
          (303327 'end of statement' RBlk[302921] i[303280] stridelevels[303112] count[303133] srcStride[303197])
          unknown call_tmp[933720] "expr temp" "maybe param" "maybe type" "temp"
          (933723 'move' call_tmp[933720](303365 call ! bothReuse[303309]))
          unknown call_tmp[933725] "expr temp" "maybe param" "maybe type" "temp"
          (933728 'move' call_tmp[933725](303368 call _cond_test call_tmp[933720]))
          if call_tmp[933725]
          {
            (303329 call += stridelevels[303112] 1)
            (568246 'end of statement' stridelevels[303112])
            unknown call_tmp[933730] "expr temp" "maybe param" "maybe type" "temp"
            (933733 'move' call_tmp[933730](303336 call dstStride[303206] stridelevels[303112]))
            unknown call_tmp[933735] "expr temp" "maybe param" "maybe type" "temp"
            (933738 'move' call_tmp[933735](303340 call - i[303280] 2))
            unknown call_tmp[933740] "expr temp" "maybe param" "maybe type" "temp"
            (933743 'move' call_tmp[933740](303339 call LBlk[302928] call_tmp[933735]))
            unknown call_tmp[933747] "expr temp" "maybe param" "maybe type" "temp"
            (933750 'move' call_tmp[933747](303347 call(303344 call (partial) safeCast _mt[203] call_tmp[933740]) c_size_t[614]))
            (303333 call = call_tmp[933730] call_tmp[933747])
            (568248 'end of statement' dstStride[303206] stridelevels[303112] LBlk[302928] i[303280])
            unknown call_tmp[933752] "expr temp" "maybe param" "maybe type" "temp"
            (933755 'move' call_tmp[933752](303352 call srcStride[303197] stridelevels[303112]))
            unknown call_tmp[933757] "expr temp" "maybe param" "maybe type" "temp"
            (933760 'move' call_tmp[933757](303356 call - i[303280] 2))
            unknown call_tmp[933762] "expr temp" "maybe param" "maybe type" "temp"
            (933765 'move' call_tmp[933762](303355 call RBlk[302921] call_tmp[933757]))
            unknown call_tmp[933769] "expr temp" "maybe param" "maybe type" "temp"
            (933772 'move' call_tmp[933769](303363 call(303360 call (partial) safeCast _mt[203] call_tmp[933762]) c_size_t[614]))
            (303349 call = call_tmp[933752] call_tmp[933769])
            (568253 'end of statement' srcStride[303197] stridelevels[303112] RBlk[302921] i[303280])
          }
        }
        label _continueLabel[303377]
        _indexOfInterest[303372]
        _iterator[303373]
      }
      label _breakLabel[303378]
    }
    unknown call_tmp[933774] "expr temp" "maybe param" "maybe type" "temp"
    (933777 'move' call_tmp[933774](303419 call + stridelevels[303112] 1))
    unknown call_tmp[933779] "expr temp" "maybe param" "maybe type" "temp"
    (933782 'move' call_tmp[933779](303418 call count[303133] call_tmp[933774]))
    unknown call_tmp[933784] "expr temp" "maybe param" "maybe type" "temp"
    (933787 'move' call_tmp[933784](303424 call DimSizes[302812] 1))
    unknown call_tmp[933791] "expr temp" "maybe param" "maybe type" "temp"
    (933794 'move' call_tmp[933791](303429 call(303426 call (partial) safeCast _mt[203] call_tmp[933784]) c_size_t[614]))
    (303415 call *= call_tmp[933779] call_tmp[933791])
    (568258 'end of statement' count[303133] stridelevels[303112] DimSizes[302812])
    unknown call_tmp[933796] "expr temp" "maybe param" "maybe type" "temp"
    (933799 'move' call_tmp[933796](303433 call <= stridelevels[303112] inferredRank[302789]))
    (303432 call assert call_tmp[933796] "BulkTransferStride: stride levels greater than rank.")
    (568262 'end of statement' stridelevels[303112] inferredRank[302789])
    unknown call_tmp[933801] "expr temp" "maybe param" "maybe type" "temp"
    (933804 'move' call_tmp[933801](303469 call == stridelevels[303112] 0))
    unknown call_tmp[933806] "expr temp" "maybe param" "maybe type" "temp"
    (933809 'move' call_tmp[933806](303473 call _cond_test call_tmp[933801]))
    if call_tmp[933806]
    {
      unknown call_tmp[933811] "expr temp" "maybe param" "maybe type" "temp"
      (933814 'move' call_tmp[933811](303445 call count[303133] 1))
      unknown call_tmp[933818] "expr temp" "maybe param" "maybe type" "temp"
      (933821 'move' call_tmp[933818](303451 call(303448 call (partial) sizeAs _mt[203] LViewDom[302669]) c_size_t[614]))
      unknown call_tmp[933823] "expr temp" "maybe param" "maybe type" "temp"
      (933826 'move' call_tmp[933823](303442 call == call_tmp[933811] call_tmp[933818]))
      unknown call_tmp[933828] "expr temp" "maybe param" "maybe type" "temp"
      (933831 'move' call_tmp[933828](303457 call count[303133] 1))
      unknown call_tmp[933835] "expr temp" "maybe param" "maybe type" "temp"
      (933838 'move' call_tmp[933835](303466 call(303463 call (partial) sizeAs _mt[203] LViewDom[302669]) c_size_t[614]))
      (303441 call assert call_tmp[933823] "BulkTransferStride: bulk-count incorrect for stride level of 0: " call_tmp[933828] " != " call_tmp[933835])
      (568265 'end of statement' count[303133])
    }
    unknown call_tmp[933840] "expr temp" "maybe param" "maybe type" "temp"
    (933843 'move' call_tmp[933840](303483 call + stridelevels[303112] 1))
    unknown call_tmp[933845] "expr temp" "maybe param" "maybe type" "temp"
    (933848 'move' call_tmp[933845](303487 call chpl_build_bounded_range 1 call_tmp[933840]))
    unknown call_tmp[933850] "expr temp" "maybe param" "maybe type" "temp"
    (933853 'move' call_tmp[933850](303490 call chpl__buildDomainExpr call_tmp[933845] 1))
    (303478 call = countDom[303117] call_tmp[933850])
    (568267 'end of statement' countDom[303117] stridelevels[303112])
    unknown call_tmp[933855] "expr temp" "maybe param" "maybe type" "temp"
    (933858 'move' call_tmp[933855](303498 call chpl_build_bounded_range 1 stridelevels[303112]))
    unknown call_tmp[933860] "expr temp" "maybe param" "maybe type" "temp"
    (933863 'move' call_tmp[933860](303501 call chpl__buildDomainExpr call_tmp[933855] 1))
    (303492 call = strideDom[303183] call_tmp[933860])
    (568270 'end of statement' strideDom[303183] stridelevels[303112])
    function getFirstIdx[303503](arg dims[303505]:_any[141](?)) : _unknown[42]
    {
      unknown ret[630453] "RVV" "temp"
      unknown ret[303509] "dead at end of block" "insert auto destroy"
      unknown call_tmp[933867] "expr temp" "maybe param" "maybe type" "temp"
      (933870 'move' call_tmp[933867](303513 call size _mt[203] dims[303505]))
      unknown call_tmp[933872] "expr temp" "maybe param" "maybe type" "temp"
      (933875 'move' call_tmp[933872](303517 call dims[303505] 0))
      unknown call_tmp[933879] "expr temp" "maybe param" "maybe type" "temp"
      (933882 'move' call_tmp[933879](303519 call idxType _mt[203] call_tmp[933872]))
      unknown call_tmp[933884] "expr temp" "maybe param" "maybe type" "temp"
      (933887 'move' call_tmp[933884](303510 call * call_tmp[933867] call_tmp[933879]))
      (653575 'default init var' ret[303509] call_tmp[933884])
      (303523 'end of statement')
      {
        unknown i[303524] "dead at end of block" "index var" "insert auto destroy"
        (653577 'init var' i[303524] 0)
        (568273 'end of statement')
        unknown tmp[303566] "maybe param" "temp"
        unknown call_tmp[933891] "expr temp" "maybe param" "maybe type" "temp"
        (933894 'move' call_tmp[933891](303530 call size _mt[203] dims[303505]))
        unknown call_tmp[933896] "expr temp" "maybe param" "maybe type" "temp"
        (933899 'move' call_tmp[933896](303527 call - call_tmp[933891] 1))
        (303578 'move' tmp[303566](303576 call chpl_compute_low_param_loop_bound 0 call_tmp[933896]))
        unknown tmp[303567] "maybe param" "temp"
        unknown call_tmp[933903] "expr temp" "maybe param" "maybe type" "temp"
        (933906 'move' call_tmp[933903](303585 call size _mt[203] dims[303505]))
        unknown call_tmp[933908] "expr temp" "maybe param" "maybe type" "temp"
        (933911 'move' call_tmp[933908](303583 call - call_tmp[933903] 1))
        (303591 'move' tmp[303567](303589 call chpl_compute_high_param_loop_bound 0 call_tmp[933908]))
        unknown tmp[303568] "maybe param" "temp"
        (303594 'move' tmp[303568] 1)
        ParamForLoop[303596]
        { i[303524] tmp[303566] tmp[303567] tmp[303568]
          unknown tmp[707213] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[707214] "maybe param" "temp"
          unknown call_tmp[933913] "expr temp" "maybe param" "maybe type" "temp"
          (933916 'move' call_tmp[933913](303544 call dims[303505] i[303524]))
          unknown call_tmp[933920] "expr temp" "maybe param" "maybe type" "temp"
          (933923 'move' call_tmp[933920](303546 call stride _mt[203] call_tmp[933913]))
          unknown call_tmp[933925] "expr temp" "maybe param" "maybe type" "temp"
          (933928 'move' call_tmp[933925](303541 call < call_tmp[933920] 0))
          (707219 'move' tmp[707214](707217 call _cond_test call_tmp[933925]))
          if tmp[707214]
          {
            unknown tmp[707221] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[933930] "expr temp" "maybe param" "maybe type" "temp"
            (933933 'move' call_tmp[933930](303551 call dims[303505] i[303524]))
            (707223 'move' tmp[707221](303553 call last _mt[203] call_tmp[933930]))
            (707228 'move' tmp[707213](707225 '_paramFoldLogical' tmp[707214] tmp[707221]))
          }
          {
            unknown tmp[707230] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[933937] "expr temp" "maybe param" "maybe type" "temp"
            (933940 'move' call_tmp[933937](303557 call dims[303505] i[303524]))
            (707232 'move' tmp[707230](303559 call first _mt[203] call_tmp[933937]))
            (707237 'move' tmp[707213](707234 '_paramFoldLogical' tmp[707214] tmp[707230]))
          }
          unknown call_tmp[933944] "expr temp" "maybe param" "maybe type" "temp"
          (933947 'move' call_tmp[933944](303539 call ret[303509] i[303524]))
          (303536 call = call_tmp[933944] tmp[707213])
          (568274 'end of statement' ret[303509] i[303524])
        }
        label _unused_continueLabel[303570]
        label _breakLabel[303569]
      }
      (630458 'move' ret[630453](630457 'deref' ret[303509]))
      gotoReturn _end_getFirstIdx[630451] _end_getFirstIdx[630451]
      (568277 'end of statement' ret[303509])
      label _end_getFirstIdx[630451]
      (630455 return ret[630453])
    }
    unknown call_tmp[933949] "maybe param" "maybe type" "temp"
    (933952 'move' call_tmp[933949](303612 call getFirstIdx LeftDims[302747]))
    const LFirst[303610] "dead at end of block" "const" "insert auto destroy"
    (653579 'init var' LFirst[303610] call_tmp[933949])
    (303615 'end of statement')
    unknown call_tmp[933954] "maybe param" "maybe type" "temp"
    (933957 'move' call_tmp[933954](303619 call getFirstIdx RightDims[302766]))
    const RFirst[303617] "dead at end of block" "const" "insert auto destroy"
    (653581 'init var' RFirst[303617] call_tmp[933954])
    (303622 'end of statement' inferredRank[302789] LeftDims[302747] countDom[303117] LeftDims[302747] RightDims[302766])
    unknown call_tmp[933959] "expr temp" "maybe param" "maybe type" "temp"
    (933962 'move' call_tmp[933959](303635 call int(64)[10] 32))
    unknown call_tmp[933964] "expr temp" "maybe param" "maybe type" "temp"
    (933967 'move' call_tmp[933964](303631 call : stridelevels[303112] call_tmp[933959]))
    (303624 call complexTransferComm LHS[302663] LHSlocid[302665] LHSsublocid[302667] RHS[302671] RHSlocid[302673] RHSsublocid[302675] call_tmp[933964] dstStride[303206] srcStride[303197] count[303133] LFirst[303610] RFirst[303617])
    (568281 'end of statement' stridelevels[303112] dstStride[303206] srcStride[303197] count[303133] LFirst[303610] RFirst[303617])
    (630462 return _void[46])
  }
  function complexTransferComm[303644](arg A[303646]:_any[141](?), arg Alocid[303648]:_any[141](?), arg Asublocid[303650]:_any[141](?), arg B[303652]:_any[141](?), arg Blocid[303654]:_any[141](?), arg Bsublocid[303656]:_any[141](?), arg stridelevels[303661] :
  (303659 call int(64)[10] 32), arg dstStride[303664]:_any[141](?), arg srcStride[303666]:_any[141](?), arg count[303668]:_any[141](?), arg AFirst[303670]:_any[141](?), arg BFirst[303672]:_any[141](?)) : _unknown[42] "private" "no return value for void"
  {
    unknown call_tmp[933969] "expr temp" "maybe param" "maybe type" "temp"
    (933972 'move' call_tmp[933969](303733 call _cond_test debugDefaultDistBulkTransfer[287667]))
    if call_tmp[933969]
    {
      unknown call_tmp[933976] "expr temp" "maybe param" "maybe type" "temp"
      (933979 'move' call_tmp[933976](410200 call here[135591]))
      unknown call_tmp[933983] "expr temp" "maybe param" "maybe type" "temp"
      (933986 'move' call_tmp[933983](303692 call id _mt[203] call_tmp[933976]))
      unknown call_tmp[933988] "expr temp" "maybe param" "maybe type" "temp"
      (933991 'move' call_tmp[933988](303690 call(303687 call (partial) format _mt[203] "\tLocale        = %\?\n") call_tmp[933983]))
      unknown call_tmp[933995] "expr temp" "maybe param" "maybe type" "temp"
      (933998 'move' call_tmp[933995](303702 call(303699 call (partial) format _mt[203] "\tStride levels = %\?\n") stridelevels[303661]))
      unknown call_tmp[934002] "expr temp" "maybe param" "maybe type" "temp"
      (934005 'move' call_tmp[934002](303711 call(303708 call (partial) format _mt[203] "\tdstStride     = %\?\n") dstStride[303664]))
      unknown call_tmp[934009] "expr temp" "maybe param" "maybe type" "temp"
      (934012 'move' call_tmp[934009](303720 call(303717 call (partial) format _mt[203] "\tsrcStride     = %\?\n") srcStride[303666]))
      unknown call_tmp[934016] "expr temp" "maybe param" "maybe type" "temp"
      (934019 'move' call_tmp[934016](303729 call(303726 call (partial) format _mt[203] "\tcount         = %\?") count[303668]))
      (303680 call chpl_debug_writeln "BulkTransferStride with values:\n" call_tmp[933988] call_tmp[933995] call_tmp[934002] call_tmp[934009] call_tmp[934016])
    }
    unknown call_tmp[934023] "maybe param" "maybe type" "temp"
    (934026 'move' call_tmp[934023](303743 call(303740 call (partial) getDataIndex _mt[203] A[303646]) AFirst[303670](getShifted = 0)))
    const AO[303738] "dead at end of block" "const" "insert auto destroy"
    (653583 'init var' AO[303738] call_tmp[934023])
    (303748 'end of statement')
    unknown call_tmp[934030] "maybe param" "maybe type" "temp"
    (934033 'move' call_tmp[934030](303755 call(303752 call (partial) getDataIndex _mt[203] B[303652]) BFirst[303672](getShifted = 0)))
    const BO[303750] "dead at end of block" "const" "insert auto destroy"
    (653585 'init var' BO[303750] call_tmp[934030])
    (303760 'end of statement')
    unknown call_tmp[934037] "maybe param" "maybe type" "temp"
    (934040 'move' call_tmp[934037](303764 call data _mt[203] A[303646]))
    const dest[303762] "dead at end of block" "const" "insert auto destroy"
    (653587 'init var' dest[303762] call_tmp[934037])
    (303768 'end of statement')
    unknown call_tmp[934044] "maybe param" "maybe type" "temp"
    (934047 'move' call_tmp[934044](303772 call data _mt[203] B[303652]))
    const src[303770] "dead at end of block" "const" "insert auto destroy"
    (653589 'init var' src[303770] call_tmp[934044])
    (303776 'end of statement')
    unknown call_tmp[934051] "expr temp" "maybe param" "maybe type" "temp"
    (934054 'move' call_tmp[934051](303780 call _value _mt[203] dstStride[303664]))
    unknown call_tmp[934058] "maybe param" "maybe type" "temp"
    (934061 'move' call_tmp[934058](303783 call data _mt[203] call_tmp[934051]))
    const dststr[303778] "dead at end of block" "const" "insert auto destroy"
    (653591 'init var' dststr[303778] call_tmp[934058])
    (303787 'end of statement')
    unknown call_tmp[934065] "expr temp" "maybe param" "maybe type" "temp"
    (934068 'move' call_tmp[934065](303791 call _value _mt[203] srcStride[303666]))
    unknown call_tmp[934072] "maybe param" "maybe type" "temp"
    (934075 'move' call_tmp[934072](303794 call data _mt[203] call_tmp[934065]))
    const srcstr[303789] "dead at end of block" "const" "insert auto destroy"
    (653593 'init var' srcstr[303789] call_tmp[934072])
    (303798 'end of statement')
    unknown call_tmp[934079] "expr temp" "maybe param" "maybe type" "temp"
    (934082 'move' call_tmp[934079](303802 call _value _mt[203] count[303668]))
    unknown call_tmp[934086] "maybe param" "maybe type" "temp"
    (934089 'move' call_tmp[934086](303805 call data _mt[203] call_tmp[934079]))
    const cnt[303800] "dead at end of block" "const" "insert auto destroy"
    (653595 'init var' cnt[303800] call_tmp[934086])
    (303809 'end of statement')
    unknown call_tmp[934091] "expr temp" "maybe param" "maybe type" "temp"
    (934094 'move' call_tmp[934091](303929 call _isLocSublocSameAsHere Alocid[303648] Asublocid[303650]))
    unknown call_tmp[934096] "expr temp" "maybe param" "maybe type" "temp"
    (934099 'move' call_tmp[934096](303932 call _cond_test call_tmp[934091]))
    if call_tmp[934096]
    {
      const srclocale[303812] "dead at end of block" "const" "insert auto destroy"
      (653597 'init var' srclocale[303812] Blocid[303654])
      (303815 'end of statement')
      const src_subloc[303817] "dead at end of block" "const" "insert auto destroy"
      (653599 'init var' src_subloc[303817] Bsublocid[303656])
      (303820 'end of statement')
      unknown call_tmp[934101] "expr temp" "maybe param" "maybe type" "temp"
      (934104 'move' call_tmp[934101](303829 call _cond_test debugBulkTransfer[247496]))
      if call_tmp[934101]
      {
        (303823 call chpl_debug_writeln "BulkTransferStride: On LHS - GET from " srclocale[303812])
        (568289 'end of statement' srclocale[303812])
      }
      unknown call_tmp[934106] "expr temp" "maybe param" "maybe type" "temp"
      (934109 'move' call_tmp[934106](303835 call dest[303762] AO[303738]))
      unknown call_tmp[934111] "expr temp" "maybe param" "maybe type" "temp"
      (934114 'move' call_tmp[934111](303838 call dststr[303778] 0))
      unknown call_tmp[934116] "expr temp" "maybe param" "maybe type" "temp"
      (934119 'move' call_tmp[934116](303843 call src[303770] BO[303750]))
      unknown call_tmp[934121] "expr temp" "maybe param" "maybe type" "temp"
      (934124 'move' call_tmp[934121](303846 call srcstr[303789] 0))
      unknown call_tmp[934126] "expr temp" "maybe param" "maybe type" "temp"
      (934129 'move' call_tmp[934126](303849 call cnt[303800] 0))
      (303833 'chpl_comm_get_strd' call_tmp[934106] call_tmp[934111] srclocale[303812] src_subloc[303817] call_tmp[934116] call_tmp[934121] call_tmp[934126] stridelevels[303661])
      (568291 'end of statement' dest[303762] AO[303738] dststr[303778] srclocale[303812] src_subloc[303817] src[303770] BO[303750] srcstr[303789] cnt[303800])
    }
    {
      const destlocale[303854] "dead at end of block" "const" "insert auto destroy"
      (653601 'init var' destlocale[303854] Alocid[303648])
      (303857 'end of statement')
      const dest_subloc[303859] "dead at end of block" "const" "insert auto destroy"
      (653603 'init var' dest_subloc[303859] Asublocid[303650])
      (303862 'end of statement')
      unknown call_tmp[934131] "expr temp" "maybe param" "maybe type" "temp"
      (934134 'move' call_tmp[934131](303893 call _cond_test debugDefaultDistBulkTransfer[287667]))
      if call_tmp[934131]
      {
        unknown call_tmp[934136] "expr temp" "maybe param" "maybe type" "temp"
        (934139 'move' call_tmp[934136](303872 '_wide_get_node' src[303770]))
        unknown call_tmp[934141] "expr temp" "maybe param" "maybe type" "temp"
        (934144 'move' call_tmp[934141](410209 call here[135591]))
        unknown call_tmp[934148] "expr temp" "maybe param" "maybe type" "temp"
        (934151 'move' call_tmp[934148](303874 call id _mt[203] call_tmp[934141]))
        unknown call_tmp[934153] "expr temp" "maybe param" "maybe type" "temp"
        (934156 'move' call_tmp[934153](303866 call == call_tmp[934136] call_tmp[934148]))
        unknown call_tmp[934158] "expr temp" "maybe param" "maybe type" "temp"
        (934161 'move' call_tmp[934158](303884 '_wide_get_node' src[303770]))
        unknown call_tmp[934163] "expr temp" "maybe param" "maybe type" "temp"
        (934166 'move' call_tmp[934163](410211 call here[135591]))
        unknown call_tmp[934170] "expr temp" "maybe param" "maybe type" "temp"
        (934173 'move' call_tmp[934170](303889 call id _mt[203] call_tmp[934163]))
        (303865 call assert call_tmp[934153] "BulkTransferStride: Expected to be on " call_tmp[934158] ", actually on " call_tmp[934170])
        (568301 'end of statement' src[303770])
      }
      unknown call_tmp[934175] "expr temp" "maybe param" "maybe type" "temp"
      (934178 'move' call_tmp[934175](303905 call _cond_test debugBulkTransfer[247496]))
      if call_tmp[934175]
      {
        (303899 call chpl_debug_writeln "BulkTransferStride: On RHS - PUT to " destlocale[303854])
        (568303 'end of statement' destlocale[303854])
      }
      unknown call_tmp[934180] "expr temp" "maybe param" "maybe type" "temp"
      (934183 'move' call_tmp[934180](303911 call dest[303762] AO[303738]))
      unknown call_tmp[934185] "expr temp" "maybe param" "maybe type" "temp"
      (934188 'move' call_tmp[934185](303914 call dststr[303778] 0))
      unknown call_tmp[934190] "expr temp" "maybe param" "maybe type" "temp"
      (934193 'move' call_tmp[934190](303919 call src[303770] BO[303750]))
      unknown call_tmp[934195] "expr temp" "maybe param" "maybe type" "temp"
      (934198 'move' call_tmp[934195](303922 call srcstr[303789] 0))
      unknown call_tmp[934200] "expr temp" "maybe param" "maybe type" "temp"
      (934203 'move' call_tmp[934200](303925 call cnt[303800] 0))
      (303909 'chpl_comm_put_strd' call_tmp[934180] call_tmp[934185] destlocale[303854] dest_subloc[303859] call_tmp[934190] call_tmp[934195] call_tmp[934200] stridelevels[303661])
      (568305 'end of statement' dest[303762] AO[303738] dststr[303778] destlocale[303854] dest_subloc[303859] src[303770] BO[303750] srcstr[303789] cnt[303800])
    }
    (630464 return _void[46])
    (397011 'used modules list'(303676 'use' ChplConfig[29952]))
  }
  function DefaultRectangularArr[298194](?).isDefaultRectangular[303938](arg _mt[303944]:_MT[201], arg this[303941]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?)) param : _unknown[42] "method" "method overrides"
  {
    unknown ret[630468] "RVV" "param" "temp"
    (630473 'move' ret[630468](630472 'deref' 1))
    (630470 return ret[630468])
  }
  function DefaultRectangularArr[467915](?).isDefaultRectangular[303951](arg _mt[303957]:_MT[201], arg this[303954]:DefaultRectangularArr[467915](?)) param : _unknown[42] "method" "method overrides"
  {
    unknown ret[630477] "RVV" "param" "temp"
    (630482 'move' ret[630477](630481 'deref' 1))
    (630479 return ret[630477])
  }
  unknown debugDRScan[303965] "config" "param"
  function DefaultRectangularArr[298194](?).doiScan[303969](arg _mt[303979]:_MT[201], arg this[303972]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg op[303975]:_any[141](?), arg dom[303977]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[630486] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[578991] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[934207] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (934210 'move' call_tmp[934207](304000 call(303997 call (partial) generate _mt[203] op[303975])))
      (578995 'move' call_type_tmp[578991](304001 'typeof' call_tmp[934207]))
    }
    unknown resType[303995] "dead at end of block" "insert auto destroy" "type variable"
    (653608 'move' resType[303995] call_type_tmp[578991])
    unknown call_tmp[934214] "expr temp" "maybe param" "maybe type" "temp"
    (934217 'move' call_tmp[934214](304014 call isPOD resType[303995]))
    unknown call_tmp[934219] "expr temp" "maybe param" "maybe type" "temp"
    (934222 'move' call_tmp[934219](304011 call ! call_tmp[934214]))
    unknown call_tmp[934224] "maybe param" "maybe type" "temp"
    (934227 'move' call_tmp[934224](304009 call(304006 call (partial) buildArray _mt[203] dom[303977]) resType[303995](initElts = call_tmp[934219])))
    unknown res[304004] "dead at end of block" "insert auto destroy"
    (653610 'init var' res[304004] call_tmp[934224])
    (304018 'end of statement')
    unknown call_tmp[934231] "maybe param" "maybe type" "temp"
    (934234 'move' call_tmp[934231](304034 call(304031 call (partial) chpl__preScan _mt[203] this[303972]) op[303975] res[304004] dom[303977]))
    unknown tmp[304038] "dead at end of block" "insert auto destroy" "temp"
    (653612 'init var' tmp[304038] call_tmp[934231])
    (304048 call _check_tuple_var_decl tmp[304038] 4)
    (568318 'end of statement')
    unknown call_tmp[934236] "maybe param" "maybe type" "temp"
    (934239 'move' call_tmp[934236](304039 call tmp[304038] 0))
    unknown numTasks[304020] "dead at end of block" "insert auto destroy"
    (653614 'init var' numTasks[304020] call_tmp[934236])
    unknown call_tmp[934241] "maybe param" "maybe type" "temp"
    (934244 'move' call_tmp[934241](304042 call tmp[304038] 1))
    unknown rngs[304022] "dead at end of block" "insert auto destroy"
    (653616 'init var' rngs[304022] call_tmp[934241])
    unknown call_tmp[934246] "maybe param" "maybe type" "temp"
    (934249 'move' call_tmp[934246](304045 call tmp[304038] 2))
    unknown state[304024] "dead at end of block" "insert auto destroy"
    (653618 'init var' state[304024] call_tmp[934246])
    (304053 'end of statement' resType[303995])
    unknown call_tmp[934251] "expr temp" "maybe param" "maybe type" "temp"
    (934254 'move' call_tmp[934251](304067 call > numTasks[304020] 1))
    unknown call_tmp[934256] "expr temp" "maybe param" "maybe type" "temp"
    (934259 'move' call_tmp[934256](304071 call _cond_test call_tmp[934251]))
    if call_tmp[934256]
    {
      (304061 call(304058 call (partial) chpl__postScan _mt[203] this[303972]) op[303975] res[304004] numTasks[304020] rngs[304022] state[304024])
      (568319 'end of statement' res[304004] numTasks[304020] rngs[304022] state[304024])
    }
    unknown call_tmp[934263] "expr temp" "maybe param" "maybe type" "temp"
    (934266 'move' call_tmp[934263](304082 call isPOD resType[303995]))
    unknown call_tmp[934268] "expr temp" "maybe param" "maybe type" "temp"
    (934271 'move' call_tmp[934268](304084 call _cond_test call_tmp[934263]))
    if call_tmp[934268]
    {
      (304079 call(304076 call (partial) dsiElementInitializationComplete _mt[203] res[304004]))
      (568324 'end of statement' res[304004])
    }
    (304091 call chpl__delete op[303975])
    (568326 'end of statement')
    (630491 'move' ret[630486](630490 'deref' res[304004]))
    gotoReturn _end_doiScan[630484] _end_doiScan[630484]
    (568327 'end of statement' res[304004])
    label _end_doiScan[630484]
    (630488 return ret[630486])
    (397013 'used modules list'(303992 'use' RangeChunk[275188]))
  }
  where {
    unknown tmp[504528] "maybe param" "temp"
    unknown call_tmp[934277] "expr temp" "maybe param" "maybe type" "temp"
    (934280 'move' call_tmp[934277](458925 call rank _mt[203] this[303972]))
    (504539 'move' tmp[504528](303983 call == call_tmp[934277] 1))
    unknown call_tmp[934282] "expr temp" "maybe param" "maybe type" "temp"
    (934285 'move' call_tmp[934282](504541 call _cond_invalid tmp[504528]))
    if call_tmp[934282]
    {
      (504544 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707244] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707245] "maybe param" "temp"
    unknown call_tmp[934287] "expr temp" "maybe param" "maybe type" "temp"
    (934290 'move' call_tmp[934287](504529 call isTrue tmp[504528]))
    (707250 'move' tmp[707245](707248 call _cond_test call_tmp[934287]))
    if tmp[707245]
    {
      unknown tmp[707252] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[934292] "expr temp" "maybe param" "maybe type" "temp"
      (934295 'move' call_tmp[934292](303988 call chpl__scanStateResTypesMatch op[303975]))
      (707254 'move' tmp[707252](504532 call isTrue call_tmp[934292]))
      (707259 'move' tmp[707244](707256 '_paramFoldLogical' tmp[707245] tmp[707252]))
    }
    {
      (707264 'move' tmp[707244](707261 '_paramFoldLogical' tmp[707245] 0))
    }
    (1001664 call chpl_statementLevelSymbol tmp[707244])
  }
  function DefaultRectangularArr[298194](?).doiOptimizedSwap[304099](arg _mt[304110]:_MT[201], arg this[304102]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg other[304107]:DefaultRectangularArr[298194](?)) : _unknown[42] "method"
  {
    unknown ret[630497] "RVV" "temp"
    unknown size1[304114] "dead at end of block" "insert auto destroy"
    unknown call_tmp[934299] "expr temp" "maybe param" "maybe type" "temp"
    (934302 'move' call_tmp[934299](458946 call rank _mt[203] this[304102]))
    unknown call_tmp[934304] "expr temp" "maybe param" "maybe type" "temp"
    (934307 'move' call_tmp[934304](304115 call * call_tmp[934299] int(64)[10]))
    (653620 'default init var' size1[304114] call_tmp[934304])
    (304120 'end of statement')
    {
      unknown _indexOfInterest[304164] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304165] "expr temp" "temp"
      unknown call_tmp[934311] "expr temp" "maybe param" "maybe type" "temp"
      (934314 'move' call_tmp[934311](304198 call dom _mt[203] this[304102]))
      unknown call_tmp[934318] "expr temp" "maybe param" "maybe type" "temp"
      (934321 'move' call_tmp[934318](304196 call ranges _mt[203] call_tmp[934311]))
      unknown call_tmp[934325] "expr temp" "maybe param" "maybe type" "temp"
      (934328 'move' call_tmp[934325](304194 call size _mt[203] call_tmp[934318]))
      unknown call_tmp[934330] "expr temp" "maybe param" "maybe type" "temp"
      (934333 'move' call_tmp[934330](304204 call chpl_direct_counted_range_iter 0 call_tmp[934325]))
      unknown call_tmp[934335] "expr temp" "maybe param" "maybe type" "temp"
      (934338 'move' call_tmp[934335](304188 call _getIterator call_tmp[934330]))
      unknown call_tmp[934342] "expr temp" "maybe param" "maybe type" "temp"
      (934345 'move' call_tmp[934342](304209 call dom _mt[203] this[304102]))
      unknown call_tmp[934349] "expr temp" "maybe param" "maybe type" "temp"
      (934352 'move' call_tmp[934349](304207 call ranges _mt[203] call_tmp[934342]))
      unknown call_tmp[934354] "expr temp" "maybe param" "maybe type" "temp"
      (934357 'move' call_tmp[934354](304213 call _getIterator call_tmp[934349]))
      (304215 'move' _iterator[304165](304151 call _build_tuple call_tmp[934335] call_tmp[934354]))
      Defer
      {
        {
          (304243 call _freeIterator _iterator[304165])
        }
      }
      { scopeless type
        (304220 'move' _indexOfInterest[304164](304217 call iteratorIndex _iterator[304165]))
      }
      ForLoop[304166]
      {
        (304225 call _check_tuple_var_decl _indexOfInterest[304164] 2)
        (568330 'end of statement')
        unknown i[304122] "index var" "insert auto destroy"
        (568331 'end of statement')
        (304232 'move' i[304122](304229 call _indexOfInterest[304164] 0))
        (568332 'end of statement' i[304122])
        unknown r[304124] "index var" "insert auto destroy"
        (568334 'end of statement')
        (304238 'move' r[304124](304235 call _indexOfInterest[304164] 1))
        (568335 'end of statement' r[304124])
        unknown call_tmp[934359] "expr temp" "maybe param" "maybe type" "temp"
        (934362 'move' call_tmp[934359](304155 call size1[304114] i[304122]))
        unknown call_tmp[934366] "expr temp" "maybe param" "maybe type" "temp"
        (934369 'move' call_tmp[934366](304161 call(304158 call (partial) sizeAs _mt[203] r[304124]) int(64)[10]))
        (304152 call = call_tmp[934359] call_tmp[934366])
        (568337 'end of statement' size1[304114] i[304122] r[304124])
        label _continueLabel[304169]
        _indexOfInterest[304164]
        _iterator[304165]
      }
      label _breakLabel[304170]
    }
    unknown size2[304251] "dead at end of block" "insert auto destroy"
    unknown call_tmp[934373] "expr temp" "maybe param" "maybe type" "temp"
    (934376 'move' call_tmp[934373](458953 call rank _mt[203] this[304102]))
    unknown call_tmp[934378] "expr temp" "maybe param" "maybe type" "temp"
    (934381 'move' call_tmp[934378](304252 call * call_tmp[934373] int(64)[10]))
    (653622 'default init var' size2[304251] call_tmp[934378])
    (304257 'end of statement')
    {
      unknown _indexOfInterest[304301] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304302] "expr temp" "temp"
      unknown call_tmp[934385] "expr temp" "maybe param" "maybe type" "temp"
      (934388 'move' call_tmp[934385](304335 call dom _mt[203] other[304107]))
      unknown call_tmp[934392] "expr temp" "maybe param" "maybe type" "temp"
      (934395 'move' call_tmp[934392](304333 call ranges _mt[203] call_tmp[934385]))
      unknown call_tmp[934399] "expr temp" "maybe param" "maybe type" "temp"
      (934402 'move' call_tmp[934399](304331 call size _mt[203] call_tmp[934392]))
      unknown call_tmp[934404] "expr temp" "maybe param" "maybe type" "temp"
      (934407 'move' call_tmp[934404](304341 call chpl_direct_counted_range_iter 0 call_tmp[934399]))
      unknown call_tmp[934409] "expr temp" "maybe param" "maybe type" "temp"
      (934412 'move' call_tmp[934409](304325 call _getIterator call_tmp[934404]))
      unknown call_tmp[934416] "expr temp" "maybe param" "maybe type" "temp"
      (934419 'move' call_tmp[934416](304346 call dom _mt[203] other[304107]))
      unknown call_tmp[934423] "expr temp" "maybe param" "maybe type" "temp"
      (934426 'move' call_tmp[934423](304344 call ranges _mt[203] call_tmp[934416]))
      unknown call_tmp[934428] "expr temp" "maybe param" "maybe type" "temp"
      (934431 'move' call_tmp[934428](304350 call _getIterator call_tmp[934423]))
      (304352 'move' _iterator[304302](304288 call _build_tuple call_tmp[934409] call_tmp[934428]))
      Defer
      {
        {
          (304380 call _freeIterator _iterator[304302])
        }
      }
      { scopeless type
        (304357 'move' _indexOfInterest[304301](304354 call iteratorIndex _iterator[304302]))
      }
      ForLoop[304303]
      {
        (304362 call _check_tuple_var_decl _indexOfInterest[304301] 2)
        (568342 'end of statement')
        unknown i[304259] "index var" "insert auto destroy"
        (568343 'end of statement')
        (304369 'move' i[304259](304366 call _indexOfInterest[304301] 0))
        (568344 'end of statement' i[304259])
        unknown r[304261] "index var" "insert auto destroy"
        (568346 'end of statement')
        (304375 'move' r[304261](304372 call _indexOfInterest[304301] 1))
        (568347 'end of statement' r[304261])
        unknown call_tmp[934433] "expr temp" "maybe param" "maybe type" "temp"
        (934436 'move' call_tmp[934433](304292 call size2[304251] i[304259]))
        unknown call_tmp[934440] "expr temp" "maybe param" "maybe type" "temp"
        (934443 'move' call_tmp[934440](304298 call(304295 call (partial) sizeAs _mt[203] r[304261]) int(64)[10]))
        (304289 call = call_tmp[934433] call_tmp[934440])
        (568349 'end of statement' size2[304251] i[304259] r[304261])
        label _continueLabel[304306]
        _indexOfInterest[304301]
        _iterator[304302]
      }
      label _breakLabel[304307]
    }
    unknown tmp[504549] "maybe param" "temp"
    unknown call_tmp[934445] "expr temp" "maybe param" "maybe type" "temp"
    (934448 'move' call_tmp[934445](304441 '_wide_get_locale' this[304102]))
    unknown call_tmp[934450] "expr temp" "maybe param" "maybe type" "temp"
    (934453 'move' call_tmp[934450](304442 call chpl_localeID_to_locale call_tmp[934445]))
    unknown call_tmp[934455] "expr temp" "maybe param" "maybe type" "temp"
    (934458 'move' call_tmp[934455](304445 '_wide_get_locale' other[304107]))
    unknown call_tmp[934460] "expr temp" "maybe param" "maybe type" "temp"
    (934463 'move' call_tmp[934460](304446 call chpl_localeID_to_locale call_tmp[934455]))
    (504560 'move' tmp[504549](304438 call == call_tmp[934450] call_tmp[934460]))
    unknown call_tmp[934465] "expr temp" "maybe param" "maybe type" "temp"
    (934468 'move' call_tmp[934465](504562 call _cond_invalid tmp[504549]))
    if call_tmp[934465]
    {
      (504565 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707271] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707272] "maybe param" "temp"
    unknown call_tmp[934470] "expr temp" "maybe param" "maybe type" "temp"
    (934473 'move' call_tmp[934470](504550 call isTrue tmp[504549]))
    (707277 'move' tmp[707272](707275 call _cond_test call_tmp[934470]))
    if tmp[707272]
    {
      unknown tmp[707279] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[934475] "expr temp" "maybe param" "maybe type" "temp"
      (934478 'move' call_tmp[934475](304448 call == size1[304114] size2[304251]))
      (707281 'move' tmp[707279](504553 call isTrue call_tmp[934475]))
      (707286 'move' tmp[707271](707283 '_paramFoldLogical' tmp[707272] tmp[707279]))
    }
    {
      (707291 'move' tmp[707271](707288 '_paramFoldLogical' tmp[707272] 0))
    }
    unknown call_tmp[934480] "expr temp" "maybe param" "maybe type" "temp"
    (934483 'move' call_tmp[934480](304452 call _cond_test tmp[707271]))
    if call_tmp[934480]
    {
      unknown call_tmp[934485] "expr temp" "maybe param" "maybe type" "temp"
      (934488 'move' call_tmp[934485](304410 call _cond_test debugOptimizedSwap[247521]))
      if call_tmp[934485]
      {
        unknown call_tmp[934492] "expr temp" "maybe param" "maybe type" "temp"
        (934495 'move' call_tmp[934492](304395 call dom _mt[203] this[304102]))
        unknown call_tmp[934499] "expr temp" "maybe param" "maybe type" "temp"
        (934502 'move' call_tmp[934499](304398 call ranges _mt[203] call_tmp[934492]))
        unknown call_tmp[934506] "expr temp" "maybe param" "maybe type" "temp"
        (934509 'move' call_tmp[934506](304403 call dom _mt[203] other[304107]))
        unknown call_tmp[934513] "expr temp" "maybe param" "maybe type" "temp"
        (934516 'move' call_tmp[934513](304406 call ranges _mt[203] call_tmp[934506]))
        (304390 call writeln "DefaultRectangular doing optimized swap. Domains: " call_tmp[934499] " " call_tmp[934513])
      }
      unknown call_tmp[934520] "expr temp" "maybe param" "maybe type" "temp"
      (934523 'move' call_tmp[934520](304417 call data _mt[203] this[304102]))
      unknown call_tmp[934527] "expr temp" "maybe param" "maybe type" "temp"
      (934530 'move' call_tmp[934527](304421 call data _mt[203] other[304107]))
      (304414 call <=> call_tmp[934520] call_tmp[934527])
      (568355 'end of statement')
      (304428 call(304425 call (partial) initShiftedData _mt[203] this[304102]))
      (568356 'end of statement')
      (304433 call(304430 call (partial) initShiftedData _mt[203] other[304107]))
      (568357 'end of statement')
      (630502 'move' ret[630497](630501 'deref' 1))
      gotoReturn _end_doiOptimizedSwap[630495] _end_doiOptimizedSwap[630495]
    }
    unknown call_tmp[934536] "expr temp" "maybe param" "maybe type" "temp"
    (934539 'move' call_tmp[934536](304478 call _cond_test debugOptimizedSwap[247521]))
    if call_tmp[934536]
    {
      unknown call_tmp[934543] "expr temp" "maybe param" "maybe type" "temp"
      (934546 'move' call_tmp[934543](304463 call dom _mt[203] this[304102]))
      unknown call_tmp[934550] "expr temp" "maybe param" "maybe type" "temp"
      (934553 'move' call_tmp[934550](304466 call ranges _mt[203] call_tmp[934543]))
      unknown call_tmp[934557] "expr temp" "maybe param" "maybe type" "temp"
      (934560 'move' call_tmp[934557](304471 call dom _mt[203] other[304107]))
      unknown call_tmp[934564] "expr temp" "maybe param" "maybe type" "temp"
      (934567 'move' call_tmp[934564](304474 call ranges _mt[203] call_tmp[934557]))
      (304458 call writeln "DefaultRectangular doing unoptimized swap. Domains: " call_tmp[934550] " " call_tmp[934564])
    }
    (630507 'move' ret[630497](630506 'deref' 0))
    label _end_doiOptimizedSwap[630495]
    (630499 return ret[630497])
  }
  function DefaultRectangularArr[298194](?).doiOptimizedSwap[304486](arg _mt[304494]:_MT[201], arg this[304489]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg other[304492]:_any[141](?)) : _unknown[42] "last resort" "method"
  {
    unknown ret[630511] "RVV" "temp"
    (304499 call writeln "DefaultRectangularArr doing unoptimized swap. Type mismatch")
    (568361 'end of statement')
    (630516 'move' ret[630511](630515 'deref' 0))
    (630513 return ret[630511])
  }
  where {
    (1001292 call chpl_statementLevelSymbol debugOptimizedSwap[247521])
  }
  function DefaultRectangularArr[298194](?).chpl__preScan[304508](arg _mt[304526]:_MT[201], arg this[304511]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg op[304514]:_any[141](?), ref arg res[304521]:_array[255540](?), arg dom[304524]:_any[141](?)) : _unknown[42] "method"
  {
    unknown ret[630520] "RVV" "temp"
    unknown call_tmp[934571] "maybe param" "maybe type" "temp"
    (934574 'move' call_tmp[934571](304538 call(304535 call (partial) dim _mt[203] dom[304524]) 0))
    const rng[304533] "dead at end of block" "const" "insert auto destroy"
    (653624 'init var' rng[304533] call_tmp[934571])
    (304541 'end of statement')
    const numTasks[304543] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[707298] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707299] "maybe param" "temp"
    unknown call_tmp[934576] "expr temp" "maybe param" "maybe type" "temp"
    (934579 'move' call_tmp[934576](304544 'task_get_serial'))
    (707304 'move' tmp[707299](707302 call _cond_test call_tmp[934576]))
    if tmp[707299]
    {
      (707309 'move' tmp[707298](707306 '_paramFoldLogical' tmp[707299] 1))
    }
    {
      unknown tmp[707311] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[934583] "expr temp" "maybe param" "maybe type" "temp"
      (934586 'move' call_tmp[934583](304552 call(304549 call (partial) sizeAs _mt[203] rng[304533]) int(64)[10]))
      (707313 'move' tmp[707311](304547 call _computeNumChunks call_tmp[934583]))
      (707318 'move' tmp[707298](707315 '_paramFoldLogical' tmp[707299] tmp[707311]))
    }
    (653626 'init var' numTasks[304543] tmp[707298])
    (304558 'end of statement')
    unknown call_tmp[934588] "maybe param" "maybe type" "temp"
    (934591 'move' call_tmp[934588](304565 call chunks module=[222] RangeChunk[275188] rng[304533] numTasks[304543]))
    const rngs[304560] "dead at end of block" "const" "insert auto destroy"
    (653628 'init var' rngs[304560] call_tmp[934588])
    (304569 'end of statement')
    unknown call_tmp[934593] "expr temp" "maybe param" "maybe type" "temp"
    (934596 'move' call_tmp[934593](304585 call _cond_test debugDRScan[303965]))
    if call_tmp[934593]
    {
      (304572 call writeln "Using " numTasks[304543] " tasks")
      (568365 'end of statement' numTasks[304543])
      (304579 call writeln "Whose chunks are: " rngs[304560])
      (568367 'end of statement' rngs[304560])
    }
    unknown state[304590] "dead at end of block" "insert auto destroy"
    unknown call_tmp[934600] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (934603 'move' call_tmp[934600](304592 call _dom _mt[203] rngs[304560]))
    unknown call_tmp[934605] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (934608 'move' call_tmp[934605](304595 call chpl__ensureDomainExpr call_tmp[934600]))
    unknown call_tmp[934612] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (934615 'move' call_tmp[934612](533586 call eltType _mt[203] res[304521]))
    unknown call_tmp[934617] "expr temp" "maybe param" "maybe type" "temp"
    (934620 'move' call_tmp[934617](304598 call chpl__buildArrayRuntimeType call_tmp[934605] call_tmp[934612]))
    (653630 'default init var' state[304590] call_tmp[934617])
    (304601 'end of statement')
    {
      unknown tmpIter[393761] "expr temp" "maybe ref" "no copy" "temp"
      (393764 'move' tmpIter[393761](304605 call _dom _mt[203] rngs[304560]))
      unknown isBounded[393995] "maybe param" "temp"
      (394001 'move' isBounded[393995](393997 call chpl_supportsBoundedCoforall tmpIter[393761] 0))
      if isBounded[393995]
      {
        const _coforallCount[393864] "const" "end count" "temp"
        (393932 'move' _coforallCount[393864](393929 call _endCountAlloc 1))
        unknown numTasks[393865] "temp"
        (393916 'move' numTasks[393865](393912 call chpl_boundedCoforallSize tmpIter[393761] 0))
        (393907 call _upEndCount _coforallCount[393864] 1 numTasks[393865])
        (568370 'end of statement')
        (393904 call chpl_resetTaskSpawn numTasks[393865])
        (568371 'end of statement')
        unknown _indexOfInterest[393872] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[393873] "expr temp" "temp"
        (393882 'move' _iterator[393873](393880 call _getIterator tmpIter[393761]))
        Defer
        {
          {
            (393897 call _freeIterator _iterator[393873])
          }
        }
        { scopeless type
          (393887 'move' _indexOfInterest[393872](393884 call iteratorIndex _iterator[393873]))
        }
        ForLoop[393874]
        {
          unknown tid[393768] "coforall index var" "index var" "insert auto destroy"
          (568373 'end of statement')
          (393892 'move' tid[393768] _indexOfInterest[393872])
          (568374 'end of statement' tid[393768])
          (1465432 call coforall_fn[1465430] op[304514] res[304521] rngs[304560] state[304590])
          function coforall_fn[1465430](arg op[1465437]:_any[141](?), arg res[1465440]:_array[255540](?), arg rngs[1465443], ref arg state[1465446]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              const current[393772] "dead at end of block" "const" "insert auto destroy"
              unknown call_tmp[934626] "expr temp" "maybe param" "maybe type" "temp"
              (934629 'move' call_tmp[934626](533590 call eltType _mt[203] res[1465440]))
              (653632 'default init var' current[393772] call_tmp[934626])
              (393775 'end of statement')
              unknown call_tmp[934633] "maybe param" "maybe type" "temp"
              (934636 'move' call_tmp[934633](393782 call(393779 call (partial) clone _mt[203] op[1465437])))
              const myop[393777] "dead at end of block" "const" "insert auto destroy"
              (653634 'init var' myop[393777] call_tmp[934633])
              (393784 'end of statement')
              {
                unknown _indexOfInterest[393786] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[393788] "expr temp" "temp"
                unknown call_tmp[934638] "expr temp" "maybe param" "maybe type" "temp"
                (934641 'move' call_tmp[934638](393795 call rngs[1465443] tid[393768]))
                (393790 'move' _iterator[393788](393793 call _getIterator call_tmp[934638]))
                Defer
                {
                  {
                    (393799 call _freeIterator _iterator[393788])
                  }
                }
                { scopeless type
                  (393803 'move' _indexOfInterest[393786](393806 call iteratorIndex _iterator[393788]))
                }
                ForLoop[393808]
                {
                  unknown i[393811] "index var" "insert auto destroy"
                  (568377 'end of statement')
                  (393813 'move' i[393811] _indexOfInterest[393786])
                  (568378 'end of statement' i[393811])
                  {
                    unknown elem[393818] "dead at end of block" "ref var"
                    (653639 'init ref decl' elem[393818])
                    unknown call_tmp[934645] "expr temp" "maybe param" "maybe type" "temp"
                    (934648 'move' call_tmp[934645](393820 call(467109 call (partial) dsiAccess _mt[203] this[304511]) i[393811]))
                    (653637 'move' elem[393818](653636 'addr of' call_tmp[934645]))
                    (393823 'end of statement' i[393811])
                    (393828 call(393825 call (partial) accumulate _mt[203] myop[393777]) elem[393818])
                    (568381 'end of statement' myop[393777] elem[393818])
                    unknown call_tmp[934652] "expr temp" "maybe param" "maybe type" "temp"
                    (934655 'move' call_tmp[934652](393833 call res[1465440] i[393811]))
                    unknown call_tmp[934659] "expr temp" "maybe param" "maybe type" "temp"
                    (934662 'move' call_tmp[934659](393839 call(393836 call (partial) generate _mt[203] myop[393777])))
                    (393831 call = call_tmp[934652] call_tmp[934659])
                    (568384 'end of statement' i[393811] myop[393777])
                  }
                  label _continueLabel[393840]
                  _indexOfInterest[393786]
                  _iterator[393788]
                }
                label _breakLabel[393842]
              }
              unknown call_tmp[934664] "expr temp" "maybe param" "maybe type" "temp"
              (934667 'move' call_tmp[934664](393847 call state[1465446] tid[393768]))
              unknown call_tmp[934669] "expr temp" "maybe param" "maybe type" "temp"
              (934672 'move' call_tmp[934669](393854 call rngs[1465443] tid[393768]))
              unknown call_tmp[934676] "expr temp" "maybe param" "maybe type" "temp"
              (934679 'move' call_tmp[934676](393852 call highBound _mt[203] call_tmp[934669]))
              unknown call_tmp[934681] "expr temp" "maybe param" "maybe type" "temp"
              (934684 'move' call_tmp[934681](393850 call res[1465440] call_tmp[934676]))
              (393845 call = call_tmp[934664] call_tmp[934681])
              (568387 'end of statement' state[1465446] tid[393768] rngs[1465443] tid[393768])
              (393858 call chpl__delete myop[393777])
              (568392 'end of statement' myop[393777])
            }
            (393867 call _downEndCount _coforallCount[393864] nil[32])
            (1465435 return _void[46])
          }
          {
          }
          label _continueLabel[393877]
          _indexOfInterest[393872]
          _iterator[393873]
        }
        label _breakLabel[393878]
        Defer
        {
          {
            (393919 call _endCountFree _coforallCount[393864])
          }
        }
        (393924 call _waitEndCount _coforallCount[393864] 1 numTasks[393865])
      }
      {
        const _coforallCount[393936] "const" "end count" "temp"
        (393992 'move' _coforallCount[393936](393989 call _endCountAlloc 1))
        unknown _indexOfInterest[393944] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[393945] "expr temp" "temp"
        (393954 'move' _iterator[393945](393952 call _getIterator tmpIter[393761]))
        Defer
        {
          {
            (393969 call _freeIterator _iterator[393945])
          }
        }
        { scopeless type
          (393959 'move' _indexOfInterest[393944](393956 call iteratorIndex _iterator[393945]))
        }
        ForLoop[393946]
        {
          unknown tid[304602] "coforall index var" "index var" "insert auto destroy"
          (568398 'end of statement')
          (393964 'move' tid[304602] _indexOfInterest[393944])
          (568399 'end of statement' tid[304602])
          (393976 call _upEndCount _coforallCount[393936] 1)
          (568401 'end of statement')
          (1465451 call coforall_fn[1465449] op[304514] res[304521] rngs[304560] state[304590])
          function coforall_fn[1465449](arg op[1465456]:_any[141](?), arg res[1465459]:_array[255540](?), arg rngs[1465462], ref arg state[1465465]) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              const current[304618] "dead at end of block" "const" "insert auto destroy"
              unknown call_tmp[934688] "expr temp" "maybe param" "maybe type" "temp"
              (934691 'move' call_tmp[934688](533594 call eltType _mt[203] res[1465459]))
              (653641 'default init var' current[304618] call_tmp[934688])
              (304621 'end of statement')
              unknown call_tmp[934695] "maybe param" "maybe type" "temp"
              (934698 'move' call_tmp[934695](304628 call(304625 call (partial) clone _mt[203] op[1465456])))
              const myop[304623] "dead at end of block" "const" "insert auto destroy"
              (653643 'init var' myop[304623] call_tmp[934695])
              (304630 'end of statement')
              {
                unknown _indexOfInterest[304660] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[304661] "expr temp" "temp"
                unknown call_tmp[934700] "expr temp" "maybe param" "maybe type" "temp"
                (934703 'move' call_tmp[934700](304634 call rngs[1465462] tid[304602]))
                (304670 'move' _iterator[304661](304668 call _getIterator call_tmp[934700]))
                Defer
                {
                  {
                    (304685 call _freeIterator _iterator[304661])
                  }
                }
                { scopeless type
                  (304675 'move' _indexOfInterest[304660](304672 call iteratorIndex _iterator[304661]))
                }
                ForLoop[304662]
                {
                  unknown i[304631] "index var" "insert auto destroy"
                  (568403 'end of statement')
                  (304680 'move' i[304631] _indexOfInterest[304660])
                  (568404 'end of statement' i[304631])
                  {
                    unknown elem[304638] "dead at end of block" "ref var"
                    (653648 'init ref decl' elem[304638])
                    unknown call_tmp[934707] "expr temp" "maybe param" "maybe type" "temp"
                    (934710 'move' call_tmp[934707](304640 call(458976 call (partial) dsiAccess _mt[203] this[304511]) i[304631]))
                    (653646 'move' elem[304638](653645 'addr of' call_tmp[934707]))
                    (304643 'end of statement' i[304631])
                    (304648 call(304645 call (partial) accumulate _mt[203] myop[304623]) elem[304638])
                    (568407 'end of statement' myop[304623] elem[304638])
                    unknown call_tmp[934714] "expr temp" "maybe param" "maybe type" "temp"
                    (934717 'move' call_tmp[934714](304653 call res[1465459] i[304631]))
                    unknown call_tmp[934721] "expr temp" "maybe param" "maybe type" "temp"
                    (934724 'move' call_tmp[934721](304659 call(304656 call (partial) generate _mt[203] myop[304623])))
                    (304650 call = call_tmp[934714] call_tmp[934721])
                    (568410 'end of statement' i[304631] myop[304623])
                  }
                  label _continueLabel[304665]
                  _indexOfInterest[304660]
                  _iterator[304661]
                }
                label _breakLabel[304666]
              }
              unknown call_tmp[934726] "expr temp" "maybe param" "maybe type" "temp"
              (934729 'move' call_tmp[934726](304695 call state[1465465] tid[304602]))
              unknown call_tmp[934731] "expr temp" "maybe param" "maybe type" "temp"
              (934734 'move' call_tmp[934731](304700 call rngs[1465462] tid[304602]))
              unknown call_tmp[934738] "expr temp" "maybe param" "maybe type" "temp"
              (934741 'move' call_tmp[934738](304702 call highBound _mt[203] call_tmp[934731]))
              unknown call_tmp[934743] "expr temp" "maybe param" "maybe type" "temp"
              (934746 'move' call_tmp[934743](304698 call res[1465459] call_tmp[934738]))
              (304692 call = call_tmp[934726] call_tmp[934743])
              (568413 'end of statement' state[1465465] tid[304602] rngs[1465462] tid[304602])
              (304707 call chpl__delete myop[304623])
              (568418 'end of statement' myop[304623])
            }
            (393939 call _downEndCount _coforallCount[393936] nil[32])
            (1465454 return _void[46])
          }
          {
          }
          label _continueLabel[393949]
          _indexOfInterest[393944]
          _iterator[393945]
        }
        label _breakLabel[393950]
        Defer
        {
          {
            (393980 call _endCountFree _coforallCount[393936])
          }
        }
        (393985 call _waitEndCount _coforallCount[393936] 1)
      }
    }
    unknown call_tmp[934748] "expr temp" "maybe param" "maybe type" "temp"
    (934751 'move' call_tmp[934748](304725 call _cond_test debugDRScan[303965]))
    if call_tmp[934748]
    {
      (304713 call writeln "res = " res[304521])
      (568423 'end of statement')
      (304719 call writeln "state = " state[304590])
      (568424 'end of statement' state[304590])
    }
    unknown call_tmp[934755] "maybe param" "maybe type" "temp"
    (934758 'move' call_tmp[934755](304735 call(304732 call (partial) clone _mt[203] op[304514])))
    const metaop[304730] "dead at end of block" "const" "insert auto destroy"
    (653650 'init var' metaop[304730] call_tmp[934755])
    (304737 'end of statement')
    unknown call_tmp[934762] "maybe param" "maybe type" "temp"
    (934765 'move' call_tmp[934762](304742 call identity _mt[203] metaop[304730]))
    unknown call_tmp[934769] "maybe param" "maybe type" "temp"
    (934772 'move' call_tmp[934769](533598 call eltType _mt[203] res[304521]))
    unknown next[304739] "dead at end of block" "insert auto destroy"
    (653652 'init var' next[304739] call_tmp[934762] call_tmp[934769])
    (304746 'end of statement' rng[304533] numTasks[304543] rngs[304560] metaop[304730])
    {
      unknown _indexOfInterest[304771] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304772] "expr temp" "temp"
      unknown call_tmp[934776] "expr temp" "maybe param" "maybe type" "temp"
      (934779 'move' call_tmp[934776](304750 call _dom _mt[203] rngs[304560]))
      (304781 'move' _iterator[304772](304779 call _getIterator call_tmp[934776]))
      Defer
      {
        {
          (304796 call _freeIterator _iterator[304772])
        }
      }
      { scopeless type
        (304786 'move' _indexOfInterest[304771](304783 call iteratorIndex _iterator[304772]))
      }
      ForLoop[304773]
      {
        unknown i[304747] "index var" "insert auto destroy"
        (568428 'end of statement')
        (304791 'move' i[304747] _indexOfInterest[304771])
        (568429 'end of statement' i[304747])
        {
          unknown call_tmp[934781] "expr temp" "maybe param" "maybe type" "temp"
          (934784 'move' call_tmp[934781](304757 call state[304590] i[304747]))
          (304754 call <=> call_tmp[934781] next[304739])
          (568431 'end of statement' state[304590] i[304747] next[304739])
          unknown call_tmp[934788] "expr temp" "maybe param" "maybe type" "temp"
          (934791 'move' call_tmp[934788](304769 call state[304590] i[304747]))
          (304766 call(304763 call (partial) accumulateOntoState _mt[203] metaop[304730]) next[304739] call_tmp[934788])
          (568435 'end of statement' metaop[304730] next[304739] state[304590] i[304747])
        }
        label _continueLabel[304776]
        _indexOfInterest[304771]
        _iterator[304772]
      }
      label _breakLabel[304777]
    }
    (304805 call chpl__delete metaop[304730])
    (568440 'end of statement' metaop[304730])
    unknown call_tmp[934793] "expr temp" "maybe param" "maybe type" "temp"
    (934796 'move' call_tmp[934793](304814 call _cond_test debugDRScan[303965]))
    if call_tmp[934793]
    {
      (304809 call writeln "state = " state[304590])
      (568442 'end of statement' state[304590])
    }
    unknown call_tmp[934798] "expr temp" "maybe param" "maybe type" "temp"
    (934801 'move' call_tmp[934798](304825 call _build_tuple numTasks[304543] rngs[304560] state[304590] next[304739]))
    (630525 'move' ret[630520](630524 'deref' call_tmp[934798]))
    gotoReturn _end_chpl__preScan[630518] _end_chpl__preScan[630518]
    (568444 'end of statement' numTasks[304543] rngs[304560] state[304590] next[304739])
    label _end_chpl__preScan[630518]
    (630522 return ret[630520])
    (397015 'used modules list'(304531 'import' RangeChunk[275188]))
    (410235 'referenced modules list' RangeChunk[275188])
  }
  function DefaultRectangularArr[298194](?).chpl__postScan[304829](arg _mt[304845]:_MT[201], arg this[304832]:DefaultRectangularArr[298194](?) :
  DefaultRectangularArr[298194](?), arg op[304835]:_any[141](?), ref arg res[304837]:_any[141](?), arg numTasks[304839]:_any[141](?), arg rngs[304841]:_any[141](?), arg state[304843]:_any[141](?)) : _unknown[42] "method" "no return value for void"
  {
    {
      unknown tmpIter[394005] "expr temp" "maybe ref" "no copy" "temp"
      (394008 'move' tmpIter[394005](304851 call _dom _mt[203] rngs[304841]))
      unknown isBounded[394199] "maybe param" "temp"
      (394205 'move' isBounded[394199](394201 call chpl_supportsBoundedCoforall tmpIter[394005] 0))
      if isBounded[394199]
      {
        const _coforallCount[394068] "const" "end count" "temp"
        (394136 'move' _coforallCount[394068](394133 call _endCountAlloc 1))
        unknown numTasks[394069] "temp"
        (394120 'move' numTasks[394069](394116 call chpl_boundedCoforallSize tmpIter[394005] 0))
        (394111 call _upEndCount _coforallCount[394068] 1 numTasks[394069])
        (568449 'end of statement')
        (394108 call chpl_resetTaskSpawn numTasks[394069])
        (568450 'end of statement')
        unknown _indexOfInterest[394076] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[394077] "expr temp" "temp"
        (394086 'move' _iterator[394077](394084 call _getIterator tmpIter[394005]))
        Defer
        {
          {
            (394101 call _freeIterator _iterator[394077])
          }
        }
        { scopeless type
          (394091 'move' _indexOfInterest[394076](394088 call iteratorIndex _iterator[394077]))
        }
        ForLoop[394078]
        {
          unknown tid[394012] "coforall index var" "index var" "insert auto destroy"
          (568452 'end of statement')
          (394096 'move' tid[394012] _indexOfInterest[394076])
          (568453 'end of statement' tid[394012])
          (1465470 call coforall_fn[1465468] op[304835] res[304837] rngs[304841] state[304843])
          function coforall_fn[1465468](arg op[1465475]:_any[141](?), arg res[1465478]:_any[141](?), arg rngs[1465481]:_any[141](?), arg state[1465484]:_any[141](?)) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[934805] "maybe param" "maybe type" "temp"
              (934808 'move' call_tmp[934805](394018 call state[1465484] tid[394012]))
              const myadjust[394016] "dead at end of block" "const" "insert auto destroy"
              (653654 'init var' myadjust[394016] call_tmp[934805])
              (394021 'end of statement' tid[394012])
              {
                unknown _indexOfInterest[394023] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[394025] "expr temp" "temp"
                unknown call_tmp[934810] "expr temp" "maybe param" "maybe type" "temp"
                (934813 'move' call_tmp[934810](394032 call rngs[1465481] tid[394012]))
                (394027 'move' _iterator[394025](394030 call _getIterator call_tmp[934810]))
                Defer
                {
                  {
                    (394036 call _freeIterator _iterator[394025])
                  }
                }
                { scopeless type
                  (394040 'move' _indexOfInterest[394023](394043 call iteratorIndex _iterator[394025]))
                }
                ForLoop[394045]
                {
                  unknown i[394048] "index var" "insert auto destroy"
                  (568457 'end of statement')
                  (394050 'move' i[394048] _indexOfInterest[394023])
                  (568458 'end of statement' i[394048])
                  {
                    unknown call_tmp[934817] "expr temp" "maybe param" "maybe type" "temp"
                    (934820 'move' call_tmp[934817](394060 call res[1465478] i[394048]))
                    (394058 call(394055 call (partial) accumulateOntoState _mt[203] op[1465475]) call_tmp[934817] myadjust[394016])
                    (568460 'end of statement' i[394048] myadjust[394016])
                  }
                  label _continueLabel[394063]
                  _indexOfInterest[394023]
                  _iterator[394025]
                }
                label _breakLabel[394065]
              }
            }
            (394071 call _downEndCount _coforallCount[394068] nil[32])
            (1465473 return _void[46])
          }
          {
          }
          label _continueLabel[394081]
          _indexOfInterest[394076]
          _iterator[394077]
        }
        label _breakLabel[394082]
        Defer
        {
          {
            (394123 call _endCountFree _coforallCount[394068])
          }
        }
        (394128 call _waitEndCount _coforallCount[394068] 1 numTasks[394069])
      }
      {
        const _coforallCount[394140] "const" "end count" "temp"
        (394196 'move' _coforallCount[394140](394193 call _endCountAlloc 1))
        unknown _indexOfInterest[394148] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[394149] "expr temp" "temp"
        (394158 'move' _iterator[394149](394156 call _getIterator tmpIter[394005]))
        Defer
        {
          {
            (394173 call _freeIterator _iterator[394149])
          }
        }
        { scopeless type
          (394163 'move' _indexOfInterest[394148](394160 call iteratorIndex _iterator[394149]))
        }
        ForLoop[394150]
        {
          unknown tid[304848] "coforall index var" "index var" "insert auto destroy"
          (568467 'end of statement')
          (394168 'move' tid[304848] _indexOfInterest[394148])
          (568468 'end of statement' tid[304848])
          (394180 call _upEndCount _coforallCount[394140] 1)
          (568470 'end of statement')
          (1465489 call coforall_fn[1465487] op[304835] res[304837] rngs[304841] state[304843])
          function coforall_fn[1465487](arg op[1465494]:_any[141](?), arg res[1465497]:_any[141](?), arg rngs[1465500]:_any[141](?), arg state[1465503]:_any[141](?)) : void[4] "cobegin or coforall" "outside try" "wrapper needs start fence"
          {
            {
              unknown call_tmp[934822] "maybe param" "maybe type" "temp"
              (934825 'move' call_tmp[934822](304858 call state[1465503] tid[304848]))
              const myadjust[304856] "dead at end of block" "const" "insert auto destroy"
              (653656 'init var' myadjust[304856] call_tmp[934822])
              (304861 'end of statement' tid[304848])
              {
                unknown _indexOfInterest[304877] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[304878] "expr temp" "temp"
                unknown call_tmp[934827] "expr temp" "maybe param" "maybe type" "temp"
                (934830 'move' call_tmp[934827](304865 call rngs[1465500] tid[304848]))
                (304887 'move' _iterator[304878](304885 call _getIterator call_tmp[934827]))
                Defer
                {
                  {
                    (304902 call _freeIterator _iterator[304878])
                  }
                }
                { scopeless type
                  (304892 'move' _indexOfInterest[304877](304889 call iteratorIndex _iterator[304878]))
                }
                ForLoop[304879]
                {
                  unknown i[304862] "index var" "insert auto destroy"
                  (568473 'end of statement')
                  (304897 'move' i[304862] _indexOfInterest[304877])
                  (568474 'end of statement' i[304862])
                  {
                    unknown call_tmp[934834] "expr temp" "maybe param" "maybe type" "temp"
                    (934837 'move' call_tmp[934834](304874 call res[1465497] i[304862]))
                    (304872 call(304869 call (partial) accumulateOntoState _mt[203] op[1465494]) call_tmp[934834] myadjust[304856])
                    (568476 'end of statement' i[304862] myadjust[304856])
                  }
                  label _continueLabel[304882]
                  _indexOfInterest[304877]
                  _iterator[304878]
                }
                label _breakLabel[304883]
              }
            }
            (394143 call _downEndCount _coforallCount[394140] nil[32])
            (1465492 return _void[46])
          }
          {
          }
          label _continueLabel[394153]
          _indexOfInterest[394148]
          _iterator[394149]
        }
        label _breakLabel[394154]
        Defer
        {
          {
            (394184 call _endCountFree _coforallCount[394140])
          }
        }
        (394189 call _waitEndCount _coforallCount[394140] 1)
      }
    }
    unknown call_tmp[934839] "expr temp" "maybe param" "maybe type" "temp"
    (934842 'move' call_tmp[934839](304916 call _cond_test debugDRScan[303965]))
    if call_tmp[934839]
    {
      (304911 call writeln "res = " res[304837])
    }
    (630529 return _void[46])
  }
  function canReuseStride[304923](arg blk[304925]:_any[141](?), arg curDim[304928]:int(64)[10], arg levels[304931]:_any[141](?), arg count[304933]:_any[141](?), arg stride[304935]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[630533] "RVV" "temp"
    unknown call_tmp[934844] "expr temp" "maybe param" "maybe type" "temp"
    (934847 'move' call_tmp[934844](304942 call + levels[304931] 1))
    unknown call_tmp[934849] "maybe param" "maybe type" "temp"
    (934852 'move' call_tmp[934849](304941 call count[304933] call_tmp[934844]))
    const lastCount[304939] "dead at end of block" "const" "insert auto destroy"
    (653658 'init var' lastCount[304939] call_tmp[934849])
    (304947 'end of statement')
    const curStride[304949] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[707325] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707326] "maybe param" "temp"
    unknown call_tmp[934854] "expr temp" "maybe param" "maybe type" "temp"
    (934857 'move' call_tmp[934854](304950 call < levels[304931] 1))
    (707331 'move' tmp[707326](707329 call _cond_test call_tmp[934854]))
    if tmp[707326]
    {
      (707336 'move' tmp[707325](707333 '_paramFoldLogical' tmp[707326] 1))
    }
    {
      unknown tmp[707338] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (707340 'move' tmp[707338](304956 call stride[304935] levels[304931]))
      (707345 'move' tmp[707325](707342 '_paramFoldLogical' tmp[707326] tmp[707338]))
    }
    (653660 'init var' curStride[304949] tmp[707325])
    (304962 'end of statement')
    unknown call_tmp[934859] "expr temp" "maybe param" "maybe type" "temp"
    (934862 'move' call_tmp[934859](304967 call - lastCount[304939] 1))
    unknown call_tmp[934864] "maybe param" "maybe type" "temp"
    (934867 'move' call_tmp[934864](304965 call * call_tmp[934859] curStride[304949]))
    const lastIndex[304964] "dead at end of block" "const" "insert auto destroy"
    (653662 'init var' lastIndex[304964] call_tmp[934864])
    (304973 'end of statement')
    unknown call_tmp[934869] "maybe param" "maybe type" "temp"
    (934872 'move' call_tmp[934869](304976 call + lastIndex[304964] curStride[304949]))
    const nextIndex[304975] "dead at end of block" "const" "insert auto destroy"
    (653664 'init var' nextIndex[304975] call_tmp[934869])
    (304981 'end of statement' lastCount[304939] curStride[304949] lastIndex[304964] curStride[304949])
    unknown call_tmp[934874] "expr temp" "maybe param" "maybe type" "temp"
    (934877 'move' call_tmp[934874](304987 call - curDim[304928] 2))
    unknown call_tmp[934879] "expr temp" "maybe param" "maybe type" "temp"
    (934882 'move' call_tmp[934879](304986 call blk[304925] call_tmp[934874]))
    unknown call_tmp[934884] "expr temp" "maybe param" "maybe type" "temp"
    (934887 'move' call_tmp[934884](304983 call == call_tmp[934879] nextIndex[304975]))
    (630538 'move' ret[630533](630537 'deref' call_tmp[934884]))
    gotoReturn _end_canReuseStride[630531] _end_canReuseStride[630531]
    (568487 'end of statement' nextIndex[304975])
    label _end_canReuseStride[630531]
    (630535 return ret[630533])
  }
  function _serialized_domain[288482](?).rank[1280916](arg _mt[1280918]:_MT[201], arg this[1280920]:_serialized_domain[288482](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1280939] "RVV" "param" "temp"
    unknown call_tmp[1280953] "expr temp" "maybe param" "maybe type" "temp"
    (1280956 'move' call_tmp[1280953](1280925 'is bound' this[1280920] c"rank"))
    if call_tmp[1280953]
    {
      unknown call_tmp[1280958] "expr temp" "maybe param" "maybe type" "temp"
      (1280961 'move' call_tmp[1280958](1280924 '.' this[1280920] c"rank"))
      (1280944 'move' ret[1280939](1280943 'deref' call_tmp[1280958]))
      gotoReturn _end_rank[1280937] _end_rank[1280937]
    }
    {
      (1280949 'move' ret[1280939](1280948 'deref' ?[227]))
      gotoReturn _end_rank[1280937] _end_rank[1280937]
    }
    label _end_rank[1280937]
    (1280941 return ret[1280939])
  }
  function _serialized_domain[288482](?).rank[1280963](arg _mt[1280965]:_MT[201], arg this[1280967]:_serialized_domain[288482](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1280986] "RVV" "param" "temp"
    unknown call_tmp[1281000] "expr temp" "maybe param" "maybe type" "temp"
    (1281003 'move' call_tmp[1281000](1280972 'is bound' this[1280967] c"rank"))
    if call_tmp[1281000]
    {
      unknown call_tmp[1281005] "expr temp" "maybe param" "maybe type" "temp"
      (1281008 'move' call_tmp[1281005](1280971 '.' this[1280967] c"rank"))
      (1280991 'move' ret[1280986](1280990 'deref' call_tmp[1281005]))
      gotoReturn _end_rank[1280984] _end_rank[1280984]
    }
    {
      (1280996 'move' ret[1280986](1280995 'deref' ?[227]))
      gotoReturn _end_rank[1280984] _end_rank[1280984]
    }
    label _end_rank[1280984]
    (1280988 return ret[1280986])
  }
  function _serialized_domain[288482](?).idxType[1281010](arg _mt[1281012]:_MT[201], arg this[1281014]:_serialized_domain[288482](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1281033] "RVV" "temp" "type variable"
    unknown call_tmp[1281047] "expr temp" "maybe param" "maybe type" "temp"
    (1281050 'move' call_tmp[1281047](1281019 'is bound' this[1281014] c"idxType"))
    if call_tmp[1281047]
    {
      unknown call_tmp[1281052] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1281055 'move' call_tmp[1281052](1281018 '.v' this[1281014] c"idxType"))
      (1281038 'move' ret[1281033](1281037 'deref' call_tmp[1281052]))
      gotoReturn _end_idxType[1281031] _end_idxType[1281031]
    }
    {
      (1281043 'move' ret[1281033](1281042 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1281031] _end_idxType[1281031]
    }
    label _end_idxType[1281031]
    (1281035 return ret[1281033])
  }
  function _serialized_domain[288482](?).idxType[1281057](arg _mt[1281059]:_MT[201], arg this[1281061]:_serialized_domain[288482](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1281080] "RVV" "temp" "type variable"
    unknown call_tmp[1281094] "expr temp" "maybe param" "maybe type" "temp"
    (1281097 'move' call_tmp[1281094](1281066 'is bound' this[1281061] c"idxType"))
    if call_tmp[1281094]
    {
      unknown call_tmp[1281099] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1281102 'move' call_tmp[1281099](1281065 '.v' this[1281061] c"idxType"))
      (1281085 'move' ret[1281080](1281084 'deref' call_tmp[1281099]))
      gotoReturn _end_idxType[1281078] _end_idxType[1281078]
    }
    {
      (1281090 'move' ret[1281080](1281089 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1281078] _end_idxType[1281078]
    }
    label _end_idxType[1281078]
    (1281082 return ret[1281080])
  }
  function _serialized_domain[288482](?).strides[1281104](arg _mt[1281106]:_MT[201], arg this[1281108]:_serialized_domain[288482](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1281127] "RVV" "param" "temp"
    unknown call_tmp[1281141] "expr temp" "maybe param" "maybe type" "temp"
    (1281144 'move' call_tmp[1281141](1281113 'is bound' this[1281108] c"strides"))
    if call_tmp[1281141]
    {
      unknown call_tmp[1281146] "expr temp" "maybe param" "maybe type" "temp"
      (1281149 'move' call_tmp[1281146](1281112 '.' this[1281108] c"strides"))
      (1281132 'move' ret[1281127](1281131 'deref' call_tmp[1281146]))
      gotoReturn _end_strides[1281125] _end_strides[1281125]
    }
    {
      (1281137 'move' ret[1281127](1281136 'deref' ?[227]))
      gotoReturn _end_strides[1281125] _end_strides[1281125]
    }
    label _end_strides[1281125]
    (1281129 return ret[1281127])
  }
  function _serialized_domain[288482](?).strides[1281151](arg _mt[1281153]:_MT[201], arg this[1281155]:_serialized_domain[288482](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1281174] "RVV" "param" "temp"
    unknown call_tmp[1281188] "expr temp" "maybe param" "maybe type" "temp"
    (1281191 'move' call_tmp[1281188](1281160 'is bound' this[1281155] c"strides"))
    if call_tmp[1281188]
    {
      unknown call_tmp[1281193] "expr temp" "maybe param" "maybe type" "temp"
      (1281196 'move' call_tmp[1281193](1281159 '.' this[1281155] c"strides"))
      (1281179 'move' ret[1281174](1281178 'deref' call_tmp[1281193]))
      gotoReturn _end_strides[1281172] _end_strides[1281172]
    }
    {
      (1281184 'move' ret[1281174](1281183 'deref' ?[227]))
      gotoReturn _end_strides[1281172] _end_strides[1281172]
    }
    label _end_strides[1281172]
    (1281176 return ret[1281174])
  }
  function _serialized_domain[288482](?).dims[1281198](arg _mt[1281200]:_MT[201], ref arg this[1281202]:_serialized_domain[288482](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1281212] "RVV" "temp"
    unknown call_tmp[1281219] "expr temp" "maybe param" "maybe type" "temp"
    (1281222 'move' call_tmp[1281219](1281206 '.' this[1281202] c"dims"))
    (1281217 'move' ret[1281212](1281216 'addr of' call_tmp[1281219]))
    (1281214 return ret[1281212])
  }
  function _serialized_domain[288482](?).isDefaultRectangular[1281224](arg _mt[1281226]:_MT[201], arg this[1281228]:_serialized_domain[288482](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1281247] "RVV" "param" "temp"
    unknown call_tmp[1281261] "expr temp" "maybe param" "maybe type" "temp"
    (1281264 'move' call_tmp[1281261](1281233 'is bound' this[1281228] c"isDefaultRectangular"))
    if call_tmp[1281261]
    {
      unknown call_tmp[1281266] "expr temp" "maybe param" "maybe type" "temp"
      (1281269 'move' call_tmp[1281266](1281232 '.' this[1281228] c"isDefaultRectangular"))
      (1281252 'move' ret[1281247](1281251 'deref' call_tmp[1281266]))
      gotoReturn _end_isDefaultRectangular[1281245] _end_isDefaultRectangular[1281245]
    }
    {
      (1281257 'move' ret[1281247](1281256 'deref' ?[227]))
      gotoReturn _end_isDefaultRectangular[1281245] _end_isDefaultRectangular[1281245]
    }
    label _end_isDefaultRectangular[1281245]
    (1281249 return ret[1281247])
  }
  function _serialized_domain[288482](?).isDefaultRectangular[1281271](arg _mt[1281273]:_MT[201], arg this[1281275]:_serialized_domain[288482](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1281294] "RVV" "param" "temp"
    unknown call_tmp[1281308] "expr temp" "maybe param" "maybe type" "temp"
    (1281311 'move' call_tmp[1281308](1281280 'is bound' this[1281275] c"isDefaultRectangular"))
    if call_tmp[1281308]
    {
      unknown call_tmp[1281313] "expr temp" "maybe param" "maybe type" "temp"
      (1281316 'move' call_tmp[1281313](1281279 '.' this[1281275] c"isDefaultRectangular"))
      (1281299 'move' ret[1281294](1281298 'deref' call_tmp[1281313]))
      gotoReturn _end_isDefaultRectangular[1281292] _end_isDefaultRectangular[1281292]
    }
    {
      (1281304 'move' ret[1281294](1281303 'deref' ?[227]))
      gotoReturn _end_isDefaultRectangular[1281292] _end_isDefaultRectangular[1281292]
    }
    label _end_isDefaultRectangular[1281292]
    (1281296 return ret[1281294])
  }
  function _serialized_domain[288482](?).init[1281318](arg _mt[1281320]:_MT[201], ref arg this[1281321]:_serialized_domain[288482](?), param arg rank[1281324]:_any[141](?), arg idxType[1281333]:_any[141](?), param arg strides[1281342]:_any[141](?), in arg dims[1281351]:_any[141](?), param arg isDefaultRectangular[1281360]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1281370 'init field' this[1281321] c"rank" rank[1281324])
    (1281373 'init field' this[1281321] c"idxType" idxType[1281333])
    (1281385 'end of statement')
    (1281376 'init field' this[1281321] c"strides" strides[1281342])
    (1281379 'init field' this[1281321] c"dims" dims[1281351])
    (1281386 'end of statement')
    (1281382 'init field' this[1281321] c"isDefaultRectangular" isDefaultRectangular[1281360])
    (1281388 return _void[46])
  }
  function _serialized_domain[288482](?).init=[1281390](arg _mt[1281393]:_MT[201], ref arg this[1281394]:_serialized_domain[288482](?), arg other[1281397] :
  (1281396 'typeof' this[1281394])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1281501] "maybe param" "maybe type" "temp"
    (1281504 'move' call_tmp[1281501](1281406 call rank _mt[203] other[1281397]))
    unknown rank[1281452] "param" "temp"
    (1281454 'init var' rank[1281452] call_tmp[1281501])
    (1281456 'init field' this[1281394] c"rank" rank[1281452])
    (1281492 'end of statement')
    unknown idxType[1281460] "temp" "type variable"
    (1281462 'move' idxType[1281460](1281416 call idxType _mt[203] other[1281397]))
    (1281464 'init field' this[1281394] c"idxType" idxType[1281460])
    (1281493 'end of statement')
    unknown call_tmp[1281510] "maybe param" "maybe type" "temp"
    (1281513 'move' call_tmp[1281510](1281426 call strides _mt[203] other[1281397]))
    unknown strides[1281468] "param" "temp"
    (1281470 'init var' strides[1281468] call_tmp[1281510])
    (1281472 'init field' this[1281394] c"strides" strides[1281468])
    (1281494 'end of statement')
    unknown call_tmp[1281517] "maybe param" "maybe type" "temp"
    (1281520 'move' call_tmp[1281517](1281436 call dims _mt[203] other[1281397]))
    unknown dims[1281476] "temp"
    (1281478 'init var' dims[1281476] call_tmp[1281517])
    (1281480 'init field' this[1281394] c"dims" dims[1281476])
    (1281495 'end of statement')
    unknown call_tmp[1281524] "maybe param" "maybe type" "temp"
    (1281527 'move' call_tmp[1281524](1281446 call isDefaultRectangular _mt[203] other[1281397]))
    unknown isDefaultRectangular[1281484] "param" "temp"
    (1281486 'init var' isDefaultRectangular[1281484] call_tmp[1281524])
    (1281488 'init field' this[1281394] c"isDefaultRectangular" isDefaultRectangular[1281484])
    (1281496 'end of statement')
    (1281497 return _void[46])
  }
  function _serialized_domain[288482](?).deinit[1281529](arg _mt[1281531]:_MT[201], arg this[1281533]:_serialized_domain[288482](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1281541 return _void[46])
  }
  function _serialized_domain[288482](?).serialize[1281543](arg _mt[1281547]:_MT[201], arg this[1281545]:_serialized_domain[288482](?), arg writer[1281546]:_any[141](?), ref arg serializer[1281551]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1281554 call serializeDefaultImpl writer[1281546] serializer[1281551] this[1281545])
    (1281560 return _void[46])
  }
  function _serialized_domain[288482](?).deserialize[1281562](arg _mt[1281566]:_MT[201], ref arg this[1281564]:_serialized_domain[288482](?), arg reader[1281565]:_any[141](?), ref arg deserializer[1281571]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1281573] "temp"
    (1281575 'move' _deser_temp[1281573] this[1281564])
    (1281578 call deserializeDefaultImpl reader[1281565] deserializer[1281571] _deser_temp[1281573])
    (1281584 return _void[46])
  }
  function _serialized_domain[288482](?).=[1281586](arg _mt[1281588]:_MT[201], arg this[1281590]:_serialized_domain[288482](?), ref arg _arg1[1281592]:_serialized_domain[288482](?), const?  ref arg _arg2[1281593]:_serialized_domain[288482](?)) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1281619] "expr temp" "maybe param" "maybe type" "temp"
    (1281622 'move' call_tmp[1281619](1281603 call dims _mt[203] _arg1[1281592]))
    unknown call_tmp[1281626] "expr temp" "maybe param" "maybe type" "temp"
    (1281629 'move' call_tmp[1281626](1281607 call dims _mt[203] _arg2[1281593]))
    (1281611 call = call_tmp[1281619] call_tmp[1281626])
    (1281615 return _void[46])
  }
  where {
    unknown call_tmp[1281631] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1281634 'move' call_tmp[1281631](1281596 'typeof' _arg1[1281592]))
    unknown call_tmp[1281636] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1281639 'move' call_tmp[1281636](1281598 'typeof' _arg2[1281593]))
    (1281600 call == call_tmp[1281631] call_tmp[1281636])
  }
  function _serialized_domain[288482](?).hash[1281641](arg _mt[1281644]:_MT[201], arg this[1281643]:_serialized_domain[288482](?)) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1281658] "RVV" "temp"
    unknown call_tmp[1281665] "expr temp" "maybe param" "maybe type" "temp"
    (1281668 'move' call_tmp[1281665](1281647 call dims _mt[203] this[1281643]))
    unknown call_tmp[1281670] "expr temp" "maybe param" "maybe type" "temp"
    (1281673 'move' call_tmp[1281670](1281651 call chpl__defaultHashWrapperInner call_tmp[1281665]))
    (1281663 'move' ret[1281658](1281662 'deref' call_tmp[1281670]))
    (1281660 return ret[1281658])
  }
  function chpl_fields_are_comparable[1281691](arg _arg1[1281693]:_serialized_domain[288482](?), arg _arg2[1281694]:_serialized_domain[288482](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1281743]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1281750] "expr temp" "maybe param" "maybe type" "temp"
    (1281753 'move' call_tmp[1281750](1281697 call rank _mt[203] _arg1[1281693]))
    unknown call_tmp[1281755] "expr temp" "maybe param" "maybe type" "temp"
    (1281758 'move' call_tmp[1281755](1281701 call rank _mt[203] _arg2[1281694]))
    unknown call_tmp[1281760] "expr temp" "maybe param" "maybe type" "temp"
    (1281763 'move' call_tmp[1281760](1281705 'call resolves' c"==" call_tmp[1281750] call_tmp[1281755]))
    unknown call_tmp[1281765] "expr temp" "maybe param" "maybe type" "temp"
    (1281768 'move' call_tmp[1281765](1281707 call strides _mt[203] _arg1[1281693]))
    unknown call_tmp[1281770] "expr temp" "maybe param" "maybe type" "temp"
    (1281773 'move' call_tmp[1281770](1281711 call strides _mt[203] _arg2[1281694]))
    unknown call_tmp[1281775] "expr temp" "maybe param" "maybe type" "temp"
    (1281778 'move' call_tmp[1281775](1281715 'call resolves' c"==" call_tmp[1281765] call_tmp[1281770]))
    unknown call_tmp[1281780] "expr temp" "maybe param" "maybe type" "temp"
    (1281783 'move' call_tmp[1281780](1281717 call dims _mt[203] _arg1[1281693]))
    unknown call_tmp[1281785] "expr temp" "maybe param" "maybe type" "temp"
    (1281788 'move' call_tmp[1281785](1281721 call dims _mt[203] _arg2[1281694]))
    unknown call_tmp[1281790] "expr temp" "maybe param" "maybe type" "temp"
    (1281793 'move' call_tmp[1281790](1281725 'call resolves' c"==" call_tmp[1281780] call_tmp[1281785]))
    unknown call_tmp[1281795] "expr temp" "maybe param" "maybe type" "temp"
    (1281798 'move' call_tmp[1281795](1281727 call isDefaultRectangular _mt[203] _arg1[1281693]))
    unknown call_tmp[1281800] "expr temp" "maybe param" "maybe type" "temp"
    (1281803 'move' call_tmp[1281800](1281731 call isDefaultRectangular _mt[203] _arg2[1281694]))
    unknown call_tmp[1281805] "expr temp" "maybe param" "maybe type" "temp"
    (1281808 'move' call_tmp[1281805](1281735 'call resolves' c"==" call_tmp[1281795] call_tmp[1281800]))
    unknown call_tmp[1281810] "expr temp" "maybe param" "maybe type" "temp"
    (1281813 'move' call_tmp[1281810](1281737 '&' call_tmp[1281760] call_tmp[1281775] call_tmp[1281790] call_tmp[1281805]))
    (1281748 'move' ret[1281743](1281747 'deref' call_tmp[1281810]))
    (1281745 return ret[1281743])
  }
  function _serialized_domain[288482](?).==[1281675](arg _mt[1281677]:_MT[201], arg this[1281679]:_serialized_domain[288482](?), arg _arg1[1281681]:_serialized_domain[288482](?), arg _arg2[1281682]:_serialized_domain[288482](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1281887]:bool[19] "RVV" "temp"
    unknown call_tmp[1281914] "expr temp" "maybe param" "maybe type" "temp"
    (1281917 'move' call_tmp[1281914](1281821 call rank _mt[203] _arg1[1281681]))
    unknown call_tmp[1281919] "expr temp" "maybe param" "maybe type" "temp"
    (1281922 'move' call_tmp[1281919](1281825 call rank _mt[203] _arg2[1281682]))
    unknown call_tmp[1281924] "expr temp" "maybe param" "maybe type" "temp"
    (1281927 'move' call_tmp[1281924](1281829 call chpl_field_neq call_tmp[1281914] call_tmp[1281919]))
    if call_tmp[1281924]
    {
      (1281892 'move' ret[1281887](1281891 'deref' 0))
      gotoReturn _end_==[1281885] _end_==[1281885]
    }
    unknown call_tmp[1281929] "expr temp" "maybe param" "maybe type" "temp"
    (1281932 'move' call_tmp[1281929](1281835 call strides _mt[203] _arg1[1281681]))
    unknown call_tmp[1281934] "expr temp" "maybe param" "maybe type" "temp"
    (1281937 'move' call_tmp[1281934](1281839 call strides _mt[203] _arg2[1281682]))
    unknown call_tmp[1281939] "expr temp" "maybe param" "maybe type" "temp"
    (1281942 'move' call_tmp[1281939](1281843 call chpl_field_neq call_tmp[1281929] call_tmp[1281934]))
    if call_tmp[1281939]
    {
      (1281897 'move' ret[1281887](1281896 'deref' 0))
      gotoReturn _end_==[1281885] _end_==[1281885]
    }
    unknown call_tmp[1281944] "expr temp" "maybe param" "maybe type" "temp"
    (1281947 'move' call_tmp[1281944](1281849 call dims _mt[203] _arg1[1281681]))
    unknown call_tmp[1281949] "expr temp" "maybe param" "maybe type" "temp"
    (1281952 'move' call_tmp[1281949](1281853 call dims _mt[203] _arg2[1281682]))
    unknown call_tmp[1281954] "expr temp" "maybe param" "maybe type" "temp"
    (1281957 'move' call_tmp[1281954](1281857 call chpl_field_neq call_tmp[1281944] call_tmp[1281949]))
    if call_tmp[1281954]
    {
      (1281902 'move' ret[1281887](1281901 'deref' 0))
      gotoReturn _end_==[1281885] _end_==[1281885]
    }
    unknown call_tmp[1281959] "expr temp" "maybe param" "maybe type" "temp"
    (1281962 'move' call_tmp[1281959](1281863 call isDefaultRectangular _mt[203] _arg1[1281681]))
    unknown call_tmp[1281964] "expr temp" "maybe param" "maybe type" "temp"
    (1281967 'move' call_tmp[1281964](1281867 call isDefaultRectangular _mt[203] _arg2[1281682]))
    unknown call_tmp[1281969] "expr temp" "maybe param" "maybe type" "temp"
    (1281972 'move' call_tmp[1281969](1281871 call chpl_field_neq call_tmp[1281959] call_tmp[1281964]))
    if call_tmp[1281969]
    {
      (1281907 'move' ret[1281887](1281906 'deref' 0))
      gotoReturn _end_==[1281885] _end_==[1281885]
    }
    (1281912 'move' ret[1281887](1281911 'deref' 1))
    label _end_==[1281885]
    (1281889 return ret[1281887])
  }
  where {
    unknown call_tmp[1281974] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1281977 'move' call_tmp[1281974](1281685 'typeof' _arg1[1281681]))
    unknown call_tmp[1281979] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1281982 'move' call_tmp[1281979](1281687 'typeof' _arg2[1281682]))
    unknown call_tmp[1281984] "expr temp" "maybe param" "maybe type" "temp"
    (1281987 'move' call_tmp[1281984](1281689 call == call_tmp[1281974] call_tmp[1281979]))
    unknown call_tmp[1281989] "expr temp" "maybe param" "maybe type" "temp"
    (1281992 'move' call_tmp[1281989](1281815 call chpl_fields_are_comparable[1281691] _arg1[1281681] _arg2[1281682]))
    (1281819 '&' call_tmp[1281984] call_tmp[1281989])
  }
  function chpl_fields_are_comparable[1282010](arg _arg1[1282012]:_serialized_domain[288482](?), arg _arg2[1282013]:_serialized_domain[288482](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1282062]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1282069] "expr temp" "maybe param" "maybe type" "temp"
    (1282072 'move' call_tmp[1282069](1282016 call rank _mt[203] _arg1[1282012]))
    unknown call_tmp[1282074] "expr temp" "maybe param" "maybe type" "temp"
    (1282077 'move' call_tmp[1282074](1282020 call rank _mt[203] _arg2[1282013]))
    unknown call_tmp[1282079] "expr temp" "maybe param" "maybe type" "temp"
    (1282082 'move' call_tmp[1282079](1282024 'call resolves' c"!=" call_tmp[1282069] call_tmp[1282074]))
    unknown call_tmp[1282084] "expr temp" "maybe param" "maybe type" "temp"
    (1282087 'move' call_tmp[1282084](1282026 call strides _mt[203] _arg1[1282012]))
    unknown call_tmp[1282089] "expr temp" "maybe param" "maybe type" "temp"
    (1282092 'move' call_tmp[1282089](1282030 call strides _mt[203] _arg2[1282013]))
    unknown call_tmp[1282094] "expr temp" "maybe param" "maybe type" "temp"
    (1282097 'move' call_tmp[1282094](1282034 'call resolves' c"!=" call_tmp[1282084] call_tmp[1282089]))
    unknown call_tmp[1282099] "expr temp" "maybe param" "maybe type" "temp"
    (1282102 'move' call_tmp[1282099](1282036 call dims _mt[203] _arg1[1282012]))
    unknown call_tmp[1282104] "expr temp" "maybe param" "maybe type" "temp"
    (1282107 'move' call_tmp[1282104](1282040 call dims _mt[203] _arg2[1282013]))
    unknown call_tmp[1282109] "expr temp" "maybe param" "maybe type" "temp"
    (1282112 'move' call_tmp[1282109](1282044 'call resolves' c"!=" call_tmp[1282099] call_tmp[1282104]))
    unknown call_tmp[1282114] "expr temp" "maybe param" "maybe type" "temp"
    (1282117 'move' call_tmp[1282114](1282046 call isDefaultRectangular _mt[203] _arg1[1282012]))
    unknown call_tmp[1282119] "expr temp" "maybe param" "maybe type" "temp"
    (1282122 'move' call_tmp[1282119](1282050 call isDefaultRectangular _mt[203] _arg2[1282013]))
    unknown call_tmp[1282124] "expr temp" "maybe param" "maybe type" "temp"
    (1282127 'move' call_tmp[1282124](1282054 'call resolves' c"!=" call_tmp[1282114] call_tmp[1282119]))
    unknown call_tmp[1282129] "expr temp" "maybe param" "maybe type" "temp"
    (1282132 'move' call_tmp[1282129](1282056 '&' call_tmp[1282079] call_tmp[1282094] call_tmp[1282109] call_tmp[1282124]))
    (1282067 'move' ret[1282062](1282066 'deref' call_tmp[1282129]))
    (1282064 return ret[1282062])
  }
  function _serialized_domain[288482](?).!=[1281994](arg _mt[1281996]:_MT[201], arg this[1281998]:_serialized_domain[288482](?), arg _arg1[1282000]:_serialized_domain[288482](?), arg _arg2[1282001]:_serialized_domain[288482](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1282206]:bool[19] "RVV" "temp"
    unknown call_tmp[1282233] "expr temp" "maybe param" "maybe type" "temp"
    (1282236 'move' call_tmp[1282233](1282140 call rank _mt[203] _arg1[1282000]))
    unknown call_tmp[1282238] "expr temp" "maybe param" "maybe type" "temp"
    (1282241 'move' call_tmp[1282238](1282144 call rank _mt[203] _arg2[1282001]))
    unknown call_tmp[1282243] "expr temp" "maybe param" "maybe type" "temp"
    (1282246 'move' call_tmp[1282243](1282148 call chpl_field_neq call_tmp[1282233] call_tmp[1282238]))
    if call_tmp[1282243]
    {
      (1282211 'move' ret[1282206](1282210 'deref' 1))
      gotoReturn _end_!=[1282204] _end_!=[1282204]
    }
    unknown call_tmp[1282248] "expr temp" "maybe param" "maybe type" "temp"
    (1282251 'move' call_tmp[1282248](1282154 call strides _mt[203] _arg1[1282000]))
    unknown call_tmp[1282253] "expr temp" "maybe param" "maybe type" "temp"
    (1282256 'move' call_tmp[1282253](1282158 call strides _mt[203] _arg2[1282001]))
    unknown call_tmp[1282258] "expr temp" "maybe param" "maybe type" "temp"
    (1282261 'move' call_tmp[1282258](1282162 call chpl_field_neq call_tmp[1282248] call_tmp[1282253]))
    if call_tmp[1282258]
    {
      (1282216 'move' ret[1282206](1282215 'deref' 1))
      gotoReturn _end_!=[1282204] _end_!=[1282204]
    }
    unknown call_tmp[1282263] "expr temp" "maybe param" "maybe type" "temp"
    (1282266 'move' call_tmp[1282263](1282168 call dims _mt[203] _arg1[1282000]))
    unknown call_tmp[1282268] "expr temp" "maybe param" "maybe type" "temp"
    (1282271 'move' call_tmp[1282268](1282172 call dims _mt[203] _arg2[1282001]))
    unknown call_tmp[1282273] "expr temp" "maybe param" "maybe type" "temp"
    (1282276 'move' call_tmp[1282273](1282176 call chpl_field_neq call_tmp[1282263] call_tmp[1282268]))
    if call_tmp[1282273]
    {
      (1282221 'move' ret[1282206](1282220 'deref' 1))
      gotoReturn _end_!=[1282204] _end_!=[1282204]
    }
    unknown call_tmp[1282278] "expr temp" "maybe param" "maybe type" "temp"
    (1282281 'move' call_tmp[1282278](1282182 call isDefaultRectangular _mt[203] _arg1[1282000]))
    unknown call_tmp[1282283] "expr temp" "maybe param" "maybe type" "temp"
    (1282286 'move' call_tmp[1282283](1282186 call isDefaultRectangular _mt[203] _arg2[1282001]))
    unknown call_tmp[1282288] "expr temp" "maybe param" "maybe type" "temp"
    (1282291 'move' call_tmp[1282288](1282190 call chpl_field_neq call_tmp[1282278] call_tmp[1282283]))
    if call_tmp[1282288]
    {
      (1282226 'move' ret[1282206](1282225 'deref' 1))
      gotoReturn _end_!=[1282204] _end_!=[1282204]
    }
    (1282231 'move' ret[1282206](1282230 'deref' 0))
    label _end_!=[1282204]
    (1282208 return ret[1282206])
  }
  where {
    unknown call_tmp[1282293] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1282296 'move' call_tmp[1282293](1282004 'typeof' _arg1[1282000]))
    unknown call_tmp[1282298] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1282301 'move' call_tmp[1282298](1282006 'typeof' _arg2[1282001]))
    unknown call_tmp[1282303] "expr temp" "maybe param" "maybe type" "temp"
    (1282306 'move' call_tmp[1282303](1282008 call == call_tmp[1282293] call_tmp[1282298]))
    unknown call_tmp[1282308] "expr temp" "maybe param" "maybe type" "temp"
    (1282311 'move' call_tmp[1282308](1282134 call chpl_fields_are_comparable[1282010] _arg1[1282000] _arg2[1282001]))
    (1282138 '&' call_tmp[1282303] call_tmp[1282308])
  }
  function chpl_fields_are_comparable[1282329](arg _arg1[1282331]:_serialized_domain[288482](?), arg _arg2[1282332]:_serialized_domain[288482](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1282381]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1282388] "expr temp" "maybe param" "maybe type" "temp"
    (1282391 'move' call_tmp[1282388](1282335 call rank _mt[203] _arg1[1282331]))
    unknown call_tmp[1282393] "expr temp" "maybe param" "maybe type" "temp"
    (1282396 'move' call_tmp[1282393](1282339 call rank _mt[203] _arg2[1282332]))
    unknown call_tmp[1282398] "expr temp" "maybe param" "maybe type" "temp"
    (1282401 'move' call_tmp[1282398](1282343 'call resolves' c"<" call_tmp[1282388] call_tmp[1282393]))
    unknown call_tmp[1282403] "expr temp" "maybe param" "maybe type" "temp"
    (1282406 'move' call_tmp[1282403](1282345 call strides _mt[203] _arg1[1282331]))
    unknown call_tmp[1282408] "expr temp" "maybe param" "maybe type" "temp"
    (1282411 'move' call_tmp[1282408](1282349 call strides _mt[203] _arg2[1282332]))
    unknown call_tmp[1282413] "expr temp" "maybe param" "maybe type" "temp"
    (1282416 'move' call_tmp[1282413](1282353 'call resolves' c"<" call_tmp[1282403] call_tmp[1282408]))
    unknown call_tmp[1282418] "expr temp" "maybe param" "maybe type" "temp"
    (1282421 'move' call_tmp[1282418](1282355 call dims _mt[203] _arg1[1282331]))
    unknown call_tmp[1282423] "expr temp" "maybe param" "maybe type" "temp"
    (1282426 'move' call_tmp[1282423](1282359 call dims _mt[203] _arg2[1282332]))
    unknown call_tmp[1282428] "expr temp" "maybe param" "maybe type" "temp"
    (1282431 'move' call_tmp[1282428](1282363 'call resolves' c"<" call_tmp[1282418] call_tmp[1282423]))
    unknown call_tmp[1282433] "expr temp" "maybe param" "maybe type" "temp"
    (1282436 'move' call_tmp[1282433](1282365 call isDefaultRectangular _mt[203] _arg1[1282331]))
    unknown call_tmp[1282438] "expr temp" "maybe param" "maybe type" "temp"
    (1282441 'move' call_tmp[1282438](1282369 call isDefaultRectangular _mt[203] _arg2[1282332]))
    unknown call_tmp[1282443] "expr temp" "maybe param" "maybe type" "temp"
    (1282446 'move' call_tmp[1282443](1282373 'call resolves' c"<" call_tmp[1282433] call_tmp[1282438]))
    unknown call_tmp[1282448] "expr temp" "maybe param" "maybe type" "temp"
    (1282451 'move' call_tmp[1282448](1282375 '&' call_tmp[1282398] call_tmp[1282413] call_tmp[1282428] call_tmp[1282443]))
    (1282386 'move' ret[1282381](1282385 'deref' call_tmp[1282448]))
    (1282383 return ret[1282381])
  }
  function _serialized_domain[288482](?).<[1282313](arg _mt[1282315]:_MT[201], arg this[1282317]:_serialized_domain[288482](?), arg _arg1[1282319]:_serialized_domain[288482](?), arg _arg2[1282320]:_serialized_domain[288482](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1282585]:bool[19] "RVV" "temp"
    unknown call_tmp[1282632] "expr temp" "maybe param" "maybe type" "temp"
    (1282635 'move' call_tmp[1282632](1282459 call rank _mt[203] _arg1[1282319]))
    unknown call_tmp[1282637] "expr temp" "maybe param" "maybe type" "temp"
    (1282640 'move' call_tmp[1282637](1282463 call rank _mt[203] _arg2[1282320]))
    unknown call_tmp[1282642] "expr temp" "maybe param" "maybe type" "temp"
    (1282645 'move' call_tmp[1282642](1282467 call chpl_field_lt call_tmp[1282632] call_tmp[1282637]))
    if call_tmp[1282642]
    {
      (1282590 'move' ret[1282585](1282589 'deref' 1))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282647] "expr temp" "maybe param" "maybe type" "temp"
    (1282650 'move' call_tmp[1282647](1282473 call rank _mt[203] _arg1[1282319]))
    unknown call_tmp[1282652] "expr temp" "maybe param" "maybe type" "temp"
    (1282655 'move' call_tmp[1282652](1282477 call rank _mt[203] _arg2[1282320]))
    unknown call_tmp[1282657] "expr temp" "maybe param" "maybe type" "temp"
    (1282660 'move' call_tmp[1282657](1282481 call chpl_field_gt call_tmp[1282647] call_tmp[1282652]))
    if call_tmp[1282657]
    {
      (1282595 'move' ret[1282585](1282594 'deref' 0))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282662] "expr temp" "maybe param" "maybe type" "temp"
    (1282665 'move' call_tmp[1282662](1282487 call strides _mt[203] _arg1[1282319]))
    unknown call_tmp[1282667] "expr temp" "maybe param" "maybe type" "temp"
    (1282670 'move' call_tmp[1282667](1282491 call strides _mt[203] _arg2[1282320]))
    unknown call_tmp[1282672] "expr temp" "maybe param" "maybe type" "temp"
    (1282675 'move' call_tmp[1282672](1282495 call chpl_field_lt call_tmp[1282662] call_tmp[1282667]))
    if call_tmp[1282672]
    {
      (1282600 'move' ret[1282585](1282599 'deref' 1))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282677] "expr temp" "maybe param" "maybe type" "temp"
    (1282680 'move' call_tmp[1282677](1282501 call strides _mt[203] _arg1[1282319]))
    unknown call_tmp[1282682] "expr temp" "maybe param" "maybe type" "temp"
    (1282685 'move' call_tmp[1282682](1282505 call strides _mt[203] _arg2[1282320]))
    unknown call_tmp[1282687] "expr temp" "maybe param" "maybe type" "temp"
    (1282690 'move' call_tmp[1282687](1282509 call chpl_field_gt call_tmp[1282677] call_tmp[1282682]))
    if call_tmp[1282687]
    {
      (1282605 'move' ret[1282585](1282604 'deref' 0))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282692] "expr temp" "maybe param" "maybe type" "temp"
    (1282695 'move' call_tmp[1282692](1282515 call dims _mt[203] _arg1[1282319]))
    unknown call_tmp[1282697] "expr temp" "maybe param" "maybe type" "temp"
    (1282700 'move' call_tmp[1282697](1282519 call dims _mt[203] _arg2[1282320]))
    unknown call_tmp[1282702] "expr temp" "maybe param" "maybe type" "temp"
    (1282705 'move' call_tmp[1282702](1282523 call chpl_field_lt call_tmp[1282692] call_tmp[1282697]))
    if call_tmp[1282702]
    {
      (1282610 'move' ret[1282585](1282609 'deref' 1))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282707] "expr temp" "maybe param" "maybe type" "temp"
    (1282710 'move' call_tmp[1282707](1282529 call dims _mt[203] _arg1[1282319]))
    unknown call_tmp[1282712] "expr temp" "maybe param" "maybe type" "temp"
    (1282715 'move' call_tmp[1282712](1282533 call dims _mt[203] _arg2[1282320]))
    unknown call_tmp[1282717] "expr temp" "maybe param" "maybe type" "temp"
    (1282720 'move' call_tmp[1282717](1282537 call chpl_field_gt call_tmp[1282707] call_tmp[1282712]))
    if call_tmp[1282717]
    {
      (1282615 'move' ret[1282585](1282614 'deref' 0))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282722] "expr temp" "maybe param" "maybe type" "temp"
    (1282725 'move' call_tmp[1282722](1282543 call isDefaultRectangular _mt[203] _arg1[1282319]))
    unknown call_tmp[1282727] "expr temp" "maybe param" "maybe type" "temp"
    (1282730 'move' call_tmp[1282727](1282547 call isDefaultRectangular _mt[203] _arg2[1282320]))
    unknown call_tmp[1282732] "expr temp" "maybe param" "maybe type" "temp"
    (1282735 'move' call_tmp[1282732](1282551 call chpl_field_lt call_tmp[1282722] call_tmp[1282727]))
    if call_tmp[1282732]
    {
      (1282620 'move' ret[1282585](1282619 'deref' 1))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    unknown call_tmp[1282737] "expr temp" "maybe param" "maybe type" "temp"
    (1282740 'move' call_tmp[1282737](1282557 call isDefaultRectangular _mt[203] _arg1[1282319]))
    unknown call_tmp[1282742] "expr temp" "maybe param" "maybe type" "temp"
    (1282745 'move' call_tmp[1282742](1282561 call isDefaultRectangular _mt[203] _arg2[1282320]))
    unknown call_tmp[1282747] "expr temp" "maybe param" "maybe type" "temp"
    (1282750 'move' call_tmp[1282747](1282565 call chpl_field_gt call_tmp[1282737] call_tmp[1282742]))
    if call_tmp[1282747]
    {
      (1282625 'move' ret[1282585](1282624 'deref' 0))
      gotoReturn _end_<[1282583] _end_<[1282583]
    }
    (1282630 'move' ret[1282585](1282629 'deref' 0))
    label _end_<[1282583]
    (1282587 return ret[1282585])
  }
  where {
    unknown call_tmp[1282752] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1282755 'move' call_tmp[1282752](1282323 'typeof' _arg1[1282319]))
    unknown call_tmp[1282757] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1282760 'move' call_tmp[1282757](1282325 'typeof' _arg2[1282320]))
    unknown call_tmp[1282762] "expr temp" "maybe param" "maybe type" "temp"
    (1282765 'move' call_tmp[1282762](1282327 call == call_tmp[1282752] call_tmp[1282757]))
    unknown call_tmp[1282767] "expr temp" "maybe param" "maybe type" "temp"
    (1282770 'move' call_tmp[1282767](1282453 call chpl_fields_are_comparable[1282329] _arg1[1282319] _arg2[1282320]))
    (1282457 '&' call_tmp[1282762] call_tmp[1282767])
  }
  function chpl_fields_are_comparable[1282788](arg _arg1[1282790]:_serialized_domain[288482](?), arg _arg2[1282791]:_serialized_domain[288482](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1282840]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1282847] "expr temp" "maybe param" "maybe type" "temp"
    (1282850 'move' call_tmp[1282847](1282794 call rank _mt[203] _arg1[1282790]))
    unknown call_tmp[1282852] "expr temp" "maybe param" "maybe type" "temp"
    (1282855 'move' call_tmp[1282852](1282798 call rank _mt[203] _arg2[1282791]))
    unknown call_tmp[1282857] "expr temp" "maybe param" "maybe type" "temp"
    (1282860 'move' call_tmp[1282857](1282802 'call resolves' c"<=" call_tmp[1282847] call_tmp[1282852]))
    unknown call_tmp[1282862] "expr temp" "maybe param" "maybe type" "temp"
    (1282865 'move' call_tmp[1282862](1282804 call strides _mt[203] _arg1[1282790]))
    unknown call_tmp[1282867] "expr temp" "maybe param" "maybe type" "temp"
    (1282870 'move' call_tmp[1282867](1282808 call strides _mt[203] _arg2[1282791]))
    unknown call_tmp[1282872] "expr temp" "maybe param" "maybe type" "temp"
    (1282875 'move' call_tmp[1282872](1282812 'call resolves' c"<=" call_tmp[1282862] call_tmp[1282867]))
    unknown call_tmp[1282877] "expr temp" "maybe param" "maybe type" "temp"
    (1282880 'move' call_tmp[1282877](1282814 call dims _mt[203] _arg1[1282790]))
    unknown call_tmp[1282882] "expr temp" "maybe param" "maybe type" "temp"
    (1282885 'move' call_tmp[1282882](1282818 call dims _mt[203] _arg2[1282791]))
    unknown call_tmp[1282887] "expr temp" "maybe param" "maybe type" "temp"
    (1282890 'move' call_tmp[1282887](1282822 'call resolves' c"<=" call_tmp[1282877] call_tmp[1282882]))
    unknown call_tmp[1282892] "expr temp" "maybe param" "maybe type" "temp"
    (1282895 'move' call_tmp[1282892](1282824 call isDefaultRectangular _mt[203] _arg1[1282790]))
    unknown call_tmp[1282897] "expr temp" "maybe param" "maybe type" "temp"
    (1282900 'move' call_tmp[1282897](1282828 call isDefaultRectangular _mt[203] _arg2[1282791]))
    unknown call_tmp[1282902] "expr temp" "maybe param" "maybe type" "temp"
    (1282905 'move' call_tmp[1282902](1282832 'call resolves' c"<=" call_tmp[1282892] call_tmp[1282897]))
    unknown call_tmp[1282907] "expr temp" "maybe param" "maybe type" "temp"
    (1282910 'move' call_tmp[1282907](1282834 '&' call_tmp[1282857] call_tmp[1282872] call_tmp[1282887] call_tmp[1282902]))
    (1282845 'move' ret[1282840](1282844 'deref' call_tmp[1282907]))
    (1282842 return ret[1282840])
  }
  function _serialized_domain[288482](?).<=[1282772](arg _mt[1282774]:_MT[201], arg this[1282776]:_serialized_domain[288482](?), arg _arg1[1282778]:_serialized_domain[288482](?), arg _arg2[1282779]:_serialized_domain[288482](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1283044]:bool[19] "RVV" "temp"
    unknown call_tmp[1283091] "expr temp" "maybe param" "maybe type" "temp"
    (1283094 'move' call_tmp[1283091](1282918 call rank _mt[203] _arg1[1282778]))
    unknown call_tmp[1283096] "expr temp" "maybe param" "maybe type" "temp"
    (1283099 'move' call_tmp[1283096](1282922 call rank _mt[203] _arg2[1282779]))
    unknown call_tmp[1283101] "expr temp" "maybe param" "maybe type" "temp"
    (1283104 'move' call_tmp[1283101](1282926 call chpl_field_lt call_tmp[1283091] call_tmp[1283096]))
    if call_tmp[1283101]
    {
      (1283049 'move' ret[1283044](1283048 'deref' 1))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283106] "expr temp" "maybe param" "maybe type" "temp"
    (1283109 'move' call_tmp[1283106](1282932 call rank _mt[203] _arg1[1282778]))
    unknown call_tmp[1283111] "expr temp" "maybe param" "maybe type" "temp"
    (1283114 'move' call_tmp[1283111](1282936 call rank _mt[203] _arg2[1282779]))
    unknown call_tmp[1283116] "expr temp" "maybe param" "maybe type" "temp"
    (1283119 'move' call_tmp[1283116](1282940 call chpl_field_gt call_tmp[1283106] call_tmp[1283111]))
    if call_tmp[1283116]
    {
      (1283054 'move' ret[1283044](1283053 'deref' 0))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283121] "expr temp" "maybe param" "maybe type" "temp"
    (1283124 'move' call_tmp[1283121](1282946 call strides _mt[203] _arg1[1282778]))
    unknown call_tmp[1283126] "expr temp" "maybe param" "maybe type" "temp"
    (1283129 'move' call_tmp[1283126](1282950 call strides _mt[203] _arg2[1282779]))
    unknown call_tmp[1283131] "expr temp" "maybe param" "maybe type" "temp"
    (1283134 'move' call_tmp[1283131](1282954 call chpl_field_lt call_tmp[1283121] call_tmp[1283126]))
    if call_tmp[1283131]
    {
      (1283059 'move' ret[1283044](1283058 'deref' 1))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283136] "expr temp" "maybe param" "maybe type" "temp"
    (1283139 'move' call_tmp[1283136](1282960 call strides _mt[203] _arg1[1282778]))
    unknown call_tmp[1283141] "expr temp" "maybe param" "maybe type" "temp"
    (1283144 'move' call_tmp[1283141](1282964 call strides _mt[203] _arg2[1282779]))
    unknown call_tmp[1283146] "expr temp" "maybe param" "maybe type" "temp"
    (1283149 'move' call_tmp[1283146](1282968 call chpl_field_gt call_tmp[1283136] call_tmp[1283141]))
    if call_tmp[1283146]
    {
      (1283064 'move' ret[1283044](1283063 'deref' 0))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283151] "expr temp" "maybe param" "maybe type" "temp"
    (1283154 'move' call_tmp[1283151](1282974 call dims _mt[203] _arg1[1282778]))
    unknown call_tmp[1283156] "expr temp" "maybe param" "maybe type" "temp"
    (1283159 'move' call_tmp[1283156](1282978 call dims _mt[203] _arg2[1282779]))
    unknown call_tmp[1283161] "expr temp" "maybe param" "maybe type" "temp"
    (1283164 'move' call_tmp[1283161](1282982 call chpl_field_lt call_tmp[1283151] call_tmp[1283156]))
    if call_tmp[1283161]
    {
      (1283069 'move' ret[1283044](1283068 'deref' 1))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283166] "expr temp" "maybe param" "maybe type" "temp"
    (1283169 'move' call_tmp[1283166](1282988 call dims _mt[203] _arg1[1282778]))
    unknown call_tmp[1283171] "expr temp" "maybe param" "maybe type" "temp"
    (1283174 'move' call_tmp[1283171](1282992 call dims _mt[203] _arg2[1282779]))
    unknown call_tmp[1283176] "expr temp" "maybe param" "maybe type" "temp"
    (1283179 'move' call_tmp[1283176](1282996 call chpl_field_gt call_tmp[1283166] call_tmp[1283171]))
    if call_tmp[1283176]
    {
      (1283074 'move' ret[1283044](1283073 'deref' 0))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283181] "expr temp" "maybe param" "maybe type" "temp"
    (1283184 'move' call_tmp[1283181](1283002 call isDefaultRectangular _mt[203] _arg1[1282778]))
    unknown call_tmp[1283186] "expr temp" "maybe param" "maybe type" "temp"
    (1283189 'move' call_tmp[1283186](1283006 call isDefaultRectangular _mt[203] _arg2[1282779]))
    unknown call_tmp[1283191] "expr temp" "maybe param" "maybe type" "temp"
    (1283194 'move' call_tmp[1283191](1283010 call chpl_field_lt call_tmp[1283181] call_tmp[1283186]))
    if call_tmp[1283191]
    {
      (1283079 'move' ret[1283044](1283078 'deref' 1))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    unknown call_tmp[1283196] "expr temp" "maybe param" "maybe type" "temp"
    (1283199 'move' call_tmp[1283196](1283016 call isDefaultRectangular _mt[203] _arg1[1282778]))
    unknown call_tmp[1283201] "expr temp" "maybe param" "maybe type" "temp"
    (1283204 'move' call_tmp[1283201](1283020 call isDefaultRectangular _mt[203] _arg2[1282779]))
    unknown call_tmp[1283206] "expr temp" "maybe param" "maybe type" "temp"
    (1283209 'move' call_tmp[1283206](1283024 call chpl_field_gt call_tmp[1283196] call_tmp[1283201]))
    if call_tmp[1283206]
    {
      (1283084 'move' ret[1283044](1283083 'deref' 0))
      gotoReturn _end_<=[1283042] _end_<=[1283042]
    }
    (1283089 'move' ret[1283044](1283088 'deref' 1))
    label _end_<=[1283042]
    (1283046 return ret[1283044])
  }
  where {
    unknown call_tmp[1283211] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1283214 'move' call_tmp[1283211](1282782 'typeof' _arg1[1282778]))
    unknown call_tmp[1283216] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1283219 'move' call_tmp[1283216](1282784 'typeof' _arg2[1282779]))
    unknown call_tmp[1283221] "expr temp" "maybe param" "maybe type" "temp"
    (1283224 'move' call_tmp[1283221](1282786 call == call_tmp[1283211] call_tmp[1283216]))
    unknown call_tmp[1283226] "expr temp" "maybe param" "maybe type" "temp"
    (1283229 'move' call_tmp[1283226](1282912 call chpl_fields_are_comparable[1282788] _arg1[1282778] _arg2[1282779]))
    (1282916 '&' call_tmp[1283221] call_tmp[1283226])
  }
  function chpl_fields_are_comparable[1283247](arg _arg1[1283249]:_serialized_domain[288482](?), arg _arg2[1283250]:_serialized_domain[288482](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1283299]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1283306] "expr temp" "maybe param" "maybe type" "temp"
    (1283309 'move' call_tmp[1283306](1283253 call rank _mt[203] _arg1[1283249]))
    unknown call_tmp[1283311] "expr temp" "maybe param" "maybe type" "temp"
    (1283314 'move' call_tmp[1283311](1283257 call rank _mt[203] _arg2[1283250]))
    unknown call_tmp[1283316] "expr temp" "maybe param" "maybe type" "temp"
    (1283319 'move' call_tmp[1283316](1283261 'call resolves' c">" call_tmp[1283306] call_tmp[1283311]))
    unknown call_tmp[1283321] "expr temp" "maybe param" "maybe type" "temp"
    (1283324 'move' call_tmp[1283321](1283263 call strides _mt[203] _arg1[1283249]))
    unknown call_tmp[1283326] "expr temp" "maybe param" "maybe type" "temp"
    (1283329 'move' call_tmp[1283326](1283267 call strides _mt[203] _arg2[1283250]))
    unknown call_tmp[1283331] "expr temp" "maybe param" "maybe type" "temp"
    (1283334 'move' call_tmp[1283331](1283271 'call resolves' c">" call_tmp[1283321] call_tmp[1283326]))
    unknown call_tmp[1283336] "expr temp" "maybe param" "maybe type" "temp"
    (1283339 'move' call_tmp[1283336](1283273 call dims _mt[203] _arg1[1283249]))
    unknown call_tmp[1283341] "expr temp" "maybe param" "maybe type" "temp"
    (1283344 'move' call_tmp[1283341](1283277 call dims _mt[203] _arg2[1283250]))
    unknown call_tmp[1283346] "expr temp" "maybe param" "maybe type" "temp"
    (1283349 'move' call_tmp[1283346](1283281 'call resolves' c">" call_tmp[1283336] call_tmp[1283341]))
    unknown call_tmp[1283351] "expr temp" "maybe param" "maybe type" "temp"
    (1283354 'move' call_tmp[1283351](1283283 call isDefaultRectangular _mt[203] _arg1[1283249]))
    unknown call_tmp[1283356] "expr temp" "maybe param" "maybe type" "temp"
    (1283359 'move' call_tmp[1283356](1283287 call isDefaultRectangular _mt[203] _arg2[1283250]))
    unknown call_tmp[1283361] "expr temp" "maybe param" "maybe type" "temp"
    (1283364 'move' call_tmp[1283361](1283291 'call resolves' c">" call_tmp[1283351] call_tmp[1283356]))
    unknown call_tmp[1283366] "expr temp" "maybe param" "maybe type" "temp"
    (1283369 'move' call_tmp[1283366](1283293 '&' call_tmp[1283316] call_tmp[1283331] call_tmp[1283346] call_tmp[1283361]))
    (1283304 'move' ret[1283299](1283303 'deref' call_tmp[1283366]))
    (1283301 return ret[1283299])
  }
  function _serialized_domain[288482](?).>[1283231](arg _mt[1283233]:_MT[201], arg this[1283235]:_serialized_domain[288482](?), arg _arg1[1283237]:_serialized_domain[288482](?), arg _arg2[1283238]:_serialized_domain[288482](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1283503]:bool[19] "RVV" "temp"
    unknown call_tmp[1283550] "expr temp" "maybe param" "maybe type" "temp"
    (1283553 'move' call_tmp[1283550](1283377 call rank _mt[203] _arg1[1283237]))
    unknown call_tmp[1283555] "expr temp" "maybe param" "maybe type" "temp"
    (1283558 'move' call_tmp[1283555](1283381 call rank _mt[203] _arg2[1283238]))
    unknown call_tmp[1283560] "expr temp" "maybe param" "maybe type" "temp"
    (1283563 'move' call_tmp[1283560](1283385 call chpl_field_gt call_tmp[1283550] call_tmp[1283555]))
    if call_tmp[1283560]
    {
      (1283508 'move' ret[1283503](1283507 'deref' 1))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283565] "expr temp" "maybe param" "maybe type" "temp"
    (1283568 'move' call_tmp[1283565](1283391 call rank _mt[203] _arg1[1283237]))
    unknown call_tmp[1283570] "expr temp" "maybe param" "maybe type" "temp"
    (1283573 'move' call_tmp[1283570](1283395 call rank _mt[203] _arg2[1283238]))
    unknown call_tmp[1283575] "expr temp" "maybe param" "maybe type" "temp"
    (1283578 'move' call_tmp[1283575](1283399 call chpl_field_lt call_tmp[1283565] call_tmp[1283570]))
    if call_tmp[1283575]
    {
      (1283513 'move' ret[1283503](1283512 'deref' 0))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283580] "expr temp" "maybe param" "maybe type" "temp"
    (1283583 'move' call_tmp[1283580](1283405 call strides _mt[203] _arg1[1283237]))
    unknown call_tmp[1283585] "expr temp" "maybe param" "maybe type" "temp"
    (1283588 'move' call_tmp[1283585](1283409 call strides _mt[203] _arg2[1283238]))
    unknown call_tmp[1283590] "expr temp" "maybe param" "maybe type" "temp"
    (1283593 'move' call_tmp[1283590](1283413 call chpl_field_gt call_tmp[1283580] call_tmp[1283585]))
    if call_tmp[1283590]
    {
      (1283518 'move' ret[1283503](1283517 'deref' 1))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283595] "expr temp" "maybe param" "maybe type" "temp"
    (1283598 'move' call_tmp[1283595](1283419 call strides _mt[203] _arg1[1283237]))
    unknown call_tmp[1283600] "expr temp" "maybe param" "maybe type" "temp"
    (1283603 'move' call_tmp[1283600](1283423 call strides _mt[203] _arg2[1283238]))
    unknown call_tmp[1283605] "expr temp" "maybe param" "maybe type" "temp"
    (1283608 'move' call_tmp[1283605](1283427 call chpl_field_lt call_tmp[1283595] call_tmp[1283600]))
    if call_tmp[1283605]
    {
      (1283523 'move' ret[1283503](1283522 'deref' 0))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283610] "expr temp" "maybe param" "maybe type" "temp"
    (1283613 'move' call_tmp[1283610](1283433 call dims _mt[203] _arg1[1283237]))
    unknown call_tmp[1283615] "expr temp" "maybe param" "maybe type" "temp"
    (1283618 'move' call_tmp[1283615](1283437 call dims _mt[203] _arg2[1283238]))
    unknown call_tmp[1283620] "expr temp" "maybe param" "maybe type" "temp"
    (1283623 'move' call_tmp[1283620](1283441 call chpl_field_gt call_tmp[1283610] call_tmp[1283615]))
    if call_tmp[1283620]
    {
      (1283528 'move' ret[1283503](1283527 'deref' 1))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283625] "expr temp" "maybe param" "maybe type" "temp"
    (1283628 'move' call_tmp[1283625](1283447 call dims _mt[203] _arg1[1283237]))
    unknown call_tmp[1283630] "expr temp" "maybe param" "maybe type" "temp"
    (1283633 'move' call_tmp[1283630](1283451 call dims _mt[203] _arg2[1283238]))
    unknown call_tmp[1283635] "expr temp" "maybe param" "maybe type" "temp"
    (1283638 'move' call_tmp[1283635](1283455 call chpl_field_lt call_tmp[1283625] call_tmp[1283630]))
    if call_tmp[1283635]
    {
      (1283533 'move' ret[1283503](1283532 'deref' 0))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283640] "expr temp" "maybe param" "maybe type" "temp"
    (1283643 'move' call_tmp[1283640](1283461 call isDefaultRectangular _mt[203] _arg1[1283237]))
    unknown call_tmp[1283645] "expr temp" "maybe param" "maybe type" "temp"
    (1283648 'move' call_tmp[1283645](1283465 call isDefaultRectangular _mt[203] _arg2[1283238]))
    unknown call_tmp[1283650] "expr temp" "maybe param" "maybe type" "temp"
    (1283653 'move' call_tmp[1283650](1283469 call chpl_field_gt call_tmp[1283640] call_tmp[1283645]))
    if call_tmp[1283650]
    {
      (1283538 'move' ret[1283503](1283537 'deref' 1))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    unknown call_tmp[1283655] "expr temp" "maybe param" "maybe type" "temp"
    (1283658 'move' call_tmp[1283655](1283475 call isDefaultRectangular _mt[203] _arg1[1283237]))
    unknown call_tmp[1283660] "expr temp" "maybe param" "maybe type" "temp"
    (1283663 'move' call_tmp[1283660](1283479 call isDefaultRectangular _mt[203] _arg2[1283238]))
    unknown call_tmp[1283665] "expr temp" "maybe param" "maybe type" "temp"
    (1283668 'move' call_tmp[1283665](1283483 call chpl_field_lt call_tmp[1283655] call_tmp[1283660]))
    if call_tmp[1283665]
    {
      (1283543 'move' ret[1283503](1283542 'deref' 0))
      gotoReturn _end_>[1283501] _end_>[1283501]
    }
    (1283548 'move' ret[1283503](1283547 'deref' 0))
    label _end_>[1283501]
    (1283505 return ret[1283503])
  }
  where {
    unknown call_tmp[1283670] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1283673 'move' call_tmp[1283670](1283241 'typeof' _arg1[1283237]))
    unknown call_tmp[1283675] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1283678 'move' call_tmp[1283675](1283243 'typeof' _arg2[1283238]))
    unknown call_tmp[1283680] "expr temp" "maybe param" "maybe type" "temp"
    (1283683 'move' call_tmp[1283680](1283245 call == call_tmp[1283670] call_tmp[1283675]))
    unknown call_tmp[1283685] "expr temp" "maybe param" "maybe type" "temp"
    (1283688 'move' call_tmp[1283685](1283371 call chpl_fields_are_comparable[1283247] _arg1[1283237] _arg2[1283238]))
    (1283375 '&' call_tmp[1283680] call_tmp[1283685])
  }
  function chpl_fields_are_comparable[1283706](arg _arg1[1283708]:_serialized_domain[288482](?), arg _arg2[1283709]:_serialized_domain[288482](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1283758]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1283765] "expr temp" "maybe param" "maybe type" "temp"
    (1283768 'move' call_tmp[1283765](1283712 call rank _mt[203] _arg1[1283708]))
    unknown call_tmp[1283770] "expr temp" "maybe param" "maybe type" "temp"
    (1283773 'move' call_tmp[1283770](1283716 call rank _mt[203] _arg2[1283709]))
    unknown call_tmp[1283775] "expr temp" "maybe param" "maybe type" "temp"
    (1283778 'move' call_tmp[1283775](1283720 'call resolves' c">=" call_tmp[1283765] call_tmp[1283770]))
    unknown call_tmp[1283780] "expr temp" "maybe param" "maybe type" "temp"
    (1283783 'move' call_tmp[1283780](1283722 call strides _mt[203] _arg1[1283708]))
    unknown call_tmp[1283785] "expr temp" "maybe param" "maybe type" "temp"
    (1283788 'move' call_tmp[1283785](1283726 call strides _mt[203] _arg2[1283709]))
    unknown call_tmp[1283790] "expr temp" "maybe param" "maybe type" "temp"
    (1283793 'move' call_tmp[1283790](1283730 'call resolves' c">=" call_tmp[1283780] call_tmp[1283785]))
    unknown call_tmp[1283795] "expr temp" "maybe param" "maybe type" "temp"
    (1283798 'move' call_tmp[1283795](1283732 call dims _mt[203] _arg1[1283708]))
    unknown call_tmp[1283800] "expr temp" "maybe param" "maybe type" "temp"
    (1283803 'move' call_tmp[1283800](1283736 call dims _mt[203] _arg2[1283709]))
    unknown call_tmp[1283805] "expr temp" "maybe param" "maybe type" "temp"
    (1283808 'move' call_tmp[1283805](1283740 'call resolves' c">=" call_tmp[1283795] call_tmp[1283800]))
    unknown call_tmp[1283810] "expr temp" "maybe param" "maybe type" "temp"
    (1283813 'move' call_tmp[1283810](1283742 call isDefaultRectangular _mt[203] _arg1[1283708]))
    unknown call_tmp[1283815] "expr temp" "maybe param" "maybe type" "temp"
    (1283818 'move' call_tmp[1283815](1283746 call isDefaultRectangular _mt[203] _arg2[1283709]))
    unknown call_tmp[1283820] "expr temp" "maybe param" "maybe type" "temp"
    (1283823 'move' call_tmp[1283820](1283750 'call resolves' c">=" call_tmp[1283810] call_tmp[1283815]))
    unknown call_tmp[1283825] "expr temp" "maybe param" "maybe type" "temp"
    (1283828 'move' call_tmp[1283825](1283752 '&' call_tmp[1283775] call_tmp[1283790] call_tmp[1283805] call_tmp[1283820]))
    (1283763 'move' ret[1283758](1283762 'deref' call_tmp[1283825]))
    (1283760 return ret[1283758])
  }
  function _serialized_domain[288482](?).>=[1283690](arg _mt[1283692]:_MT[201], arg this[1283694]:_serialized_domain[288482](?), arg _arg1[1283696]:_serialized_domain[288482](?), arg _arg2[1283697]:_serialized_domain[288482](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1283962]:bool[19] "RVV" "temp"
    unknown call_tmp[1284009] "expr temp" "maybe param" "maybe type" "temp"
    (1284012 'move' call_tmp[1284009](1283836 call rank _mt[203] _arg1[1283696]))
    unknown call_tmp[1284014] "expr temp" "maybe param" "maybe type" "temp"
    (1284017 'move' call_tmp[1284014](1283840 call rank _mt[203] _arg2[1283697]))
    unknown call_tmp[1284019] "expr temp" "maybe param" "maybe type" "temp"
    (1284022 'move' call_tmp[1284019](1283844 call chpl_field_gt call_tmp[1284009] call_tmp[1284014]))
    if call_tmp[1284019]
    {
      (1283967 'move' ret[1283962](1283966 'deref' 1))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284024] "expr temp" "maybe param" "maybe type" "temp"
    (1284027 'move' call_tmp[1284024](1283850 call rank _mt[203] _arg1[1283696]))
    unknown call_tmp[1284029] "expr temp" "maybe param" "maybe type" "temp"
    (1284032 'move' call_tmp[1284029](1283854 call rank _mt[203] _arg2[1283697]))
    unknown call_tmp[1284034] "expr temp" "maybe param" "maybe type" "temp"
    (1284037 'move' call_tmp[1284034](1283858 call chpl_field_lt call_tmp[1284024] call_tmp[1284029]))
    if call_tmp[1284034]
    {
      (1283972 'move' ret[1283962](1283971 'deref' 0))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284039] "expr temp" "maybe param" "maybe type" "temp"
    (1284042 'move' call_tmp[1284039](1283864 call strides _mt[203] _arg1[1283696]))
    unknown call_tmp[1284044] "expr temp" "maybe param" "maybe type" "temp"
    (1284047 'move' call_tmp[1284044](1283868 call strides _mt[203] _arg2[1283697]))
    unknown call_tmp[1284049] "expr temp" "maybe param" "maybe type" "temp"
    (1284052 'move' call_tmp[1284049](1283872 call chpl_field_gt call_tmp[1284039] call_tmp[1284044]))
    if call_tmp[1284049]
    {
      (1283977 'move' ret[1283962](1283976 'deref' 1))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284054] "expr temp" "maybe param" "maybe type" "temp"
    (1284057 'move' call_tmp[1284054](1283878 call strides _mt[203] _arg1[1283696]))
    unknown call_tmp[1284059] "expr temp" "maybe param" "maybe type" "temp"
    (1284062 'move' call_tmp[1284059](1283882 call strides _mt[203] _arg2[1283697]))
    unknown call_tmp[1284064] "expr temp" "maybe param" "maybe type" "temp"
    (1284067 'move' call_tmp[1284064](1283886 call chpl_field_lt call_tmp[1284054] call_tmp[1284059]))
    if call_tmp[1284064]
    {
      (1283982 'move' ret[1283962](1283981 'deref' 0))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284069] "expr temp" "maybe param" "maybe type" "temp"
    (1284072 'move' call_tmp[1284069](1283892 call dims _mt[203] _arg1[1283696]))
    unknown call_tmp[1284074] "expr temp" "maybe param" "maybe type" "temp"
    (1284077 'move' call_tmp[1284074](1283896 call dims _mt[203] _arg2[1283697]))
    unknown call_tmp[1284079] "expr temp" "maybe param" "maybe type" "temp"
    (1284082 'move' call_tmp[1284079](1283900 call chpl_field_gt call_tmp[1284069] call_tmp[1284074]))
    if call_tmp[1284079]
    {
      (1283987 'move' ret[1283962](1283986 'deref' 1))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284084] "expr temp" "maybe param" "maybe type" "temp"
    (1284087 'move' call_tmp[1284084](1283906 call dims _mt[203] _arg1[1283696]))
    unknown call_tmp[1284089] "expr temp" "maybe param" "maybe type" "temp"
    (1284092 'move' call_tmp[1284089](1283910 call dims _mt[203] _arg2[1283697]))
    unknown call_tmp[1284094] "expr temp" "maybe param" "maybe type" "temp"
    (1284097 'move' call_tmp[1284094](1283914 call chpl_field_lt call_tmp[1284084] call_tmp[1284089]))
    if call_tmp[1284094]
    {
      (1283992 'move' ret[1283962](1283991 'deref' 0))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284099] "expr temp" "maybe param" "maybe type" "temp"
    (1284102 'move' call_tmp[1284099](1283920 call isDefaultRectangular _mt[203] _arg1[1283696]))
    unknown call_tmp[1284104] "expr temp" "maybe param" "maybe type" "temp"
    (1284107 'move' call_tmp[1284104](1283924 call isDefaultRectangular _mt[203] _arg2[1283697]))
    unknown call_tmp[1284109] "expr temp" "maybe param" "maybe type" "temp"
    (1284112 'move' call_tmp[1284109](1283928 call chpl_field_gt call_tmp[1284099] call_tmp[1284104]))
    if call_tmp[1284109]
    {
      (1283997 'move' ret[1283962](1283996 'deref' 1))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    unknown call_tmp[1284114] "expr temp" "maybe param" "maybe type" "temp"
    (1284117 'move' call_tmp[1284114](1283934 call isDefaultRectangular _mt[203] _arg1[1283696]))
    unknown call_tmp[1284119] "expr temp" "maybe param" "maybe type" "temp"
    (1284122 'move' call_tmp[1284119](1283938 call isDefaultRectangular _mt[203] _arg2[1283697]))
    unknown call_tmp[1284124] "expr temp" "maybe param" "maybe type" "temp"
    (1284127 'move' call_tmp[1284124](1283942 call chpl_field_lt call_tmp[1284114] call_tmp[1284119]))
    if call_tmp[1284124]
    {
      (1284002 'move' ret[1283962](1284001 'deref' 0))
      gotoReturn _end_>=[1283960] _end_>=[1283960]
    }
    (1284007 'move' ret[1283962](1284006 'deref' 1))
    label _end_>=[1283960]
    (1283964 return ret[1283962])
  }
  where {
    unknown call_tmp[1284129] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1284132 'move' call_tmp[1284129](1283700 'typeof' _arg1[1283696]))
    unknown call_tmp[1284134] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1284137 'move' call_tmp[1284134](1283702 'typeof' _arg2[1283697]))
    unknown call_tmp[1284139] "expr temp" "maybe param" "maybe type" "temp"
    (1284142 'move' call_tmp[1284139](1283704 call == call_tmp[1284129] call_tmp[1284134]))
    unknown call_tmp[1284144] "expr temp" "maybe param" "maybe type" "temp"
    (1284147 'move' call_tmp[1284144](1283830 call chpl_fields_are_comparable[1283706] _arg1[1283696] _arg2[1283697]))
    (1283834 '&' call_tmp[1284139] call_tmp[1284144])
  }
  type _serialized_domain[288482](?) unknown rank[288463] "param" unknown idxType[288467] "type variable" unknown strides[288470] "param" unknown dims[288474] unknown isDefaultRectangular[288478] "param"
  (396985 'used modules list'(287580 'import' HaltWrappers[518])(287628 'use' DSIUtil[99447])(287631 'use' ChapelArray[264652])(287638 'use' ChapelDistribution[273773])(287640 'use' ChapelRange[129915])(287641 'use' OS[15571])(287642 'use' CTypes[51217])(287643 'use' CTypes[51217])(287648 'use' ChapelDebugPrint[107066])(287650 'use' ChapelLocks[85420])(287651 'use' OwnedObject[80948])(287652 'use' IO[208303])(287655 'use' DefaultSparse[279711])(287657 'use' DefaultAssociative[286494])(287659 'use' ExternalArray[287575]))
}
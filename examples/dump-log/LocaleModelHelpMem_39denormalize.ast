AST dump for LocaleModelHelpMem after pass denormalize.
Module use list: ChapelStandard CTypes Reflection ChapelLocks String 

{
  function chpl__init_LocaleModelHelpMem[468567](const in arg _ln[9365541]:int(64)[10], in arg _fn[9365543]:int(32)[66]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_LocaleModelHelpMem_p[9309137]
    {
      goto _exit_chpl__init_LocaleModelHelpMem[9309174] _exit_chpl__init_LocaleModelHelpMem[9309174]
    }
    ref refIndentLevel[9309160]:int(32)[66] "temp"
    (9309158 call printModuleInit[386886] c"%*s\n" c"LocaleModelHelpMem" 18 _ln[9365541] _fn[9365543])
    (9309164 'move' refIndentLevel[9309160](9309163 'addr of' moduleInitLevel[386877]))
    (9309167 '+=' refIndentLevel[9309160] 1)
    (9309143 'move' chpl__init_LocaleModelHelpMem_p[9309137] 1)
    {
      (9305595 call chpl__init_CTypes[468360] _ln[9365541] _fn[9365543])
      (9305597 call chpl__init_Reflection[468315] _ln[9365541] _fn[9365543])
      (9305599 call chpl__init_ChapelLocks[468384] _ln[9365541] _fn[9365543])
      (9305601 call chpl__init_String[468339] _ln[9365541] _fn[9365543])
    }
    (9309170 '-=' refIndentLevel[9309160] 1)
    label _exit_chpl__init_LocaleModelHelpMem[9309174]
    (630884 return _void[46])
  }
  function chpl_memhook_md_num[308297]() : int(16)[61] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free"
  {
  }
  function chpl_here_alloc[308303](const in arg size[308308]:int(64)[10], const in arg md[308312]:int(16)[61], const in arg _ln[9364985]:int(64)[10], in arg _fn[9364987]:int(32)[66]) : c_ptr(void)[1465614] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7402997]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7402999]:owned IllegalArgumentError?[1471812] "temp"
    (7403002 call chpl_checkValue[1471704] size[308308] ret_tmp[7402999] _ln[9364985] _fn[9364987])
    (7403005 'move' call_tmp[7402997] ret_tmp[7402999])
    ref i_arg[7403010]:owned IllegalArgumentError?[1471812] "temp"
    (7403012 'move' i_arg[7403010](7403014 'set reference' call_tmp[7402997]))
    val call_tmp[7403016]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7403018 'move' call_tmp[7403016](7403021 call borrow[1479886] i_arg[7403010]))
    if(7403037 '!='(7403030 'cast' RootClass[236] call_tmp[7403016] _ln[9364985] _fn[9364987]) nil[32])
    {
      const-val call_tmp[7403042]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7403044]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7403046 'move' coerce_tmp[7403044](7403048 'cast' Error[85511] call_tmp[7403016] _ln[9364985] _fn[9364987]))
      (9338726 '_check_nil' coerce_tmp[7403044] _ln[9364985] _fn[9364987])
      val ret_tmp[7403057]:string[244] "temp"
      (7403059 'virtual method call' message[85497](7403055 'getcid' coerce_tmp[7403044]) coerce_tmp[7403044] ret_tmp[7403057] _ln[9364985] _fn[9364987])
      (7403064 'move' call_tmp[7403042] ret_tmp[7403057])
      (7403068 call safeCastCheckHalt[440] call_tmp[7403042] _ln[9364985] _fn[9364987])
      ref i_x[7403070]:string[244] "temp"
      (7403072 'move' i_x[7403070](7403074 'set reference' call_tmp[7403042]))
      (7403077 call deinit[21354] i_x[7403070] _ln[9364985] _fn[9364987])
    }
    (7403081 call chpl__autoDestroy[3929258] call_tmp[7402997] _ln[9364985] _fn[9364987])
    const-val call_tmp[7403083]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7403085 'move' call_tmp[7403083](7403087 'cast' uint(64)[86] size[308308] _ln[9364985] _fn[9364987]))
    const-val call_tmp[936841]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
    (936844 'move' call_tmp[936841](308348 call chpl_memhook_md_num[308297]))
    val call_tmp[936851]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (936854 'move' call_tmp[936851](308337 call chpl_mem_alloc[308319] call_tmp[7403083](9529993 'cast' int(16)[61](7498521 '+' md[308312] call_tmp[936841])) _ln[9364985] _fn[9364987]))
    (630787 return call_tmp[936851])
  }
  function chpl_here_alloc[1819901](const in arg size[1819903]:uint(64)[86], const in arg md[1819907]:int(16)[61], const in arg _ln[9369585]:int(64)[10], in arg _fn[9369587]:int(32)[66]) : c_ptr(void)[1465614] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7853737]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7853739]:owned IllegalArgumentError?[1471812] "temp"
    (7853742 call chpl_checkValue[1818599] size[1819903] ret_tmp[7853739] _ln[9369585] _fn[9369587])
    (7853745 'move' call_tmp[7853737] ret_tmp[7853739])
    ref i_arg[7853750]:owned IllegalArgumentError?[1471812] "temp"
    (7853752 'move' i_arg[7853750](7853754 'set reference' call_tmp[7853737]))
    val call_tmp[7853756]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853758 'move' call_tmp[7853756](7853761 call borrow[1479886] i_arg[7853750]))
    if(7853777 '!='(7853770 'cast' RootClass[236] call_tmp[7853756] _ln[9369585] _fn[9369587]) nil[32])
    {
      const-val call_tmp[7853782]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7853784]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7853786 'move' coerce_tmp[7853784](7853788 'cast' Error[85511] call_tmp[7853756] _ln[9369585] _fn[9369587]))
      (9342304 '_check_nil' coerce_tmp[7853784] _ln[9369585] _fn[9369587])
      val ret_tmp[7853797]:string[244] "temp"
      (7853799 'virtual method call' message[85497](7853795 'getcid' coerce_tmp[7853784]) coerce_tmp[7853784] ret_tmp[7853797] _ln[9369585] _fn[9369587])
      (7853804 'move' call_tmp[7853782] ret_tmp[7853797])
      (7853808 call safeCastCheckHalt[440] call_tmp[7853782] _ln[9369585] _fn[9369587])
      ref i_x[7853810]:string[244] "temp"
      (7853812 'move' i_x[7853810](7853814 'set reference' call_tmp[7853782]))
      (7853817 call deinit[21354] i_x[7853810] _ln[9369585] _fn[9369587])
    }
    (7853821 call chpl__autoDestroy[3929258] call_tmp[7853737] _ln[9369585] _fn[9369587])
    const-val call_tmp[7853823]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853825 'move' call_tmp[7853823] size[1819903])
    const-val call_tmp[1819955]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
    (1819957 'move' call_tmp[1819955](1819960 call chpl_memhook_md_num[308297]))
    val call_tmp[1819969]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (1819971 'move' call_tmp[1819969](1819974 call chpl_mem_alloc[1819929] call_tmp[7853823](9530249 'cast' int(16)[61](7498551 '+' md[1819907] call_tmp[1819955])) _ln[9369585] _fn[9369587]))
    (1819989 return call_tmp[1819969])
  }
  function chpl_here_aligned_alloc[1827971](const in arg alignment[1827973]:uint(64)[86], const in arg size[1827975]:uint(64)[86], const in arg md[1827979]:int(16)[61], const in arg _ln[9369607]:int(64)[10], in arg _fn[9369609]:int(32)[66]) : c_ptr(void)[1465614] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7853831]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7853833]:owned IllegalArgumentError?[1471812] "temp"
    (7853836 call chpl_checkValue[1818599] alignment[1827973] ret_tmp[7853833] _ln[9369607] _fn[9369609])
    (7853839 'move' call_tmp[7853831] ret_tmp[7853833])
    ref i_arg[7853844]:owned IllegalArgumentError?[1471812] "temp"
    (7853846 'move' i_arg[7853844](7853848 'set reference' call_tmp[7853831]))
    val call_tmp[7853850]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853852 'move' call_tmp[7853850](7853855 call borrow[1479886] i_arg[7853844]))
    if(7853871 '!='(7853864 'cast' RootClass[236] call_tmp[7853850] _ln[9369607] _fn[9369609]) nil[32])
    {
      const-val call_tmp[7853876]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7853878]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7853880 'move' coerce_tmp[7853878](7853882 'cast' Error[85511] call_tmp[7853850] _ln[9369607] _fn[9369609]))
      (9342306 '_check_nil' coerce_tmp[7853878] _ln[9369607] _fn[9369609])
      val ret_tmp[7853891]:string[244] "temp"
      (7853893 'virtual method call' message[85497](7853889 'getcid' coerce_tmp[7853878]) coerce_tmp[7853878] ret_tmp[7853891] _ln[9369607] _fn[9369609])
      (7853898 'move' call_tmp[7853876] ret_tmp[7853891])
      (7853902 call safeCastCheckHalt[440] call_tmp[7853876] _ln[9369607] _fn[9369609])
      ref i_x[7853904]:string[244] "temp"
      (7853906 'move' i_x[7853904](7853908 'set reference' call_tmp[7853876]))
      (7853911 call deinit[21354] i_x[7853904] _ln[9369607] _fn[9369609])
    }
    (7853915 call chpl__autoDestroy[3929258] call_tmp[7853831] _ln[9369607] _fn[9369609])
    const-val call_tmp[7853917]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853919 'move' call_tmp[7853917] alignment[1827973])
    const-val call_tmp[7853925]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7853927]:owned IllegalArgumentError?[1471812] "temp"
    (7853930 call chpl_checkValue[1818599] size[1827975] ret_tmp[7853927] _ln[9369607] _fn[9369609])
    (7853933 'move' call_tmp[7853925] ret_tmp[7853927])
    ref i_arg[7853938]:owned IllegalArgumentError?[1471812] "temp"
    (7853940 'move' i_arg[7853938](7853942 'set reference' call_tmp[7853925]))
    val call_tmp[7853944]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853946 'move' call_tmp[7853944](7853949 call borrow[1479886] i_arg[7853938]))
    if(7853965 '!='(7853958 'cast' RootClass[236] call_tmp[7853944] _ln[9369607] _fn[9369609]) nil[32])
    {
      const-val call_tmp[7853970]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7853972]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7853974 'move' coerce_tmp[7853972](7853976 'cast' Error[85511] call_tmp[7853944] _ln[9369607] _fn[9369609]))
      (9342308 '_check_nil' coerce_tmp[7853972] _ln[9369607] _fn[9369609])
      val ret_tmp[7853985]:string[244] "temp"
      (7853987 'virtual method call' message[85497](7853983 'getcid' coerce_tmp[7853972]) coerce_tmp[7853972] ret_tmp[7853985] _ln[9369607] _fn[9369609])
      (7853992 'move' call_tmp[7853970] ret_tmp[7853985])
      (7853996 call safeCastCheckHalt[440] call_tmp[7853970] _ln[9369607] _fn[9369609])
      ref i_x[7853998]:string[244] "temp"
      (7854000 'move' i_x[7853998](7854002 'set reference' call_tmp[7853970]))
      (7854005 call deinit[21354] i_x[7853998] _ln[9369607] _fn[9369609])
    }
    (7854009 call chpl__autoDestroy[3929258] call_tmp[7853925] _ln[9369607] _fn[9369609])
    const-val call_tmp[7854011]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7854013 'move' call_tmp[7854011] size[1827975])
    const-val call_tmp[1828043]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
    (1828045 'move' call_tmp[1828043](1828048 call chpl_memhook_md_num[308297]))
    val call_tmp[1828057]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (1828059 'move' call_tmp[1828057](1828062 call chpl_mem_memalign[1828003] call_tmp[7853917] call_tmp[7854011](9530251 'cast' int(16)[61](7498561 '+' md[1827979] call_tmp[1828043])) _ln[9369607] _fn[9369609]))
    (1828078 return call_tmp[1828057])
  }
  function chpl_here_calloc[1818371](const in arg size[1818373]:uint(64)[86], const in arg number[1818375]:int(64)[10], const in arg md[1818379]:int(16)[61], const in arg _ln[9369563]:int(64)[10], in arg _fn[9369565]:int(32)[66]) : c_ptr(void)[1465614] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7403573]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7403575]:owned IllegalArgumentError?[1471812] "temp"
    (7403578 call chpl_checkValue[1471704] number[1818375] ret_tmp[7403575] _ln[9369563] _fn[9369565])
    (7403581 'move' call_tmp[7403573] ret_tmp[7403575])
    ref i_arg[7403586]:owned IllegalArgumentError?[1471812] "temp"
    (7403588 'move' i_arg[7403586](7403590 'set reference' call_tmp[7403573]))
    val call_tmp[7403592]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7403594 'move' call_tmp[7403592](7403597 call borrow[1479886] i_arg[7403586]))
    if(7403613 '!='(7403606 'cast' RootClass[236] call_tmp[7403592] _ln[9369563] _fn[9369565]) nil[32])
    {
      const-val call_tmp[7403618]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7403620]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7403622 'move' coerce_tmp[7403620](7403624 'cast' Error[85511] call_tmp[7403592] _ln[9369563] _fn[9369565]))
      (9338730 '_check_nil' coerce_tmp[7403620] _ln[9369563] _fn[9369565])
      val ret_tmp[7403633]:string[244] "temp"
      (7403635 'virtual method call' message[85497](7403631 'getcid' coerce_tmp[7403620]) coerce_tmp[7403620] ret_tmp[7403633] _ln[9369563] _fn[9369565])
      (7403640 'move' call_tmp[7403618] ret_tmp[7403633])
      (7403644 call safeCastCheckHalt[440] call_tmp[7403618] _ln[9369563] _fn[9369565])
      ref i_x[7403646]:string[244] "temp"
      (7403648 'move' i_x[7403646](7403650 'set reference' call_tmp[7403618]))
      (7403653 call deinit[21354] i_x[7403646] _ln[9369563] _fn[9369565])
    }
    (7403657 call chpl__autoDestroy[3929258] call_tmp[7403573] _ln[9369563] _fn[9369565])
    const-val call_tmp[7403659]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7403661 'move' call_tmp[7403659](7403663 'cast' uint(64)[86] number[1818375] _ln[9369563] _fn[9369565]))
    const-val call_tmp[7853643]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7853645]:owned IllegalArgumentError?[1471812] "temp"
    (7853648 call chpl_checkValue[1818599] size[1818373] ret_tmp[7853645] _ln[9369563] _fn[9369565])
    (7853651 'move' call_tmp[7853643] ret_tmp[7853645])
    ref i_arg[7853656]:owned IllegalArgumentError?[1471812] "temp"
    (7853658 'move' i_arg[7853656](7853660 'set reference' call_tmp[7853643]))
    val call_tmp[7853662]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853664 'move' call_tmp[7853662](7853667 call borrow[1479886] i_arg[7853656]))
    if(7853683 '!='(7853676 'cast' RootClass[236] call_tmp[7853662] _ln[9369563] _fn[9369565]) nil[32])
    {
      const-val call_tmp[7853688]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7853690]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7853692 'move' coerce_tmp[7853690](7853694 'cast' Error[85511] call_tmp[7853662] _ln[9369563] _fn[9369565]))
      (9342302 '_check_nil' coerce_tmp[7853690] _ln[9369563] _fn[9369565])
      val ret_tmp[7853703]:string[244] "temp"
      (7853705 'virtual method call' message[85497](7853701 'getcid' coerce_tmp[7853690]) coerce_tmp[7853690] ret_tmp[7853703] _ln[9369563] _fn[9369565])
      (7853710 'move' call_tmp[7853688] ret_tmp[7853703])
      (7853714 call safeCastCheckHalt[440] call_tmp[7853688] _ln[9369563] _fn[9369565])
      ref i_x[7853716]:string[244] "temp"
      (7853718 'move' i_x[7853716](7853720 'set reference' call_tmp[7853688]))
      (7853723 call deinit[21354] i_x[7853716] _ln[9369563] _fn[9369565])
    }
    (7853727 call chpl__autoDestroy[3929258] call_tmp[7853643] _ln[9369563] _fn[9369565])
    const-val call_tmp[7853729]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853731 'move' call_tmp[7853729] size[1818373])
    const-val call_tmp[1818443]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
    (1818445 'move' call_tmp[1818443](1818448 call chpl_memhook_md_num[308297]))
    val call_tmp[1818457]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (1818459 'move' call_tmp[1818457](1818462 call chpl_mem_calloc[1818403] call_tmp[7403659] call_tmp[7853729](9530247 'cast' int(16)[61](7498541 '+' md[1818379] call_tmp[1818443])) _ln[9369563] _fn[9369565]))
    (1818478 return call_tmp[1818457])
  }
  function chpl_here_realloc[1496171](const in arg ptr[1496175]:c_ptr(void)[1465614], const in arg size[1496177]:int(64)[10], const in arg md[1496181]:int(16)[61], const in arg _ln[9366505]:int(64)[10], in arg _fn[9366507]:int(32)[66]) : c_ptr(void)[1465614] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7403189]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7403191]:owned IllegalArgumentError?[1471812] "temp"
    (7403194 call chpl_checkValue[1471704] size[1496177] ret_tmp[7403191] _ln[9366505] _fn[9366507])
    (7403197 'move' call_tmp[7403189] ret_tmp[7403191])
    ref i_arg[7403202]:owned IllegalArgumentError?[1471812] "temp"
    (7403204 'move' i_arg[7403202](7403206 'set reference' call_tmp[7403189]))
    val call_tmp[7403208]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7403210 'move' call_tmp[7403208](7403213 call borrow[1479886] i_arg[7403202]))
    if(7403229 '!='(7403222 'cast' RootClass[236] call_tmp[7403208] _ln[9366505] _fn[9366507]) nil[32])
    {
      const-val call_tmp[7403234]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7403236]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7403238 'move' coerce_tmp[7403236](7403240 'cast' Error[85511] call_tmp[7403208] _ln[9366505] _fn[9366507]))
      (9338728 '_check_nil' coerce_tmp[7403236] _ln[9366505] _fn[9366507])
      val ret_tmp[7403249]:string[244] "temp"
      (7403251 'virtual method call' message[85497](7403247 'getcid' coerce_tmp[7403236]) coerce_tmp[7403236] ret_tmp[7403249] _ln[9366505] _fn[9366507])
      (7403256 'move' call_tmp[7403234] ret_tmp[7403249])
      (7403260 call safeCastCheckHalt[440] call_tmp[7403234] _ln[9366505] _fn[9366507])
      ref i_x[7403262]:string[244] "temp"
      (7403264 'move' i_x[7403262](7403266 'set reference' call_tmp[7403234]))
      (7403269 call deinit[21354] i_x[7403262] _ln[9366505] _fn[9366507])
    }
    (7403273 call chpl__autoDestroy[3929258] call_tmp[7403189] _ln[9366505] _fn[9366507])
    const-val call_tmp[7403275]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7403277 'move' call_tmp[7403275](7403279 'cast' uint(64)[86] size[1496177] _ln[9366505] _fn[9366507]))
    const-val call_tmp[1496250]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
    (1496252 'move' call_tmp[1496250](1496255 call chpl_memhook_md_num[308297]))
    val call_tmp[1496264]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (1496266 'move' call_tmp[1496264](1496269 call chpl_mem_realloc[1496203] ptr[1496175] call_tmp[7403275](9530077 'cast' int(16)[61](7498531 '+' md[1496181] call_tmp[1496250])) _ln[9366505] _fn[9366507]))
    (1496285 return call_tmp[1496264])
  }
  function chpl_here_good_alloc_size[1471515](const in arg min_size[1471517]:int(64)[10], const in arg _ln[9366393]:int(64)[10], in arg _fn[9366395]:int(32)[66]) : int(64)[10] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7402805]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7402807]:owned IllegalArgumentError?[1471812] "temp"
    (7402810 call chpl_checkValue[1471704] min_size[1471517] ret_tmp[7402807] _ln[9366393] _fn[9366395])
    (7402813 'move' call_tmp[7402805] ret_tmp[7402807])
    ref i_arg[7402818]:owned IllegalArgumentError?[1471812] "temp"
    (7402820 'move' i_arg[7402818](7402822 'set reference' call_tmp[7402805]))
    val call_tmp[7402824]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7402826 'move' call_tmp[7402824](7402829 call borrow[1479886] i_arg[7402818]))
    if(7402845 '!='(7402838 'cast' RootClass[236] call_tmp[7402824] _ln[9366393] _fn[9366395]) nil[32])
    {
      const-val call_tmp[7402850]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7402852]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7402854 'move' coerce_tmp[7402852](7402856 'cast' Error[85511] call_tmp[7402824] _ln[9366393] _fn[9366395]))
      (9338724 '_check_nil' coerce_tmp[7402852] _ln[9366393] _fn[9366395])
      val ret_tmp[7402865]:string[244] "temp"
      (7402867 'virtual method call' message[85497](7402863 'getcid' coerce_tmp[7402852]) coerce_tmp[7402852] ret_tmp[7402865] _ln[9366393] _fn[9366395])
      (7402872 'move' call_tmp[7402850] ret_tmp[7402865])
      (7402876 call safeCastCheckHalt[440] call_tmp[7402850] _ln[9366393] _fn[9366395])
      ref i_x[7402878]:string[244] "temp"
      (7402880 'move' i_x[7402878](7402882 'set reference' call_tmp[7402850]))
      (7402885 call deinit[21354] i_x[7402878] _ln[9366393] _fn[9366395])
    }
    (7402889 call chpl__autoDestroy[3929258] call_tmp[7402805] _ln[9366393] _fn[9366395])
    const-val call_tmp[1471550]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1471552 'move' call_tmp[1471550](1471555 call chpl_mem_good_alloc_size[1471530](7402895 'cast' uint(64)[86] min_size[1471517] _ln[9366393] _fn[9366395]) _ln[9366393] _fn[9366395]))
    const-val call_tmp[7638288]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7638290]:owned IllegalArgumentError?[1471812] "temp"
    (7638293 call chpl_checkValue[1480659] call_tmp[1471550] ret_tmp[7638290] _ln[9366393] _fn[9366395])
    (7638296 'move' call_tmp[7638288] ret_tmp[7638290])
    ref i_arg[7638301]:owned IllegalArgumentError?[1471812] "temp"
    (7638303 'move' i_arg[7638301](7638305 'set reference' call_tmp[7638288]))
    val call_tmp[7638307]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7638309 'move' call_tmp[7638307](7638312 call borrow[1479886] i_arg[7638301]))
    if(7638328 '!='(7638321 'cast' RootClass[236] call_tmp[7638307] _ln[9366393] _fn[9366395]) nil[32])
    {
      const-val call_tmp[7638333]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7638335]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7638337 'move' coerce_tmp[7638335](7638339 'cast' Error[85511] call_tmp[7638307] _ln[9366393] _fn[9366395]))
      (9340728 '_check_nil' coerce_tmp[7638335] _ln[9366393] _fn[9366395])
      val ret_tmp[7638348]:string[244] "temp"
      (7638350 'virtual method call' message[85497](7638346 'getcid' coerce_tmp[7638335]) coerce_tmp[7638335] ret_tmp[7638348] _ln[9366393] _fn[9366395])
      (7638355 'move' call_tmp[7638333] ret_tmp[7638348])
      (7638359 call safeCastCheckHalt[440] call_tmp[7638333] _ln[9366393] _fn[9366395])
      ref i_x[7638361]:string[244] "temp"
      (7638363 'move' i_x[7638361](7638365 'set reference' call_tmp[7638333]))
      (7638368 call deinit[21354] i_x[7638361] _ln[9366393] _fn[9366395])
    }
    (7638372 call chpl__autoDestroy[3929258] call_tmp[7638288] _ln[9366393] _fn[9366395])
    const-val call_tmp[7638374]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7638376 'move' call_tmp[7638374](7638378 'cast' int(64)[10] call_tmp[1471550] _ln[9366393] _fn[9366395]))
    (1471584 return call_tmp[7638374])
  }
  function chpl_here_free[308686](const in arg ptr[308691]:c_ptr(void)[1465614], const in arg _ln[9501493]:int(64)[10], in arg _fn[9501495]:int(32)[66]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[630880]:void[4] "dead after last mention" "RVV" "temp"
    (308709 call chpl_mem_free[308696] ptr[308691] _ln[9501493] _fn[9501495])
    (630882 return ret[630880])
  }
  function chpl_mem_alloc[308319](const in arg size[308322]:uint(64)[86], const in arg md[308326]:int(16)[61], const in arg _ln[9364997]:int(64)[10], in arg _fn[9364999]:int(32)[66]) : c_ptr(void)[1465614] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function chpl_mem_free[308696](const in arg ptr[308701]:c_ptr(void)[1465614], const in arg _ln[9365001]:int(64)[10], in arg _fn[9365003]:int(32)[66]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function chpl_mem_good_alloc_size[1471530](const in arg min_size[1471534]:uint(64)[86], const in arg _ln[9366413]:int(64)[10], in arg _fn[9366415]:int(32)[66]) : uint(64)[86] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function chpl_mem_realloc[1496203](const in arg ptr[1496209]:c_ptr(void)[1465614], const in arg size[1496213]:uint(64)[86], const in arg md[1496217]:int(16)[61], const in arg _ln[9366517]:int(64)[10], in arg _fn[9366519]:int(32)[66]) : c_ptr(void)[1465614] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function chpl_mem_calloc[1818403](const in arg number[1818407]:uint(64)[86], const in arg size[1818411]:uint(64)[86], const in arg md[1818415]:int(16)[61], const in arg _ln[9369581]:int(64)[10], in arg _fn[9369583]:int(32)[66]) : c_ptr(void)[1465614] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function chpl_mem_alloc[1819929](const in arg size[1819933]:uint(64)[86], const in arg md[1819937]:int(16)[61], const in arg _ln[9369595]:int(64)[10], in arg _fn[9369597]:int(32)[66]) : c_ptr(void)[1465614] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function chpl_mem_memalign[1828003](const in arg alignment[1828007]:uint(64)[86], const in arg size[1828011]:uint(64)[86], const in arg md[1828015]:int(16)[61], const in arg _ln[9369623]:int(64)[10], in arg _fn[9369625]:int(32)[66]) : c_ptr(void)[1465614] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
}
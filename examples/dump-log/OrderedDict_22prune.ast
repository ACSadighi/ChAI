AST dump for OrderedDict after pass prune.
Module use list: ChapelStandard List Map 

{
  function chpl__init_OrderedDict[468663]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (637599 return _void[46])
  }
  function _ref(dict(string,string))[3380641].chpl_forwarding_expr1[3386244](ref arg this[3386248]:_ref(dict(string,string))[3380641]) : _ref(map(string,string,false))[3283395] "compiler generated" "inline" "instantiated generic" "invisible fn" "maybe ref" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3386250]:_ref(map(string,string,false))[3283395] "dead after last mention" "RVV" "temp"
    (3386258 'move' ret[3386250](3386261 call table[3386267] this[3386248]))
    (3386264 return ret[3386250])
  }
  function dict(string,string)[3380632].init[3381805](ref arg this[3381809]:dict(string,string)[3380632], const  ref arg table[3381811]:map(string,string,false)[3283386], const  ref arg order[3381813]:list(string,false)[1950598]) : void[4] "compiler added where" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val _formal_tmp_table[3381946]:map(string,string,false)[3283386] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3381950 'move' _formal_tmp_table[3381946] table[3381811])
    const-val _formal_tmp_order[3381947]:list(string,false)[1950598] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3381954 'move' _formal_tmp_order[3381947] order[3381813])
    val keyType[3381861]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3381873]:string[244] "dead after last mention" "temp" "type variable"
    val call_tmp[3381885]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3381892]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3381899]:map(string,string,false)[3283386] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3381907]:map(string,string,false)[3283386] "dead after last mention" "temp"
    (5635505 '=' table[3381907] _formal_tmp_table[3381946])
    (3381909 'noop')
    (3381913 '.=' this[3381809] table[3380620] table[3381907])
    val call_tmp[3381918]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3381925]:list(string,false)[1950598] "dead after last mention" "maybe param" "temp" "type variable"
    val order[3381932]:list(string,false)[1950598] "dead after last mention" "temp"
    (5635508 '=' order[3381932] _formal_tmp_order[3381947])
    (3381934 'noop')
    (3381938 '.=' this[3381809] order[3380626] order[3381932])
    (3381943 return _void[46])
  }
  function dict(string,string)[3380632].init[3381222](ref arg this[3381226]:dict(string,string)[3380632], const  ref arg table[3381228]:map(string,string,false)[3283386]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_table[3381320]:map(string,string,false)[3283386] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3381323 'move' _formal_tmp_table[3381320] table[3381228])
    val call_tmp[3381234]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[3381241]:list(string,false)[1950598] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3381332]:list(string,false)[1950598] "dead at end of block" "delay instantiation" "temp"
    (3381335 call init[1950142] initTemp[3381332])
    (3381243 'move' call_tmp[3381241] initTemp[3381332])
    val ks[3381248]:list(string,false)[1950598] "dead at end of block" "delay instantiation" "insert auto destroy" "maybe copy elided"
    (3381250 'move' ks[3381248] call_tmp[3381241])
    {
      ref _indexOfInterest[3381255]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3381257]:_ic_keys__ref_map_string_string_F[3381529] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[3381259]:_ir_keys__ref_map_string_string_F[3381535] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5589702]:_ir_keys__ref_map_string_string_F[3381535] "temp"
      (3381267 call keys[3381349] _formal_tmp_table[3381320] ret_tmp[5589702])
      (5589705 'move' call_tmp[3381259] ret_tmp[5589702])
      (3381268 'move' _iterator[3381257](3381271 call _getIterator[3381544] call_tmp[3381259]))
      {
        val ret[6060331]:_ir_keys__ref_map_string_string_F[3381535] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[6060333]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[6060335]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead at end of block" "expr temp" "temp"
        const-ref call_tmp[6060337]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "temp"
        const-ref this[6060484]:_ref(map(string,string,false))[3283395] "temp"
        (6060489 'move' this[6060484](6060486 '.v' _iterator[3381257] F0_this[7087442]))
        (6060339 'move' call_tmp[6060337](6060342 call table[3344610] this[6060484]))
        const-val call_tmp[6060344]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[6060346]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "temp"
        (6060349 call allSlots[3344638] call_tmp[6060337] ret_tmp[6060346])
        (6060352 'move' call_tmp[6060344] ret_tmp[6060346])
        (6060355 'move' _iterator[6060335](6060358 call _getIterator[3344744] call_tmp[6060344]))
        const-ref table_ref[6060360]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "temp"
        const-ref this[6060491]:_ref(map(string,string,false))[3283395] "temp"
        (6060496 'move' this[6060491](6060493 '.v' _iterator[3381257] F0_this[7087442]))
        (6060362 'move' table_ref[6060360](6060365 call table[3344610] this[6060491]))
        {
          val ret[6392675]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[6392677]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[6392679]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[6392681]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          const-ref this[6393331]:_ref(chpl__hashtable(string,string))[3283450] "temp"
          (6393336 'move' this[6393331](6393333 '.v' _iterator[6060335] F0_this[7082328]))
          (6392683 'move' call_tmp[6392681](6392686 call tableSize[3340120] this[6393331]))
          const-val call_tmp[6392688]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[6392690]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (6392692 'move' coerce_tmp[6392690](6392694 'deref' call_tmp[6392681]))
          const-val ret_tmp[6392696]:_ir__allSlots[1946137] "temp"
          (6392699 call _allSlots[265237] coerce_tmp[6392690] ret_tmp[6392696])
          (6392702 'move' call_tmp[6392688] ret_tmp[6392696])
          (6392705 'move' _iterator[6392679](6392708 call _getIterator[1946146] call_tmp[6392688]))
          {
            val ret[6392711]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[6392713]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6392715]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6392717]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6392719]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
            const-val size[6392721]:int(64)[10] "temp"
            (6392723 'move' size[6392721](6392725 '.v' _iterator[6392679] F0_size[6829964]))
            (6392729 call chpl_direct_counted_range_iter[1468903] 0 size[6392721] ret_tmp[6392719])
            (6392733 'move' call_tmp[6392717] ret_tmp[6392719])
            (6392736 'move' _iterator[6392715](6392739 call _getIterator[1520079] call_tmp[6392717]))
            {
              val ret[6392742]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
              val tmp[6392744]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6392746]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6392748]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6392750]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6392752]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6392754]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6392756]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val _indexOfInterest[6392758]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6392760]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6392762]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6392764]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
              const-val low[6392766]:int(64)[10] "temp"
              (6392768 'move' low[6392766](6392770 '.v' _iterator[6392715] F0_low[6832410]))
              const-val count[6392773]:int(64)[10] "temp"
              (6392775 'move' count[6392773](6392777 '.v' _iterator[6392715] F1_count[6832414]))
              (6392781 call chpl_direct_counted_range_iter_helper[1469227] low[6392766] count[6392773] ret_tmp[6392764])
              (6392785 'move' call_tmp[6392762] ret_tmp[6392764])
              (6392788 'move' _iterator[6392760](6392791 call _getIterator[1519812] call_tmp[6392762]))
              {
                val ret[6392794]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                val tmp[6392796]:bool[19] "dead after last mention" "maybe param" "temp"
                val tmp[6392798]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6392800]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[6392802]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                val tmp[6392804]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6392806]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[6392808]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                val call_tmp[6392810]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[6392812]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6392814]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                const-val tmp[6392816]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val tmp[6392818]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6392820]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                const-val tmp[6392822]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6392824]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6392826]:int(64)[10] "temp"
                (6392828 'move' count[6392826](6392830 '.v' _iterator[6392760] F1_count[6834178]))
                (6392833 'move' call_tmp[6392824](6392836 call <[1469576] count[6392826] 0))
                (6392839 'move' tmp[6392822] call_tmp[6392824])
                (6392842 'move' tmp[6392816] call_tmp[6392824])
                const-val call_tmp[6392845]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (6392847 'move' call_tmp[6392845] call_tmp[6392824])
                if call_tmp[6392824]
                {
                  (6392853 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                }
                const-val start[6392856]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                const-val low[6392858]:int(64)[10] "temp"
                (6392860 'move' low[6392858](6392862 '.v' _iterator[6392760] F0_low[6834174]))
                (6392865 'move' start[6392856] low[6392858])
                const-val end[6392868]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                val tmp[6392870]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[6392872]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[6392874]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6392876]:int(64)[10] "temp"
                (6392878 'move' count[6392876](6392880 '.v' _iterator[6392760] F1_count[6834178]))
                (6392883 'move' call_tmp[6392874](6392886 call ==[52746] count[6392876] 0))
                (6392889 'move' tmp[6392872] call_tmp[6392874])
                if call_tmp[6392874]
                {
                  const-val tmp[6392894]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[6392896]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val low[6392898]:int(64)[10] "temp"
                  (6392900 'move' low[6392898](6392902 '.v' _iterator[6392760] F0_low[6834174]))
                  (6392905 'move' call_tmp[6392896](6392907 'cast' uint(64)[86] low[6392898]))
                  const-val call_tmp[6392910]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6392912]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (6392914 'move' coerce_tmp[6392912](6392916 'cast' uint(64)[86] 1))
                  (6392919 'move' call_tmp[6392910](6392922 call -[1487313] call_tmp[6392896]))
                  val call_tmp[6392924]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6392926 'move' tmp[6392894](6392929 call :[1482043] call_tmp[6392910]))
                  (6392931 'move' tmp[6392870] tmp[6392894])
                }
                {
                  const-val tmp[6392935]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  val call_tmp[6392937]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[6392939]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[6392941]:int(64)[10] "temp"
                  (6392943 'move' count[6392941](6392945 '.v' _iterator[6392760] F1_count[6834178]))
                  (6392948 'move' call_tmp[6392939] count[6392941])
                  const-val call_tmp[6392951]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[6392953]:int(64)[10] "temp"
                  (6392955 'move' count[6392953](6392957 '.v' _iterator[6392760] F1_count[6834178]))
                  (6392960 'move' call_tmp[6392951](6392963 call -[1487343] count[6392953]))
                  const-val call_tmp[6392965]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val low[6392967]:int(64)[10] "temp"
                  (6392969 'move' low[6392967](6392971 '.v' _iterator[6392760] F0_low[6834174]))
                  (6392974 'move' call_tmp[6392965](6392977 call +[56587] low[6392967] call_tmp[6392951]))
                  val call_tmp[6392980]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6392982 'move' tmp[6392935] call_tmp[6392965])
                  (6392985 'move' tmp[6392870] call_tmp[6392965])
                }
                (6392989 'move' end[6392868] tmp[6392870])
                val _indexOfInterest[6392992]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6392994]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[6392996]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6392998]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                (6393001 call chpl_direct_param_stride_range_iter[1517410] start[6392856] tmp[6392870] ret_tmp[6392998])
                (6393005 'move' call_tmp[6392996] ret_tmp[6392998])
                (6393008 'move' _iterator[6392994](6393011 call _getIterator[1519541] call_tmp[6392996]))
                {
                  val ret[6393014]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                  val call_tmp[6393016]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6393018]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6393021 call chpl_range_check_stride[1517730])
                  val i[6393022]:int(64)[10] "dead at end of block" "insert auto destroy"
                  val call_tmp[6393024]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6393026 'move' i[6393022] 0)
                  val call_tmp[6393029]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6393031]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6393033]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6393035]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[6393037]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[6393039]:int(64)[10] "temp"
                  (6393041 'move' low[6393039](6393043 '.v' _iterator[6392994] F0_low[6835591]))
                  (6393046 'move' default_arg_first[6393037](6393049 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6393039]))
                  const-val default_arg_last[6393051]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[6393053]:int(64)[10] "temp"
                  (6393055 'move' high[6393053](6393057 '.v' _iterator[6392994] F1_high[6835595]))
                  (6393060 'move' default_arg_last[6393051](6393063 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6393053]))
                  val default_arg_shouldHalt[6393065]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                  const-val _return_tmp_[6393067]:bool[19] "dead after last mention" "temp"
                  const-val low[6393069]:int(64)[10] "temp"
                  (6393071 'move' low[6393069](6393073 '.v' _iterator[6392994] F0_low[6835591]))
                  const-val high[6393076]:int(64)[10] "temp"
                  (6393078 'move' high[6393076](6393080 '.v' _iterator[6392994] F1_high[6835595]))
                  (6393083 'move' _return_tmp_[6393067](6393086 call chpl_checkIfRangeIterWillOverflow[1518856] low[6393069] high[6393076] 1 default_arg_first[6393037] default_arg_last[6393051] 1))
                  CForLoop[6393093] hazard
                  {
                    const-val yret[6393124]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6393126 'move' yret[6393124] i[6393022])
                    const-val _yieldedIndex[6393129]:int(64)[10] "temp"
                    (6393131 'move' _yieldedIndex[6393129] i[6393022])
                    {
                      const-val i[6393135]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6393137 'move' i[6393135] _yieldedIndex[6393129])
                      const-val yret[6393140]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6393142 'move' yret[6393140] _yieldedIndex[6393129])
                      const-val _yieldedIndex[6393145]:int(64)[10] "temp"
                      (6393147 'move' _yieldedIndex[6393145] _yieldedIndex[6393129])
                      {
                        const-val i[6393151]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6393153 'move' i[6393151] _yieldedIndex[6393145])
                        const-val yret[6393156]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6393158 'move' yret[6393156] _yieldedIndex[6393145])
                        const-val _yieldedIndex[6393161]:int(64)[10] "temp"
                        (6393163 'move' _yieldedIndex[6393161] _yieldedIndex[6393145])
                        {
                          const-val slot[6393167]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6393169 'move' slot[6393167] _yieldedIndex[6393161])
                          const-val yret[6393172]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6393174 'move' yret[6393172] _yieldedIndex[6393161])
                          const-val _yieldedIndex[6393177]:int(64)[10] "temp"
                          (6393179 'move' _yieldedIndex[6393177] _yieldedIndex[6393161])
                          {
                            const-val slot[6393183]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6393185 'move' slot[6393183] _yieldedIndex[6393177])
                            const-val yret[6393188]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6393190 'move' yret[6393188] _yieldedIndex[6393177])
                            const-val _yieldedIndex[6393236]:int(64)[10] "temp"
                            (6393329 'move' _yieldedIndex[6393236] _yieldedIndex[6393177])
                            {
                              const-val slot[6393238]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6393240 'move' slot[6393238] _yieldedIndex[6393236])
                              const-val call_tmp[6393243]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6393245 'move' call_tmp[6393243] table_ref[6060360])
                              const-val call_tmp[6393248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6393250 'move' call_tmp[6393248](6393253 call isSlotFull[3345224] call_tmp[6393243] _yieldedIndex[6393236]))
                              const-val call_tmp[6393256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6393258 'move' call_tmp[6393256] call_tmp[6393248])
                              if call_tmp[6393248]
                              {
                                const-ref yret[6393263]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                val call_tmp[6393265]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
                                (6393267 'move' call_tmp[6393265] table_ref[6060360])
                                ref call_tmp[6393270]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                                const-ref _this_tmp_[6393272]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
                                (6393274 'move' _this_tmp_[6393272](6393277 call table[3340092] call_tmp[6393265]))
                                val coerce_tmp[6393279]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (6393281 'move' coerce_tmp[6393279](6393283 'deref' _this_tmp_[6393272]))
                                (6393285 'move' call_tmp[6393270](6393288 call this[3343256] coerce_tmp[6393279] slot[6393238]))
                                const-ref call_tmp[6393291]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                (6393293 'move' call_tmp[6393291](6393296 call key[3345732] call_tmp[6393270]))
                                const-ref _yieldedIndex[6393298]:_ref(string)[1466327] "temp"
                                (6393300 'move' _yieldedIndex[6393298] call_tmp[6393291])
                                {
                                  const-ref k[6393304]:_ref(string)[1466327] "index var" "insert auto destroy"
                                  (6393306 'move' k[6393304] _yieldedIndex[6393298])
                                  const-val _formal_tmp_in_x[6393309]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                  (6393311 'move' _formal_tmp_in_x[6393309](6393314 call chpl__initCopy[1480493] k[6393304] 0))
                                  const-val _return_tmp_[6393317]:int(64)[10] "dead after last mention" "temp"
                                  (6393319 'move' _return_tmp_[6393317](6393322 call pushBack[3253361] ks[3381248] _formal_tmp_in_x[6393309]))
                                  label _continueLabel[6393325]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[6393095]:int(64)[10] "temp"
                      (6393097 'move' low[6393095](6393099 '.v' _iterator[6392994] F0_low[6835591]))
                      (6393102 '=' i[6393022] low[6393095])
                    }
                    {
                      const-val high[6393106]:int(64)[10] "temp"
                      (6393108 'move' high[6393106](6393110 '.v' _iterator[6392994] F1_high[6835595]))
                      (6393113 '<=' i[6393022] high[6393106])
                    }
                    {
                      val call_tmp[6393117]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      val call_tmp[6393119]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      (6393121 '+=' i[6393022] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[6393212]
                }
                (6393215 call _freeIterator[1519714] _iterator[6392994])
                label _endchpl_direct_counted_range_iter_helper[6393217]
              }
              (6393220 call _freeIterator[1519981] _iterator[6392760])
              label _endchpl_direct_counted_range_iter[6393222]
            }
            (6393225 call _freeIterator[1520248] _iterator[6392715])
            label _end_allSlots[6393227]
          }
          (6393230 call _freeIterator[1947321] _iterator[6392679])
          label _endallSlots[6393232]
        }
        (6060452 call _freeIterator[3345141] _iterator[6060335])
        label _endkeys[6060454]
      }
      label _breakLabel[3381306]
      (5635494 call _freeIterator[3381713] _iterator[3381257])
    }
    const-val _formal_tmp_in_table[3385998]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635488 '=' _formal_tmp_in_table[3385998] _formal_tmp_table[3381320])
    (3386003 'noop')
    const-val _formal_tmp_in_order[3386047]:list(string,false)[1950598] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635485 '=' _formal_tmp_in_order[3386047] ks[3381248])
    (3386052 'noop')
    (3381312 call init[3381805] this[3381226] _formal_tmp_in_table[3385998] _formal_tmp_in_order[3386047])
    (3381317 return _void[46])
  }
  function dict(string,shared Module(real(32)))[3391211].init[3391081](ref arg this[3391085]:dict(string,shared Module(real(32)))[3391211]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480019]:shared Module(real(32))[1955038] "temp"
    val _formal_type_tmp_[5480017]:string[244] "temp"
    val keyType[3391097]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3391107]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    const-val call_tmp[3391117]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3391221]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg_resizeThreshold[3396022]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3396026 'move' default_arg_resizeThreshold[3396022](3396024 call init_default_resizeThreshold[3396005]))
    val default_arg_initialCapacity[3396048]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (3391224 call init[3391230] initTemp[3391221] default_arg_resizeThreshold[3396022] 16)
    (3391119 'move' call_tmp[3391117] initTemp[3391221])
    val call_tmp[3391125]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391132]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391139]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3391147]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "delay instantiation" "temp"
    (3391149 'move' table[3391147] call_tmp[3391117])
    (3391153 '.=' this[3391085] table[3391199] table[3391147])
    const-val call_tmp[3391158]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3396080]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "temp"
    (3396083 call init[1950142] initTemp[3396080])
    (3391160 'move' call_tmp[3391158] initTemp[3396080])
    val call_tmp[3391165]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391172]:list(string,false)[1950598] "dead after last mention" "maybe param" "temp" "type variable"
    val order[3391179]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "temp"
    (3391181 'move' order[3391179] call_tmp[3391158])
    (3391185 '.=' this[3391085] order[3391205] order[3391179])
    (3391190 return _void[46])
  }
  function _ref(dict(string,shared Module(real(32))))[3396064].these[3406315](ref arg this[3406319]:_ref(dict(string,shared Module(real(32))))[3396064], ref arg _retArg[5589888]:_ref(_ir_these__ref_dict_string__shared_Module__real32)[3408271]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7092615]:_ir_these__ref_dict_string__shared_Module__real32[3408160] "temp"
    (7092617 '.=' _ir[7092615] F0_this[7090243] this[3406319])
    (7092621 '=' _retArg[5589888] _ir[7092615])
    (7092624 return _void[46])
  }
  type _ic_these__ref_dict_string__shared_Module__real32[3408154] val super[3408155]:RootClass[236] "super class" val more[3408157]:int(64)[10] ref F0_this[7090241]:_ref(dict(string,shared Module(real(32))))[3396064] val F1__iterator[7090245]:_ic_these__ref_list_string_F[3384642] val F2__iterator[7090247]:_ic_chpl_direct_counted_range_iter[1520064] val F3__iterator[7090249]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F4__iterator[7090251]:_ic_chpl_direct_param_stride_range_iter[1519526] val F5_i[7090253]:int(64)[10] const-val F6_ret_tmp[7090255]:(string,shared Module(real(32)))[3407887] val F7_call_tmp[7090257]:(string,shared Module(real(32)))[3407887] const-val F8_low[7090259]:int(64)[10] val value[7090261]:(string,shared Module(real(32)))[3407984]
  type _ir_these__ref_dict_string__shared_Module__real32[3408160] ref F0_this[7090243]:_ref(dict(string,shared Module(real(32))))[3396064]
  function _getIterator[3408169](const  ref arg ir[3408171]:_ir_these__ref_dict_string__shared_Module__real32[3408160]) : _ic_these__ref_dict_string__shared_Module__real32[3408154] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[3408278]:_ic_these__ref_dict_string__shared_Module__real32[3408154] "dead after last mention" "RVV" "temp"
    val _ic_[3408161]:_ic_these__ref_dict_string__shared_Module__real32[3408154] "dead after last mention" "temp"
    const-val call_tmp[3408285]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3408288 'move' call_tmp[3408285](3408300 'sizeof_bundle' _ic_these__ref_dict_string__shared_Module__real32[3408154]))
    val cast_tmp[3408303]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3408305 'move' cast_tmp[3408303](3408166 call chpl_here_alloc[308303] call_tmp[3408285] 339))
    (3408174 'move' _ic_[3408161](3408307 'cast' _ic_these__ref_dict_string__shared_Module__real32[3408154] cast_tmp[3408303]))
    (3408176 'setcid' _ic_[3408161])
    (3408283 'move' ret[3408278] _ic_[3408161])
    (7092627 '.=' ret[3408278] more[3408157] 1)
    ref tmp[7092631]:_ref(dict(string,shared Module(real(32))))[3396064] "temp"
    (7092636 'move' tmp[7092631](7092632 '.v' ir[3408171] F0_this[7090243]))
    (7092638 '.=' ret[3408278] F0_this[7090241] tmp[7092631])
    (3408280 return ret[3408278])
  }
  function _ref(dict(string,shared Module(real(32))))[3396064].insert[3399122](ref arg this[3399126]:_ref(dict(string,shared Module(real(32))))[3396064], const  ref arg key[3399133]:string[244], const  ref arg value[3399140]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_value[3400165]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400168 'move' _formal_tmp_value[3400165] value[3399140])
    const-ref call_tmp[3399254]:_ref(list(string,false))[1950614] "dead after last mention" "maybe param" "temp"
    (3399256 'move' call_tmp[3399254](3399259 call order[3400171] this[3399126]))
    const-val call_tmp[3399262]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3399264 'move' call_tmp[3399262](3399270 call contains[3400199] call_tmp[3399254] key[3399133]))
    const-val call_tmp[3399272]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3399274 'move' call_tmp[3399272](3399277 call ![63126] call_tmp[3399262]))
    const-val call_tmp[3399279]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3399281 'move' call_tmp[3399279] call_tmp[3399272])
    if call_tmp[3399279]
    {
      ref call_tmp[3399288]:_ref(list(string,false))[1950614] "dead after last mention" "maybe param" "temp"
      (3399290 'move' call_tmp[3399288](3399293 call order[3400171] this[3399126]))
      const-val _formal_tmp_in_x[3400352]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3400357 'move' _formal_tmp_in_x[3400352](3400353 call chpl__initCopy[1480493] key[3399133] 0))
      const-val _return_tmp_[5468891]:int(64)[10] "dead after last mention" "temp"
      (5468893 'move' _return_tmp_[5468891](3399300 call pushBack[3253361] call_tmp[3399288] _formal_tmp_in_x[3400352]))
    }
    ref call_tmp[3399303]:_ref(map(string,shared Module(real(32)),false))[3391869] "dead after last mention" "maybe param" "temp"
    (3399305 'move' call_tmp[3399303](3399308 call table[3400362] this[3399126]))
    const-val _formal_tmp_in_k[3400608]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3400613 'move' _formal_tmp_in_k[3400608](3400609 call chpl__initCopy[1480493] key[3399133] 0))
    const-val _formal_tmp_in_v[3400617]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635674 '=' _formal_tmp_in_v[3400617] _formal_tmp_value[3400165])
    (3400622 'noop')
    (3399315 call addOrReplace[3400390] call_tmp[3399303] _formal_tmp_in_k[3400608] _formal_tmp_in_v[3400617])
    (3399318 return _void[46])
  }
  function _ref(dict(string,string))[3380641].table[3386267](ref arg this[3386271]:_ref(dict(string,string))[3380641]) ref : _ref(map(string,string,false))[3283395] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3386273]:_ref(map(string,string,false))[3283395] "dead after last mention" "RVV" "temp"
    ref call_tmp[3386281]:_ref(map(string,string,false))[3283395] "dead after last mention" "maybe param" "temp"
    (3386283 'move' call_tmp[3386281](3386285 '.' this[3386271] table[3380620]))
    (3386288 'move' ret[3386273] call_tmp[3386281])
    (3386292 return ret[3386273])
  }
  function _ref(dict(string,shared Module(real(32))))[3396064].table[3400362](ref arg this[3400366]:_ref(dict(string,shared Module(real(32))))[3396064]) ref : _ref(map(string,shared Module(real(32)),false))[3391869] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3400368]:_ref(map(string,shared Module(real(32)),false))[3391869] "dead after last mention" "RVV" "temp"
    ref call_tmp[3400376]:_ref(map(string,shared Module(real(32)),false))[3391869] "dead after last mention" "maybe param" "temp"
    (3400378 'move' call_tmp[3400376](3400380 '.' this[3400366] table[3391199]))
    (3400383 'move' ret[3400368] call_tmp[3400376])
    (3400387 return ret[3400368])
  }
  function _ref(dict(string,shared Module(real(32))))[3396064].order[3400171](ref arg this[3400175]:_ref(dict(string,shared Module(real(32))))[3396064]) ref : _ref(list(string,false))[1950614] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3400177]:_ref(list(string,false))[1950614] "dead after last mention" "RVV" "temp"
    ref call_tmp[3400185]:_ref(list(string,false))[1950614] "dead after last mention" "maybe param" "temp"
    (3400187 'move' call_tmp[3400185](3400189 '.' this[3400175] order[3391205]))
    (3400192 'move' ret[3400177] call_tmp[3400185])
    (3400196 return ret[3400177])
  }
  function _ref(dict(string,string))[3380641].deinit[4225069](const  ref arg this[4225073]:_ref(dict(string,string))[3380641]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531122]
    ref _field_destructor_tmp_[5531120]:_ref(list(string,false))[1950614] "temp"
    (5531127 'move' _field_destructor_tmp_[5531120](5531124 '.' this[4225073] order[3380626]))
    (5531129 call deinit[4034059] _field_destructor_tmp_[5531120])
    const-ref _field_destructor_tmp_[5531132]:_ref(map(string,string,false))[3283395] "temp"
    (5531137 'move' _field_destructor_tmp_[5531132](5531134 '.' this[4225073] table[3380620]))
    (5531139 call deinit[4211586] _field_destructor_tmp_[5531132])
    (4225079 return _void[46])
  }
  function _ref(dict(string,shared Module(real(32))))[3396064].deinit[4233145](const  ref arg this[4233149]:_ref(dict(string,shared Module(real(32))))[3396064]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531180]
    ref _field_destructor_tmp_[5531178]:_ref(list(string,false))[1950614] "temp"
    (5531185 'move' _field_destructor_tmp_[5531178](5531182 '.' this[4233149] order[3391205]))
    (5531187 call deinit[4034059] _field_destructor_tmp_[5531178])
    const-ref _field_destructor_tmp_[5531190]:_ref(map(string,shared Module(real(32)),false))[3391869] "temp"
    (5531195 'move' _field_destructor_tmp_[5531190](5531192 '.' this[4233149] table[3391199]))
    (5531197 call deinit[4233260] _field_destructor_tmp_[5531190])
    (4233155 return _void[46])
  }
  type dict(string,string)[3380632] val table[3380620]:map(string,string,false)[3283386] val order[3380626]:list(string,false)[1950598] forwarding ( )
  type dict(string,shared Module(real(32)))[3391211] val table[3391199]:map(string,shared Module(real(32)),false)[3391831] val order[3391205]:list(string,false)[1950598] forwarding ( )
}
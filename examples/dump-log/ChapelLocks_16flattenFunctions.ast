AST dump for ChapelLocks after pass flattenFunctions.
Module use list: Atomics ChapelBase MemConsistency currentTask 

{
  function chpl__init_ChapelLocks[468384]() : void[4] "insert line file info" "module init" "resolved"
  {
    (599582 return _void[46])
  }
  function _ref(chpl_LocalSpinlock)[1500922].init[85249](ref arg this[85251]:_ref(chpl_LocalSpinlock)[1500922]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val l[519339]:atomic bool[83090] "dead after last mention" "temp"
    val call_tmp[770520]:atomic bool[83090] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1525074 call init[82124] l[519339])
    (519346 '.=' this[85251] l[85243] l[519339])
    (550297 'end of statement')
    (599574 return _void[46])
  }
  function _ref(chpl_LocalSpinlock)[1500922].init=[85258](ref arg this[85260]:_ref(chpl_LocalSpinlock)[1500922], ref arg other[85263]:chpl_LocalSpinlock[85418]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val l[519350]:atomic bool[83090] "dead after last mention" "temp"
    val call_tmp[770525]:atomic bool[83090] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3886022 call init[82124] l[519350])
    (519357 '.=' this[85260] l[85243] l[519350])
    (550298 'end of statement')
    (519361 'init done')
    (550299 'end of statement')
    ref call_tmp[770532]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
    (770535 'move' call_tmp[770532](85277 call l[1060078] this[85260]))
    ref call_tmp[770541]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
    (770544 'move' call_tmp[770541](85287 call l[1060078] other[85263]))
    val call_tmp[770548]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_order[3886010]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (770551 'move' call_tmp[770548](85293 call read[1776719] call_tmp[770541]))
    (85285 call init_helper[82078] call_tmp[770532] call_tmp[770548])
    (599576 return _void[46])
  }
  function _ref(chpl_LocalSpinlock)[1500922].lock[85296](ref arg this[85298]:_ref(chpl_LocalSpinlock)[1500922]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const tmp[85387]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      val call_tmp[770553]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (770556 'move' call_tmp[770553](85384 '_wide_get_locale' this[85298]))
      (85388 'move' tmp[85387] call_tmp[770553])
      {
        val tmp[85333]:bool[19] "dead after last mention" "temp"
        val tmp[481890]:bool[19] "dead after last mention" "maybe param" "temp"
        ref call_tmp[770560]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
        (770563 'move' call_tmp[770560](400403 call l[1060078] this[85298]))
        val default_arg_order[1776854]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
        (481901 'move' tmp[481890](85371 call read[1776719] call_tmp[770560]))
        val call_tmp[770567]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (1777170 'end of statement')
        val tmp[669158]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        val tmp[669159]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[770572]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (770575 'move' call_tmp[770572] tmp[481890])
        (669164 'move' tmp[669159] call_tmp[770572])
        if tmp[669159]
        {
          (669169 'move' tmp[669158] 1)
        }
        {
          val tmp[669171]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[770579]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
          (770582 'move' call_tmp[770579](400408 call l[1060078] this[85298]))
          val call_tmp[770586]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (770589 'move' call_tmp[770586](85376 call testAndSet[1777172] call_tmp[770579]))
          (669173 'move' tmp[669171] call_tmp[770586])
          (669178 'move' tmp[669158] tmp[669171])
        }
        (85381 'move' tmp[85333] tmp[669158])
        WhileDo[85338]
        {
          (85331 call yieldExecution[68738])
          (550302 'end of statement')
          label _continueLabel[85336]
          val tmp[481869]:bool[19] "dead after last mention" "maybe param" "temp"
          ref call_tmp[770593]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
          (770596 'move' call_tmp[770593](400392 call l[1060078] this[85298]))
          val default_arg_order[1777952]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
          (481880 'move' tmp[481869](85349 call read[1776719] call_tmp[770593]))
          val call_tmp[770600]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          (1777965 'end of statement')
          val tmp[669185]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          val tmp[669186]:bool[19] "dead after last mention" "maybe param" "temp"
          val call_tmp[770605]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (770608 'move' call_tmp[770605] tmp[481869])
          (669191 'move' tmp[669186] call_tmp[770605])
          if tmp[669186]
          {
            (669196 'move' tmp[669185] 1)
          }
          {
            val tmp[669198]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            ref call_tmp[770612]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
            (770615 'move' call_tmp[770612](400397 call l[1060078] this[85298]))
            val call_tmp[770619]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (770622 'move' call_tmp[770619](85354 call testAndSet[1777172] call_tmp[770612]))
            (669200 'move' tmp[669198] call_tmp[770619])
            (669205 'move' tmp[669185] tmp[669198])
          }
          (85359 'move' tmp[85333] tmp[669185])
          tmp[85333]
        }
        label _breakLabel[85337]
      }
      (85391 'elided on block' 0 tmp[85387])
    }
    (599578 return _void[46])
  }
  function _ref(chpl_LocalSpinlock)[1500922].unlock[85397](ref arg this[85399]:_ref(chpl_LocalSpinlock)[1500922]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[770626]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
    (770629 'move' call_tmp[770626](400414 call l[1060078] this[85399]))
    (85410 call clear[1778784] call_tmp[770626])
    (599580 return _void[46])
  }
  function _ref(chpl_LocalSpinlock)[1500922].l[1060078](ref arg this[1060082]:_ref(chpl_LocalSpinlock)[1500922]) ref : _ref(AtomicBool)[1470529] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1060092]:_ref(AtomicBool)[1470529] "dead after last mention" "RVV" "temp"
    ref call_tmp[1060099]:_ref(AtomicBool)[1470529] "dead after last mention" "maybe param" "temp"
    (1060102 'move' call_tmp[1060099](1060086 '.' this[1060082] l[85243]))
    (1060097 'move' ret[1060092] call_tmp[1060099])
    (1060094 return ret[1060092])
  }
  function _ref(chpl_LocalSpinlock)[1500922].deinit[1060104](const?  ref arg this[1060108]:_ref(chpl_LocalSpinlock)[1500922]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (1060116 return _void[46])
  }
  type chpl_LocalSpinlock[85418] val l[85243]:atomic bool[83090]
}
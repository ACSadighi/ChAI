AST dump for ChapelIO after pass bulkCopyRecords.
Module use list: ChapelStandard ChapelBase ChapelLocale IO CTypes 

{
  function chpl__init_ChapelIO[468456]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    {
    }
    (611660 return _void[46])
  }
  function _ref(1*int(64))[1770063].serialize[3112197](const  ref arg this[3112203]:_ref(1*int(64))[1770063], const  ref arg writer[3112205]:fileWriter(false,defaultSerializer)[1838949], const  ref arg serializer[3112207]:_ref(defaultSerializer)[1579607], ref arg error_out[5504218]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3112217]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3112225]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "maybe param" "temp"
    val error[5504223]:Error[85511] "error variable" "temp"
    (5504225 'move' error[5504223] nil[32])
    const-val ret_tmp[5585144]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "temp"
    (3112233 call startTuple[3112349] serializer[3112207] writer[3112205] 1 error[5504223] ret_tmp[5585144])
    (5585147 'move' call_tmp[3112225] ret_tmp[5585144])
    val errorExists[7300096]:bool[19] "temp"
    (7300101 'move' errorExists[7300096](7300098 '!=' error[5504223] nil[32]))
    if errorExists[7300096]
    {
      (5504229 '=' error_out[5504218] error[5504223])
      gotoErrorHandlingReturn _endserialize[5504220] _endserialize[5504220]
    }
    val ser[3112236]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "insert auto destroy"
    (3112238 'move' ser[3112236] call_tmp[3112225])
    {
      const-val i[3112243]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
      (3112245 'move' i[3112243] 0)
      val tmp[3112249]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3112251]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3112259]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3112272]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3112274]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3112282]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3112295]:int(64)[10] "dead after last mention" "maybe param" "temp"
      {
        {
          const-ref elt[3114057]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3114061]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3114063 'move' call_tmp[3114061](3114085 '.' this[3112203] x0[1769980]))
          (3114068 'move' elt[3114057] call_tmp[3114061])
          const-val coerce_tmp[3114170]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3114174 'move' coerce_tmp[3114170](3114172 'deref' elt[3114057]))
          val error[5504238]:Error[85511] "error variable" "temp"
          (5504240 'move' error[5504238] nil[32])
          (3114078 call writeElement[3114088] ser[3112236] coerce_tmp[3114170] error[5504238])
          val errorExists[7300104]:bool[19] "temp"
          (7300109 'move' errorExists[7300104](7300106 '!=' error[5504238] nil[32]))
          if errorExists[7300104]
          {
            (5504244 '=' error_out[5504218] error[5504238])
            (5630584 call chpl__autoDestroy[4186862] ser[3112236])
            gotoErrorHandlingReturn _endserialize[5504220] _endserialize[5504220]
          }
        }
      }
      label _continueLabel0[3114053]
      label _unused_continueLabel[3112333]
      label _breakLabel[3112335]
    }
    val error[5504253]:Error[85511] "error variable" "temp"
    (5504255 'move' error[5504253] nil[32])
    (3112341 call endTuple[3115706] ser[3112236] error[5504253])
    val errorExists[7300112]:bool[19] "temp"
    (7300117 'move' errorExists[7300112](7300114 '!=' error[5504253] nil[32]))
    if errorExists[7300112]
    {
      (5504259 '=' error_out[5504218] error[5504253])
      (5630587 call chpl__autoDestroy[4186862] ser[3112236])
      gotoErrorHandlingReturn _endserialize[5504220] _endserialize[5504220]
    }
    (5630590 call chpl__autoDestroy[4186862] ser[3112236])
    label _endserialize[5504220]
    (3112344 return _void[46])
  }
  function _ref(2*int(64))[1802158].serialize[3135307](const  ref arg this[3135313]:_ref(2*int(64))[1802158], const  ref arg writer[3135315]:fileWriter(false,defaultSerializer)[1838949], const  ref arg serializer[3135317]:_ref(defaultSerializer)[1579607], ref arg error_out[5505037]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3135327]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3135335]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "maybe param" "temp"
    val error[5505042]:Error[85511] "error variable" "temp"
    (5505044 'move' error[5505042] nil[32])
    const-val ret_tmp[5585150]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "temp"
    (3135343 call startTuple[3112349] serializer[3135317] writer[3135315] 2 error[5505042] ret_tmp[5585150])
    (5585153 'move' call_tmp[3135335] ret_tmp[5585150])
    val errorExists[7300472]:bool[19] "temp"
    (7300477 'move' errorExists[7300472](7300474 '!=' error[5505042] nil[32]))
    if errorExists[7300472]
    {
      (5505048 '=' error_out[5505037] error[5505042])
      gotoErrorHandlingReturn _endserialize[5505039] _endserialize[5505039]
    }
    val ser[3135346]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "insert auto destroy"
    (3135348 'move' ser[3135346] call_tmp[3135335])
    {
      const-val i[3135353]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
      (3135355 'move' i[3135353] 0)
      val tmp[3135359]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3135361]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3135369]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3135382]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3135384]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3135392]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3135405]:int(64)[10] "dead after last mention" "maybe param" "temp"
      {
        {
          const-ref elt[3135482]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3135486]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3135488 'move' call_tmp[3135486](3135540 '.' this[3135313] x0[1802069]))
          (3135493 'move' elt[3135482] call_tmp[3135486])
          const-val coerce_tmp[3135543]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3135547 'move' coerce_tmp[3135543](3135545 'deref' elt[3135482]))
          val error[5505057]:Error[85511] "error variable" "temp"
          (5505059 'move' error[5505057] nil[32])
          (3135503 call writeElement[3114088] ser[3135346] coerce_tmp[3135543] error[5505057])
          val errorExists[7300480]:bool[19] "temp"
          (7300485 'move' errorExists[7300480](7300482 '!=' error[5505057] nil[32]))
          if errorExists[7300480]
          {
            (5505063 '=' error_out[5505037] error[5505057])
            (5630906 call chpl__autoDestroy[4186862] ser[3135346])
            gotoErrorHandlingReturn _endserialize[5505039] _endserialize[5505039]
          }
        }
      }
      label _continueLabel0[3135478]
      {
        {
          const-ref elt[3135512]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3135516]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3135518 'move' call_tmp[3135516](3135552 '.' this[3135313] x1[1802071]))
          (3135523 'move' elt[3135512] call_tmp[3135516])
          const-val coerce_tmp[3135555]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3135559 'move' coerce_tmp[3135555](3135557 'deref' elt[3135512]))
          val error[5505072]:Error[85511] "error variable" "temp"
          (5505074 'move' error[5505072] nil[32])
          (3135533 call writeElement[3114088] ser[3135346] coerce_tmp[3135555] error[5505072])
          val errorExists[7300488]:bool[19] "temp"
          (7300493 'move' errorExists[7300488](7300490 '!=' error[5505072] nil[32]))
          if errorExists[7300488]
          {
            (5505078 '=' error_out[5505037] error[5505072])
            (5630909 call chpl__autoDestroy[4186862] ser[3135346])
            gotoErrorHandlingReturn _endserialize[5505039] _endserialize[5505039]
          }
        }
      }
      label _continueLabel1[3135508]
      label _unused_continueLabel[3135443]
      label _breakLabel[3135445]
    }
    val error[5505087]:Error[85511] "error variable" "temp"
    (5505089 'move' error[5505087] nil[32])
    (3135451 call endTuple[3115706] ser[3135346] error[5505087])
    val errorExists[7300496]:bool[19] "temp"
    (7300501 'move' errorExists[7300496](7300498 '!=' error[5505087] nil[32]))
    if errorExists[7300496]
    {
      (5505093 '=' error_out[5505037] error[5505087])
      (5630912 call chpl__autoDestroy[4186862] ser[3135346])
      gotoErrorHandlingReturn _endserialize[5505039] _endserialize[5505039]
    }
    (5630915 call chpl__autoDestroy[4186862] ser[3135346])
    label _endserialize[5505039]
    (3135454 return _void[46])
  }
  function _ref(3*int(64))[1995605].serialize[3150436](const  ref arg this[3150442]:_ref(3*int(64))[1995605], const  ref arg writer[3150444]:fileWriter(false,defaultSerializer)[1838949], const  ref arg serializer[3150446]:_ref(defaultSerializer)[1579607], ref arg error_out[5505357]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3150456]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3150464]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "maybe param" "temp"
    val error[5505362]:Error[85511] "error variable" "temp"
    (5505364 'move' error[5505362] nil[32])
    const-val ret_tmp[5585156]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "temp"
    (3150472 call startTuple[3112349] serializer[3150446] writer[3150444] 3 error[5505362] ret_tmp[5585156])
    (5585159 'move' call_tmp[3150464] ret_tmp[5585156])
    val errorExists[7300600]:bool[19] "temp"
    (7300605 'move' errorExists[7300600](7300602 '!=' error[5505362] nil[32]))
    if errorExists[7300600]
    {
      (5505368 '=' error_out[5505357] error[5505362])
      gotoErrorHandlingReturn _endserialize[5505359] _endserialize[5505359]
    }
    val ser[3150475]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "insert auto destroy"
    (3150477 'move' ser[3150475] call_tmp[3150464])
    {
      const-val i[3150482]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
      (3150484 'move' i[3150482] 0)
      val tmp[3150488]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3150490]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3150498]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3150511]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3150513]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3150521]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3150534]:int(64)[10] "dead after last mention" "maybe param" "temp"
      {
        {
          const-ref elt[3150611]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3150615]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3150617 'move' call_tmp[3150615](3150699 '.' this[3150442] x0[1995498]))
          (3150622 'move' elt[3150611] call_tmp[3150615])
          const-val coerce_tmp[3150702]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3150706 'move' coerce_tmp[3150702](3150704 'deref' elt[3150611]))
          val error[5505377]:Error[85511] "error variable" "temp"
          (5505379 'move' error[5505377] nil[32])
          (3150632 call writeElement[3114088] ser[3150475] coerce_tmp[3150702] error[5505377])
          val errorExists[7300608]:bool[19] "temp"
          (7300613 'move' errorExists[7300608](7300610 '!=' error[5505377] nil[32]))
          if errorExists[7300608]
          {
            (5505383 '=' error_out[5505357] error[5505377])
            (5631049 call chpl__autoDestroy[4186862] ser[3150475])
            gotoErrorHandlingReturn _endserialize[5505359] _endserialize[5505359]
          }
        }
      }
      label _continueLabel0[3150607]
      {
        {
          const-ref elt[3150641]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3150645]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3150647 'move' call_tmp[3150645](3150711 '.' this[3150442] x1[1995500]))
          (3150652 'move' elt[3150641] call_tmp[3150645])
          const-val coerce_tmp[3150714]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3150718 'move' coerce_tmp[3150714](3150716 'deref' elt[3150641]))
          val error[5505392]:Error[85511] "error variable" "temp"
          (5505394 'move' error[5505392] nil[32])
          (3150662 call writeElement[3114088] ser[3150475] coerce_tmp[3150714] error[5505392])
          val errorExists[7300616]:bool[19] "temp"
          (7300621 'move' errorExists[7300616](7300618 '!=' error[5505392] nil[32]))
          if errorExists[7300616]
          {
            (5505398 '=' error_out[5505357] error[5505392])
            (5631052 call chpl__autoDestroy[4186862] ser[3150475])
            gotoErrorHandlingReturn _endserialize[5505359] _endserialize[5505359]
          }
        }
      }
      label _continueLabel1[3150637]
      {
        {
          const-ref elt[3150671]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3150675]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3150677 'move' call_tmp[3150675](3150723 '.' this[3150442] x2[1995502]))
          (3150682 'move' elt[3150671] call_tmp[3150675])
          const-val coerce_tmp[3150726]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3150730 'move' coerce_tmp[3150726](3150728 'deref' elt[3150671]))
          val error[5505407]:Error[85511] "error variable" "temp"
          (5505409 'move' error[5505407] nil[32])
          (3150692 call writeElement[3114088] ser[3150475] coerce_tmp[3150726] error[5505407])
          val errorExists[7300624]:bool[19] "temp"
          (7300629 'move' errorExists[7300624](7300626 '!=' error[5505407] nil[32]))
          if errorExists[7300624]
          {
            (5505413 '=' error_out[5505357] error[5505407])
            (5631055 call chpl__autoDestroy[4186862] ser[3150475])
            gotoErrorHandlingReturn _endserialize[5505359] _endserialize[5505359]
          }
        }
      }
      label _continueLabel2[3150667]
      label _unused_continueLabel[3150572]
      label _breakLabel[3150574]
    }
    val error[5505422]:Error[85511] "error variable" "temp"
    (5505424 'move' error[5505422] nil[32])
    (3150580 call endTuple[3115706] ser[3150475] error[5505422])
    val errorExists[7300632]:bool[19] "temp"
    (7300637 'move' errorExists[7300632](7300634 '!=' error[5505422] nil[32]))
    if errorExists[7300632]
    {
      (5505428 '=' error_out[5505357] error[5505422])
      (5631058 call chpl__autoDestroy[4186862] ser[3150475])
      gotoErrorHandlingReturn _endserialize[5505359] _endserialize[5505359]
    }
    (5631061 call chpl__autoDestroy[4186862] ser[3150475])
    label _endserialize[5505359]
    (3150583 return _void[46])
  }
  function _ref(4*int(64))[1960611].serialize[3160854](const  ref arg this[3160860]:_ref(4*int(64))[1960611], const  ref arg writer[3160862]:fileWriter(false,defaultSerializer)[1838949], const  ref arg serializer[3160864]:_ref(defaultSerializer)[1579607], ref arg error_out[5505677]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3160874]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3160882]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "maybe param" "temp"
    val error[5505682]:Error[85511] "error variable" "temp"
    (5505684 'move' error[5505682] nil[32])
    const-val ret_tmp[5585162]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "temp"
    (3160890 call startTuple[3112349] serializer[3160864] writer[3160862] 4 error[5505682] ret_tmp[5585162])
    (5585165 'move' call_tmp[3160882] ret_tmp[5585162])
    val errorExists[7300736]:bool[19] "temp"
    (7300741 'move' errorExists[7300736](7300738 '!=' error[5505682] nil[32]))
    if errorExists[7300736]
    {
      (5505688 '=' error_out[5505677] error[5505682])
      gotoErrorHandlingReturn _endserialize[5505679] _endserialize[5505679]
    }
    val ser[3160893]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "insert auto destroy"
    (3160895 'move' ser[3160893] call_tmp[3160882])
    {
      const-val i[3160900]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
      (3160902 'move' i[3160900] 0)
      val tmp[3160906]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3160908]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3160916]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3160929]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3160931]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3160939]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3160952]:int(64)[10] "dead after last mention" "maybe param" "temp"
      {
        {
          const-ref elt[3161029]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3161033]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3161035 'move' call_tmp[3161033](3161147 '.' this[3160860] x0[1960486]))
          (3161040 'move' elt[3161029] call_tmp[3161033])
          const-val coerce_tmp[3161150]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3161154 'move' coerce_tmp[3161150](3161152 'deref' elt[3161029]))
          val error[5505697]:Error[85511] "error variable" "temp"
          (5505699 'move' error[5505697] nil[32])
          (3161050 call writeElement[3114088] ser[3160893] coerce_tmp[3161150] error[5505697])
          val errorExists[7300744]:bool[19] "temp"
          (7300749 'move' errorExists[7300744](7300746 '!=' error[5505697] nil[32]))
          if errorExists[7300744]
          {
            (5505703 '=' error_out[5505677] error[5505697])
            (5631183 call chpl__autoDestroy[4186862] ser[3160893])
            gotoErrorHandlingReturn _endserialize[5505679] _endserialize[5505679]
          }
        }
      }
      label _continueLabel0[3161025]
      {
        {
          const-ref elt[3161059]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3161063]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3161065 'move' call_tmp[3161063](3161159 '.' this[3160860] x1[1960488]))
          (3161070 'move' elt[3161059] call_tmp[3161063])
          const-val coerce_tmp[3161162]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3161166 'move' coerce_tmp[3161162](3161164 'deref' elt[3161059]))
          val error[5505712]:Error[85511] "error variable" "temp"
          (5505714 'move' error[5505712] nil[32])
          (3161080 call writeElement[3114088] ser[3160893] coerce_tmp[3161162] error[5505712])
          val errorExists[7300752]:bool[19] "temp"
          (7300757 'move' errorExists[7300752](7300754 '!=' error[5505712] nil[32]))
          if errorExists[7300752]
          {
            (5505718 '=' error_out[5505677] error[5505712])
            (5631186 call chpl__autoDestroy[4186862] ser[3160893])
            gotoErrorHandlingReturn _endserialize[5505679] _endserialize[5505679]
          }
        }
      }
      label _continueLabel1[3161055]
      {
        {
          const-ref elt[3161089]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3161093]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3161095 'move' call_tmp[3161093](3161171 '.' this[3160860] x2[1960490]))
          (3161100 'move' elt[3161089] call_tmp[3161093])
          const-val coerce_tmp[3161174]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3161178 'move' coerce_tmp[3161174](3161176 'deref' elt[3161089]))
          val error[5505727]:Error[85511] "error variable" "temp"
          (5505729 'move' error[5505727] nil[32])
          (3161110 call writeElement[3114088] ser[3160893] coerce_tmp[3161174] error[5505727])
          val errorExists[7300760]:bool[19] "temp"
          (7300765 'move' errorExists[7300760](7300762 '!=' error[5505727] nil[32]))
          if errorExists[7300760]
          {
            (5505733 '=' error_out[5505677] error[5505727])
            (5631189 call chpl__autoDestroy[4186862] ser[3160893])
            gotoErrorHandlingReturn _endserialize[5505679] _endserialize[5505679]
          }
        }
      }
      label _continueLabel2[3161085]
      {
        {
          const-ref elt[3161119]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3161123]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3161125 'move' call_tmp[3161123](3161183 '.' this[3160860] x3[1960492]))
          (3161130 'move' elt[3161119] call_tmp[3161123])
          const-val coerce_tmp[3161186]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3161190 'move' coerce_tmp[3161186](3161188 'deref' elt[3161119]))
          val error[5505742]:Error[85511] "error variable" "temp"
          (5505744 'move' error[5505742] nil[32])
          (3161140 call writeElement[3114088] ser[3160893] coerce_tmp[3161186] error[5505742])
          val errorExists[7300768]:bool[19] "temp"
          (7300773 'move' errorExists[7300768](7300770 '!=' error[5505742] nil[32]))
          if errorExists[7300768]
          {
            (5505748 '=' error_out[5505677] error[5505742])
            (5631192 call chpl__autoDestroy[4186862] ser[3160893])
            gotoErrorHandlingReturn _endserialize[5505679] _endserialize[5505679]
          }
        }
      }
      label _continueLabel3[3161115]
      label _unused_continueLabel[3160990]
      label _breakLabel[3160992]
    }
    val error[5505757]:Error[85511] "error variable" "temp"
    (5505759 'move' error[5505757] nil[32])
    (3160998 call endTuple[3115706] ser[3160893] error[5505757])
    val errorExists[7300776]:bool[19] "temp"
    (7300781 'move' errorExists[7300776](7300778 '!=' error[5505757] nil[32]))
    if errorExists[7300776]
    {
      (5505763 '=' error_out[5505677] error[5505757])
      (5631195 call chpl__autoDestroy[4186862] ser[3160893])
      gotoErrorHandlingReturn _endserialize[5505679] _endserialize[5505679]
    }
    (5631198 call chpl__autoDestroy[4186862] ser[3160893])
    label _endserialize[5505679]
    (3161001 return _void[46])
  }
  function _ref(5*int(64))[2664959].serialize[3176067](const  ref arg this[3176073]:_ref(5*int(64))[2664959], const  ref arg writer[3176075]:fileWriter(false,defaultSerializer)[1838949], const  ref arg serializer[3176077]:_ref(defaultSerializer)[1579607], ref arg error_out[5506027]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3176087]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3176095]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "maybe param" "temp"
    val error[5506032]:Error[85511] "error variable" "temp"
    (5506034 'move' error[5506032] nil[32])
    const-val ret_tmp[5585168]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "temp"
    (3176103 call startTuple[3112349] serializer[3176077] writer[3176075] 5 error[5506032] ret_tmp[5585168])
    (5585171 'move' call_tmp[3176095] ret_tmp[5585168])
    val errorExists[7300880]:bool[19] "temp"
    (7300885 'move' errorExists[7300880](7300882 '!=' error[5506032] nil[32]))
    if errorExists[7300880]
    {
      (5506038 '=' error_out[5506027] error[5506032])
      gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
    }
    val ser[3176106]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "insert auto destroy"
    (3176108 'move' ser[3176106] call_tmp[3176095])
    {
      const-val i[3176113]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
      (3176115 'move' i[3176113] 0)
      val tmp[3176119]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3176121]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3176129]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3176142]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3176144]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3176152]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3176165]:int(64)[10] "dead after last mention" "maybe param" "temp"
      {
        {
          const-ref elt[3176242]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3176246]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3176248 'move' call_tmp[3176246](3176390 '.' this[3176073] x0[2664804]))
          (3176253 'move' elt[3176242] call_tmp[3176246])
          const-val coerce_tmp[3176393]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3176397 'move' coerce_tmp[3176393](3176395 'deref' elt[3176242]))
          val error[5506047]:Error[85511] "error variable" "temp"
          (5506049 'move' error[5506047] nil[32])
          (3176263 call writeElement[3114088] ser[3176106] coerce_tmp[3176393] error[5506047])
          val errorExists[7300888]:bool[19] "temp"
          (7300893 'move' errorExists[7300888](7300890 '!=' error[5506047] nil[32]))
          if errorExists[7300888]
          {
            (5506053 '=' error_out[5506027] error[5506047])
            (5631332 call chpl__autoDestroy[4186862] ser[3176106])
            gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
          }
        }
      }
      label _continueLabel0[3176238]
      {
        {
          const-ref elt[3176272]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3176276]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3176278 'move' call_tmp[3176276](3176402 '.' this[3176073] x1[2664806]))
          (3176283 'move' elt[3176272] call_tmp[3176276])
          const-val coerce_tmp[3176405]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3176409 'move' coerce_tmp[3176405](3176407 'deref' elt[3176272]))
          val error[5506062]:Error[85511] "error variable" "temp"
          (5506064 'move' error[5506062] nil[32])
          (3176293 call writeElement[3114088] ser[3176106] coerce_tmp[3176405] error[5506062])
          val errorExists[7300896]:bool[19] "temp"
          (7300901 'move' errorExists[7300896](7300898 '!=' error[5506062] nil[32]))
          if errorExists[7300896]
          {
            (5506068 '=' error_out[5506027] error[5506062])
            (5631335 call chpl__autoDestroy[4186862] ser[3176106])
            gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
          }
        }
      }
      label _continueLabel1[3176268]
      {
        {
          const-ref elt[3176302]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3176306]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3176308 'move' call_tmp[3176306](3176414 '.' this[3176073] x2[2664808]))
          (3176313 'move' elt[3176302] call_tmp[3176306])
          const-val coerce_tmp[3176417]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3176421 'move' coerce_tmp[3176417](3176419 'deref' elt[3176302]))
          val error[5506077]:Error[85511] "error variable" "temp"
          (5506079 'move' error[5506077] nil[32])
          (3176323 call writeElement[3114088] ser[3176106] coerce_tmp[3176417] error[5506077])
          val errorExists[7300904]:bool[19] "temp"
          (7300909 'move' errorExists[7300904](7300906 '!=' error[5506077] nil[32]))
          if errorExists[7300904]
          {
            (5506083 '=' error_out[5506027] error[5506077])
            (5631338 call chpl__autoDestroy[4186862] ser[3176106])
            gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
          }
        }
      }
      label _continueLabel2[3176298]
      {
        {
          const-ref elt[3176332]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3176336]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3176338 'move' call_tmp[3176336](3176426 '.' this[3176073] x3[2664810]))
          (3176343 'move' elt[3176332] call_tmp[3176336])
          const-val coerce_tmp[3176429]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3176433 'move' coerce_tmp[3176429](3176431 'deref' elt[3176332]))
          val error[5506092]:Error[85511] "error variable" "temp"
          (5506094 'move' error[5506092] nil[32])
          (3176353 call writeElement[3114088] ser[3176106] coerce_tmp[3176429] error[5506092])
          val errorExists[7300912]:bool[19] "temp"
          (7300917 'move' errorExists[7300912](7300914 '!=' error[5506092] nil[32]))
          if errorExists[7300912]
          {
            (5506098 '=' error_out[5506027] error[5506092])
            (5631341 call chpl__autoDestroy[4186862] ser[3176106])
            gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
          }
        }
      }
      label _continueLabel3[3176328]
      {
        {
          const-ref elt[3176362]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3176366]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3176368 'move' call_tmp[3176366](3176438 '.' this[3176073] x4[2664812]))
          (3176373 'move' elt[3176362] call_tmp[3176366])
          const-val coerce_tmp[3176441]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3176445 'move' coerce_tmp[3176441](3176443 'deref' elt[3176362]))
          val error[5506107]:Error[85511] "error variable" "temp"
          (5506109 'move' error[5506107] nil[32])
          (3176383 call writeElement[3114088] ser[3176106] coerce_tmp[3176441] error[5506107])
          val errorExists[7300920]:bool[19] "temp"
          (7300925 'move' errorExists[7300920](7300922 '!=' error[5506107] nil[32]))
          if errorExists[7300920]
          {
            (5506113 '=' error_out[5506027] error[5506107])
            (5631344 call chpl__autoDestroy[4186862] ser[3176106])
            gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
          }
        }
      }
      label _continueLabel4[3176358]
      label _unused_continueLabel[3176203]
      label _breakLabel[3176205]
    }
    val error[5506122]:Error[85511] "error variable" "temp"
    (5506124 'move' error[5506122] nil[32])
    (3176211 call endTuple[3115706] ser[3176106] error[5506122])
    val errorExists[7300928]:bool[19] "temp"
    (7300933 'move' errorExists[7300928](7300930 '!=' error[5506122] nil[32]))
    if errorExists[7300928]
    {
      (5506128 '=' error_out[5506027] error[5506122])
      (5631347 call chpl__autoDestroy[4186862] ser[3176106])
      gotoErrorHandlingReturn _endserialize[5506029] _endserialize[5506029]
    }
    (5631350 call chpl__autoDestroy[4186862] ser[3176106])
    label _endserialize[5506029]
    (3176214 return _void[46])
  }
  function _ref(6*int(64))[2835761].serialize[3191322](const  ref arg this[3191328]:_ref(6*int(64))[2835761], const  ref arg writer[3191330]:fileWriter(false,defaultSerializer)[1838949], const  ref arg serializer[3191332]:_ref(defaultSerializer)[1579607], ref arg error_out[5506392]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3191342]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3191350]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "maybe param" "temp"
    val error[5506397]:Error[85511] "error variable" "temp"
    (5506399 'move' error[5506397] nil[32])
    const-val ret_tmp[5585174]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "temp"
    (3191358 call startTuple[3112349] serializer[3191332] writer[3191330] 6 error[5506397] ret_tmp[5585174])
    (5585177 'move' call_tmp[3191350] ret_tmp[5585174])
    val errorExists[7301032]:bool[19] "temp"
    (7301037 'move' errorExists[7301032](7301034 '!=' error[5506397] nil[32]))
    if errorExists[7301032]
    {
      (5506403 '=' error_out[5506392] error[5506397])
      gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
    }
    val ser[3191361]:TupleSerializer(fileWriter(false,defaultSerializer))[3113096] "dead at end of block" "insert auto destroy"
    (3191363 'move' ser[3191361] call_tmp[3191350])
    {
      const-val i[3191368]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
      (3191370 'move' i[3191368] 0)
      val tmp[3191374]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3191376]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3191384]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3191397]:int(64)[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[3191399]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3191407]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[3191420]:int(64)[10] "dead after last mention" "maybe param" "temp"
      {
        {
          const-ref elt[3191497]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3191501]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3191503 'move' call_tmp[3191501](3191675 '.' this[3191328] x0[2835588]))
          (3191508 'move' elt[3191497] call_tmp[3191501])
          const-val coerce_tmp[3191678]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3191682 'move' coerce_tmp[3191678](3191680 'deref' elt[3191497]))
          val error[5506412]:Error[85511] "error variable" "temp"
          (5506414 'move' error[5506412] nil[32])
          (3191518 call writeElement[3114088] ser[3191361] coerce_tmp[3191678] error[5506412])
          val errorExists[7301040]:bool[19] "temp"
          (7301045 'move' errorExists[7301040](7301042 '!=' error[5506412] nil[32]))
          if errorExists[7301040]
          {
            (5506418 '=' error_out[5506392] error[5506412])
            (5631484 call chpl__autoDestroy[4186862] ser[3191361])
            gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
          }
        }
      }
      label _continueLabel0[3191493]
      {
        {
          const-ref elt[3191527]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3191531]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3191533 'move' call_tmp[3191531](3191687 '.' this[3191328] x1[2835590]))
          (3191538 'move' elt[3191527] call_tmp[3191531])
          const-val coerce_tmp[3191690]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3191694 'move' coerce_tmp[3191690](3191692 'deref' elt[3191527]))
          val error[5506427]:Error[85511] "error variable" "temp"
          (5506429 'move' error[5506427] nil[32])
          (3191548 call writeElement[3114088] ser[3191361] coerce_tmp[3191690] error[5506427])
          val errorExists[7301048]:bool[19] "temp"
          (7301053 'move' errorExists[7301048](7301050 '!=' error[5506427] nil[32]))
          if errorExists[7301048]
          {
            (5506433 '=' error_out[5506392] error[5506427])
            (5631487 call chpl__autoDestroy[4186862] ser[3191361])
            gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
          }
        }
      }
      label _continueLabel1[3191523]
      {
        {
          const-ref elt[3191557]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3191561]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3191563 'move' call_tmp[3191561](3191699 '.' this[3191328] x2[2835592]))
          (3191568 'move' elt[3191557] call_tmp[3191561])
          const-val coerce_tmp[3191702]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3191706 'move' coerce_tmp[3191702](3191704 'deref' elt[3191557]))
          val error[5506442]:Error[85511] "error variable" "temp"
          (5506444 'move' error[5506442] nil[32])
          (3191578 call writeElement[3114088] ser[3191361] coerce_tmp[3191702] error[5506442])
          val errorExists[7301056]:bool[19] "temp"
          (7301061 'move' errorExists[7301056](7301058 '!=' error[5506442] nil[32]))
          if errorExists[7301056]
          {
            (5506448 '=' error_out[5506392] error[5506442])
            (5631490 call chpl__autoDestroy[4186862] ser[3191361])
            gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
          }
        }
      }
      label _continueLabel2[3191553]
      {
        {
          const-ref elt[3191587]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3191591]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3191593 'move' call_tmp[3191591](3191711 '.' this[3191328] x3[2835594]))
          (3191598 'move' elt[3191587] call_tmp[3191591])
          const-val coerce_tmp[3191714]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3191718 'move' coerce_tmp[3191714](3191716 'deref' elt[3191587]))
          val error[5506457]:Error[85511] "error variable" "temp"
          (5506459 'move' error[5506457] nil[32])
          (3191608 call writeElement[3114088] ser[3191361] coerce_tmp[3191714] error[5506457])
          val errorExists[7301064]:bool[19] "temp"
          (7301069 'move' errorExists[7301064](7301066 '!=' error[5506457] nil[32]))
          if errorExists[7301064]
          {
            (5506463 '=' error_out[5506392] error[5506457])
            (5631493 call chpl__autoDestroy[4186862] ser[3191361])
            gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
          }
        }
      }
      label _continueLabel3[3191583]
      {
        {
          const-ref elt[3191617]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3191621]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3191623 'move' call_tmp[3191621](3191723 '.' this[3191328] x4[2835596]))
          (3191628 'move' elt[3191617] call_tmp[3191621])
          const-val coerce_tmp[3191726]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3191730 'move' coerce_tmp[3191726](3191728 'deref' elt[3191617]))
          val error[5506472]:Error[85511] "error variable" "temp"
          (5506474 'move' error[5506472] nil[32])
          (3191638 call writeElement[3114088] ser[3191361] coerce_tmp[3191726] error[5506472])
          val errorExists[7301072]:bool[19] "temp"
          (7301077 'move' errorExists[7301072](7301074 '!=' error[5506472] nil[32]))
          if errorExists[7301072]
          {
            (5506478 '=' error_out[5506392] error[5506472])
            (5631496 call chpl__autoDestroy[4186862] ser[3191361])
            gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
          }
        }
      }
      label _continueLabel4[3191613]
      {
        {
          const-ref elt[3191647]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
          const-ref call_tmp[3191651]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3191653 'move' call_tmp[3191651](3191735 '.' this[3191328] x5[2835598]))
          (3191658 'move' elt[3191647] call_tmp[3191651])
          const-val coerce_tmp[3191738]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3191742 'move' coerce_tmp[3191738](3191740 'deref' elt[3191647]))
          val error[5506487]:Error[85511] "error variable" "temp"
          (5506489 'move' error[5506487] nil[32])
          (3191668 call writeElement[3114088] ser[3191361] coerce_tmp[3191738] error[5506487])
          val errorExists[7301080]:bool[19] "temp"
          (7301085 'move' errorExists[7301080](7301082 '!=' error[5506487] nil[32]))
          if errorExists[7301080]
          {
            (5506493 '=' error_out[5506392] error[5506487])
            (5631499 call chpl__autoDestroy[4186862] ser[3191361])
            gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
          }
        }
      }
      label _continueLabel5[3191643]
      label _unused_continueLabel[3191458]
      label _breakLabel[3191460]
    }
    val error[5506502]:Error[85511] "error variable" "temp"
    (5506504 'move' error[5506502] nil[32])
    (3191466 call endTuple[3115706] ser[3191361] error[5506502])
    val errorExists[7301088]:bool[19] "temp"
    (7301093 'move' errorExists[7301088](7301090 '!=' error[5506502] nil[32]))
    if errorExists[7301088]
    {
      (5506508 '=' error_out[5506392] error[5506502])
      (5631502 call chpl__autoDestroy[4186862] ser[3191361])
      gotoErrorHandlingReturn _endserialize[5506394] _endserialize[5506394]
    }
    (5631505 call chpl__autoDestroy[4186862] ser[3191361])
    label _endserialize[5506394]
    (3191469 return _void[46])
  }
  function Error[85511].serialize[3479570](const in arg this[3479576]:Error[85511], const  ref arg writer[3479578]:fileWriter(false,defaultSerializer)[1838949], ref arg serializer[3479580]:_ref(defaultSerializer)[1579607], ref arg error_out[5513047]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "method overrides" "resolved" "no return value for void"
  {
    const-val call_tmp[3479588]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5541667]:string[244] "temp"
    (3479593 call chpl_describe_error[87147] this[3479576] ret_tmp[5541667])
    (5541670 'move' call_tmp[3479588] ret_tmp[5541667])
    val error[5513052]:Error[85511] "error variable" "temp"
    (5513054 'move' error[5513052] nil[32])
    (3479599 call write[3022456] writer[3479578] call_tmp[3479588] error[5513052])
    val errorExists[7304200]:bool[19] "temp"
    (7304205 'move' errorExists[7304200](7304202 '!=' error[5513052] nil[32]))
    if errorExists[7304200]
    {
      (5513058 '=' error_out[5513047] error[5513052])
      (5636844 call chpl__autoDestroy[3262688] call_tmp[3479588])
      gotoErrorHandlingReturn _endserialize[5513049] _endserialize[5513049]
    }
    (5636847 call chpl__autoDestroy[3262688] call_tmp[3479588])
    label _endserialize[5513049]
    (3479601 return _void[46])
  }
  function writeln[3823904](const  ref arg _e0_args[3823906]:string[244], const in arg _e1_args[3823908]:real(64)[13], const  ref arg _e2_args[3823910]:string[244]) : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      val error[5520651]:Error[85511] "error variable" "temp"
      (5520660 'move' error[5520651] nil[32])
      (3823925 call writeln[3823983] stdout[196765] _e0_args[3823906] _e1_args[3823908] _e2_args[3823910] error[5520651])
      val errorExists[7307520]:bool[19] "temp"
      (7307525 'move' errorExists[7307520](7307522 '!=' error[5520651] nil[32]))
      if errorExists[7307520]
      {
        gotoErrorHandling handler[5520652] handler[5520652]
      }
      label handler[5520652]
      const-val shouldHandleError[5520669]:bool[19] "temp"
      val errorExists[7307528]:bool[19] "temp"
      (7307533 'move' errorExists[7307528](7307530 '!=' error[5520651] nil[32]))
      (5520673 'move' shouldHandleError[5520669] errorExists[7307528])
      if shouldHandleError[5520669]
      {
        (5520666 call chpl_uncaught_error[87456] error[5520651])
      }
    }
    (3823930 return _void[46])
  }
  function writeln[3272286](const  ref arg _e0_args[3272288]:string[244]) : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      val error[5506542]:Error[85511] "error variable" "temp"
      (5506551 'move' error[5506542] nil[32])
      (3272299 call writeln[3272305] stdout[196765] _e0_args[3272288] error[5506542])
      val errorExists[7301112]:bool[19] "temp"
      (7301117 'move' errorExists[7301112](7301114 '!=' error[5506542] nil[32]))
      if errorExists[7301112]
      {
        gotoErrorHandling handler[5506543] handler[5506543]
      }
      label handler[5506543]
      const-val shouldHandleError[5506560]:bool[19] "temp"
      val errorExists[7301120]:bool[19] "temp"
      (7301125 'move' errorExists[7301120](7301122 '!=' error[5506542] nil[32]))
      (5506564 'move' shouldHandleError[5506560] errorExists[7301120])
      if shouldHandleError[5506560]
      {
        (5506557 call chpl_uncaught_error[87456] error[5506542])
      }
    }
    (3272302 return _void[46])
  }
  function writeln[3716217](const  ref arg _e0_args[3716219]:Tensor(real(32))[2158571]) : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      val error[5518369]:Error[85511] "error variable" "temp"
      (5518378 'move' error[5518369] nil[32])
      (3716230 call writeln[3716236] stdout[196765] _e0_args[3716219] error[5518369])
      val errorExists[7306592]:bool[19] "temp"
      (7306597 'move' errorExists[7306592](7306594 '!=' error[5518369] nil[32]))
      if errorExists[7306592]
      {
        gotoErrorHandling handler[5518370] handler[5518370]
      }
      label handler[5518370]
      const-val shouldHandleError[5518387]:bool[19] "temp"
      val errorExists[7306600]:bool[19] "temp"
      (7306605 'move' errorExists[7306600](7306602 '!=' error[5518369] nil[32]))
      (5518391 'move' shouldHandleError[5518387] errorExists[7306600])
      if shouldHandleError[5518387]
      {
        (5518384 call chpl_uncaught_error[87456] error[5518369])
      }
    }
    (3716233 return _void[46])
  }
  function writeln[3782170](const  ref arg _e0_args[3782172]:staticTensor(3,real(32))[2453238]) : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      val error[5520300]:Error[85511] "error variable" "temp"
      (5520309 'move' error[5520300] nil[32])
      (3782183 call writeln[3782189] stdout[196765] _e0_args[3782172] error[5520300])
      val errorExists[7307344]:bool[19] "temp"
      (7307349 'move' errorExists[7307344](7307346 '!=' error[5520300] nil[32]))
      if errorExists[7307344]
      {
        gotoErrorHandling handler[5520301] handler[5520301]
      }
      label handler[5520301]
      const-val shouldHandleError[5520318]:bool[19] "temp"
      val errorExists[7307352]:bool[19] "temp"
      (7307357 'move' errorExists[7307352](7307354 '!=' error[5520300] nil[32]))
      (5520322 'move' shouldHandleError[5520318] errorExists[7307352])
      if shouldHandleError[5520318]
      {
        (5520315 call chpl_uncaught_error[87456] error[5520300])
      }
    }
    (3782186 return _void[46])
  }
  function writeln[3826169](const  ref arg _e0_args[3826171]:2*int(64)[1802073]) : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      val error[5520871]:Error[85511] "error variable" "temp"
      (5520880 'move' error[5520871] nil[32])
      (3826182 call writeln[3826188] stdout[196765] _e0_args[3826171] error[5520871])
      val errorExists[7307648]:bool[19] "temp"
      (7307653 'move' errorExists[7307648](7307650 '!=' error[5520871] nil[32]))
      if errorExists[7307648]
      {
        gotoErrorHandling handler[5520872] handler[5520872]
      }
      label handler[5520872]
      const-val shouldHandleError[5520889]:bool[19] "temp"
      val errorExists[7307656]:bool[19] "temp"
      (7307661 'move' errorExists[7307656](7307658 '!=' error[5520871] nil[32]))
      (5520893 'move' shouldHandleError[5520889] errorExists[7307656])
      if shouldHandleError[5520889]
      {
        (5520886 call chpl_uncaught_error[87456] error[5520871])
      }
    }
    (3826185 return _void[46])
  }
  function writeln[3423720](const  ref arg _e0_args[3423722]:string[244], const  ref arg _e1_args[3423724]:string[244], const  ref arg _e2_args[3423726]:string[244], const  ref arg _e3_args[3423728]:string[244]) : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      val error[5510812]:Error[85511] "error variable" "temp"
      (5510821 'move' error[5510812] nil[32])
      (3423745 call writeln[3423809] stdout[196765] _e0_args[3423722] _e1_args[3423724] _e2_args[3423726] _e3_args[3423728] error[5510812])
      val errorExists[7303088]:bool[19] "temp"
      (7303093 'move' errorExists[7303088](7303090 '!=' error[5510812] nil[32]))
      if errorExists[7303088]
      {
        gotoErrorHandling handler[5510813] handler[5510813]
      }
      label handler[5510813]
      const-val shouldHandleError[5510830]:bool[19] "temp"
      val errorExists[7303096]:bool[19] "temp"
      (7303101 'move' errorExists[7303096](7303098 '!=' error[5510812] nil[32]))
      (5510834 'move' shouldHandleError[5510830] errorExists[7303096])
      if shouldHandleError[5510830]
      {
        (5510827 call chpl_uncaught_error[87456] error[5510812])
      }
    }
    (3423751 return _void[46])
  }
  function chpl_stringify_wrapper[1483881](const  ref arg _e0_args[1483883]:string[244], const in arg _e1_args[1483885]:int(64)[10], const  ref arg _e2_args[1483887]:string[244], ref arg _retArg[5546206]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1483891]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1483906]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546212]:string[244] "temp"
    (1483911 call chpl_stringify[1484225] _e0_args[1483883] _e1_args[1483885] _e2_args[1483887] ret_tmp[5546212])
    (5546215 'move' call_tmp[1483906] ret_tmp[5546212])
    (1503437 '=' ret[1483891] call_tmp[1483906])
    (5546208 '=' _retArg[5546206] ret[1483891])
    (5546210 return _void[46])
  }
  function chpl_stringify_wrapper[1833025](const  ref arg _e0_args[1833027]:string[244], const in arg _e1_args[1833029]:ArrayInit[66987], const  ref arg _e2_args[1833031]:string[244], ref arg _retArg[5555649]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1833035]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1833050]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555655]:string[244] "temp"
    (1833055 call chpl_stringify[1833067] _e0_args[1833027] _e1_args[1833029] _e2_args[1833031] ret_tmp[5555655])
    (5555658 'move' call_tmp[1833050] ret_tmp[5555655])
    (1875860 '=' ret[1833035] call_tmp[1833050])
    (5555651 '=' _retArg[5555649] ret[1833035])
    (5555653 return _void[46])
  }
  function chpl_stringify_wrapper[1504580](const in arg _e0_args[1504582]:c_ptrConst(int(8))[1466333], ref arg _retArg[5547310]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1504586]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1504597]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5547316]:string[244] "temp"
    (1504602 call chpl_stringify[1504904] _e0_args[1504582] ret_tmp[5547316])
    (5547319 'move' call_tmp[1504597] ret_tmp[5547316])
    (1517346 '=' ret[1504586] call_tmp[1504597])
    (5547312 '=' _retArg[5547310] ret[1504586])
    (5547314 return _void[46])
  }
  function chpl_stringify_wrapper[2054078](const  ref arg _e0_args[2054080]:string[244], ref arg _retArg[5561458]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[2054084]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2054095]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5561464]:string[244] "temp"
    (2054100 call chpl_stringify[2054110] _e0_args[2054080] ret_tmp[5561464])
    (5561467 'move' call_tmp[2054095] ret_tmp[5561464])
    (2058020 '=' ret[2054084] call_tmp[2054095])
    (5561460 '=' _retArg[5561458] ret[2054084])
    (5561462 return _void[46])
  }
  function chpl_stringify_wrapper[1600592](const  ref arg _e0_args[1600594]:string[244], const in arg _e1_args[1600596]:int(64)[10], const  ref arg _e2_args[1600598]:string[244], const in arg _e3_args[1600600]:int(64)[10], const  ref arg _e4_args[1600602]:string[244], ref arg _retArg[5548907]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1600606]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1600625]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5548913]:string[244] "temp"
    (1600630 call chpl_stringify[1600956] _e0_args[1600594] _e1_args[1600596] _e2_args[1600598] _e3_args[1600600] _e4_args[1600602] ret_tmp[5548913])
    (5548916 'move' call_tmp[1600625] ret_tmp[5548913])
    (1609161 '=' ret[1600606] call_tmp[1600625])
    (5548909 '=' _retArg[5548907] ret[1600606])
    (5548911 return _void[46])
  }
  function chpl_stringify_wrapper[1900378](const  ref arg _e0_args[1900380]:string[244], const  ref arg _e1_args[1900382]:string[244], const in arg _e2_args[1900384]:int(64)[10], const  ref arg _e3_args[1900386]:string[244], const in arg _e4_args[1900388]:range(int(64),both,one)[1610039], ref arg _retArg[5557106]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1900392]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1900411]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557112]:string[244] "temp"
    (1900416 call chpl_stringify[1900430] _e0_args[1900380] _e1_args[1900382] _e2_args[1900384] _e3_args[1900386] _e4_args[1900388] ret_tmp[5557112])
    (5557115 'move' call_tmp[1900411] ret_tmp[5557112])
    (1906701 '=' ret[1900392] call_tmp[1900411])
    (5557108 '=' _retArg[5557106] ret[1900392])
    (5557110 return _void[46])
  }
  function chpl_stringify_wrapper[1640488](const  ref arg _e0_args[1640490]:string[244], const in arg _e1_args[1640492]:range(int(64),both,one)[1610039], const  ref arg _e2_args[1640494]:string[244], const in arg _e3_args[1640496]:int(64)[10], ref arg _retArg[5549715]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1640500]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1640517]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5549721]:string[244] "temp"
    (1640522 call chpl_stringify[1640842] _e0_args[1640490] _e1_args[1640492] _e2_args[1640494] _e3_args[1640496] ret_tmp[5549721])
    (5549724 'move' call_tmp[1640517] ret_tmp[5549721])
    (1649130 '=' ret[1640500] call_tmp[1640517])
    (5549717 '=' _retArg[5549715] ret[1640500])
    (5549719 return _void[46])
  }
  function chpl_stringify_wrapper[1664096](const  ref arg _e0_args[1664098]:string[244], const in arg _e1_args[1664100]:range(byteIndex,both,one)[1655317], const  ref arg _e2_args[1664102]:string[244], const in arg _e3_args[1664104]:int(64)[10], ref arg _retArg[5550147]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1664108]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1664125]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550153]:string[244] "temp"
    (1664130 call chpl_stringify[1664143] _e0_args[1664098] _e1_args[1664100] _e2_args[1664102] _e3_args[1664104] ret_tmp[5550153])
    (5550156 'move' call_tmp[1664125] ret_tmp[5550153])
    (1673129 '=' ret[1664108] call_tmp[1664125])
    (5550149 '=' _retArg[5550147] ret[1664108])
    (5550151 return _void[46])
  }
  function chpl_stringify_wrapper[1673700](const  ref arg _e0_args[1673702]:string[244], const in arg _e1_args[1673704]:int(64)[10], const  ref arg _e2_args[1673706]:string[244], const in arg _e3_args[1673708]:int(64)[10], ref arg _retArg[5550222]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1673712]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1673729]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550228]:string[244] "temp"
    (1673734 call chpl_stringify[1673747] _e0_args[1673702] _e1_args[1673704] _e2_args[1673706] _e3_args[1673708] ret_tmp[5550228])
    (5550231 'move' call_tmp[1673729] ret_tmp[5550228])
    (1679469 '=' ret[1673712] call_tmp[1673729])
    (5550224 '=' _retArg[5550222] ret[1673712])
    (5550226 return _void[46])
  }
  function chpl_stringify_wrapper[1685580](const  ref arg _e0_args[1685582]:string[244], const in arg _e1_args[1685584]:range(int(64),low,one)[1576928], const  ref arg _e2_args[1685586]:string[244], const in arg _e3_args[1685588]:int(64)[10], ref arg _retArg[5550354]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1685592]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1685609]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550360]:string[244] "temp"
    (1685614 call chpl_stringify[1685627] _e0_args[1685582] _e1_args[1685584] _e2_args[1685586] _e3_args[1685588] ret_tmp[5550360])
    (5550363 'move' call_tmp[1685609] ret_tmp[5550360])
    (1692683 '=' ret[1685592] call_tmp[1685609])
    (5550356 '=' _retArg[5550354] ret[1685592])
    (5550358 return _void[46])
  }
  function chpl_stringify_wrapper[1705348](const  ref arg _e0_args[1705350]:string[244], const in arg _e1_args[1705352]:range(byteIndex,low,one)[1698271], const  ref arg _e2_args[1705354]:string[244], const in arg _e3_args[1705356]:int(64)[10], ref arg _retArg[5550585]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1705360]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1705377]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550591]:string[244] "temp"
    (1705382 call chpl_stringify[1705395] _e0_args[1705350] _e1_args[1705352] _e2_args[1705354] _e3_args[1705356] ret_tmp[5550591])
    (5550594 'move' call_tmp[1705377] ret_tmp[5550591])
    (1714185 '=' ret[1705360] call_tmp[1705377])
    (5550587 '=' _retArg[5550585] ret[1705360])
    (5550589 return _void[46])
  }
  function chpl_stringify_wrapper[1735817](const  ref arg _e0_args[1735819]:string[244], const in arg _e1_args[1735821]:range(byteIndex,high,one)[1726799], const  ref arg _e2_args[1735823]:string[244], const in arg _e3_args[1735825]:int(64)[10], ref arg _retArg[5551359]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1735829]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1735846]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551365]:string[244] "temp"
    (1735851 call chpl_stringify[1735864] _e0_args[1735819] _e1_args[1735821] _e2_args[1735823] _e3_args[1735825] ret_tmp[5551365])
    (5551368 'move' call_tmp[1735846] ret_tmp[5551365])
    (1744666 '=' ret[1735829] call_tmp[1735846])
    (5551361 '=' _retArg[5551359] ret[1735829])
    (5551363 return _void[46])
  }
  function chpl_stringify_wrapper[1785614](const  ref arg _e0_args[1785616]:string[244], const  ref arg _e1_args[1785618]:string[244], const  ref arg _e2_args[1785620]:string[244], const  ref arg _e3_args[1785622]:string[244], ref arg _retArg[5554848]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1785626]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1785643]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5554854]:string[244] "temp"
    (1785648 call chpl_stringify[1785661] _e0_args[1785616] _e1_args[1785618] _e2_args[1785620] _e3_args[1785622] ret_tmp[5554854])
    (5554857 'move' call_tmp[1785643] ret_tmp[5554854])
    (1791239 '=' ret[1785626] call_tmp[1785643])
    (5554850 '=' _retArg[5554848] ret[1785626])
    (5554852 return _void[46])
  }
  function chpl_stringify_wrapper[1809446](const  ref arg _e0_args[1809448]:string[244], const in arg _e1_args[1809450]:int(32)[66], const  ref arg _e2_args[1809452]:string[244], const in arg _e3_args[1809454]:int(64)[10], ref arg _retArg[5555415]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1809458]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1809475]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555421]:string[244] "temp"
    (1809480 call chpl_stringify[1809493] _e0_args[1809448] _e1_args[1809450] _e2_args[1809452] _e3_args[1809454] ret_tmp[5555421])
    (5555424 'move' call_tmp[1809475] ret_tmp[5555421])
    (1817492 '=' ret[1809458] call_tmp[1809475])
    (5555417 '=' _retArg[5555415] ret[1809458])
    (5555419 return _void[46])
  }
  function chpl_stringify_wrapper[2078338](const  ref arg _e0_args[2078340]:string[244], const in arg _e1_args[2078342]:uint(64)[86], const  ref arg _e2_args[2078344]:string[244], const in arg _e3_args[2078346]:uint(64)[86], ref arg _retArg[5561880]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[2078350]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2078367]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5561886]:string[244] "temp"
    (2078372 call chpl_stringify[2078385] _e0_args[2078340] _e1_args[2078342] _e2_args[2078344] _e3_args[2078346] ret_tmp[5561886])
    (5561889 'move' call_tmp[2078367] ret_tmp[5561886])
    (2084107 '=' ret[2078350] call_tmp[2078367])
    (5561882 '=' _retArg[5561880] ret[2078350])
    (5561884 return _void[46])
  }
  function chpl_stringify_wrapper[5090077](const  ref arg _e0_args[5090079]:string[244], const  ref arg _e1_args[5090081]:3*int(64)[1995504], const  ref arg _e2_args[5090083]:string[244], const  ref arg _e3_args[5090085]:4*int(64)[1960494], ref arg _retArg[5607959]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[5090089]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[5090106]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5607965]:string[244] "temp"
    (5090111 call chpl_stringify[5090124] _e0_args[5090079] _e1_args[5090081] _e2_args[5090083] _e3_args[5090085] ret_tmp[5607965])
    (5607968 'move' call_tmp[5090106] ret_tmp[5607965])
    (5101786 '=' ret[5090089] call_tmp[5090106])
    (5607961 '=' _retArg[5607959] ret[5090089])
    (5607963 return _void[46])
  }
  function chpl_stringify_wrapper[1821174](const  ref arg _e0_args[1821176]:string[244], const in arg _e1_args[1821178]:uint(64)[86], ref arg _retArg[5555556]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1821182]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1821195]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555562]:string[244] "temp"
    (1821200 call chpl_stringify[1821508] _e0_args[1821176] _e1_args[1821178] ret_tmp[5555562])
    (5555565 'move' call_tmp[1821195] ret_tmp[5555562])
    (1827949 '=' ret[1821182] call_tmp[1821195])
    (5555558 '=' _retArg[5555556] ret[1821182])
    (5555560 return _void[46])
  }
  function chpl_stringify_wrapper[1925268](const  ref arg _e0_args[1925270]:string[244], const in arg _e1_args[1925272]:int(64)[10], ref arg _retArg[5557665]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1925276]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1925289]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557671]:string[244] "temp"
    (1925294 call chpl_stringify[1925305] _e0_args[1925270] _e1_args[1925272] ret_tmp[5557671])
    (5557674 'move' call_tmp[1925289] ret_tmp[5557671])
    (1929829 '=' ret[1925276] call_tmp[1925289])
    (5557667 '=' _retArg[5557665] ret[1925276])
    (5557669 return _void[46])
  }
  function chpl_stringify_wrapper[1936460](const  ref arg _e0_args[1936462]:string[244], const  ref arg _e1_args[1936464]:string[244], ref arg _retArg[5557746]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1936468]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1936481]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557752]:string[244] "temp"
    (1936486 call chpl_stringify[1936497] _e0_args[1936462] _e1_args[1936464] ret_tmp[5557752])
    (5557755 'move' call_tmp[1936481] ret_tmp[5557752])
    (1940963 '=' ret[1936468] call_tmp[1936481])
    (5557748 '=' _retArg[5557746] ret[1936468])
    (5557750 return _void[46])
  }
  function chpl_stringify_wrapper[3006402](const  ref arg _e0_args[3006404]:string[244], const  ref arg _e1_args[3006406]:Tensor(real(64))[1960841], ref arg _retArg[5583996]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[3006410]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3006423]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584002]:string[244] "temp"
    (3006428 call chpl_stringify[3006439] _e0_args[3006404] _e1_args[3006406] ret_tmp[5584002])
    (5584005 'move' call_tmp[3006423] ret_tmp[5584002])
    (3191909 '=' ret[3006410] call_tmp[3006423])
    (5583998 '=' _retArg[5583996] ret[3006410])
    (5584000 return _void[46])
  }
  function chpl_stringify_wrapper[2014490](const  ref arg _e0_args[2014492]:string[244], const  ref arg _e1_args[2014494]:string[244], const in arg _e2_args[2014496]:int(64)[10], const  ref arg _e3_args[2014498]:string[244], const in arg _e4_args[2014500]:uint(64)[86], const  ref arg _e5_args[2014502]:string[244], const in arg _e6_args[2014504]:uint(64)[86], ref arg _retArg[5561263]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[2014508]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2014531]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5561269]:string[244] "temp"
    (2014536 call chpl_stringify[2014874] _e0_args[2014492] _e1_args[2014494] _e2_args[2014496] _e3_args[2014498] _e4_args[2014500] _e5_args[2014502] _e6_args[2014504] ret_tmp[5561269])
    (5561272 'move' call_tmp[2014531] ret_tmp[5561269])
    (2024287 '=' ret[2014508] call_tmp[2014531])
    (5561265 '=' _retArg[5561263] ret[2014508])
    (5561267 return _void[46])
  }
  function chpl_stringify_wrapper[4535096](const  ref arg _e0_args[4535098]:string[244], const  ref arg _e1_args[4535100]:string[244], const  ref arg _e2_args[4535102]:string[244], const  ref arg _e3_args[4535104]:string[244], const  ref arg _e4_args[4535106]:string[244], const  ref arg _e5_args[4535108]:string[244], const  ref arg _e6_args[4535110]:string[244], const  ref arg _e7_args[4535112]:string[244], const  ref arg _e8_args[4535114]:string[244], ref arg _retArg[5601142]:_ref(string)[1466327]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[4535118]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[4535145]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5601148]:string[244] "temp"
    (4535150 call chpl_stringify[4535500] _e0_args[4535098] _e1_args[4535100] _e2_args[4535102] _e3_args[4535104] _e4_args[4535106] _e5_args[4535108] _e6_args[4535110] _e7_args[4535112] _e8_args[4535114] ret_tmp[5601148])
    (5601151 'move' call_tmp[4535145] ret_tmp[5601148])
    (4545805 '=' ret[4535118] call_tmp[4535145])
    (5601144 '=' _retArg[5601142] ret[4535118])
    (5601146 return _void[46])
  }
}